{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "/Users/nolanterry/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/introspection/IERC165.sol",
    "2": "/Users/nolanterry/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/ERC721.sol",
    "3": "/Users/nolanterry/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/IERC721.sol",
    "4": "/Users/nolanterry/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/IERC721Receiver.sol",
    "5": "/Users/nolanterry/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "6": "/Users/nolanterry/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Address.sol",
    "7": "/Users/nolanterry/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Context.sol",
    "8": "/Users/nolanterry/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Strings.sol",
    "9": "/Users/nolanterry/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/introspection/ERC165.sol"
  },
  "ast": {
    "absolutePath": "/Users/nolanterry/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/ERC721.sol",
    "exportedSymbols": {
      "Address": [
        1937
      ],
      "Context": [
        1479
      ],
      "ERC165": [
        2164
      ],
      "ERC721": [
        1145
      ],
      "IERC165": [
        2176
      ],
      "IERC721": [
        1595
      ],
      "IERC721Metadata": [
        1640
      ],
      "IERC721Receiver": [
        1613
      ],
      "Strings": [
        2140
      ]
    },
    "id": 1146,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 316,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "92:23:2"
      },
      {
        "absolutePath": "/Users/nolanterry/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 317,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1146,
        "sourceUnit": 1596,
        "src": "117:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nolanterry/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 318,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1146,
        "sourceUnit": 1614,
        "src": "141:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nolanterry/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "./extensions/IERC721Metadata.sol",
        "id": 319,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1146,
        "sourceUnit": 1641,
        "src": "173:42:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nolanterry/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 320,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1146,
        "sourceUnit": 1938,
        "src": "216:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nolanterry/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 321,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1146,
        "sourceUnit": 1480,
        "src": "250:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nolanterry/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/Strings.sol",
        "file": "../../utils/Strings.sol",
        "id": 322,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1146,
        "sourceUnit": 2141,
        "src": "284:33:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/nolanterry/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/utils/introspection/ERC165.sol",
        "file": "../../utils/introspection/ERC165.sol",
        "id": 323,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1146,
        "sourceUnit": 2165,
        "src": "318:46:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 325,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1479,
              "src": "632:7:2"
            },
            "id": 326,
            "nodeType": "InheritanceSpecifier",
            "src": "632:7:2"
          },
          {
            "baseName": {
              "id": 327,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2164,
              "src": "641:6:2"
            },
            "id": 328,
            "nodeType": "InheritanceSpecifier",
            "src": "641:6:2"
          },
          {
            "baseName": {
              "id": 329,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1595,
              "src": "649:7:2"
            },
            "id": 330,
            "nodeType": "InheritanceSpecifier",
            "src": "649:7:2"
          },
          {
            "baseName": {
              "id": 331,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1640,
              "src": "658:15:2"
            },
            "id": 332,
            "nodeType": "InheritanceSpecifier",
            "src": "658:15:2"
          }
        ],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 324,
          "nodeType": "StructuredDocumentation",
          "src": "366:246:2",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 1145,
        "linearizedBaseContracts": [
          1145,
          1640,
          1595,
          2164,
          2176,
          1479
        ],
        "name": "ERC721",
        "nameLocation": "622:6:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 335,
            "libraryName": {
              "id": 333,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1937,
              "src": "686:7:2"
            },
            "nodeType": "UsingForDirective",
            "src": "680:26:2",
            "typeName": {
              "id": 334,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "698:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 338,
            "libraryName": {
              "id": 336,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2140,
              "src": "717:7:2"
            },
            "nodeType": "UsingForDirective",
            "src": "711:26:2",
            "typeName": {
              "id": 337,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "729:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 340,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "776:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 1145,
            "src": "761:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 339,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "761:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 342,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "823:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 1145,
            "src": "808:22:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 341,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "808:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 346,
            "mutability": "mutable",
            "name": "_owners",
            "nameLocation": "919:7:2",
            "nodeType": "VariableDeclaration",
            "scope": 1145,
            "src": "883:43:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 345,
              "keyType": {
                "id": 343,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "891:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "883:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 344,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "902:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 350,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1013:9:2",
            "nodeType": "VariableDeclaration",
            "scope": 1145,
            "src": "977:45:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 349,
              "keyType": {
                "id": 347,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "985:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "977:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 348,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "996:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 354,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1114:15:2",
            "nodeType": "VariableDeclaration",
            "scope": 1145,
            "src": "1078:51:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 353,
              "keyType": {
                "id": 351,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1086:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1078:27:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 352,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1097:7:2",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 360,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1237:18:2",
            "nodeType": "VariableDeclaration",
            "scope": 1145,
            "src": "1184:71:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 359,
              "keyType": {
                "id": 355,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1192:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1184:44:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 358,
                "keyType": {
                  "id": 356,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1211:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1203:24:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 357,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1222:4:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 376,
              "nodeType": "Block",
              "src": "1431:57:2",
              "statements": [
                {
                  "expression": {
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 368,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 340,
                      "src": "1441:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 369,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 363,
                      "src": "1449:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1441:13:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 371,
                  "nodeType": "ExpressionStatement",
                  "src": "1441:13:2"
                },
                {
                  "expression": {
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 372,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 342,
                      "src": "1464:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 373,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 365,
                      "src": "1474:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1464:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 375,
                  "nodeType": "ExpressionStatement",
                  "src": "1464:17:2"
                }
              ]
            },
            "documentation": {
              "id": 361,
              "nodeType": "StructuredDocumentation",
              "src": "1262:108:2",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 377,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 363,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1401:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "1387:19:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 362,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 365,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1422:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "1408:21:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 364,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1408:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1386:44:2"
            },
            "returnParameters": {
              "id": 367,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1431:0:2"
            },
            "scope": 1145,
            "src": "1375:113:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2163,
              2175
            ],
            "body": {
              "id": 407,
              "nodeType": "Block",
              "src": "1663:192:2",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 388,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 380,
                          "src": "1692:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 390,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1595,
                                "src": "1712:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$1595_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$1595_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 389,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1707:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1707:13:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1595",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1707:25:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1692:40:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 394,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 380,
                          "src": "1748:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 396,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1640,
                                "src": "1768:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1640_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1640_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 395,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1763:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1763:21:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1640",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1763:33:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1748:48:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1692:104:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 403,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 380,
                          "src": "1836:11:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 401,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1812:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$1145_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2163,
                        "src": "1812:23:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1812:36:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1692:156:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 387,
                  "id": 406,
                  "nodeType": "Return",
                  "src": "1673:175:2"
                }
              ]
            },
            "documentation": {
              "id": 378,
              "nodeType": "StructuredDocumentation",
              "src": "1494:56:2",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 408,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1564:17:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 384,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 382,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2164,
                  "src": "1631:6:2"
                },
                {
                  "id": 383,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2176,
                  "src": "1639:7:2"
                }
              ],
              "src": "1622:25:2"
            },
            "parameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 380,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1589:11:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 408,
                  "src": "1582:18:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1582:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1581:20:2"
            },
            "returnParameters": {
              "id": 387,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 386,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 408,
                  "src": "1657:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 385,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1657:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1656:6:2"
            },
            "scope": 1145,
            "src": "1555:300:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1520
            ],
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "1995:124:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 418,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 411,
                          "src": "2013:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2030:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 420,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2022:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 419,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2022:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 422,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2022:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2013:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 424,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2034:44:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 417,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2005:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2005:74:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 426,
                  "nodeType": "ExpressionStatement",
                  "src": "2005:74:2"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 427,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 350,
                      "src": "2096:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 429,
                    "indexExpression": {
                      "id": 428,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 411,
                      "src": "2106:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2096:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 416,
                  "id": 430,
                  "nodeType": "Return",
                  "src": "2089:23:2"
                }
              ]
            },
            "documentation": {
              "id": 409,
              "nodeType": "StructuredDocumentation",
              "src": "1861:48:2",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1923:9:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 413,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1968:8:2"
            },
            "parameters": {
              "id": 412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 411,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1941:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "1933:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 410,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1933:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1932:15:2"
            },
            "returnParameters": {
              "id": 416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 415,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "1986:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1986:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1985:9:2"
            },
            "scope": 1145,
            "src": "1914:205:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1528
            ],
            "body": {
              "id": 459,
              "nodeType": "Block",
              "src": "2257:154:2",
              "statements": [
                {
                  "assignments": [
                    442
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 442,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2275:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 459,
                      "src": "2267:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 441,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2267:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 446,
                  "initialValue": {
                    "baseExpression": {
                      "id": 443,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 346,
                      "src": "2283:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 445,
                    "indexExpression": {
                      "id": 444,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 435,
                      "src": "2291:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2283:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2267:32:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 448,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 442,
                          "src": "2317:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2334:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2326:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 449,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2326:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2326:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2317:19:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2338:43:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 447,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2309:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2309:73:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 456,
                  "nodeType": "ExpressionStatement",
                  "src": "2309:73:2"
                },
                {
                  "expression": {
                    "id": 457,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 442,
                    "src": "2399:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 440,
                  "id": 458,
                  "nodeType": "Return",
                  "src": "2392:12:2"
                }
              ]
            },
            "documentation": {
              "id": 433,
              "nodeType": "StructuredDocumentation",
              "src": "2125:46:2",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 460,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2185:7:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 437,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2230:8:2"
            },
            "parameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 435,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2201:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "2193:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2193:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2192:17:2"
            },
            "returnParameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 439,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 460,
                  "src": "2248:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2248:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2247:9:2"
            },
            "scope": 1145,
            "src": "2176:235:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1625
            ],
            "body": {
              "id": 469,
              "nodeType": "Block",
              "src": "2542:29:2",
              "statements": [
                {
                  "expression": {
                    "id": 467,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 340,
                    "src": "2559:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 466,
                  "id": 468,
                  "nodeType": "Return",
                  "src": "2552:12:2"
                }
              ]
            },
            "documentation": {
              "id": 461,
              "nodeType": "StructuredDocumentation",
              "src": "2417:51:2",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 470,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2482:4:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 463,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2509:8:2"
            },
            "parameters": {
              "id": 462,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2486:2:2"
            },
            "returnParameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 465,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 470,
                  "src": "2527:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 464,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2527:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2526:15:2"
            },
            "scope": 1145,
            "src": "2473:98:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1631
            ],
            "body": {
              "id": 479,
              "nodeType": "Block",
              "src": "2706:31:2",
              "statements": [
                {
                  "expression": {
                    "id": 477,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 342,
                    "src": "2723:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 476,
                  "id": 478,
                  "nodeType": "Return",
                  "src": "2716:14:2"
                }
              ]
            },
            "documentation": {
              "id": 471,
              "nodeType": "StructuredDocumentation",
              "src": "2577:53:2",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 480,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2644:6:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 473,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2673:8:2"
            },
            "parameters": {
              "id": 472,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2650:2:2"
            },
            "returnParameters": {
              "id": 476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 475,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 480,
                  "src": "2691:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 474,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2691:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2690:15:2"
            },
            "scope": 1145,
            "src": "2635:102:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1639
            ],
            "body": {
              "id": 521,
              "nodeType": "Block",
              "src": "2891:241:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 491,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 483,
                            "src": "2917:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 490,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 753,
                          "src": "2909:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2909:16:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2927:49:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 489,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2901:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2901:76:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 495,
                  "nodeType": "ExpressionStatement",
                  "src": "2901:76:2"
                },
                {
                  "assignments": [
                    497
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 497,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "3002:7:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 521,
                      "src": "2988:21:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 496,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2988:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 500,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 498,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 531,
                      "src": "3012:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3012:10:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2988:34:2"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 503,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 497,
                              "src": "3045:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3039:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 501,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3039:5:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3039:14:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3039:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3063:1:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3039:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3123:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3039:86:2",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 512,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 497,
                              "src": "3091:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 513,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 483,
                                  "src": "3100:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 514,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2022,
                                "src": "3100:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 515,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3100:18:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 510,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3074:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3074:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3074:45:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3067:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 508,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3067:6:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 517,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3067:53:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 488,
                  "id": 520,
                  "nodeType": "Return",
                  "src": "3032:93:2"
                }
              ]
            },
            "documentation": {
              "id": 481,
              "nodeType": "StructuredDocumentation",
              "src": "2743:55:2",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 522,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2812:8:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 485,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2858:8:2"
            },
            "parameters": {
              "id": 484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 483,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2829:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 522,
                  "src": "2821:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 482,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2821:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2820:17:2"
            },
            "returnParameters": {
              "id": 488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 487,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 522,
                  "src": "2876:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 486,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2876:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2875:15:2"
            },
            "scope": 1145,
            "src": "2803:329:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 530,
              "nodeType": "Block",
              "src": "3439:26:2",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3456:2:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 527,
                  "id": 529,
                  "nodeType": "Return",
                  "src": "3449:9:2"
                }
              ]
            },
            "documentation": {
              "id": 523,
              "nodeType": "StructuredDocumentation",
              "src": "3138:230:2",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overriden in child contracts."
            },
            "id": 531,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3382:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3390:2:2"
            },
            "returnParameters": {
              "id": 527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 526,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 531,
                  "src": "3424:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 525,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3424:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3423:15:2"
            },
            "scope": 1145,
            "src": "3373:92:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1556
            ],
            "body": {
              "id": 573,
              "nodeType": "Block",
              "src": "3592:331:2",
              "statements": [
                {
                  "assignments": [
                    541
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 541,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3610:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 573,
                      "src": "3602:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 540,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3602:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 546,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 544,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "3633:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 542,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1145,
                        "src": "3618:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1145_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 460,
                      "src": "3618:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3618:23:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3602:39:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 548,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 534,
                          "src": "3659:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 549,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 541,
                          "src": "3665:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3659:11:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3672:35:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 547,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3651:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3651:57:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 553,
                  "nodeType": "ExpressionStatement",
                  "src": "3651:57:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 555,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1469,
                              "src": "3740:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 556,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3740:12:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 557,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 541,
                            "src": "3756:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3740:21:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 560,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 541,
                              "src": "3782:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 561,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1469,
                                "src": "3789:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3789:12:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 559,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 630,
                            "src": "3765:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3765:37:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3740:62:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3816:58:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 554,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3719:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3719:165:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 567,
                  "nodeType": "ExpressionStatement",
                  "src": "3719:165:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 569,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 534,
                        "src": "3904:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 570,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "3908:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 568,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1039,
                      "src": "3895:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3895:21:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 572,
                  "nodeType": "ExpressionStatement",
                  "src": "3895:21:2"
                }
              ]
            },
            "documentation": {
              "id": 532,
              "nodeType": "StructuredDocumentation",
              "src": "3471:46:2",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 574,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3531:7:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 538,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3583:8:2"
            },
            "parameters": {
              "id": 537,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 534,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3547:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 574,
                  "src": "3539:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3539:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 536,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3559:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 574,
                  "src": "3551:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 535,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3551:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3538:29:2"
            },
            "returnParameters": {
              "id": 539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3592:0:2"
            },
            "scope": 1145,
            "src": "3522:401:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1564
            ],
            "body": {
              "id": 594,
              "nodeType": "Block",
              "src": "4069:132:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 585,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 577,
                            "src": "4095:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 584,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 753,
                          "src": "4087:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4087:16:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4105:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 583,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4079:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4079:73:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 589,
                  "nodeType": "ExpressionStatement",
                  "src": "4079:73:2"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 590,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 354,
                      "src": "4170:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 592,
                    "indexExpression": {
                      "id": 591,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 577,
                      "src": "4186:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4170:24:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 582,
                  "id": 593,
                  "nodeType": "Return",
                  "src": "4163:31:2"
                }
              ]
            },
            "documentation": {
              "id": 575,
              "nodeType": "StructuredDocumentation",
              "src": "3929:50:2",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 595,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "3993:11:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 579,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4042:8:2"
            },
            "parameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 577,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4013:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 595,
                  "src": "4005:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 576,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4005:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4004:17:2"
            },
            "returnParameters": {
              "id": 582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 581,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 595,
                  "src": "4060:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 580,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4060:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4059:9:2"
            },
            "scope": 1145,
            "src": "3984:217:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1572
            ],
            "body": {
              "id": 611,
              "nodeType": "Block",
              "src": "4352:69:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 605,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1469,
                          "src": "4381:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4381:12:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 607,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 598,
                        "src": "4395:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 608,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 600,
                        "src": "4405:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 604,
                      "name": "_setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1071,
                      "src": "4362:18:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4362:52:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 610,
                  "nodeType": "ExpressionStatement",
                  "src": "4362:52:2"
                }
              ]
            },
            "documentation": {
              "id": 596,
              "nodeType": "StructuredDocumentation",
              "src": "4207:56:2",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 612,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4277:17:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 602,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4343:8:2"
            },
            "parameters": {
              "id": 601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 598,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4303:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 612,
                  "src": "4295:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 597,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4295:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 600,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "4318:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 612,
                  "src": "4313:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 599,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4313:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4294:33:2"
            },
            "returnParameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4352:0:2"
            },
            "scope": 1145,
            "src": "4268:153:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1582
            ],
            "body": {
              "id": 629,
              "nodeType": "Block",
              "src": "4590:59:2",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 623,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 360,
                        "src": "4607:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 625,
                      "indexExpression": {
                        "id": 624,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 615,
                        "src": "4626:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4607:25:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 627,
                    "indexExpression": {
                      "id": 626,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 617,
                      "src": "4633:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4607:35:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 622,
                  "id": 628,
                  "nodeType": "Return",
                  "src": "4600:42:2"
                }
              ]
            },
            "documentation": {
              "id": 613,
              "nodeType": "StructuredDocumentation",
              "src": "4427:55:2",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 630,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4496:16:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 619,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4566:8:2"
            },
            "parameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 615,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4521:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 630,
                  "src": "4513:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 614,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4513:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 617,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4536:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 630,
                  "src": "4528:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 616,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4528:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4512:33:2"
            },
            "returnParameters": {
              "id": 622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 621,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 630,
                  "src": "4584:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 620,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4584:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4583:6:2"
            },
            "scope": 1145,
            "src": "4487:162:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1548
            ],
            "body": {
              "id": 656,
              "nodeType": "Block",
              "src": "4830:211:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 643,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1469,
                              "src": "4919:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4919:12:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 645,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 637,
                            "src": "4933:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 642,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 794,
                          "src": "4900:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4900:41:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4943:51:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4892:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4892:103:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 649,
                  "nodeType": "ExpressionStatement",
                  "src": "4892:103:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 651,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 633,
                        "src": "5016:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 652,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "5022:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 653,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 637,
                        "src": "5026:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 650,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1015,
                      "src": "5006:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5006:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 655,
                  "nodeType": "ExpressionStatement",
                  "src": "5006:28:2"
                }
              ]
            },
            "documentation": {
              "id": 631,
              "nodeType": "StructuredDocumentation",
              "src": "4655:51:2",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 657,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4720:12:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 639,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4821:8:2"
            },
            "parameters": {
              "id": 638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 633,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4750:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "4742:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4742:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 635,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4772:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "4764:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 634,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4764:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 637,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4792:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "4784:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 636,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4784:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4732:73:2"
            },
            "returnParameters": {
              "id": 640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4830:0:2"
            },
            "scope": 1145,
            "src": "4711:330:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1538
            ],
            "body": {
              "id": 675,
              "nodeType": "Block",
              "src": "5230:56:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 669,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 660,
                        "src": "5257:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 670,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 662,
                        "src": "5263:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 671,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 664,
                        "src": "5267:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5276:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 668,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        676,
                        706
                      ],
                      "referencedDeclaration": 706,
                      "src": "5240:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5240:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 674,
                  "nodeType": "ExpressionStatement",
                  "src": "5240:39:2"
                }
              ]
            },
            "documentation": {
              "id": 658,
              "nodeType": "StructuredDocumentation",
              "src": "5047:55:2",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 676,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5116:16:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 666,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5221:8:2"
            },
            "parameters": {
              "id": 665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 660,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5150:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "5142:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 659,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5142:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 662,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5172:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "5164:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 661,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5164:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 664,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5192:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 676,
                  "src": "5184:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 663,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5184:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5132:73:2"
            },
            "returnParameters": {
              "id": 667,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5230:0:2"
            },
            "scope": 1145,
            "src": "5107:179:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1594
            ],
            "body": {
              "id": 705,
              "nodeType": "Block",
              "src": "5503:169:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 691,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1469,
                              "src": "5540:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5540:12:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 693,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 683,
                            "src": "5554:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 690,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 794,
                          "src": "5521:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5521:41:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5564:51:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 689,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5513:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 696,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5513:103:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 697,
                  "nodeType": "ExpressionStatement",
                  "src": "5513:103:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 699,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 679,
                        "src": "5640:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 700,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 681,
                        "src": "5646:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 701,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 683,
                        "src": "5650:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 702,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 685,
                        "src": "5659:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 698,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 735,
                      "src": "5626:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5626:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 704,
                  "nodeType": "ExpressionStatement",
                  "src": "5626:39:2"
                }
              ]
            },
            "documentation": {
              "id": 677,
              "nodeType": "StructuredDocumentation",
              "src": "5292:55:2",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 706,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5361:16:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 687,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5494:8:2"
            },
            "parameters": {
              "id": 686,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 679,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5395:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 706,
                  "src": "5387:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 678,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5387:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 681,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5417:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 706,
                  "src": "5409:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5409:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 683,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5437:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 706,
                  "src": "5429:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5429:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 685,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5467:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 706,
                  "src": "5454:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 684,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5454:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5377:101:2"
            },
            "returnParameters": {
              "id": 688,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5503:0:2"
            },
            "scope": 1145,
            "src": "5352:320:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 734,
              "nodeType": "Block",
              "src": "6675:166:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 719,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 709,
                        "src": "6695:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 720,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 711,
                        "src": "6701:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 721,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 713,
                        "src": "6705:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 718,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1015,
                      "src": "6685:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6685:28:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 723,
                  "nodeType": "ExpressionStatement",
                  "src": "6685:28:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 726,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 709,
                            "src": "6754:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 727,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 711,
                            "src": "6760:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 728,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 713,
                            "src": "6764:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 729,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 715,
                            "src": "6773:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 725,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1133,
                          "src": "6731:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6731:48:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6781:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 724,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6723:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6723:111:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 733,
                  "nodeType": "ExpressionStatement",
                  "src": "6723:111:2"
                }
              ]
            },
            "documentation": {
              "id": 707,
              "nodeType": "StructuredDocumentation",
              "src": "5678:851:2",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 735,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "6543:13:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 716,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 709,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6574:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 735,
                  "src": "6566:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 708,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6566:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 711,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6596:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 735,
                  "src": "6588:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6588:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 713,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6616:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 735,
                  "src": "6608:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 712,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6608:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 715,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "6646:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 735,
                  "src": "6633:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 714,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6633:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6556:101:2"
            },
            "returnParameters": {
              "id": 717,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6675:0:2"
            },
            "scope": 1145,
            "src": "6534:307:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 752,
              "nodeType": "Block",
              "src": "7215:54:2",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 743,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 346,
                        "src": "7232:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 745,
                      "indexExpression": {
                        "id": 744,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 738,
                        "src": "7240:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7232:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7260:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7252:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 746,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7252:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7252:10:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7232:30:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 742,
                  "id": 751,
                  "nodeType": "Return",
                  "src": "7225:37:2"
                }
              ]
            },
            "documentation": {
              "id": 736,
              "nodeType": "StructuredDocumentation",
              "src": "6847:292:2",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 753,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "7153:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 738,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7169:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 753,
                  "src": "7161:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 737,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7161:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7160:17:2"
            },
            "returnParameters": {
              "id": 742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 741,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 753,
                  "src": "7209:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 740,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7209:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7208:6:2"
            },
            "scope": 1145,
            "src": "7144:125:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 793,
              "nodeType": "Block",
              "src": "7526:245:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 765,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 758,
                            "src": "7552:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 764,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 753,
                          "src": "7544:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7544:16:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7562:46:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 763,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7536:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7536:73:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 769,
                  "nodeType": "ExpressionStatement",
                  "src": "7536:73:2"
                },
                {
                  "assignments": [
                    771
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 771,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7627:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 793,
                      "src": "7619:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 770,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7619:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 776,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 774,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 758,
                        "src": "7650:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 772,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1145,
                        "src": "7635:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1145_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 460,
                      "src": "7635:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7635:23:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7619:39:2"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 777,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 756,
                              "src": "7676:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 778,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 771,
                              "src": "7687:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7676:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 781,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 758,
                                  "src": "7708:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 780,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 595,
                                "src": "7696:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7696:20:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 783,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 756,
                              "src": "7720:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7696:31:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7676:51:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 787,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 771,
                              "src": "7748:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 788,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 756,
                              "src": "7755:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 786,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 630,
                            "src": "7731:16:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7731:32:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7676:87:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 791,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7675:89:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 762,
                  "id": 792,
                  "nodeType": "Return",
                  "src": "7668:96:2"
                }
              ]
            },
            "documentation": {
              "id": 754,
              "nodeType": "StructuredDocumentation",
              "src": "7275:147:2",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 794,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "7436:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 756,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7463:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "7455:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7455:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 758,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7480:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "7472:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 757,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7472:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7454:34:2"
            },
            "returnParameters": {
              "id": 762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 761,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 794,
                  "src": "7520:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 760,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7520:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7519:6:2"
            },
            "scope": 1145,
            "src": "7427:344:2",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 808,
              "nodeType": "Block",
              "src": "8166:43:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 803,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 797,
                        "src": "8186:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 804,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 799,
                        "src": "8190:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8199:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 802,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        809,
                        838
                      ],
                      "referencedDeclaration": 838,
                      "src": "8176:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8176:26:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 807,
                  "nodeType": "ExpressionStatement",
                  "src": "8176:26:2"
                }
              ]
            },
            "documentation": {
              "id": 795,
              "nodeType": "StructuredDocumentation",
              "src": "7777:319:2",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 809,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8110:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 797,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8128:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 809,
                  "src": "8120:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8120:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 799,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8140:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 809,
                  "src": "8132:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8132:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8119:29:2"
            },
            "returnParameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8166:0:2"
            },
            "scope": 1145,
            "src": "8101:108:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 837,
              "nodeType": "Block",
              "src": "8545:196:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 820,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 812,
                        "src": "8561:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 821,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 814,
                        "src": "8565:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 819,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 895,
                      "src": "8555:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8555:18:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 823,
                  "nodeType": "ExpressionStatement",
                  "src": "8555:18:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 828,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8635:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 827,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8627:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 826,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8627:7:2",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 829,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8627:10:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 830,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 812,
                            "src": "8639:2:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 831,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 814,
                            "src": "8643:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 832,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 816,
                            "src": "8652:5:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 825,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1133,
                          "src": "8604:22:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8604:54:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8672:52:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 824,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8583:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8583:151:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 836,
                  "nodeType": "ExpressionStatement",
                  "src": "8583:151:2"
                }
              ]
            },
            "documentation": {
              "id": 810,
              "nodeType": "StructuredDocumentation",
              "src": "8215:210:2",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 838,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8439:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 812,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8466:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "8458:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8458:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 814,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8486:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "8478:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 813,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8478:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 816,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8516:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 838,
                  "src": "8503:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 815,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8503:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8448:79:2"
            },
            "returnParameters": {
              "id": 818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8545:0:2"
            },
            "scope": 1145,
            "src": "8430:311:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 894,
              "nodeType": "Block",
              "src": "9124:311:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 847,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 841,
                          "src": "9142:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 850,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9156:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9148:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 848,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9148:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9148:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9142:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9160:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 846,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9134:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9134:61:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 855,
                  "nodeType": "ExpressionStatement",
                  "src": "9134:61:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9213:17:2",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 858,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 843,
                              "src": "9222:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 857,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 753,
                            "src": "9214:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 859,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9214:16:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9232:30:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 856,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9205:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9205:58:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "9205:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9303:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9295:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 865,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9295:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9295:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 869,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 841,
                        "src": "9307:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 870,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 843,
                        "src": "9311:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 864,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1144,
                      "src": "9274:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9274:45:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 872,
                  "nodeType": "ExpressionStatement",
                  "src": "9274:45:2"
                },
                {
                  "expression": {
                    "id": 877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 873,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "9330:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 875,
                      "indexExpression": {
                        "id": 874,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 841,
                        "src": "9340:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9330:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9347:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9330:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 878,
                  "nodeType": "ExpressionStatement",
                  "src": "9330:18:2"
                },
                {
                  "expression": {
                    "id": 883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 879,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 346,
                        "src": "9358:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 881,
                      "indexExpression": {
                        "id": 880,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 843,
                        "src": "9366:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9358:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 882,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 841,
                      "src": "9377:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9358:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 884,
                  "nodeType": "ExpressionStatement",
                  "src": "9358:21:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 888,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9412:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9404:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 886,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9404:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9404:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 890,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 841,
                        "src": "9416:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 891,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 843,
                        "src": "9420:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 885,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1494,
                      "src": "9395:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 892,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9395:33:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 893,
                  "nodeType": "EmitStatement",
                  "src": "9390:38:2"
                }
              ]
            },
            "documentation": {
              "id": 839,
              "nodeType": "StructuredDocumentation",
              "src": "8747:311:2",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 895,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "9072:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 841,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9086:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 895,
                  "src": "9078:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9078:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 843,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9098:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 895,
                  "src": "9090:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9090:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9077:29:2"
            },
            "returnParameters": {
              "id": 845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9124:0:2"
            },
            "scope": 1145,
            "src": "9063:372:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 945,
              "nodeType": "Block",
              "src": "9701:299:2",
              "statements": [
                {
                  "assignments": [
                    902
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 902,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "9719:5:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 945,
                      "src": "9711:13:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 901,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9711:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 907,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 905,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 898,
                        "src": "9742:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 903,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1145,
                        "src": "9727:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$1145_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 460,
                      "src": "9727:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9727:23:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9711:39:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 909,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 902,
                        "src": "9782:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9797:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9789:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 910,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9789:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9789:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 914,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 898,
                        "src": "9801:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 908,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1144,
                      "src": "9761:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9761:48:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 916,
                  "nodeType": "ExpressionStatement",
                  "src": "9761:48:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9864:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9856:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 918,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9856:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9856:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 922,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 898,
                        "src": "9868:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 917,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1039,
                      "src": "9847:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9847:29:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 924,
                  "nodeType": "ExpressionStatement",
                  "src": "9847:29:2"
                },
                {
                  "expression": {
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 925,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "9887:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 927,
                      "indexExpression": {
                        "id": 926,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 902,
                        "src": "9897:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9887:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9907:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9887:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 930,
                  "nodeType": "ExpressionStatement",
                  "src": "9887:21:2"
                },
                {
                  "expression": {
                    "id": 934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9918:23:2",
                    "subExpression": {
                      "baseExpression": {
                        "id": 931,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 346,
                        "src": "9925:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 933,
                      "indexExpression": {
                        "id": 932,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 898,
                        "src": "9933:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9925:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 935,
                  "nodeType": "ExpressionStatement",
                  "src": "9918:23:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 937,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 902,
                        "src": "9966:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9981:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 939,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9973:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 938,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9973:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9973:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 942,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 898,
                        "src": "9985:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 936,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1494,
                      "src": "9957:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9957:36:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 944,
                  "nodeType": "EmitStatement",
                  "src": "9952:41:2"
                }
              ]
            },
            "documentation": {
              "id": 896,
              "nodeType": "StructuredDocumentation",
              "src": "9441:206:2",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 946,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9661:5:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 898,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9675:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 946,
                  "src": "9667:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9667:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9666:17:2"
            },
            "returnParameters": {
              "id": 900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9701:0:2"
            },
            "scope": 1145,
            "src": "9652:348:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1014,
              "nodeType": "Block",
              "src": "10433:451:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 959,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 953,
                              "src": "10466:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 957,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1145,
                              "src": "10451:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$1145_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 460,
                            "src": "10451:14:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10451:23:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 961,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 949,
                          "src": "10478:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10451:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
                        "id": 963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10484:43:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        },
                        "value": "ERC721: transfer of token that is not own"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        }
                      ],
                      "id": 956,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10443:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10443:85:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 965,
                  "nodeType": "ExpressionStatement",
                  "src": "10443:85:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 967,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 951,
                          "src": "10546:2:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 970,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10560:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10552:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 968,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10552:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10552:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10546:16:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10564:38:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 966,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10538:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10538:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 975,
                  "nodeType": "ExpressionStatement",
                  "src": "10538:65:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 977,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 949,
                        "src": "10635:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 978,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 951,
                        "src": "10641:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 979,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "10645:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 976,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1144,
                      "src": "10614:20:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10614:39:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 981,
                  "nodeType": "ExpressionStatement",
                  "src": "10614:39:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10732:1:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10724:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 983,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10724:7:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10724:10:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 987,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "10736:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 982,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1039,
                      "src": "10715:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10715:29:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 989,
                  "nodeType": "ExpressionStatement",
                  "src": "10715:29:2"
                },
                {
                  "expression": {
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 990,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "10755:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 992,
                      "indexExpression": {
                        "id": 991,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 949,
                        "src": "10765:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10755:15:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10774:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10755:20:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 995,
                  "nodeType": "ExpressionStatement",
                  "src": "10755:20:2"
                },
                {
                  "expression": {
                    "id": 1000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 996,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 350,
                        "src": "10785:9:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 998,
                      "indexExpression": {
                        "id": 997,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 951,
                        "src": "10795:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10785:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10802:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10785:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1001,
                  "nodeType": "ExpressionStatement",
                  "src": "10785:18:2"
                },
                {
                  "expression": {
                    "id": 1006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1002,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 346,
                        "src": "10813:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1004,
                      "indexExpression": {
                        "id": 1003,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "10821:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10813:16:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1005,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 951,
                      "src": "10832:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10813:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1007,
                  "nodeType": "ExpressionStatement",
                  "src": "10813:21:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1009,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 949,
                        "src": "10859:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1010,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 951,
                        "src": "10865:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1011,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 953,
                        "src": "10869:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1008,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1494,
                      "src": "10850:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10850:27:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1013,
                  "nodeType": "EmitStatement",
                  "src": "10845:32:2"
                }
              ]
            },
            "documentation": {
              "id": 947,
              "nodeType": "StructuredDocumentation",
              "src": "10006:313:2",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 1015,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "10333:9:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 949,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10360:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1015,
                  "src": "10352:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 948,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10352:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 951,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10382:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1015,
                  "src": "10374:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 950,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10374:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 953,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10402:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1015,
                  "src": "10394:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 952,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10394:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10342:73:2"
            },
            "returnParameters": {
              "id": 955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10433:0:2"
            },
            "scope": 1145,
            "src": "10324:560:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1038,
              "nodeType": "Block",
              "src": "11059:107:2",
              "statements": [
                {
                  "expression": {
                    "id": 1027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1023,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 354,
                        "src": "11069:15:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1025,
                      "indexExpression": {
                        "id": 1024,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1020,
                        "src": "11085:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11069:24:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1026,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1018,
                      "src": "11096:2:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11069:29:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1028,
                  "nodeType": "ExpressionStatement",
                  "src": "11069:29:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1032,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1020,
                            "src": "11137:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1030,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1145,
                            "src": "11122:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$1145_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 1031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 460,
                          "src": "11122:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 1033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11122:23:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1034,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1018,
                        "src": "11147:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1035,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1020,
                        "src": "11151:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1029,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1503,
                      "src": "11113:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11113:46:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1037,
                  "nodeType": "EmitStatement",
                  "src": "11108:51:2"
                }
              ]
            },
            "documentation": {
              "id": 1016,
              "nodeType": "StructuredDocumentation",
              "src": "10890:100:2",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 1039,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "11004:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1021,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1018,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11021:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "11013:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1017,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11013:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1020,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11033:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1039,
                  "src": "11025:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1019,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11025:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11012:29:2"
            },
            "returnParameters": {
              "id": 1022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11059:0:2"
            },
            "scope": 1145,
            "src": "10995:171:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1070,
              "nodeType": "Block",
              "src": "11424:184:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1050,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1042,
                          "src": "11442:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1051,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1044,
                          "src": "11451:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11442:17:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 1053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11461:27:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 1049,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11434:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11434:55:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1055,
                  "nodeType": "ExpressionStatement",
                  "src": "11434:55:2"
                },
                {
                  "expression": {
                    "id": 1062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1056,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 360,
                          "src": "11499:18:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 1059,
                        "indexExpression": {
                          "id": 1057,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1042,
                          "src": "11518:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11499:25:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1060,
                      "indexExpression": {
                        "id": 1058,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1044,
                        "src": "11525:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11499:35:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1061,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1046,
                      "src": "11537:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11499:46:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1063,
                  "nodeType": "ExpressionStatement",
                  "src": "11499:46:2"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1065,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1042,
                        "src": "11575:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1066,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1044,
                        "src": "11582:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1067,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1046,
                        "src": "11592:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1064,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1512,
                      "src": "11560:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 1068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11560:41:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1069,
                  "nodeType": "EmitStatement",
                  "src": "11555:46:2"
                }
              ]
            },
            "documentation": {
              "id": 1040,
              "nodeType": "StructuredDocumentation",
              "src": "11172:124:2",
              "text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
            },
            "id": 1071,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setApprovalForAll",
            "nameLocation": "11310:18:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1042,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "11346:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1071,
                  "src": "11338:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11338:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1044,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "11369:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1071,
                  "src": "11361:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11361:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1046,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "11392:8:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1071,
                  "src": "11387:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1045,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11387:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11328:78:2"
            },
            "returnParameters": {
              "id": 1048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11424:0:2"
            },
            "scope": 1145,
            "src": "11301:307:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1132,
              "nodeType": "Block",
              "src": "12317:622:2",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1085,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1076,
                        "src": "12331:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1086,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1660,
                      "src": "12331:13:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 1087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12331:15:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1130,
                    "nodeType": "Block",
                    "src": "12897:36:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12918:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1084,
                        "id": 1129,
                        "nodeType": "Return",
                        "src": "12911:11:2"
                      }
                    ]
                  },
                  "id": 1131,
                  "nodeType": "IfStatement",
                  "src": "12327:606:2",
                  "trueBody": {
                    "id": 1127,
                    "nodeType": "Block",
                    "src": "12348:543:2",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 1107,
                              "nodeType": "Block",
                              "src": "12463:91:2",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 1105,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1101,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1099,
                                      "src": "12488:6:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 1102,
                                          "name": "IERC721Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1613,
                                          "src": "12498:15:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1613_$",
                                            "typeString": "type(contract IERC721Receiver)"
                                          }
                                        },
                                        "id": 1103,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1612,
                                        "src": "12498:32:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 1104,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "12498:41:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "12488:51:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 1084,
                                  "id": 1106,
                                  "nodeType": "Return",
                                  "src": "12481:58:2"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 1108,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 1100,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 1099,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "12455:6:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1108,
                                  "src": "12448:13:2",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 1098,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12448:6:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12447:15:2"
                            },
                            "src": "12439:115:2"
                          },
                          {
                            "block": {
                              "id": 1124,
                              "nodeType": "Block",
                              "src": "12583:298:2",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1115,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 1112,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1110,
                                        "src": "12605:6:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 1113,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "12605:13:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 1114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12622:1:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "12605:18:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 1122,
                                    "nodeType": "Block",
                                    "src": "12732:135:2",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
                                          "src": "12763:86:2",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "12800:2:2",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12804:6:2"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12796:3:2"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12796:15:2"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12819:6:2"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12813:5:2"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12813:13:2"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12789:6:2"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "12789:38:2"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "12789:38:2"
                                            }
                                          ]
                                        },
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 1110,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12804:6:2",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 1110,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12819:6:2",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 1121,
                                        "nodeType": "InlineAssembly",
                                        "src": "12754:95:2"
                                      }
                                    ]
                                  },
                                  "id": 1123,
                                  "nodeType": "IfStatement",
                                  "src": "12601:266:2",
                                  "trueBody": {
                                    "id": 1120,
                                    "nodeType": "Block",
                                    "src": "12625:101:2",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 1117,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12654:52:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 1116,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "12647:6:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 1118,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "12647:60:2",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 1119,
                                        "nodeType": "ExpressionStatement",
                                        "src": "12647:60:2"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 1125,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 1111,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 1110,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "12575:6:2",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1125,
                                  "src": "12562:19:2",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 1109,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12562:5:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12561:21:2"
                            },
                            "src": "12555:326:2"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1092,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1469,
                                "src": "12403:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1093,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12403:12:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1094,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1074,
                              "src": "12417:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1095,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1078,
                              "src": "12423:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1096,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1080,
                              "src": "12432:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1089,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1076,
                                  "src": "12382:2:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1088,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1613,
                                "src": "12366:15:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1613_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 1090,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12366:19:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$1613",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 1091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1612,
                            "src": "12366:36:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 1097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12366:72:2",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 1126,
                        "nodeType": "TryStatement",
                        "src": "12362:519:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1072,
              "nodeType": "StructuredDocumentation",
              "src": "11614:542:2",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 1133,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "12170:22:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1074,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12210:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1133,
                  "src": "12202:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12202:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1076,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12232:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1133,
                  "src": "12224:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1075,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12224:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1078,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12252:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1133,
                  "src": "12244:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1077,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12244:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1080,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "12282:5:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1133,
                  "src": "12269:18:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1079,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12269:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12192:101:2"
            },
            "returnParameters": {
              "id": 1084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1083,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1133,
                  "src": "12311:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1082,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12311:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12310:6:2"
            },
            "scope": 1145,
            "src": "12161:778:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1143,
              "nodeType": "Block",
              "src": "13615:2:2",
              "statements": []
            },
            "documentation": {
              "id": 1134,
              "nodeType": "StructuredDocumentation",
              "src": "12945:545:2",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 1144,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "13504:20:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1136,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13542:4:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1144,
                  "src": "13534:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13534:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1138,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13564:2:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1144,
                  "src": "13556:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13556:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1140,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13584:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1144,
                  "src": "13576:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13576:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13524:73:2"
            },
            "returnParameters": {
              "id": 1142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13615:0:2"
            },
            "scope": 1145,
            "src": "13495:122:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1146,
        "src": "613:13006:2",
        "usedErrors": []
      }
    ],
    "src": "92:13528:2"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620014e2380380620014e28339810160408190526200003491620001db565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b61125080620002926000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d60565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610dd5565b61012461011f366004610de8565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610e1d565b6103a6565b005b61014f61015f366004610e47565b6104bc565b61014f610172366004610e47565b6104ed565b610124610185366004610de8565b610508565b61019d610198366004610e83565b61057f565b6040519081526020016100f3565b610104610606565b61014f6101c1366004610e9e565b610615565b61014f6101d4366004610ef0565b610624565b6101046101e7366004610de8565b61065c565b6100e76101fa366004610fcc565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990610fff565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610fff565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610508565b9050806001600160a01b0316836001600160a01b0316141561041f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043b575061043b81336101fa565b6104ad5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b78383610744565b505050565b6104c633826107b2565b6104e25760405162461bcd60e51b81526004016103819061103a565b6104b78383836108a9565b6104b783838360405180602001604052806000815250610624565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990610fff565b610620338383610a49565b5050565b61062e33836107b2565b61064a5760405162461bcd60e51b81526004016103819061103a565b61065684848484610b18565b50505050565b6000818152600260205260409020546060906001600160a01b03166106db5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006106f260408051602081019091526000815290565b90506000815111610712576040518060200160405280600081525061073d565b8061071c84610b4b565b60405160200161072d92919061108b565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061077982610508565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661082b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b600061083683610508565b9050806001600160a01b0316846001600160a01b031614806108715750836001600160a01b03166108668461030c565b6001600160a01b0316145b806108a157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166108bc82610508565b6001600160a01b0316146109245760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610381565b6001600160a01b0382166109865760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b610991600082610744565b6001600160a01b03831660009081526003602052604081208054600192906109ba9084906110d0565b90915550506001600160a01b03821660009081526003602052604081208054600192906109e89084906110e7565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03161415610aab5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b238484846108a9565b610b2f84848484610c49565b6106565760405162461bcd60e51b8152600401610381906110ff565b606081610b6f5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b995780610b8381611151565b9150610b929050600a83611182565b9150610b73565b60008167ffffffffffffffff811115610bb457610bb4610eda565b6040519080825280601f01601f191660200182016040528015610bde576020820181803683370190505b5090505b84156108a157610bf36001836110d0565b9150610c00600a86611196565b610c0b9060306110e7565b60f81b818381518110610c2057610c206111aa565b60200101906001600160f81b031916908160001a905350610c42600a86611182565b9450610be2565b60006001600160a01b0384163b15610d3c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c8d9033908990889088906004016111c0565b6020604051808303816000875af1925050508015610cc8575060408051601f3d908101601f19168201909252610cc5918101906111fd565b60015b610d22573d808015610cf6576040519150601f19603f3d011682016040523d82523d6000602084013e610cfb565b606091505b508051610d1a5760405162461bcd60e51b8152600401610381906110ff565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108a1565b506001949350505050565b6001600160e01b031981168114610d5d57600080fd5b50565b600060208284031215610d7257600080fd5b813561073d81610d47565b60005b83811015610d98578181015183820152602001610d80565b838111156106565750506000910152565b60008151808452610dc1816020860160208601610d7d565b601f01601f19169290920160200192915050565b60208152600061073d6020830184610da9565b600060208284031215610dfa57600080fd5b5035919050565b80356001600160a01b0381168114610e1857600080fd5b919050565b60008060408385031215610e3057600080fd5b610e3983610e01565b946020939093013593505050565b600080600060608486031215610e5c57600080fd5b610e6584610e01565b9250610e7360208501610e01565b9150604084013590509250925092565b600060208284031215610e9557600080fd5b61073d82610e01565b60008060408385031215610eb157600080fd5b610eba83610e01565b915060208301358015158114610ecf57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f0657600080fd5b610f0f85610e01565b9350610f1d60208601610e01565b925060408501359150606085013567ffffffffffffffff80821115610f4157600080fd5b818701915087601f830112610f5557600080fd5b813581811115610f6757610f67610eda565b604051601f8201601f19908116603f01168101908382118183101715610f8f57610f8f610eda565b816040528281528a6020848701011115610fa857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fdf57600080fd5b610fe883610e01565b9150610ff660208401610e01565b90509250929050565b600181811c9082168061101357607f821691505b6020821081141561103457634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000835161109d818460208801610d7d565b8351908301906110b1818360208801610d7d565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110e2576110e26110ba565b500390565b600082198211156110fa576110fa6110ba565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000600019821415611165576111656110ba565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826111915761119161116c565b500490565b6000826111a5576111a561116c565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111f390830184610da9565b9695505050505050565b60006020828403121561120f57600080fd5b815161073d81610d4756fea26469706673582212209a762c16f3bb894f8e563df13af8c6c7fa54a467205424d31040a3be9d1df8a364736f6c634300080c0033",
  "bytecodeSha1": "f1489d4c38c27378f4844e9838ad9185ef5c6a92",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "10": {},
      "2": {
        "ERC721._safeTransfer": {
          "61": [
            6731,
            6779,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "60": [
            11442,
            11459,
            true
          ]
        },
        "ERC721._transfer": {
          "58": [
            10451,
            10482,
            true
          ],
          "59": [
            10546,
            10562,
            true
          ]
        },
        "ERC721.approve": {
          "50": [
            3659,
            3670,
            true
          ],
          "51": [
            3740,
            3761,
            true
          ],
          "52": [
            3765,
            3802,
            true
          ]
        },
        "ERC721.balanceOf": {
          "55": [
            2013,
            2032,
            true
          ]
        },
        "ERC721.ownerOf": {
          "54": [
            2317,
            2336,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "56": [
            5521,
            5562,
            true
          ]
        },
        "ERC721.tokenURI": {
          "57": [
            3039,
            3064,
            true
          ]
        },
        "ERC721.transferFrom": {
          "53": [
            4900,
            4941,
            true
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {
        "Strings.toString": {
          "62": [
            601,
            611,
            false
          ]
        }
      },
      "9": {}
    },
    "statements": {
      "10": {},
      "2": {
        "ERC721._approve": {
          "24": [
            11069,
            11098
          ],
          "25": [
            11108,
            11159
          ]
        },
        "ERC721._baseURI": {
          "22": [
            3449,
            3458
          ]
        },
        "ERC721._checkOnERC721Received": {
          "47": [
            12647,
            12707
          ],
          "48": [
            12481,
            12539
          ],
          "49": [
            12911,
            12922
          ]
        },
        "ERC721._exists": {
          "4": [
            7225,
            7262
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "26": [
            7536,
            7609
          ],
          "27": [
            7668,
            7764
          ]
        },
        "ERC721._safeTransfer": {
          "38": [
            6685,
            6713
          ],
          "39": [
            6723,
            6834
          ]
        },
        "ERC721._setApprovalForAll": {
          "35": [
            11434,
            11489
          ],
          "36": [
            11499,
            11545
          ],
          "37": [
            11555,
            11601
          ]
        },
        "ERC721._transfer": {
          "28": [
            10443,
            10528
          ],
          "29": [
            10538,
            10603
          ],
          "30": [
            10715,
            10744
          ],
          "31": [
            10755,
            10775
          ],
          "32": [
            10785,
            10803
          ],
          "33": [
            10813,
            10834
          ],
          "34": [
            10845,
            10877
          ]
        },
        "ERC721.approve": {
          "7": [
            3651,
            3708
          ],
          "9": [
            3719,
            3884
          ],
          "10": [
            3895,
            3916
          ]
        },
        "ERC721.balanceOf": {
          "15": [
            2005,
            2079
          ],
          "16": [
            2089,
            2112
          ]
        },
        "ERC721.getApproved": {
          "5": [
            4079,
            4152
          ],
          "6": [
            4163,
            4194
          ]
        },
        "ERC721.isApprovedForAll": {
          "0": [
            4600,
            4642
          ]
        },
        "ERC721.name": {
          "3": [
            2552,
            2564
          ]
        },
        "ERC721.ownerOf": {
          "14": [
            2309,
            2382
          ]
        },
        "ERC721.safeTransferFrom": {
          "13": [
            5240,
            5279
          ],
          "19": [
            5513,
            5616
          ],
          "20": [
            5626,
            5665
          ]
        },
        "ERC721.setApprovalForAll": {
          "18": [
            4362,
            4414
          ]
        },
        "ERC721.supportsInterface": {
          "1": [
            1673,
            1848
          ]
        },
        "ERC721.symbol": {
          "17": [
            2716,
            2730
          ]
        },
        "ERC721.tokenURI": {
          "21": [
            2901,
            2977
          ],
          "23": [
            3032,
            3125
          ]
        },
        "ERC721.transferFrom": {
          "11": [
            4892,
            4995
          ],
          "12": [
            5006,
            5034
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {},
      "6": {
        "Address.isContract": {
          "46": [
            1126,
            1141
          ]
        }
      },
      "7": {
        "Context._msgSender": {
          "8": [
            712,
            729
          ]
        }
      },
      "8": {
        "Strings.toString": {
          "40": [
            627,
            637
          ],
          "41": [
            743,
            751
          ],
          "42": [
            765,
            775
          ],
          "43": [
            877,
            888
          ],
          "44": [
            902,
            958
          ],
          "45": [
            972,
            983
          ]
        }
      },
      "9": {
        "ERC165.supportsInterface": {
          "2": [
            930,
            977
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Address",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Context",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.4.1/Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d60565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610dd5565b61012461011f366004610de8565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610e1d565b6103a6565b005b61014f61015f366004610e47565b6104bc565b61014f610172366004610e47565b6104ed565b610124610185366004610de8565b610508565b61019d610198366004610e83565b61057f565b6040519081526020016100f3565b610104610606565b61014f6101c1366004610e9e565b610615565b61014f6101d4366004610ef0565b610624565b6101046101e7366004610de8565b61065c565b6100e76101fa366004610fcc565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990610fff565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610fff565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610508565b9050806001600160a01b0316836001600160a01b0316141561041f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043b575061043b81336101fa565b6104ad5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b78383610744565b505050565b6104c633826107b2565b6104e25760405162461bcd60e51b81526004016103819061103a565b6104b78383836108a9565b6104b783838360405180602001604052806000815250610624565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990610fff565b610620338383610a49565b5050565b61062e33836107b2565b61064a5760405162461bcd60e51b81526004016103819061103a565b61065684848484610b18565b50505050565b6000818152600260205260409020546060906001600160a01b03166106db5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006106f260408051602081019091526000815290565b90506000815111610712576040518060200160405280600081525061073d565b8061071c84610b4b565b60405160200161072d92919061108b565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061077982610508565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661082b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b600061083683610508565b9050806001600160a01b0316846001600160a01b031614806108715750836001600160a01b03166108668461030c565b6001600160a01b0316145b806108a157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166108bc82610508565b6001600160a01b0316146109245760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610381565b6001600160a01b0382166109865760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b610991600082610744565b6001600160a01b03831660009081526003602052604081208054600192906109ba9084906110d0565b90915550506001600160a01b03821660009081526003602052604081208054600192906109e89084906110e7565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03161415610aab5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b238484846108a9565b610b2f84848484610c49565b6106565760405162461bcd60e51b8152600401610381906110ff565b606081610b6f5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b995780610b8381611151565b9150610b929050600a83611182565b9150610b73565b60008167ffffffffffffffff811115610bb457610bb4610eda565b6040519080825280601f01601f191660200182016040528015610bde576020820181803683370190505b5090505b84156108a157610bf36001836110d0565b9150610c00600a86611196565b610c0b9060306110e7565b60f81b818381518110610c2057610c206111aa565b60200101906001600160f81b031916908160001a905350610c42600a86611182565b9450610be2565b60006001600160a01b0384163b15610d3c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c8d9033908990889088906004016111c0565b6020604051808303816000875af1925050508015610cc8575060408051601f3d908101601f19168201909252610cc5918101906111fd565b60015b610d22573d808015610cf6576040519150601f19603f3d011682016040523d82523d6000602084013e610cfb565b606091505b508051610d1a5760405162461bcd60e51b8152600401610381906110ff565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108a1565b506001949350505050565b6001600160e01b031981168114610d5d57600080fd5b50565b600060208284031215610d7257600080fd5b813561073d81610d47565b60005b83811015610d98578181015183820152602001610d80565b838111156106565750506000910152565b60008151808452610dc1816020860160208601610d7d565b601f01601f19169290920160200192915050565b60208152600061073d6020830184610da9565b600060208284031215610dfa57600080fd5b5035919050565b80356001600160a01b0381168114610e1857600080fd5b919050565b60008060408385031215610e3057600080fd5b610e3983610e01565b946020939093013593505050565b600080600060608486031215610e5c57600080fd5b610e6584610e01565b9250610e7360208501610e01565b9150604084013590509250925092565b600060208284031215610e9557600080fd5b61073d82610e01565b60008060408385031215610eb157600080fd5b610eba83610e01565b915060208301358015158114610ecf57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f0657600080fd5b610f0f85610e01565b9350610f1d60208601610e01565b925060408501359150606085013567ffffffffffffffff80821115610f4157600080fd5b818701915087601f830112610f5557600080fd5b813581811115610f6757610f67610eda565b604051601f8201601f19908116603f01168101908382118183101715610f8f57610f8f610eda565b816040528281528a6020848701011115610fa857600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fdf57600080fd5b610fe883610e01565b9150610ff660208401610e01565b90509250929050565b600181811c9082168061101357607f821691505b6020821081141561103457634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000835161109d818460208801610d7d565b8351908301906110b1818360208801610d7d565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110e2576110e26110ba565b500390565b600082198211156110fa576110fa6110ba565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000600019821415611165576111656110ba565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826111915761119161116c565b500490565b6000826111a5576111a561116c565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111f390830184610da9565b9695505050505050565b60006020828403121561120f57600080fd5b815161073d81610d4756fea26469706673582212209a762c16f3bb894f8e563df13af8c6c7fa54a467205424d31040a3be9d1df8a364736f6c634300080c0033",
  "deployedSourceMap": "613:13006:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1555:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:13;;558:22;540:41;;528:2;513:18;1555:300:2;;;;;;;;2473:98;;;:::i;:::-;;;;;;;:::i;3984:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:13;;;1674:51;;1662:2;1647:18;3984:217:2;1528:203:13;3522:401:2;;;;;;:::i;:::-;;:::i;:::-;;4711:330;;;;;;:::i;:::-;;:::i;5107:179::-;;;;;;:::i;:::-;;:::i;2176:235::-;;;;;;:::i;:::-;;:::i;1914:205::-;;;;;;:::i;:::-;;:::i;:::-;;;2843:25:13;;;2831:2;2816:18;1914:205:2;2697:177:13;2635:102:2;;;:::i;4268:153::-;;;;;;:::i;:::-;;:::i;5352:320::-;;;;;;:::i;:::-;;:::i;2803:329::-;;;;;;:::i;:::-;;:::i;4487:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4607:25:2;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4487:162;1555:300;1657:4;-1:-1:-1;;;;;;1692:40:2;;-1:-1:-1;;;1692:40:2;;:104;;-1:-1:-1;;;;;;;1748:48:2;;-1:-1:-1;;;1748:48:2;1692:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:9;;;1812:36:2;1673:175;1555:300;-1:-1:-1;;1555:300:2:o;2473:98::-;2527:13;2559:5;2552:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:98;:::o;3984:217::-;4060:7;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:2;4079:73;;;;-1:-1:-1;;;4079:73:2;;5358:2:13;4079:73:2;;;5340:21:13;5397:2;5377:18;;;5370:30;5436:34;5416:18;;;5409:62;-1:-1:-1;;;5487:18:13;;;5480:42;5539:19;;4079:73:2;;;;;;;;;-1:-1:-1;4170:24:2;;;;:15;:24;;;;;;-1:-1:-1;;;;;4170:24:2;;3984:217::o;3522:401::-;3602:13;3618:23;3633:7;3618:14;:23::i;:::-;3602:39;;3665:5;-1:-1:-1;;;;;3659:11:2;:2;-1:-1:-1;;;;;3659:11:2;;;3651:57;;;;-1:-1:-1;;;3651:57:2;;5771:2:13;3651:57:2;;;5753:21:13;5810:2;5790:18;;;5783:30;5849:34;5829:18;;;5822:62;-1:-1:-1;;;5900:18:13;;;5893:31;5941:19;;3651:57:2;5569:397:13;3651:57:2;719:10:7;-1:-1:-1;;;;;3740:21:2;;;;:62;;-1:-1:-1;3765:37:2;3782:5;719:10:7;4487:162:2;:::i;3765:37::-;3719:165;;;;-1:-1:-1;;;3719:165:2;;6173:2:13;3719:165:2;;;6155:21:13;6212:2;6192:18;;;6185:30;6251:34;6231:18;;;6224:62;6322:26;6302:18;;;6295:54;6366:19;;3719:165:2;5971:420:13;3719:165:2;3895:21;3904:2;3908:7;3895:8;:21::i;:::-;3592:331;3522:401;;:::o;4711:330::-;4900:41;719:10:7;4933:7:2;4900:18;:41::i;:::-;4892:103;;;;-1:-1:-1;;;4892:103:2;;;;;;;:::i;:::-;5006:28;5016:4;5022:2;5026:7;5006:9;:28::i;5107:179::-;5240:39;5257:4;5263:2;5267:7;5240:39;;;;;;;;;;;;:16;:39::i;2176:235::-;2248:7;2283:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2283:16:2;2317:19;2309:73;;;;-1:-1:-1;;;2309:73:2;;7016:2:13;2309:73:2;;;6998:21:13;7055:2;7035:18;;;7028:30;7094:34;7074:18;;;7067:62;-1:-1:-1;;;7145:18:13;;;7138:39;7194:19;;2309:73:2;6814:405:13;1914:205:2;1986:7;-1:-1:-1;;;;;2013:19:2;;2005:74;;;;-1:-1:-1;;;2005:74:2;;7426:2:13;2005:74:2;;;7408:21:13;7465:2;7445:18;;;7438:30;7504:34;7484:18;;;7477:62;-1:-1:-1;;;7555:18:13;;;7548:40;7605:19;;2005:74:2;7224:406:13;2005:74:2;-1:-1:-1;;;;;;2096:16:2;;;;;:9;:16;;;;;;;1914:205::o;2635:102::-;2691:13;2723:7;2716:14;;;;;:::i;4268:153::-;4362:52;719:10:7;4395:8:2;4405;4362:18;:52::i;:::-;4268:153;;:::o;5352:320::-;5521:41;719:10:7;5554:7:2;5521:18;:41::i;:::-;5513:103;;;;-1:-1:-1;;;5513:103:2;;;;;;;:::i;:::-;5626:39;5640:4;5646:2;5650:7;5659:5;5626:13;:39::i;:::-;5352:320;;;;:::o;2803:329::-;7209:4;7232:16;;;:7;:16;;;;;;2876:13;;-1:-1:-1;;;;;7232:16:2;2901:76;;;;-1:-1:-1;;;2901:76:2;;7837:2:13;2901:76:2;;;7819:21:13;7876:2;7856:18;;;7849:30;7915:34;7895:18;;;7888:62;-1:-1:-1;;;7966:18:13;;;7959:45;8021:19;;2901:76:2;7635:411:13;2901:76:2;2988:21;3012:10;3449:9;;;;;;;;;-1:-1:-1;3449:9:2;;;3373:92;3012:10;2988:34;;3063:1;3045:7;3039:21;:25;:86;;;;;;;;;;;;;;;;;3091:7;3100:18;:7;:16;:18::i;:::-;3074:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3039:86;3032:93;2803:329;-1:-1:-1;;;2803:329:2:o;10995:171::-;11069:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11069:29:2;-1:-1:-1;;;;;11069:29:2;;;;;;;;:24;;11122:23;11069:24;11122:14;:23::i;:::-;-1:-1:-1;;;;;11113:46:2;;;;;;;;;;;10995:171;;:::o;7427:344::-;7520:4;7232:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7232:16:2;7536:73;;;;-1:-1:-1;;;7536:73:2;;8728:2:13;7536:73:2;;;8710:21:13;8767:2;8747:18;;;8740:30;8806:34;8786:18;;;8779:62;-1:-1:-1;;;8857:18:13;;;8850:42;8909:19;;7536:73:2;8526:408:13;7536:73:2;7619:13;7635:23;7650:7;7635:14;:23::i;:::-;7619:39;;7687:5;-1:-1:-1;;;;;7676:16:2;:7;-1:-1:-1;;;;;7676:16:2;;:51;;;;7720:7;-1:-1:-1;;;;;7696:31:2;:20;7708:7;7696:11;:20::i;:::-;-1:-1:-1;;;;;7696:31:2;;7676:51;:87;;;-1:-1:-1;;;;;;4607:25:2;;;4584:4;4607:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7731:32;7668:96;7427:344;-1:-1:-1;;;;7427:344:2:o;10324:560::-;10478:4;-1:-1:-1;;;;;10451:31:2;:23;10466:7;10451:14;:23::i;:::-;-1:-1:-1;;;;;10451:31:2;;10443:85;;;;-1:-1:-1;;;10443:85:2;;9141:2:13;10443:85:2;;;9123:21:13;9180:2;9160:18;;;9153:30;9219:34;9199:18;;;9192:62;-1:-1:-1;;;9270:18:13;;;9263:39;9319:19;;10443:85:2;8939:405:13;10443:85:2;-1:-1:-1;;;;;10546:16:2;;10538:65;;;;-1:-1:-1;;;10538:65:2;;9551:2:13;10538:65:2;;;9533:21:13;9590:2;9570:18;;;9563:30;9629:34;9609:18;;;9602:62;-1:-1:-1;;;9680:18:13;;;9673:34;9724:19;;10538:65:2;9349:400:13;10538:65:2;10715:29;10732:1;10736:7;10715:8;:29::i;:::-;-1:-1:-1;;;;;10755:15:2;;;;;;:9;:15;;;;;:20;;10774:1;;10755:15;:20;;10774:1;;10755:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10785:13:2;;;;;;:9;:13;;;;;:18;;10802:1;;10785:13;:18;;10802:1;;10785:18;:::i;:::-;;;;-1:-1:-1;;10813:16:2;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10813:21:2;-1:-1:-1;;;;;10813:21:2;;;;;;;;;10850:27;;10813:16;;10850:27;;;;;;;10324:560;;;:::o;11301:307::-;11451:8;-1:-1:-1;;;;;11442:17:2;:5;-1:-1:-1;;;;;11442:17:2;;;11434:55;;;;-1:-1:-1;;;11434:55:2;;10351:2:13;11434:55:2;;;10333:21:13;10390:2;10370:18;;;10363:30;10429:27;10409:18;;;10402:55;10474:18;;11434:55:2;10149:349:13;11434:55:2;-1:-1:-1;;;;;11499:25:2;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11499:46:2;;;;;;;;;;11560:41;;540::13;;;11560::2;;513:18:13;11560:41:2;;;;;;;11301:307;;;:::o;6534:::-;6685:28;6695:4;6701:2;6705:7;6685:9;:28::i;:::-;6731:48;6754:4;6760:2;6764:7;6773:5;6731:22;:48::i;:::-;6723:111;;;;-1:-1:-1;;;6723:111:2;;;;;;;:::i;328:703:8:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:8;;;;;;;;;;;;-1:-1:-1;;;627:10:8;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:8;;-1:-1:-1;773:2:8;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:8;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:8;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:8;;;;;;;;-1:-1:-1;972:11:8;981:2;972:11;;:::i;:::-;;;844:150;;12161:778:2;12311:4;-1:-1:-1;;;;;12331:13:2;;1087:20:6;1133:8;12327:606:2;;12366:72;;-1:-1:-1;;;12366:72:2;;-1:-1:-1;;;;;12366:36:2;;;;;:72;;719:10:7;;12417:4:2;;12423:7;;12432:5;;12366:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12366:72:2;;;;;;;;-1:-1:-1;;12366:72:2;;;;;;;;;;;;:::i;:::-;;;12362:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12605:13:2;;12601:266;;12647:60;;-1:-1:-1;;;12647:60:2;;;;;;;:::i;12601:266::-;12819:6;12813:13;12804:6;12800:2;12796:15;12789:38;12362:519;-1:-1:-1;;;;;;12488:51:2;-1:-1:-1;;;12488:51:2;;-1:-1:-1;12481:58:2;;12327:606;-1:-1:-1;12918:4:2;12161:778;;;;;;:::o;14:131:13:-;-1:-1:-1;;;;;;88:32:13;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:13;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:13;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:13:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:13;;1343:180;-1:-1:-1;1343:180:13:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:13;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:13:o;2173:328::-;2250:6;2258;2266;2319:2;2307:9;2298:7;2294:23;2290:32;2287:52;;;2335:1;2332;2325:12;2287:52;2358:29;2377:9;2358:29;:::i;:::-;2348:39;;2406:38;2440:2;2429:9;2425:18;2406:38;:::i;:::-;2396:48;;2491:2;2480:9;2476:18;2463:32;2453:42;;2173:328;;;;;:::o;2506:186::-;2565:6;2618:2;2606:9;2597:7;2593:23;2589:32;2586:52;;;2634:1;2631;2624:12;2586:52;2657:29;2676:9;2657:29;:::i;2879:347::-;2944:6;2952;3005:2;2993:9;2984:7;2980:23;2976:32;2973:52;;;3021:1;3018;3011:12;2973:52;3044:29;3063:9;3044:29;:::i;:::-;3034:39;;3123:2;3112:9;3108:18;3095:32;3170:5;3163:13;3156:21;3149:5;3146:32;3136:60;;3192:1;3189;3182:12;3136:60;3215:5;3205:15;;;2879:347;;;;;:::o;3231:127::-;3292:10;3287:3;3283:20;3280:1;3273:31;3323:4;3320:1;3313:15;3347:4;3344:1;3337:15;3363:1138;3458:6;3466;3474;3482;3535:3;3523:9;3514:7;3510:23;3506:33;3503:53;;;3552:1;3549;3542:12;3503:53;3575:29;3594:9;3575:29;:::i;:::-;3565:39;;3623:38;3657:2;3646:9;3642:18;3623:38;:::i;:::-;3613:48;;3708:2;3697:9;3693:18;3680:32;3670:42;;3763:2;3752:9;3748:18;3735:32;3786:18;3827:2;3819:6;3816:14;3813:34;;;3843:1;3840;3833:12;3813:34;3881:6;3870:9;3866:22;3856:32;;3926:7;3919:4;3915:2;3911:13;3907:27;3897:55;;3948:1;3945;3938:12;3897:55;3984:2;3971:16;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:13;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4346:7;4341:2;4336;4332;4328:11;4324:20;4321:33;4318:53;;;4367:1;4364;4357:12;4318:53;4423:2;4418;4414;4410:11;4405:2;4397:6;4393:15;4380:46;4468:1;4463:2;4458;4450:6;4446:15;4442:24;4435:35;4489:6;4479:16;;;;;;;3363:1138;;;;;;;:::o;4506:260::-;4574:6;4582;4635:2;4623:9;4614:7;4610:23;4606:32;4603:52;;;4651:1;4648;4641:12;4603:52;4674:29;4693:9;4674:29;:::i;:::-;4664:39;;4722:38;4756:2;4745:9;4741:18;4722:38;:::i;:::-;4712:48;;4506:260;;;;;:::o;4771:380::-;4850:1;4846:12;;;;4893;;;4914:61;;4968:4;4960:6;4956:17;4946:27;;4914:61;5021:2;5013:6;5010:14;4990:18;4987:38;4984:161;;;5067:10;5062:3;5058:20;5055:1;5048:31;5102:4;5099:1;5092:15;5130:4;5127:1;5120:15;4984:161;;4771:380;;;:::o;6396:413::-;6598:2;6580:21;;;6637:2;6617:18;;;6610:30;6676:34;6671:2;6656:18;;6649:62;-1:-1:-1;;;6742:2:13;6727:18;;6720:47;6799:3;6784:19;;6396:413::o;8051:470::-;8230:3;8268:6;8262:13;8284:53;8330:6;8325:3;8318:4;8310:6;8306:17;8284:53;:::i;:::-;8400:13;;8359:16;;;;8422:57;8400:13;8359:16;8456:4;8444:17;;8422:57;:::i;:::-;8495:20;;8051:470;-1:-1:-1;;;;8051:470:13:o;9754:127::-;9815:10;9810:3;9806:20;9803:1;9796:31;9846:4;9843:1;9836:15;9870:4;9867:1;9860:15;9886:125;9926:4;9954:1;9951;9948:8;9945:34;;;9959:18;;:::i;:::-;-1:-1:-1;9996:9:13;;9886:125::o;10016:128::-;10056:3;10087:1;10083:6;10080:1;10077:13;10074:39;;;10093:18;;:::i;:::-;-1:-1:-1;10129:9:13;;10016:128::o;10503:414::-;10705:2;10687:21;;;10744:2;10724:18;;;10717:30;10783:34;10778:2;10763:18;;10756:62;-1:-1:-1;;;10849:2:13;10834:18;;10827:48;10907:3;10892:19;;10503:414::o;10922:135::-;10961:3;-1:-1:-1;;10982:17:13;;10979:43;;;11002:18;;:::i;:::-;-1:-1:-1;11049:1:13;11038:13;;10922:135::o;11062:127::-;11123:10;11118:3;11114:20;11111:1;11104:31;11154:4;11151:1;11144:15;11178:4;11175:1;11168:15;11194:120;11234:1;11260;11250:35;;11265:18;;:::i;:::-;-1:-1:-1;11299:9:13;;11194:120::o;11319:112::-;11351:1;11377;11367:35;;11382:18;;:::i;:::-;-1:-1:-1;11416:9:13;;11319:112::o;11436:127::-;11497:10;11492:3;11488:20;11485:1;11478:31;11528:4;11525:1;11518:15;11552:4;11549:1;11542:15;11568:489;-1:-1:-1;;;;;11837:15:13;;;11819:34;;11889:15;;11884:2;11869:18;;11862:43;11936:2;11921:18;;11914:34;;;11984:3;11979:2;11964:18;;11957:31;;;11762:4;;12005:46;;12031:19;;12023:6;12005:46;:::i;:::-;11997:54;11568:489;-1:-1:-1;;;;;;11568:489:13:o;12062:249::-;12131:6;12184:2;12172:9;12163:7;12159:23;12155:32;12152:52;;;12200:1;12197;12190:12;12152:52;12232:9;12226:16;12251:30;12275:5;12251:30;:::i",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    613,
    13619
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xDD5 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xE1D JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xE47 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE83 JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x606 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE9E JUMP JUMPDEST PUSH2 0x615 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEF0 JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE8 JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xFCC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFFF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xFFF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP3 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x43B JUMPI POP PUSH2 0x43B DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 PUSH2 0x744 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4C6 CALLER DUP3 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x4E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x624 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH2 0x620 CALLER DUP4 DUP4 PUSH2 0xA49 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x62E CALLER DUP4 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH2 0x656 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB18 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F2 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x73D JUMP JUMPDEST DUP1 PUSH2 0x71C DUP5 PUSH2 0xB4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x72D SWAP3 SWAP2 SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x779 DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x836 DUP4 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x871 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x866 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x8A1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8BC DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x924 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x986 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x991 PUSH1 0x0 DUP3 PUSH2 0x744 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9BA SWAP1 DUP5 SWAP1 PUSH2 0x10D0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9E8 SWAP1 DUP5 SWAP1 PUSH2 0x10E7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xAAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB23 DUP5 DUP5 DUP5 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0xB2F DUP5 DUP5 DUP5 DUP5 PUSH2 0xC49 JUMP JUMPDEST PUSH2 0x656 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x10FF JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xB6F JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB99 JUMPI DUP1 PUSH2 0xB83 DUP2 PUSH2 0x1151 JUMP JUMPDEST SWAP2 POP PUSH2 0xB92 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1182 JUMP JUMPDEST SWAP2 POP PUSH2 0xB73 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB4 JUMPI PUSH2 0xBB4 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBDE JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x8A1 JUMPI PUSH2 0xBF3 PUSH1 0x1 DUP4 PUSH2 0x10D0 JUMP JUMPDEST SWAP2 POP PUSH2 0xC00 PUSH1 0xA DUP7 PUSH2 0x1196 JUMP JUMPDEST PUSH2 0xC0B SWAP1 PUSH1 0x30 PUSH2 0x10E7 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC20 JUMPI PUSH2 0xC20 PUSH2 0x11AA JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC42 PUSH1 0xA DUP7 PUSH2 0x1182 JUMP JUMPDEST SWAP5 POP PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD3C JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC8D SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCC8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCC5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11FD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD22 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCF6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xD1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x10FF JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x8A1 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x73D DUP2 PUSH2 0xD47 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD98 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD80 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x656 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xDC1 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD7D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x73D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDA9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE18 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE39 DUP4 PUSH2 0xE01 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE65 DUP5 PUSH2 0xE01 JUMP JUMPDEST SWAP3 POP PUSH2 0xE73 PUSH1 0x20 DUP6 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73D DUP3 PUSH2 0xE01 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEBA DUP4 PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xECF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF0F DUP6 PUSH2 0xE01 JUMP JUMPDEST SWAP4 POP PUSH2 0xF1D PUSH1 0x20 DUP7 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF41 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF67 JUMPI PUSH2 0xF67 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF8F JUMPI PUSH2 0xF8F PUSH2 0xEDA JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xFA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFE8 DUP4 PUSH2 0xE01 JUMP JUMPDEST SWAP2 POP PUSH2 0xFF6 PUSH1 0x20 DUP5 ADD PUSH2 0xE01 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1013 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1034 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x109D DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD7D JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x10B1 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD7D JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x10E2 JUMPI PUSH2 0x10E2 PUSH2 0x10BA JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10FA JUMPI PUSH2 0x10FA PUSH2 0x10BA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1165 JUMPI PUSH2 0x1165 PUSH2 0x10BA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1191 JUMPI PUSH2 0x1191 PUSH2 0x116C JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11A5 JUMPI PUSH2 0x11A5 PUSH2 0x116C JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11F3 SWAP1 DUP4 ADD DUP5 PUSH2 0xDA9 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x73D DUP2 PUSH2 0xD47 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 PUSH23 0x2C16F3BB894F8E563DF13AF8C6C7FA54A467205424D310 BLOCKHASH LOG3 0xBE SWAP14 SAR 0xF8 LOG3 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        613,
        13619
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "6": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "8": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "12": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "2"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "REVERT",
      "path": "2"
    },
    "16": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "17": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "POP",
      "path": "2"
    },
    "18": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "21": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "LT",
      "path": "2"
    },
    "22": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "26": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "CALLDATALOAD",
      "path": "2"
    },
    "29": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "SHR",
      "path": "2"
    },
    "32": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "2"
    },
    "33": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "GT",
      "path": "2"
    },
    "39": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "43": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "2"
    },
    "44": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "GT",
      "path": "2"
    },
    "50": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "54": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "2"
    },
    "55": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "2"
    },
    "61": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B3"
    },
    "64": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "65": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "2"
    },
    "66": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "2"
    },
    "72": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C6"
    },
    "75": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "76": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "2"
    },
    "77": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "2"
    },
    "83": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D9"
    },
    "86": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "87": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "2"
    },
    "88": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "2"
    },
    "94": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1EC"
    },
    "97": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "98": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "2"
    },
    "101": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "REVERT",
      "path": "2"
    },
    "102": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "103": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "2"
    },
    "104": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6352211E"
    },
    "109": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "2"
    },
    "110": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x177"
    },
    "113": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "114": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "2"
    },
    "115": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "2"
    },
    "121": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18A"
    },
    "124": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "125": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "2"
    },
    "126": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "2"
    },
    "132": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AB"
    },
    "135": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "136": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "2"
    },
    "139": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "REVERT",
      "path": "2"
    },
    "140": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "141": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "2"
    },
    "142": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x1FFC9A7"
    },
    "147": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "2"
    },
    "148": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "152": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "2"
    },
    "153": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x6FDDE03"
    },
    "158": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "2"
    },
    "159": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFC"
    },
    "162": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "163": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "2"
    },
    "164": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x81812FC"
    },
    "169": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "2"
    },
    "170": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x111"
    },
    "173": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "174": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "2"
    },
    "175": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x95EA7B3"
    },
    "180": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "2"
    },
    "181": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13C"
    },
    "184": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "185": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "2"
    },
    "186": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "2"
    },
    "192": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x151"
    },
    "195": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "196": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "2"
    },
    "197": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x42842E0E"
    },
    "202": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "EQ",
      "path": "2"
    },
    "203": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x164"
    },
    "206": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "207": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "208": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "DUP1",
      "path": "2"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        613,
        13619
      ],
      "op": "REVERT",
      "path": "2"
    },
    "212": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "213": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE7"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE2"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD60"
    },
    "225": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMP",
      "path": "2"
    },
    "226": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x228"
    },
    "230": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMP",
      "path": "2"
    },
    "231": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "232": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "234": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "235": {
      "op": "SWAP1"
    },
    "236": {
      "op": "ISZERO"
    },
    "237": {
      "op": "ISZERO"
    },
    "238": {
      "op": "DUP2"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "244": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "247": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "DUP1",
      "path": "2"
    },
    "248": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SUB",
      "path": "2"
    },
    "250": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "251": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "RETURN",
      "path": "2"
    },
    "252": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "253": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x104"
    },
    "256": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27A"
    },
    "259": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "2"
    },
    "260": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "261": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "264": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF3"
    },
    "267": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "268": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "269": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDD5"
    },
    "272": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "2"
    },
    "273": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "274": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x124"
    },
    "277": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11F"
    },
    "280": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "281": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "283": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDE8"
    },
    "286": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "2"
    },
    "287": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "288": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30C"
    },
    "291": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "2"
    },
    "292": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "293": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "302": {
      "op": "SHL"
    },
    "303": {
      "op": "SUB"
    },
    "304": {
      "op": "SWAP1"
    },
    "305": {
      "op": "SWAP2"
    },
    "306": {
      "op": "AND"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF3"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "317": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14F"
    },
    "320": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14A"
    },
    "323": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "324": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "326": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE1D"
    },
    "329": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "2"
    },
    "330": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "331": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3A6"
    },
    "334": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "2"
    },
    "335": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "336": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "STOP",
      "path": "2"
    },
    "337": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "338": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14F"
    },
    "341": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15F"
    },
    "344": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "345": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE47"
    },
    "350": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMP",
      "path": "2"
    },
    "351": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "352": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4BC"
    },
    "355": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMP",
      "path": "2"
    },
    "356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "357": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14F"
    },
    "360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x172"
    },
    "363": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "364": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE47"
    },
    "369": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMP",
      "path": "2"
    },
    "370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "371": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4ED"
    },
    "374": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMP",
      "path": "2"
    },
    "375": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "376": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x124"
    },
    "379": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x185"
    },
    "382": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "383": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "385": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDE8"
    },
    "388": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMP",
      "path": "2"
    },
    "389": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "390": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x508"
    },
    "393": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMP",
      "path": "2"
    },
    "394": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "395": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19D"
    },
    "398": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x198"
    },
    "401": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "402": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE83"
    },
    "407": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "2"
    },
    "408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "409": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x57F"
    },
    "412": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "2"
    },
    "413": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "414": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "416": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "417": {
      "op": "SWAP1"
    },
    "418": {
      "op": "DUP2"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "422": {
      "op": "ADD"
    },
    "423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF3"
    },
    "426": {
      "op": "JUMP"
    },
    "427": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "428": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x104"
    },
    "431": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x606"
    },
    "434": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMP",
      "path": "2"
    },
    "435": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "436": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14F"
    },
    "439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C1"
    },
    "442": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE9E"
    },
    "448": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "449": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "450": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x615"
    },
    "453": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "455": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14F"
    },
    "458": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D4"
    },
    "461": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "462": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "464": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEF0"
    },
    "467": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "2"
    },
    "468": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "469": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x624"
    },
    "472": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "2"
    },
    "473": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "474": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x104"
    },
    "477": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E7"
    },
    "480": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "481": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "483": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDE8"
    },
    "486": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2803,
        3132
      ],
      "op": "JUMP",
      "path": "2"
    },
    "487": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "488": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x65C"
    },
    "491": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2803,
        3132
      ],
      "op": "JUMP",
      "path": "2"
    },
    "492": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "493": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE7"
    },
    "496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FA"
    },
    "499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "500": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFCC"
    },
    "505": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "2"
    },
    "506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "513": {
      "op": "SHL"
    },
    "514": {
      "op": "SUB"
    },
    "515": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 0
    },
    "516": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP3",
      "path": "2"
    },
    "517": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "AND",
      "path": "2"
    },
    "518": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4584,
        4588
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "520": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "521": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "2"
    },
    "522": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "523": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4625
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "525": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "527": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "528": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "2"
    },
    "529": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "530": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "532": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP1",
      "path": "2"
    },
    "533": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP4",
      "path": "2"
    },
    "534": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "535": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "536": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "537": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "538": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "2"
    },
    "539": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "DUP3",
      "path": "2"
    },
    "540": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "541": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "542": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "543": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "544": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "545": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "546": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "547": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "549": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "2"
    },
    "550": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "551": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "2"
    },
    "552": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "553": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1657,
        1661
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "559": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "561": {
      "op": "SHL"
    },
    "562": {
      "op": "SUB"
    },
    "563": {
      "op": "NOT"
    },
    "564": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 1
    },
    "565": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "AND",
      "path": "2"
    },
    "566": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "573": {
      "op": "SHL"
    },
    "574": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "EQ",
      "path": "2"
    },
    "575": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1732
      ],
      "op": "DUP1",
      "path": "2"
    },
    "576": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x259"
    },
    "579": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "580": {
      "op": "POP"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "585": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "587": {
      "op": "SHL"
    },
    "588": {
      "op": "SUB"
    },
    "589": {
      "op": "NOT"
    },
    "590": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "DUP3",
      "path": "2"
    },
    "591": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "AND",
      "path": "2"
    },
    "592": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "597": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "599": {
      "op": "SHL"
    },
    "600": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1748,
        1796
      ],
      "op": "EQ",
      "path": "2"
    },
    "601": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1796
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "602": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "DUP1",
      "path": "2"
    },
    "603": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x274"
    },
    "606": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1692,
        1848
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "607": {
      "op": "POP"
    },
    "608": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "622": {
      "op": "SHL"
    },
    "623": {
      "op": "SUB"
    },
    "624": {
      "op": "NOT"
    },
    "625": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "9",
      "statement": 2
    },
    "626": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "9"
    },
    "627": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "9"
    },
    "628": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1812,
        1848
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "629": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1673,
        1848
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "630": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1555,
        1855
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "631": {
      "op": "POP"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1555,
        1855
      ],
      "op": "JUMP",
      "path": "2"
    },
    "634": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "635": {
      "fn": "ERC721.name",
      "offset": [
        2527,
        2540
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "637": {
      "fn": "ERC721.name",
      "offset": [
        2559,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 3,
      "value": "0x0"
    },
    "639": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "640": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "641": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x289"
    },
    "644": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "645": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFF"
    },
    "648": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "2"
    },
    "649": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "650": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "651": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "653": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "654": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "656": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "657": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "658": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DIV",
      "path": "2"
    },
    "659": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MUL",
      "path": "2"
    },
    "660": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "662": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "663": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "665": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "666": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "667": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "2"
    },
    "668": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "669": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "671": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "672": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "673": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "674": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "675": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "676": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "2"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "2"
    },
    "678": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "679": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "681": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "682": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "2"
    },
    "683": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "684": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "685": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2B5"
    },
    "688": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "689": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFF"
    },
    "692": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "2"
    },
    "693": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "694": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "695": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "696": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x302"
    },
    "699": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "700": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "701": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "703": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "LT",
      "path": "2"
    },
    "704": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D7"
    },
    "707": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "708": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "711": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "712": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "2"
    },
    "713": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "714": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DIV",
      "path": "2"
    },
    "715": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MUL",
      "path": "2"
    },
    "716": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "2"
    },
    "717": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "718": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "719": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "721": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "722": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "723": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x302"
    },
    "726": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMP",
      "path": "2"
    },
    "727": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "728": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "2"
    },
    "729": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "730": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "731": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "732": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "734": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "735": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "737": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "739": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "740": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "741": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "742": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "2"
    },
    "743": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "744": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP2",
      "path": "2"
    },
    "745": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "746": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "747": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "749": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "750": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "751": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "753": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "754": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP1",
      "path": "2"
    },
    "755": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP4",
      "path": "2"
    },
    "756": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "GT",
      "path": "2"
    },
    "757": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E5"
    },
    "760": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "761": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "2"
    },
    "762": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "763": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SUB",
      "path": "2"
    },
    "764": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "766": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "AND",
      "path": "2"
    },
    "767": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "DUP3",
      "path": "2"
    },
    "768": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "ADD",
      "path": "2"
    },
    "769": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "770": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "771": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "2"
    },
    "772": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "2"
    },
    "773": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "2"
    },
    "774": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "2"
    },
    "775": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "2"
    },
    "776": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "777": {
      "fn": "ERC721.name",
      "offset": [
        2552,
        2564
      ],
      "op": "POP",
      "path": "2"
    },
    "778": {
      "fn": "ERC721.name",
      "offset": [
        2473,
        2571
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "779": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2473,
        2571
      ],
      "op": "JUMP",
      "path": "2"
    },
    "780": {
      "fn": "ERC721.getApproved",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "781": {
      "fn": "ERC721.getApproved",
      "offset": [
        4060,
        4067
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "783": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 4
    },
    "784": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "785": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "786": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "788": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "790": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "791": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "793": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "794": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "795": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "802": {
      "op": "SHL"
    },
    "803": {
      "op": "SUB"
    },
    "804": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "2"
    },
    "805": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 5,
      "value": "0x38A"
    },
    "808": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "809": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "811": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "812": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "816": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "818": {
      "op": "SHL"
    },
    "819": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP2",
      "path": "2"
    },
    "820": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "823": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "825": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP3",
      "path": "2"
    },
    "826": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "ADD",
      "path": "2"
    },
    "827": {
      "op": "MSTORE"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "832": {
      "op": "DUP3"
    },
    "833": {
      "op": "ADD"
    },
    "834": {
      "op": "MSTORE"
    },
    "835": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "868": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "870": {
      "op": "DUP3"
    },
    "871": {
      "op": "ADD"
    },
    "872": {
      "op": "MSTORE"
    },
    "873": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "886": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "888": {
      "op": "SHL"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "891": {
      "op": "DUP3"
    },
    "892": {
      "op": "ADD"
    },
    "893": {
      "op": "MSTORE"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "896": {
      "op": "ADD"
    },
    "897": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "898": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "900": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "901": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "DUP1",
      "path": "2"
    },
    "902": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "903": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SUB",
      "path": "2"
    },
    "904": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "905": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "906": {
      "fn": "ERC721.getApproved",
      "offset": [
        4079,
        4152
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "907": {
      "op": "POP"
    },
    "908": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x0"
    },
    "910": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "911": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "DUP2",
      "path": "2"
    },
    "912": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "913": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4185
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "915": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "917": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "918": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "920": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "921": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "922": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "929": {
      "op": "SHL"
    },
    "930": {
      "op": "SUB"
    },
    "931": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "AND",
      "path": "2"
    },
    "932": {
      "fn": "ERC721.getApproved",
      "offset": [
        4170,
        4194
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "933": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3984,
        4201
      ],
      "op": "JUMP",
      "path": "2"
    },
    "934": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "935": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3615
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "937": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3641
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B1"
    },
    "940": {
      "fn": "ERC721.approve",
      "offset": [
        3633,
        3640
      ],
      "op": "DUP3",
      "path": "2"
    },
    "941": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3632
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x508"
    },
    "944": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3618,
        3641
      ],
      "op": "JUMP",
      "path": "2"
    },
    "945": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3641
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "946": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3641
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "947": {
      "fn": "ERC721.approve",
      "offset": [
        3602,
        3641
      ],
      "op": "POP",
      "path": "2"
    },
    "948": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3670
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 7
    },
    "949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "955": {
      "op": "SHL"
    },
    "956": {
      "op": "SUB"
    },
    "957": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "AND",
      "path": "2"
    },
    "958": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3661
      ],
      "op": "DUP4",
      "path": "2"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "965": {
      "op": "SHL"
    },
    "966": {
      "op": "SUB"
    },
    "967": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "AND",
      "path": "2"
    },
    "968": {
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "EQ",
      "path": "2"
    },
    "969": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3659,
        3670
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "970": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x41F"
    },
    "973": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "974": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "976": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "977": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "981": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "983": {
      "op": "SHL"
    },
    "984": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "DUP2",
      "path": "2"
    },
    "985": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "988": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "990": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "DUP3",
      "path": "2"
    },
    "991": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "ADD",
      "path": "2"
    },
    "992": {
      "op": "MSTORE"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "997": {
      "op": "DUP3"
    },
    "998": {
      "op": "ADD"
    },
    "999": {
      "op": "MSTORE"
    },
    "1000": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1035": {
      "op": "DUP3"
    },
    "1036": {
      "op": "ADD"
    },
    "1037": {
      "op": "MSTORE"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1042": {
      "op": "SHL"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1045": {
      "op": "DUP3"
    },
    "1046": {
      "op": "ADD"
    },
    "1047": {
      "op": "MSTORE"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1050": {
      "op": "ADD"
    },
    "1051": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "1054": {
      "op": "JUMP"
    },
    "1055": {
      "fn": "ERC721.approve",
      "offset": [
        3651,
        3708
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1056": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7",
      "statement": 8
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1063": {
      "op": "SHL"
    },
    "1064": {
      "op": "SUB"
    },
    "1065": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 9
    },
    "1066": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "AND",
      "path": "2"
    },
    "1067": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "EQ",
      "path": "2"
    },
    "1068": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3761
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1069": {
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43B"
    },
    "1072": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3740,
        3802
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1073": {
      "op": "POP"
    },
    "1074": {
      "fn": "ERC721.approve",
      "offset": [
        3765,
        3802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x43B"
    },
    "1077": {
      "fn": "ERC721.approve",
      "offset": [
        3782,
        3787
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1078": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1079": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4487,
        4649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FA"
    },
    "1082": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4487,
        4649
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1083": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        3765,
        3802
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1084": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4AD"
    },
    "1087": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1088": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1090": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1091": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1097": {
      "op": "SHL"
    },
    "1098": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1099": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1102": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1104": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1105": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "ADD",
      "path": "2"
    },
    "1106": {
      "op": "MSTORE"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1111": {
      "op": "DUP3"
    },
    "1112": {
      "op": "ADD"
    },
    "1113": {
      "op": "MSTORE"
    },
    "1114": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1149": {
      "op": "DUP3"
    },
    "1150": {
      "op": "ADD"
    },
    "1151": {
      "op": "MSTORE"
    },
    "1152": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1187": {
      "op": "DUP3"
    },
    "1188": {
      "op": "ADD"
    },
    "1189": {
      "op": "MSTORE"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1192": {
      "op": "ADD"
    },
    "1193": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "1196": {
      "op": "JUMP"
    },
    "1197": {
      "fn": "ERC721.approve",
      "offset": [
        3719,
        3884
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1198": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3916
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 10,
      "value": "0x4B7"
    },
    "1201": {
      "fn": "ERC721.approve",
      "offset": [
        3904,
        3906
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1202": {
      "fn": "ERC721.approve",
      "offset": [
        3908,
        3915
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1203": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3903
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x744"
    },
    "1206": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3895,
        3916
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1207": {
      "fn": "ERC721.approve",
      "offset": [
        3895,
        3916
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1208": {
      "fn": "ERC721.approve",
      "offset": [
        3592,
        3923
      ],
      "op": "POP",
      "path": "2"
    },
    "1209": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "POP",
      "path": "2"
    },
    "1210": {
      "fn": "ERC721.approve",
      "offset": [
        3522,
        3923
      ],
      "op": "POP",
      "path": "2"
    },
    "1211": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3522,
        3923
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1212": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4711,
        5041
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1213": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4941
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 11,
      "value": "0x4C6"
    },
    "1216": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1217": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4933,
        4940
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1218": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4918
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7B2"
    },
    "1221": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4900,
        4941
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1222": {
      "branch": 53,
      "fn": "ERC721.transferFrom",
      "offset": [
        4900,
        4941
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1223": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E2"
    },
    "1226": {
      "branch": 53,
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1227": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1229": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1230": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1236": {
      "op": "SHL"
    },
    "1237": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1238": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1239": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1241": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "ADD",
      "path": "2"
    },
    "1242": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "1245": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1246": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x103A"
    },
    "1249": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1250": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4892,
        4995
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1251": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5006,
        5034
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 12,
      "value": "0x4B7"
    },
    "1254": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5016,
        5020
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1255": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5022,
        5024
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1256": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5026,
        5033
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1257": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5006,
        5015
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A9"
    },
    "1260": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5006,
        5034
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1261": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5107,
        5286
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1262": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 13,
      "value": "0x4B7"
    },
    "1265": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5257,
        5261
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1266": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5263,
        5265
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1267": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5267,
        5274
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1268": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1270": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1271": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1272": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1274": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "ADD",
      "path": "2"
    },
    "1275": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1277": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1278": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1279": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1281": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1282": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1283": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5279
      ],
      "op": "POP",
      "path": "2"
    },
    "1284": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5240,
        5256
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x624"
    },
    "1287": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5240,
        5279
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1288": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2176,
        2411
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1289": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2248,
        2255
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1291": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1292": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1293": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1294": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1296": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1298": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1299": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1301": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1302": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1303": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1310": {
      "op": "SHL"
    },
    "1311": {
      "op": "SUB"
    },
    "1312": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2283,
        2299
      ],
      "op": "AND",
      "path": "2"
    },
    "1313": {
      "branch": 54,
      "fn": "ERC721.ownerOf",
      "offset": [
        2317,
        2336
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 14
    },
    "1314": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x274"
    },
    "1317": {
      "branch": 54,
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1318": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1320": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1321": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1327": {
      "op": "SHL"
    },
    "1328": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1329": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1332": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1334": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1335": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "ADD",
      "path": "2"
    },
    "1336": {
      "op": "MSTORE"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1341": {
      "op": "DUP3"
    },
    "1342": {
      "op": "ADD"
    },
    "1343": {
      "op": "MSTORE"
    },
    "1344": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1379": {
      "op": "DUP3"
    },
    "1380": {
      "op": "ADD"
    },
    "1381": {
      "op": "MSTORE"
    },
    "1382": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1394": {
      "op": "SHL"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1397": {
      "op": "DUP3"
    },
    "1398": {
      "op": "ADD"
    },
    "1399": {
      "op": "MSTORE"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1402": {
      "op": "ADD"
    },
    "1403": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2309,
        2382
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "1406": {
      "op": "JUMP"
    },
    "1407": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1986,
        1993
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1416": {
      "op": "SHL"
    },
    "1417": {
      "op": "SUB"
    },
    "1418": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2013,
        2032
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 15
    },
    "1419": {
      "branch": 55,
      "fn": "ERC721.balanceOf",
      "offset": [
        2013,
        2032
      ],
      "op": "AND",
      "path": "2"
    },
    "1420": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5EA"
    },
    "1423": {
      "branch": 55,
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1424": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1426": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1427": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1433": {
      "op": "SHL"
    },
    "1434": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1435": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1438": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1440": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1441": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "ADD",
      "path": "2"
    },
    "1442": {
      "op": "MSTORE"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1447": {
      "op": "DUP3"
    },
    "1448": {
      "op": "ADD"
    },
    "1449": {
      "op": "MSTORE"
    },
    "1450": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1485": {
      "op": "DUP3"
    },
    "1486": {
      "op": "ADD"
    },
    "1487": {
      "op": "MSTORE"
    },
    "1488": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1501": {
      "op": "SHL"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1504": {
      "op": "DUP3"
    },
    "1505": {
      "op": "ADD"
    },
    "1506": {
      "op": "MSTORE"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1509": {
      "op": "ADD"
    },
    "1510": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "1513": {
      "op": "JUMP"
    },
    "1514": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2005,
        2079
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1515": {
      "op": "POP"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1522": {
      "op": "SHL"
    },
    "1523": {
      "op": "SUB"
    },
    "1524": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "AND",
      "path": "2",
      "statement": 16
    },
    "1525": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1527": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1528": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1529": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1530": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2105
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "1532": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1534": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1535": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1537": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1538": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1539": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1540": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1541": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1914,
        2119
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1542": {
      "fn": "ERC721.symbol",
      "offset": [
        2635,
        2737
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1543": {
      "fn": "ERC721.symbol",
      "offset": [
        2691,
        2704
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1545": {
      "fn": "ERC721.symbol",
      "offset": [
        2723,
        2730
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 17,
      "value": "0x1"
    },
    "1547": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1548": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1549": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x289"
    },
    "1552": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1553": {
      "fn": "ERC721.symbol",
      "offset": [
        2716,
        2730
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xFFF"
    },
    "1556": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2716,
        2730
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1557": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1558": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4362,
        4414
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 18,
      "value": "0x620"
    },
    "1561": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1562": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4395,
        4403
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1563": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4405,
        4413
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1564": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4362,
        4380
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA49"
    },
    "1567": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4362,
        4414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1568": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4362,
        4414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1569": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "POP",
      "path": "2"
    },
    "1570": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4268,
        4421
      ],
      "op": "POP",
      "path": "2"
    },
    "1571": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4268,
        4421
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1572": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1573": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5562
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 19,
      "value": "0x62E"
    },
    "1576": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1577": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5554,
        5561
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1578": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7B2"
    },
    "1581": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5521,
        5562
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1582": {
      "branch": 56,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5521,
        5562
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1583": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x64A"
    },
    "1586": {
      "branch": 56,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1587": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1589": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1590": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1596": {
      "op": "SHL"
    },
    "1597": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1598": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1599": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1601": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "ADD",
      "path": "2"
    },
    "1602": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "1605": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1606": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x103A"
    },
    "1609": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1610": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5513,
        5616
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1611": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5665
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 20,
      "value": "0x656"
    },
    "1614": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5640,
        5644
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1615": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5646,
        5648
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1616": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5650,
        5657
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1617": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5659,
        5664
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1618": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5639
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB18"
    },
    "1621": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5626,
        5665
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1622": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5626,
        5665
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1623": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "2"
    },
    "1624": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "2"
    },
    "1625": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "2"
    },
    "1626": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5352,
        5672
      ],
      "op": "POP",
      "path": "2"
    },
    "1627": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5352,
        5672
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1628": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1629": {
      "fn": "ERC721._exists",
      "offset": [
        7209,
        7213
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1631": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1632": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1633": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1634": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1636": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1638": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1639": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1641": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1642": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1643": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1644": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2876,
        2889
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1646": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2876,
        2889
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1653": {
      "op": "SHL"
    },
    "1654": {
      "op": "SUB"
    },
    "1655": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "2"
    },
    "1656": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 21,
      "value": "0x6DB"
    },
    "1659": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1660": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1662": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1663": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1669": {
      "op": "SHL"
    },
    "1670": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1671": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1674": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1676": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1677": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "ADD",
      "path": "2"
    },
    "1678": {
      "op": "MSTORE"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1683": {
      "op": "DUP3"
    },
    "1684": {
      "op": "ADD"
    },
    "1685": {
      "op": "MSTORE"
    },
    "1686": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1721": {
      "op": "DUP3"
    },
    "1722": {
      "op": "ADD"
    },
    "1723": {
      "op": "MSTORE"
    },
    "1724": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1742": {
      "op": "SHL"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1745": {
      "op": "DUP3"
    },
    "1746": {
      "op": "ADD"
    },
    "1747": {
      "op": "MSTORE"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1750": {
      "op": "ADD"
    },
    "1751": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "1754": {
      "op": "JUMP"
    },
    "1755": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2901,
        2977
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1756": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2988,
        3009
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1758": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3022
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6F2"
    },
    "1761": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 22,
      "value": "0x40"
    },
    "1763": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1764": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1765": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1767": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1768": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "ADD",
      "path": "2"
    },
    "1769": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1770": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1771": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1774": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1775": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1776": {
      "fn": "ERC721._baseURI",
      "offset": [
        3449,
        3458
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1777": {
      "fn": "ERC721._baseURI",
      "offset": [
        3373,
        3465
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1778": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3012,
        3022
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1779": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2988,
        3022
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1780": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2988,
        3022
      ],
      "op": "POP",
      "path": "2"
    },
    "1781": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3063,
        3064
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 23,
      "value": "0x0"
    },
    "1783": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3045,
        3052
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1784": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3060
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1785": {
      "branch": 57,
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3064
      ],
      "op": "GT",
      "path": "2"
    },
    "1786": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x712"
    },
    "1789": {
      "branch": 57,
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1790": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1792": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1793": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1794": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1796": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "ADD",
      "path": "2"
    },
    "1797": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1799": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1800": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1801": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1803": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1804": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1805": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "POP",
      "path": "2"
    },
    "1806": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x73D"
    },
    "1809": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1810": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1811": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3091,
        3098
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1812": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3100,
        3118
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x71C"
    },
    "1815": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3100,
        3107
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1816": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3100,
        3116
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB4B"
    },
    "1819": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3100,
        3118
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1820": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3100,
        3118
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1821": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1823": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1824": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1826": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "ADD",
      "path": "2"
    },
    "1827": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x72D"
    },
    "1830": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1831": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1832": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1833": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x108B"
    },
    "1836": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3074,
        3119
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1837": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1838": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1840": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1841": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1843": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1844": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1845": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "SUB",
      "path": "2"
    },
    "1846": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "SUB",
      "path": "2"
    },
    "1847": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1848": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1849": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1850": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1852": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3074,
        3119
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1853": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3039,
        3125
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1854": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3032,
        3125
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1855": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2803,
        3132
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1856": {
      "op": "POP"
    },
    "1857": {
      "op": "POP"
    },
    "1858": {
      "op": "POP"
    },
    "1859": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2803,
        3132
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1860": {
      "fn": "ERC721._approve",
      "offset": [
        10995,
        11166
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1861": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 24,
      "value": "0x0"
    },
    "1863": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1864": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1865": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1866": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1868": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1870": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1871": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1873": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1874": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1875": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1876": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1883": {
      "op": "SHL"
    },
    "1884": {
      "op": "SUB"
    },
    "1885": {
      "op": "NOT"
    },
    "1886": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "AND",
      "path": "2"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1893": {
      "op": "SHL"
    },
    "1894": {
      "op": "SUB"
    },
    "1895": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "DUP5",
      "path": "2"
    },
    "1896": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "AND",
      "path": "2"
    },
    "1897": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1898": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1899": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "OR",
      "path": "2"
    },
    "1900": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1901": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1902": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11098
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "1903": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1904": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1905": {
      "fn": "ERC721._approve",
      "offset": [
        11122,
        11145
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 25,
      "value": "0x779"
    },
    "1908": {
      "fn": "ERC721._approve",
      "offset": [
        11069,
        11093
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1909": {
      "fn": "ERC721._approve",
      "offset": [
        11122,
        11136
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x508"
    },
    "1912": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11122,
        11145
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1913": {
      "fn": "ERC721._approve",
      "offset": [
        11122,
        11145
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1920": {
      "op": "SHL"
    },
    "1921": {
      "op": "SUB"
    },
    "1922": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "AND",
      "path": "2"
    },
    "1923": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1956": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1958": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1959": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1961": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1962": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1963": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1964": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "SUB",
      "path": "2"
    },
    "1965": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1966": {
      "fn": "ERC721._approve",
      "offset": [
        11113,
        11159
      ],
      "op": "LOG4",
      "path": "2"
    },
    "1967": {
      "fn": "ERC721._approve",
      "offset": [
        10995,
        11166
      ],
      "op": "POP",
      "path": "2"
    },
    "1968": {
      "fn": "ERC721._approve",
      "offset": [
        10995,
        11166
      ],
      "op": "POP",
      "path": "2"
    },
    "1969": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        10995,
        11166
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1970": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7427,
        7771
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1971": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7520,
        7524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1973": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1974": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1975": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1976": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1978": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1980": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1981": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1983": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1984": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1985": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1992": {
      "op": "SHL"
    },
    "1993": {
      "op": "SUB"
    },
    "1994": {
      "fn": "ERC721._exists",
      "offset": [
        7232,
        7248
      ],
      "op": "AND",
      "path": "2"
    },
    "1995": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 26,
      "value": "0x82B"
    },
    "1998": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1999": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2001": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2002": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2008": {
      "op": "SHL"
    },
    "2009": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2010": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2013": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2015": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2016": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "ADD",
      "path": "2"
    },
    "2017": {
      "op": "MSTORE"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2022": {
      "op": "DUP3"
    },
    "2023": {
      "op": "ADD"
    },
    "2024": {
      "op": "MSTORE"
    },
    "2025": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2060": {
      "op": "DUP3"
    },
    "2061": {
      "op": "ADD"
    },
    "2062": {
      "op": "MSTORE"
    },
    "2063": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2078": {
      "op": "SHL"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2081": {
      "op": "DUP3"
    },
    "2082": {
      "op": "ADD"
    },
    "2083": {
      "op": "MSTORE"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2086": {
      "op": "ADD"
    },
    "2087": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "2090": {
      "op": "JUMP"
    },
    "2091": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7609
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2092": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2094": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7658
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x836"
    },
    "2097": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7650,
        7657
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2098": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x508"
    },
    "2101": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7635,
        7658
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2102": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7658
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2103": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7658
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2104": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7619,
        7658
      ],
      "op": "POP",
      "path": "2"
    },
    "2105": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7687,
        7692
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 27
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2112": {
      "op": "SHL"
    },
    "2113": {
      "op": "SUB"
    },
    "2114": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "AND",
      "path": "2"
    },
    "2115": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7683
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2122": {
      "op": "SHL"
    },
    "2123": {
      "op": "SUB"
    },
    "2124": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "AND",
      "path": "2"
    },
    "2125": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7692
      ],
      "op": "EQ",
      "path": "2"
    },
    "2126": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2127": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x871"
    },
    "2130": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2131": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "POP",
      "path": "2"
    },
    "2132": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7720,
        7727
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2139": {
      "op": "SHL"
    },
    "2140": {
      "op": "SUB"
    },
    "2141": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "AND",
      "path": "2"
    },
    "2142": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7716
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x866"
    },
    "2145": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7708,
        7715
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2146": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x30C"
    },
    "2149": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7696,
        7716
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2150": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7716
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2157": {
      "op": "SHL"
    },
    "2158": {
      "op": "SUB"
    },
    "2159": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "AND",
      "path": "2"
    },
    "2160": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7696,
        7727
      ],
      "op": "EQ",
      "path": "2"
    },
    "2161": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7727
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2162": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2163": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A1"
    },
    "2166": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7676,
        7763
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2167": {
      "op": "POP"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2174": {
      "op": "SHL"
    },
    "2175": {
      "op": "SUB"
    },
    "2176": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2177": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2178": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "AND",
      "path": "2"
    },
    "2179": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4584,
        4588
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2181": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2182": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2183": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2184": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4625
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2186": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2188": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2189": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2190": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2191": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2193": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2194": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2195": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4632
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2196": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2197": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "DUP9",
      "path": "2"
    },
    "2198": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "2"
    },
    "2199": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2200": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2201": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2202": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2203": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2204": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2205": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2206": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "2208": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4607,
        4642
      ],
      "op": "AND",
      "path": "2"
    },
    "2209": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7731,
        7763
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2210": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7668,
        7764
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2211": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7427,
        7771
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2212": {
      "op": "POP"
    },
    "2213": {
      "op": "POP"
    },
    "2214": {
      "op": "POP"
    },
    "2215": {
      "op": "POP"
    },
    "2216": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7427,
        7771
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2217": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2218": {
      "fn": "ERC721._transfer",
      "offset": [
        10478,
        10482
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 28
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2225": {
      "op": "SHL"
    },
    "2226": {
      "op": "SUB"
    },
    "2227": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10482
      ],
      "op": "AND",
      "path": "2"
    },
    "2228": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10474
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8BC"
    },
    "2231": {
      "fn": "ERC721._transfer",
      "offset": [
        10466,
        10473
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2232": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x508"
    },
    "2235": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10451,
        10474
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2236": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10474
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2243": {
      "op": "SHL"
    },
    "2244": {
      "op": "SUB"
    },
    "2245": {
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10482
      ],
      "op": "AND",
      "path": "2"
    },
    "2246": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10451,
        10482
      ],
      "op": "EQ",
      "path": "2"
    },
    "2247": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x924"
    },
    "2250": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2251": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2253": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2254": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2260": {
      "op": "SHL"
    },
    "2261": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2262": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2265": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2267": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2268": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "ADD",
      "path": "2"
    },
    "2269": {
      "op": "MSTORE"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2274": {
      "op": "DUP3"
    },
    "2275": {
      "op": "ADD"
    },
    "2276": {
      "op": "MSTORE"
    },
    "2277": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2312": {
      "op": "DUP3"
    },
    "2313": {
      "op": "ADD"
    },
    "2314": {
      "op": "MSTORE"
    },
    "2315": {
      "op": "PUSH9",
      "value": "0x39903737BA1037BBB7"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "2327": {
      "op": "SHL"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2330": {
      "op": "DUP3"
    },
    "2331": {
      "op": "ADD"
    },
    "2332": {
      "op": "MSTORE"
    },
    "2333": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2335": {
      "op": "ADD"
    },
    "2336": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "2339": {
      "op": "JUMP"
    },
    "2340": {
      "fn": "ERC721._transfer",
      "offset": [
        10443,
        10528
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2347": {
      "op": "SHL"
    },
    "2348": {
      "op": "SUB"
    },
    "2349": {
      "fn": "ERC721._transfer",
      "offset": [
        10546,
        10562
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 29
    },
    "2350": {
      "branch": 59,
      "fn": "ERC721._transfer",
      "offset": [
        10546,
        10562
      ],
      "op": "AND",
      "path": "2"
    },
    "2351": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x986"
    },
    "2354": {
      "branch": 59,
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2355": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2357": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2358": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2362": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2364": {
      "op": "SHL"
    },
    "2365": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2366": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2369": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2371": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2372": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "ADD",
      "path": "2"
    },
    "2373": {
      "op": "MSTORE"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2376": {
      "op": "DUP1"
    },
    "2377": {
      "op": "DUP3"
    },
    "2378": {
      "op": "ADD"
    },
    "2379": {
      "op": "MSTORE"
    },
    "2380": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2415": {
      "op": "DUP3"
    },
    "2416": {
      "op": "ADD"
    },
    "2417": {
      "op": "MSTORE"
    },
    "2418": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2423": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2425": {
      "op": "SHL"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2428": {
      "op": "DUP3"
    },
    "2429": {
      "op": "ADD"
    },
    "2430": {
      "op": "MSTORE"
    },
    "2431": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2433": {
      "op": "ADD"
    },
    "2434": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "2437": {
      "op": "JUMP"
    },
    "2438": {
      "fn": "ERC721._transfer",
      "offset": [
        10538,
        10603
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2439": {
      "fn": "ERC721._transfer",
      "offset": [
        10715,
        10744
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 30,
      "value": "0x991"
    },
    "2442": {
      "fn": "ERC721._transfer",
      "offset": [
        10732,
        10733
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2444": {
      "fn": "ERC721._transfer",
      "offset": [
        10736,
        10743
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2445": {
      "fn": "ERC721._transfer",
      "offset": [
        10715,
        10723
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x744"
    },
    "2448": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10715,
        10744
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2449": {
      "fn": "ERC721._transfer",
      "offset": [
        10715,
        10744
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2456": {
      "op": "SHL"
    },
    "2457": {
      "op": "SUB"
    },
    "2458": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 31
    },
    "2459": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "AND",
      "path": "2"
    },
    "2460": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2462": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2463": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2464": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2465": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10764
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2467": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2469": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2470": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2472": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2473": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2474": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2475": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2476": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2478": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2479": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10770
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2480": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9BA"
    },
    "2483": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2484": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2485": {
      "fn": "ERC721._transfer",
      "offset": [
        10774,
        10775
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2486": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10D0"
    },
    "2489": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10755,
        10775
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2490": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2491": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2492": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2493": {
      "fn": "ERC721._transfer",
      "offset": [
        10755,
        10775
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2494": {
      "op": "POP"
    },
    "2495": {
      "op": "POP"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2502": {
      "op": "SHL"
    },
    "2503": {
      "op": "SUB"
    },
    "2504": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 32
    },
    "2505": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "AND",
      "path": "2"
    },
    "2506": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2508": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2509": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2510": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2511": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10794
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2513": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2515": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2516": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2518": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2519": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2520": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2521": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2522": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2524": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2525": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10798
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2526": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9E8"
    },
    "2529": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2530": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2531": {
      "fn": "ERC721._transfer",
      "offset": [
        10802,
        10803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2532": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10E7"
    },
    "2535": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10785,
        10803
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2536": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2537": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2538": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2539": {
      "fn": "ERC721._transfer",
      "offset": [
        10785,
        10803
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2540": {
      "op": "POP"
    },
    "2541": {
      "op": "POP"
    },
    "2542": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 33,
      "value": "0x0"
    },
    "2544": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2545": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2546": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2547": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10820
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "2549": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2551": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2552": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2554": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2555": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2556": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2557": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2558": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2563": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2565": {
      "op": "SHL"
    },
    "2566": {
      "op": "SUB"
    },
    "2567": {
      "op": "NOT"
    },
    "2568": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "AND",
      "path": "2"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2575": {
      "op": "SHL"
    },
    "2576": {
      "op": "SUB"
    },
    "2577": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2578": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2579": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "AND",
      "path": "2"
    },
    "2580": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2581": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2582": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "OR",
      "path": "2"
    },
    "2583": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2584": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2585": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10834
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2586": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 34
    },
    "2587": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2588": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2589": {
      "fn": "ERC721._transfer",
      "offset": [
        10813,
        10829
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2590": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2591": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2592": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "AND",
      "path": "2"
    },
    "2593": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2594": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2627": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2628": {
      "fn": "ERC721._transfer",
      "offset": [
        10850,
        10877
      ],
      "op": "LOG4",
      "path": "2"
    },
    "2629": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "POP",
      "path": "2"
    },
    "2630": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "POP",
      "path": "2"
    },
    "2631": {
      "fn": "ERC721._transfer",
      "offset": [
        10324,
        10884
      ],
      "op": "POP",
      "path": "2"
    },
    "2632": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        10324,
        10884
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2633": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2634": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11451,
        11459
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 35
    },
    "2635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2641": {
      "op": "SHL"
    },
    "2642": {
      "op": "SUB"
    },
    "2643": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "AND",
      "path": "2"
    },
    "2644": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11447
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2649": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2651": {
      "op": "SHL"
    },
    "2652": {
      "op": "SUB"
    },
    "2653": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "AND",
      "path": "2"
    },
    "2654": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "EQ",
      "path": "2"
    },
    "2655": {
      "branch": 60,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11442,
        11459
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2656": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAAB"
    },
    "2659": {
      "branch": 60,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2660": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2662": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2663": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2667": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2669": {
      "op": "SHL"
    },
    "2670": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2671": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2674": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2676": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2677": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "ADD",
      "path": "2"
    },
    "2678": {
      "op": "MSTORE"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2683": {
      "op": "DUP3"
    },
    "2684": {
      "op": "ADD"
    },
    "2685": {
      "op": "MSTORE"
    },
    "2686": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2721": {
      "op": "DUP3"
    },
    "2722": {
      "op": "ADD"
    },
    "2723": {
      "op": "MSTORE"
    },
    "2724": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2726": {
      "op": "ADD"
    },
    "2727": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "2730": {
      "op": "JUMP"
    },
    "2731": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11434,
        11489
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2738": {
      "op": "SHL"
    },
    "2739": {
      "op": "SUB"
    },
    "2740": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 36
    },
    "2741": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2742": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "AND",
      "path": "2"
    },
    "2743": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2745": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2746": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2747": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2748": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11517
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "2750": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2752": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2753": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2754": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2755": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2757": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2758": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2759": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11524
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2760": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2761": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP8",
      "path": "2"
    },
    "2762": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "AND",
      "path": "2"
    },
    "2763": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2764": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2765": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2766": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "2767": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2768": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2769": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2770": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2771": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2772": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11534
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2773": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2774": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2777": {
      "op": "NOT"
    },
    "2778": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "AND",
      "path": "2"
    },
    "2779": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2780": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2781": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2782": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2783": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2784": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "OR",
      "path": "2"
    },
    "2785": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2786": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2787": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11499,
        11545
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "2788": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 37
    },
    "2789": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2790": {
      "op": "SWAP2"
    },
    "2791": {
      "op": "DUP3"
    },
    "2792": {
      "op": "MSTORE"
    },
    "2793": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "2826": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2827": {
      "op": "ADD"
    },
    "2828": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2830": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2831": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2832": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2833": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SUB",
      "path": "2"
    },
    "2834": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2835": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11560,
        11601
      ],
      "op": "LOG3",
      "path": "2"
    },
    "2836": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "POP",
      "path": "2"
    },
    "2837": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "POP",
      "path": "2"
    },
    "2838": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11301,
        11608
      ],
      "op": "POP",
      "path": "2"
    },
    "2839": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11301,
        11608
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2840": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6534,
        6841
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2841": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6713
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 38,
      "value": "0xB23"
    },
    "2844": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6695,
        6699
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2845": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6701,
        6703
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2846": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6705,
        6712
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2847": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6694
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A9"
    },
    "2850": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6685,
        6713
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2851": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6685,
        6713
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2852": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6779
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 39,
      "value": "0xB2F"
    },
    "2855": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6754,
        6758
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2856": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6760,
        6762
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2857": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6764,
        6771
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2858": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6773,
        6778
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2859": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6753
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC49"
    },
    "2862": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6731,
        6779
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2863": {
      "branch": 61,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6731,
        6779
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2864": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x656"
    },
    "2867": {
      "branch": 61,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2868": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2870": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2871": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2877": {
      "op": "SHL"
    },
    "2878": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2879": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2880": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2882": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "ADD",
      "path": "2"
    },
    "2883": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "2886": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2887": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6723,
        6834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10FF"
    },
    "2890": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6723,
        6834
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2891": {
      "fn": "Strings.toString",
      "offset": [
        328,
        1031
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2892": {
      "fn": "Strings.toString",
      "offset": [
        384,
        397
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x60"
    },
    "2894": {
      "branch": 62,
      "fn": "Strings.toString",
      "offset": [
        601,
        611
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2895": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB6F"
    },
    "2898": {
      "branch": 62,
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2899": {
      "op": "POP"
    },
    "2900": {
      "op": "POP"
    },
    "2901": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "8",
      "statement": 40,
      "value": "0x40"
    },
    "2903": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2904": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "2905": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "8"
    },
    "2906": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2907": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "8"
    },
    "2908": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2909": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2910": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2911": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "2913": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2914": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2915": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "2919": {
      "op": "SHL"
    },
    "2920": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "2922": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "8"
    },
    "2923": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "8"
    },
    "2924": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "2925": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2926": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        328,
        1031
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2927": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2928": {
      "fn": "Strings.toString",
      "offset": [
        672,
        677
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2929": {
      "fn": "Strings.toString",
      "offset": [
        657,
        669
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2931": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2932": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2933": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2934": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB99"
    },
    "2937": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2938": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 41
    },
    "2939": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB83"
    },
    "2942": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2943": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1151"
    },
    "2946": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        743,
        751
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2947": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2948": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2949": {
      "op": "POP"
    },
    "2950": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 42,
      "value": "0xB92"
    },
    "2953": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "2954": {
      "op": "POP"
    },
    "2955": {
      "fn": "Strings.toString",
      "offset": [
        773,
        775
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "2957": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "DUP4",
      "path": "8"
    },
    "2958": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1182"
    },
    "2961": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        765,
        775
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2962": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2963": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "2964": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "POP",
      "path": "8"
    },
    "2965": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xB73"
    },
    "2968": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2969": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2970": {
      "fn": "Strings.toString",
      "offset": [
        795,
        814
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2972": {
      "fn": "Strings.toString",
      "offset": [
        827,
        833
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2973": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH8",
      "path": "8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2982": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "8"
    },
    "2983": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "GT",
      "path": "8"
    },
    "2984": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2985": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBB4"
    },
    "2988": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "2989": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBB4"
    },
    "2992": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEDA"
    },
    "2995": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        817,
        834
      ],
      "op": "JUMP",
      "path": "8"
    },
    "2996": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2997": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "2999": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3000": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3001": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3002": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3003": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3004": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3005": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "3007": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "8"
    },
    "3008": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1F"
    },
    "3010": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "NOT",
      "path": "8"
    },
    "3011": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "AND",
      "path": "8"
    },
    "3012": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3014": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "8"
    },
    "3015": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3016": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "8"
    },
    "3017": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "3019": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "8"
    },
    "3020": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3021": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3022": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBDE"
    },
    "3025": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3026": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3028": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "8"
    },
    "3029": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "8"
    },
    "3030": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3031": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "8"
    },
    "3032": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "3033": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3034": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATACOPY",
      "path": "8"
    },
    "3035": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "8"
    },
    "3036": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3037": {
      "op": "POP"
    },
    "3038": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3039": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "POP",
      "path": "8"
    },
    "3040": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3041": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "POP",
      "path": "8"
    },
    "3042": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3043": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "DUP5",
      "path": "8"
    },
    "3044": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "3045": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x8A1"
    },
    "3048": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3049": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 43,
      "value": "0xBF3"
    },
    "3052": {
      "fn": "Strings.toString",
      "offset": [
        887,
        888
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "3054": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3055": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10D0"
    },
    "3058": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        877,
        888
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3059": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3060": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "SWAP2",
      "path": "8"
    },
    "3061": {
      "op": "POP"
    },
    "3062": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 44,
      "value": "0xC00"
    },
    "3065": {
      "fn": "Strings.toString",
      "offset": [
        953,
        955
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "3067": {
      "fn": "Strings.toString",
      "offset": [
        945,
        950
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3068": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1196"
    },
    "3071": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        945,
        955
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3072": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3073": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC0B"
    },
    "3076": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3077": {
      "fn": "Strings.toString",
      "offset": [
        932,
        934
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x30"
    },
    "3079": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x10E7"
    },
    "3082": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        932,
        956
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3083": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3084": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xF8"
    },
    "3086": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "SHL",
      "path": "8"
    },
    "3087": {
      "fn": "Strings.toString",
      "offset": [
        902,
        908
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3088": {
      "fn": "Strings.toString",
      "offset": [
        909,
        915
      ],
      "op": "DUP4",
      "path": "8"
    },
    "3089": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3090": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "8"
    },
    "3091": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3092": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "8"
    },
    "3093": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC20"
    },
    "3096": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "8"
    },
    "3097": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xC20"
    },
    "3100": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x11AA"
    },
    "3103": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        902,
        916
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3104": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3105": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x20"
    },
    "3107": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "8"
    },
    "3108": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "8"
    },
    "3109": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3110": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3116": {
      "op": "SHL"
    },
    "3117": {
      "op": "SUB"
    },
    "3118": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "NOT",
      "path": "8"
    },
    "3119": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "AND",
      "path": "8"
    },
    "3120": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3121": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "DUP2",
      "path": "8"
    },
    "3122": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "3124": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "BYTE",
      "path": "8"
    },
    "3125": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "3126": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "MSTORE8",
      "path": "8"
    },
    "3127": {
      "op": "POP"
    },
    "3128": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "8",
      "statement": 45,
      "value": "0xC42"
    },
    "3131": {
      "fn": "Strings.toString",
      "offset": [
        981,
        983
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0xA"
    },
    "3133": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "DUP7",
      "path": "8"
    },
    "3134": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1182"
    },
    "3137": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        972,
        983
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3138": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "JUMPDEST",
      "path": "8"
    },
    "3139": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "SWAP5",
      "path": "8"
    },
    "3140": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "POP",
      "path": "8"
    },
    "3141": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBE2"
    },
    "3144": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMP",
      "path": "8"
    },
    "3145": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3146": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12311,
        12315
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3154": {
      "op": "SHL"
    },
    "3155": {
      "op": "SUB"
    },
    "3156": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12331,
        12344
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3157": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12331,
        12344
      ],
      "op": "AND",
      "path": "2"
    },
    "3158": {
      "fn": "Address.isContract",
      "offset": [
        1087,
        1107
      ],
      "op": "EXTCODESIZE",
      "path": "6"
    },
    "3159": {
      "fn": "Address.isContract",
      "offset": [
        1133,
        1141
      ],
      "op": "ISZERO",
      "path": "6",
      "statement": 46
    },
    "3160": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12327,
        12933
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD3C"
    },
    "3163": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12327,
        12933
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3164": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3166": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3167": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3172": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3174": {
      "op": "SHL"
    },
    "3175": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3176": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3183": {
      "op": "SHL"
    },
    "3184": {
      "op": "SUB"
    },
    "3185": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3186": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "AND",
      "path": "2"
    },
    "3187": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3188": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x150B7A02"
    },
    "3193": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12402
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3194": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC8D"
    },
    "3197": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3198": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3199": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3200": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12417,
        12421
      ],
      "op": "DUP10",
      "path": "2"
    },
    "3201": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12417,
        12421
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3202": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12423,
        12430
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3203": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12423,
        12430
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3204": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12432,
        12437
      ],
      "op": "DUP9",
      "path": "2"
    },
    "3205": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12432,
        12437
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3206": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3208": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "2"
    },
    "3209": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11C0"
    },
    "3212": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3213": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3214": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3216": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3218": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3219": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3220": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3221": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SUB",
      "path": "2"
    },
    "3222": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3223": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3225": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3226": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "GAS",
      "path": "2"
    },
    "3227": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "CALL",
      "path": "2"
    },
    "3228": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3229": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "POP",
      "path": "2"
    },
    "3230": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "POP",
      "path": "2"
    },
    "3231": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "POP",
      "path": "2"
    },
    "3232": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3233": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3234": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC8"
    },
    "3237": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3238": {
      "op": "POP"
    },
    "3239": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3241": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3242": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3243": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3245": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3246": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3247": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3248": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "2"
    },
    "3249": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3251": {
      "op": "NOT"
    },
    "3252": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "AND",
      "path": "2"
    },
    "3253": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3254": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "2"
    },
    "3255": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3256": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3257": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3258": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC5"
    },
    "3261": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3262": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3263": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "ADD",
      "path": "2"
    },
    "3264": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3265": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11FD"
    },
    "3268": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3269": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3270": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3272": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12366,
        12438
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3273": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD22"
    },
    "3276": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3277": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3278": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3279": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3280": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3281": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCF6"
    },
    "3284": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3285": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3287": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3288": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3289": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "POP",
      "path": "2"
    },
    "3290": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "3292": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "NOT",
      "path": "2"
    },
    "3293": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3F"
    },
    "3295": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3296": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ADD",
      "path": "2"
    },
    "3297": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "AND",
      "path": "2"
    },
    "3298": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3299": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ADD",
      "path": "2"
    },
    "3300": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3302": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3303": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3304": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3305": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3306": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "3307": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3309": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3311": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3312": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "ADD",
      "path": "2"
    },
    "3313": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "RETURNDATACOPY",
      "path": "2"
    },
    "3314": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCFB"
    },
    "3317": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3318": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3319": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "3321": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3322": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "POP",
      "path": "2"
    },
    "3323": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3324": {
      "op": "POP"
    },
    "3325": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12618
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3326": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12605,
        12618
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3327": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12601,
        12867
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD1A"
    },
    "3330": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12601,
        12867
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3331": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 47,
      "value": "0x40"
    },
    "3333": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3334": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3340": {
      "op": "SHL"
    },
    "3341": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3342": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3343": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3345": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "ADD",
      "path": "2"
    },
    "3346": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x381"
    },
    "3349": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3350": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12647,
        12707
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10FF"
    },
    "3353": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12647,
        12707
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3354": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12601,
        12867
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3355": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12819,
        12825
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3356": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12813,
        12826
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3357": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12804,
        12810
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3358": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12800,
        12802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3360": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12796,
        12811
      ],
      "op": "ADD",
      "path": "2"
    },
    "3361": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12789,
        12827
      ],
      "op": "REVERT",
      "path": "2"
    },
    "3362": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12362,
        12881
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3367": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3369": {
      "op": "SHL"
    },
    "3370": {
      "op": "SUB"
    },
    "3371": {
      "op": "NOT"
    },
    "3372": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12488,
        12539
      ],
      "op": "AND",
      "path": "2",
      "statement": 48
    },
    "3373": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3380": {
      "op": "SHL"
    },
    "3381": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12488,
        12539
      ],
      "op": "EQ",
      "path": "2"
    },
    "3382": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12488,
        12539
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3383": {
      "op": "POP"
    },
    "3384": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12481,
        12539
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8A1"
    },
    "3387": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12481,
        12539
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3388": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12327,
        12933
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3389": {
      "op": "POP"
    },
    "3390": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12918,
        12922
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 49,
      "value": "0x1"
    },
    "3392": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "3393": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3394": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "2"
    },
    "3395": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "2"
    },
    "3396": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "2"
    },
    "3397": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12161,
        12939
      ],
      "op": "POP",
      "path": "2"
    },
    "3398": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12161,
        12939
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3399": {
      "op": "JUMPDEST"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3406": {
      "op": "SHL"
    },
    "3407": {
      "op": "SUB"
    },
    "3408": {
      "op": "NOT"
    },
    "3409": {
      "op": "DUP2"
    },
    "3410": {
      "op": "AND"
    },
    "3411": {
      "op": "DUP2"
    },
    "3412": {
      "op": "EQ"
    },
    "3413": {
      "op": "PUSH2",
      "value": "0xD5D"
    },
    "3416": {
      "op": "JUMPI"
    },
    "3417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3419": {
      "op": "DUP1"
    },
    "3420": {
      "op": "REVERT"
    },
    "3421": {
      "op": "JUMPDEST"
    },
    "3422": {
      "op": "POP"
    },
    "3423": {
      "jump": "o",
      "op": "JUMP"
    },
    "3424": {
      "op": "JUMPDEST"
    },
    "3425": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3427": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3429": {
      "op": "DUP3"
    },
    "3430": {
      "op": "DUP5"
    },
    "3431": {
      "op": "SUB"
    },
    "3432": {
      "op": "SLT"
    },
    "3433": {
      "op": "ISZERO"
    },
    "3434": {
      "op": "PUSH2",
      "value": "0xD72"
    },
    "3437": {
      "op": "JUMPI"
    },
    "3438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3440": {
      "op": "DUP1"
    },
    "3441": {
      "op": "REVERT"
    },
    "3442": {
      "op": "JUMPDEST"
    },
    "3443": {
      "op": "DUP2"
    },
    "3444": {
      "op": "CALLDATALOAD"
    },
    "3445": {
      "op": "PUSH2",
      "value": "0x73D"
    },
    "3448": {
      "op": "DUP2"
    },
    "3449": {
      "op": "PUSH2",
      "value": "0xD47"
    },
    "3452": {
      "jump": "i",
      "op": "JUMP"
    },
    "3453": {
      "op": "JUMPDEST"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3456": {
      "op": "JUMPDEST"
    },
    "3457": {
      "op": "DUP4"
    },
    "3458": {
      "op": "DUP2"
    },
    "3459": {
      "op": "LT"
    },
    "3460": {
      "op": "ISZERO"
    },
    "3461": {
      "op": "PUSH2",
      "value": "0xD98"
    },
    "3464": {
      "op": "JUMPI"
    },
    "3465": {
      "op": "DUP2"
    },
    "3466": {
      "op": "DUP2"
    },
    "3467": {
      "op": "ADD"
    },
    "3468": {
      "op": "MLOAD"
    },
    "3469": {
      "op": "DUP4"
    },
    "3470": {
      "op": "DUP3"
    },
    "3471": {
      "op": "ADD"
    },
    "3472": {
      "op": "MSTORE"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3475": {
      "op": "ADD"
    },
    "3476": {
      "op": "PUSH2",
      "value": "0xD80"
    },
    "3479": {
      "op": "JUMP"
    },
    "3480": {
      "op": "JUMPDEST"
    },
    "3481": {
      "op": "DUP4"
    },
    "3482": {
      "op": "DUP2"
    },
    "3483": {
      "op": "GT"
    },
    "3484": {
      "op": "ISZERO"
    },
    "3485": {
      "op": "PUSH2",
      "value": "0x656"
    },
    "3488": {
      "op": "JUMPI"
    },
    "3489": {
      "op": "POP"
    },
    "3490": {
      "op": "POP"
    },
    "3491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3493": {
      "op": "SWAP2"
    },
    "3494": {
      "op": "ADD"
    },
    "3495": {
      "op": "MSTORE"
    },
    "3496": {
      "jump": "o",
      "op": "JUMP"
    },
    "3497": {
      "op": "JUMPDEST"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3500": {
      "op": "DUP2"
    },
    "3501": {
      "op": "MLOAD"
    },
    "3502": {
      "op": "DUP1"
    },
    "3503": {
      "op": "DUP5"
    },
    "3504": {
      "op": "MSTORE"
    },
    "3505": {
      "op": "PUSH2",
      "value": "0xDC1"
    },
    "3508": {
      "op": "DUP2"
    },
    "3509": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3511": {
      "op": "DUP7"
    },
    "3512": {
      "op": "ADD"
    },
    "3513": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3515": {
      "op": "DUP7"
    },
    "3516": {
      "op": "ADD"
    },
    "3517": {
      "op": "PUSH2",
      "value": "0xD7D"
    },
    "3520": {
      "jump": "i",
      "op": "JUMP"
    },
    "3521": {
      "op": "JUMPDEST"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3524": {
      "op": "ADD"
    },
    "3525": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3527": {
      "op": "NOT"
    },
    "3528": {
      "op": "AND"
    },
    "3529": {
      "op": "SWAP3"
    },
    "3530": {
      "op": "SWAP1"
    },
    "3531": {
      "op": "SWAP3"
    },
    "3532": {
      "op": "ADD"
    },
    "3533": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3535": {
      "op": "ADD"
    },
    "3536": {
      "op": "SWAP3"
    },
    "3537": {
      "op": "SWAP2"
    },
    "3538": {
      "op": "POP"
    },
    "3539": {
      "op": "POP"
    },
    "3540": {
      "jump": "o",
      "op": "JUMP"
    },
    "3541": {
      "op": "JUMPDEST"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3544": {
      "op": "DUP2"
    },
    "3545": {
      "op": "MSTORE"
    },
    "3546": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3548": {
      "op": "PUSH2",
      "value": "0x73D"
    },
    "3551": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3553": {
      "op": "DUP4"
    },
    "3554": {
      "op": "ADD"
    },
    "3555": {
      "op": "DUP5"
    },
    "3556": {
      "op": "PUSH2",
      "value": "0xDA9"
    },
    "3559": {
      "jump": "i",
      "op": "JUMP"
    },
    "3560": {
      "op": "JUMPDEST"
    },
    "3561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3563": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3565": {
      "op": "DUP3"
    },
    "3566": {
      "op": "DUP5"
    },
    "3567": {
      "op": "SUB"
    },
    "3568": {
      "op": "SLT"
    },
    "3569": {
      "op": "ISZERO"
    },
    "3570": {
      "op": "PUSH2",
      "value": "0xDFA"
    },
    "3573": {
      "op": "JUMPI"
    },
    "3574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3576": {
      "op": "DUP1"
    },
    "3577": {
      "op": "REVERT"
    },
    "3578": {
      "op": "JUMPDEST"
    },
    "3579": {
      "op": "POP"
    },
    "3580": {
      "op": "CALLDATALOAD"
    },
    "3581": {
      "op": "SWAP2"
    },
    "3582": {
      "op": "SWAP1"
    },
    "3583": {
      "op": "POP"
    },
    "3584": {
      "jump": "o",
      "op": "JUMP"
    },
    "3585": {
      "op": "JUMPDEST"
    },
    "3586": {
      "op": "DUP1"
    },
    "3587": {
      "op": "CALLDATALOAD"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3594": {
      "op": "SHL"
    },
    "3595": {
      "op": "SUB"
    },
    "3596": {
      "op": "DUP2"
    },
    "3597": {
      "op": "AND"
    },
    "3598": {
      "op": "DUP2"
    },
    "3599": {
      "op": "EQ"
    },
    "3600": {
      "op": "PUSH2",
      "value": "0xE18"
    },
    "3603": {
      "op": "JUMPI"
    },
    "3604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3606": {
      "op": "DUP1"
    },
    "3607": {
      "op": "REVERT"
    },
    "3608": {
      "op": "JUMPDEST"
    },
    "3609": {
      "op": "SWAP2"
    },
    "3610": {
      "op": "SWAP1"
    },
    "3611": {
      "op": "POP"
    },
    "3612": {
      "jump": "o",
      "op": "JUMP"
    },
    "3613": {
      "op": "JUMPDEST"
    },
    "3614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3616": {
      "op": "DUP1"
    },
    "3617": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3619": {
      "op": "DUP4"
    },
    "3620": {
      "op": "DUP6"
    },
    "3621": {
      "op": "SUB"
    },
    "3622": {
      "op": "SLT"
    },
    "3623": {
      "op": "ISZERO"
    },
    "3624": {
      "op": "PUSH2",
      "value": "0xE30"
    },
    "3627": {
      "op": "JUMPI"
    },
    "3628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3630": {
      "op": "DUP1"
    },
    "3631": {
      "op": "REVERT"
    },
    "3632": {
      "op": "JUMPDEST"
    },
    "3633": {
      "op": "PUSH2",
      "value": "0xE39"
    },
    "3636": {
      "op": "DUP4"
    },
    "3637": {
      "op": "PUSH2",
      "value": "0xE01"
    },
    "3640": {
      "jump": "i",
      "op": "JUMP"
    },
    "3641": {
      "op": "JUMPDEST"
    },
    "3642": {
      "op": "SWAP5"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3645": {
      "op": "SWAP4"
    },
    "3646": {
      "op": "SWAP1"
    },
    "3647": {
      "op": "SWAP4"
    },
    "3648": {
      "op": "ADD"
    },
    "3649": {
      "op": "CALLDATALOAD"
    },
    "3650": {
      "op": "SWAP4"
    },
    "3651": {
      "op": "POP"
    },
    "3652": {
      "op": "POP"
    },
    "3653": {
      "op": "POP"
    },
    "3654": {
      "jump": "o",
      "op": "JUMP"
    },
    "3655": {
      "op": "JUMPDEST"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3658": {
      "op": "DUP1"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3661": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3663": {
      "op": "DUP5"
    },
    "3664": {
      "op": "DUP7"
    },
    "3665": {
      "op": "SUB"
    },
    "3666": {
      "op": "SLT"
    },
    "3667": {
      "op": "ISZERO"
    },
    "3668": {
      "op": "PUSH2",
      "value": "0xE5C"
    },
    "3671": {
      "op": "JUMPI"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3674": {
      "op": "DUP1"
    },
    "3675": {
      "op": "REVERT"
    },
    "3676": {
      "op": "JUMPDEST"
    },
    "3677": {
      "op": "PUSH2",
      "value": "0xE65"
    },
    "3680": {
      "op": "DUP5"
    },
    "3681": {
      "op": "PUSH2",
      "value": "0xE01"
    },
    "3684": {
      "jump": "i",
      "op": "JUMP"
    },
    "3685": {
      "op": "JUMPDEST"
    },
    "3686": {
      "op": "SWAP3"
    },
    "3687": {
      "op": "POP"
    },
    "3688": {
      "op": "PUSH2",
      "value": "0xE73"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3693": {
      "op": "DUP6"
    },
    "3694": {
      "op": "ADD"
    },
    "3695": {
      "op": "PUSH2",
      "value": "0xE01"
    },
    "3698": {
      "jump": "i",
      "op": "JUMP"
    },
    "3699": {
      "op": "JUMPDEST"
    },
    "3700": {
      "op": "SWAP2"
    },
    "3701": {
      "op": "POP"
    },
    "3702": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3704": {
      "op": "DUP5"
    },
    "3705": {
      "op": "ADD"
    },
    "3706": {
      "op": "CALLDATALOAD"
    },
    "3707": {
      "op": "SWAP1"
    },
    "3708": {
      "op": "POP"
    },
    "3709": {
      "op": "SWAP3"
    },
    "3710": {
      "op": "POP"
    },
    "3711": {
      "op": "SWAP3"
    },
    "3712": {
      "op": "POP"
    },
    "3713": {
      "op": "SWAP3"
    },
    "3714": {
      "jump": "o",
      "op": "JUMP"
    },
    "3715": {
      "op": "JUMPDEST"
    },
    "3716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3720": {
      "op": "DUP3"
    },
    "3721": {
      "op": "DUP5"
    },
    "3722": {
      "op": "SUB"
    },
    "3723": {
      "op": "SLT"
    },
    "3724": {
      "op": "ISZERO"
    },
    "3725": {
      "op": "PUSH2",
      "value": "0xE95"
    },
    "3728": {
      "op": "JUMPI"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3731": {
      "op": "DUP1"
    },
    "3732": {
      "op": "REVERT"
    },
    "3733": {
      "op": "JUMPDEST"
    },
    "3734": {
      "op": "PUSH2",
      "value": "0x73D"
    },
    "3737": {
      "op": "DUP3"
    },
    "3738": {
      "op": "PUSH2",
      "value": "0xE01"
    },
    "3741": {
      "jump": "i",
      "op": "JUMP"
    },
    "3742": {
      "op": "JUMPDEST"
    },
    "3743": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3745": {
      "op": "DUP1"
    },
    "3746": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3748": {
      "op": "DUP4"
    },
    "3749": {
      "op": "DUP6"
    },
    "3750": {
      "op": "SUB"
    },
    "3751": {
      "op": "SLT"
    },
    "3752": {
      "op": "ISZERO"
    },
    "3753": {
      "op": "PUSH2",
      "value": "0xEB1"
    },
    "3756": {
      "op": "JUMPI"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3759": {
      "op": "DUP1"
    },
    "3760": {
      "op": "REVERT"
    },
    "3761": {
      "op": "JUMPDEST"
    },
    "3762": {
      "op": "PUSH2",
      "value": "0xEBA"
    },
    "3765": {
      "op": "DUP4"
    },
    "3766": {
      "op": "PUSH2",
      "value": "0xE01"
    },
    "3769": {
      "jump": "i",
      "op": "JUMP"
    },
    "3770": {
      "op": "JUMPDEST"
    },
    "3771": {
      "op": "SWAP2"
    },
    "3772": {
      "op": "POP"
    },
    "3773": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3775": {
      "op": "DUP4"
    },
    "3776": {
      "op": "ADD"
    },
    "3777": {
      "op": "CALLDATALOAD"
    },
    "3778": {
      "op": "DUP1"
    },
    "3779": {
      "op": "ISZERO"
    },
    "3780": {
      "op": "ISZERO"
    },
    "3781": {
      "op": "DUP2"
    },
    "3782": {
      "op": "EQ"
    },
    "3783": {
      "op": "PUSH2",
      "value": "0xECF"
    },
    "3786": {
      "op": "JUMPI"
    },
    "3787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3789": {
      "op": "DUP1"
    },
    "3790": {
      "op": "REVERT"
    },
    "3791": {
      "op": "JUMPDEST"
    },
    "3792": {
      "op": "DUP1"
    },
    "3793": {
      "op": "SWAP2"
    },
    "3794": {
      "op": "POP"
    },
    "3795": {
      "op": "POP"
    },
    "3796": {
      "op": "SWAP3"
    },
    "3797": {
      "op": "POP"
    },
    "3798": {
      "op": "SWAP3"
    },
    "3799": {
      "op": "SWAP1"
    },
    "3800": {
      "op": "POP"
    },
    "3801": {
      "jump": "o",
      "op": "JUMP"
    },
    "3802": {
      "op": "JUMPDEST"
    },
    "3803": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3810": {
      "op": "SHL"
    },
    "3811": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3813": {
      "op": "MSTORE"
    },
    "3814": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3816": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3818": {
      "op": "MSTORE"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3823": {
      "op": "REVERT"
    },
    "3824": {
      "op": "JUMPDEST"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3827": {
      "op": "DUP1"
    },
    "3828": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3830": {
      "op": "DUP1"
    },
    "3831": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3833": {
      "op": "DUP6"
    },
    "3834": {
      "op": "DUP8"
    },
    "3835": {
      "op": "SUB"
    },
    "3836": {
      "op": "SLT"
    },
    "3837": {
      "op": "ISZERO"
    },
    "3838": {
      "op": "PUSH2",
      "value": "0xF06"
    },
    "3841": {
      "op": "JUMPI"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3844": {
      "op": "DUP1"
    },
    "3845": {
      "op": "REVERT"
    },
    "3846": {
      "op": "JUMPDEST"
    },
    "3847": {
      "op": "PUSH2",
      "value": "0xF0F"
    },
    "3850": {
      "op": "DUP6"
    },
    "3851": {
      "op": "PUSH2",
      "value": "0xE01"
    },
    "3854": {
      "jump": "i",
      "op": "JUMP"
    },
    "3855": {
      "op": "JUMPDEST"
    },
    "3856": {
      "op": "SWAP4"
    },
    "3857": {
      "op": "POP"
    },
    "3858": {
      "op": "PUSH2",
      "value": "0xF1D"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3863": {
      "op": "DUP7"
    },
    "3864": {
      "op": "ADD"
    },
    "3865": {
      "op": "PUSH2",
      "value": "0xE01"
    },
    "3868": {
      "jump": "i",
      "op": "JUMP"
    },
    "3869": {
      "op": "JUMPDEST"
    },
    "3870": {
      "op": "SWAP3"
    },
    "3871": {
      "op": "POP"
    },
    "3872": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3874": {
      "op": "DUP6"
    },
    "3875": {
      "op": "ADD"
    },
    "3876": {
      "op": "CALLDATALOAD"
    },
    "3877": {
      "op": "SWAP2"
    },
    "3878": {
      "op": "POP"
    },
    "3879": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3881": {
      "op": "DUP6"
    },
    "3882": {
      "op": "ADD"
    },
    "3883": {
      "op": "CALLDATALOAD"
    },
    "3884": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3893": {
      "op": "DUP1"
    },
    "3894": {
      "op": "DUP3"
    },
    "3895": {
      "op": "GT"
    },
    "3896": {
      "op": "ISZERO"
    },
    "3897": {
      "op": "PUSH2",
      "value": "0xF41"
    },
    "3900": {
      "op": "JUMPI"
    },
    "3901": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3903": {
      "op": "DUP1"
    },
    "3904": {
      "op": "REVERT"
    },
    "3905": {
      "op": "JUMPDEST"
    },
    "3906": {
      "op": "DUP2"
    },
    "3907": {
      "op": "DUP8"
    },
    "3908": {
      "op": "ADD"
    },
    "3909": {
      "op": "SWAP2"
    },
    "3910": {
      "op": "POP"
    },
    "3911": {
      "op": "DUP8"
    },
    "3912": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3914": {
      "op": "DUP4"
    },
    "3915": {
      "op": "ADD"
    },
    "3916": {
      "op": "SLT"
    },
    "3917": {
      "op": "PUSH2",
      "value": "0xF55"
    },
    "3920": {
      "op": "JUMPI"
    },
    "3921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3923": {
      "op": "DUP1"
    },
    "3924": {
      "op": "REVERT"
    },
    "3925": {
      "op": "JUMPDEST"
    },
    "3926": {
      "op": "DUP2"
    },
    "3927": {
      "op": "CALLDATALOAD"
    },
    "3928": {
      "op": "DUP2"
    },
    "3929": {
      "op": "DUP2"
    },
    "3930": {
      "op": "GT"
    },
    "3931": {
      "op": "ISZERO"
    },
    "3932": {
      "op": "PUSH2",
      "value": "0xF67"
    },
    "3935": {
      "op": "JUMPI"
    },
    "3936": {
      "op": "PUSH2",
      "value": "0xF67"
    },
    "3939": {
      "op": "PUSH2",
      "value": "0xEDA"
    },
    "3942": {
      "jump": "i",
      "op": "JUMP"
    },
    "3943": {
      "op": "JUMPDEST"
    },
    "3944": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3946": {
      "op": "MLOAD"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3949": {
      "op": "DUP3"
    },
    "3950": {
      "op": "ADD"
    },
    "3951": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3953": {
      "op": "NOT"
    },
    "3954": {
      "op": "SWAP1"
    },
    "3955": {
      "op": "DUP2"
    },
    "3956": {
      "op": "AND"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3959": {
      "op": "ADD"
    },
    "3960": {
      "op": "AND"
    },
    "3961": {
      "op": "DUP2"
    },
    "3962": {
      "op": "ADD"
    },
    "3963": {
      "op": "SWAP1"
    },
    "3964": {
      "op": "DUP4"
    },
    "3965": {
      "op": "DUP3"
    },
    "3966": {
      "op": "GT"
    },
    "3967": {
      "op": "DUP2"
    },
    "3968": {
      "op": "DUP4"
    },
    "3969": {
      "op": "LT"
    },
    "3970": {
      "op": "OR"
    },
    "3971": {
      "op": "ISZERO"
    },
    "3972": {
      "op": "PUSH2",
      "value": "0xF8F"
    },
    "3975": {
      "op": "JUMPI"
    },
    "3976": {
      "op": "PUSH2",
      "value": "0xF8F"
    },
    "3979": {
      "op": "PUSH2",
      "value": "0xEDA"
    },
    "3982": {
      "jump": "i",
      "op": "JUMP"
    },
    "3983": {
      "op": "JUMPDEST"
    },
    "3984": {
      "op": "DUP2"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3987": {
      "op": "MSTORE"
    },
    "3988": {
      "op": "DUP3"
    },
    "3989": {
      "op": "DUP2"
    },
    "3990": {
      "op": "MSTORE"
    },
    "3991": {
      "op": "DUP11"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3994": {
      "op": "DUP5"
    },
    "3995": {
      "op": "DUP8"
    },
    "3996": {
      "op": "ADD"
    },
    "3997": {
      "op": "ADD"
    },
    "3998": {
      "op": "GT"
    },
    "3999": {
      "op": "ISZERO"
    },
    "4000": {
      "op": "PUSH2",
      "value": "0xFA8"
    },
    "4003": {
      "op": "JUMPI"
    },
    "4004": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4006": {
      "op": "DUP1"
    },
    "4007": {
      "op": "REVERT"
    },
    "4008": {
      "op": "JUMPDEST"
    },
    "4009": {
      "op": "DUP3"
    },
    "4010": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4012": {
      "op": "DUP7"
    },
    "4013": {
      "op": "ADD"
    },
    "4014": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4016": {
      "op": "DUP4"
    },
    "4017": {
      "op": "ADD"
    },
    "4018": {
      "op": "CALLDATACOPY"
    },
    "4019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4021": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4023": {
      "op": "DUP5"
    },
    "4024": {
      "op": "DUP4"
    },
    "4025": {
      "op": "ADD"
    },
    "4026": {
      "op": "ADD"
    },
    "4027": {
      "op": "MSTORE"
    },
    "4028": {
      "op": "DUP1"
    },
    "4029": {
      "op": "SWAP6"
    },
    "4030": {
      "op": "POP"
    },
    "4031": {
      "op": "POP"
    },
    "4032": {
      "op": "POP"
    },
    "4033": {
      "op": "POP"
    },
    "4034": {
      "op": "POP"
    },
    "4035": {
      "op": "POP"
    },
    "4036": {
      "op": "SWAP3"
    },
    "4037": {
      "op": "SWAP6"
    },
    "4038": {
      "op": "SWAP2"
    },
    "4039": {
      "op": "SWAP5"
    },
    "4040": {
      "op": "POP"
    },
    "4041": {
      "op": "SWAP3"
    },
    "4042": {
      "op": "POP"
    },
    "4043": {
      "jump": "o",
      "op": "JUMP"
    },
    "4044": {
      "op": "JUMPDEST"
    },
    "4045": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4047": {
      "op": "DUP1"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4050": {
      "op": "DUP4"
    },
    "4051": {
      "op": "DUP6"
    },
    "4052": {
      "op": "SUB"
    },
    "4053": {
      "op": "SLT"
    },
    "4054": {
      "op": "ISZERO"
    },
    "4055": {
      "op": "PUSH2",
      "value": "0xFDF"
    },
    "4058": {
      "op": "JUMPI"
    },
    "4059": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4061": {
      "op": "DUP1"
    },
    "4062": {
      "op": "REVERT"
    },
    "4063": {
      "op": "JUMPDEST"
    },
    "4064": {
      "op": "PUSH2",
      "value": "0xFE8"
    },
    "4067": {
      "op": "DUP4"
    },
    "4068": {
      "op": "PUSH2",
      "value": "0xE01"
    },
    "4071": {
      "jump": "i",
      "op": "JUMP"
    },
    "4072": {
      "op": "JUMPDEST"
    },
    "4073": {
      "op": "SWAP2"
    },
    "4074": {
      "op": "POP"
    },
    "4075": {
      "op": "PUSH2",
      "value": "0xFF6"
    },
    "4078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4080": {
      "op": "DUP5"
    },
    "4081": {
      "op": "ADD"
    },
    "4082": {
      "op": "PUSH2",
      "value": "0xE01"
    },
    "4085": {
      "jump": "i",
      "op": "JUMP"
    },
    "4086": {
      "op": "JUMPDEST"
    },
    "4087": {
      "op": "SWAP1"
    },
    "4088": {
      "op": "POP"
    },
    "4089": {
      "op": "SWAP3"
    },
    "4090": {
      "op": "POP"
    },
    "4091": {
      "op": "SWAP3"
    },
    "4092": {
      "op": "SWAP1"
    },
    "4093": {
      "op": "POP"
    },
    "4094": {
      "jump": "o",
      "op": "JUMP"
    },
    "4095": {
      "op": "JUMPDEST"
    },
    "4096": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4098": {
      "op": "DUP2"
    },
    "4099": {
      "op": "DUP2"
    },
    "4100": {
      "op": "SHR"
    },
    "4101": {
      "op": "SWAP1"
    },
    "4102": {
      "op": "DUP3"
    },
    "4103": {
      "op": "AND"
    },
    "4104": {
      "op": "DUP1"
    },
    "4105": {
      "op": "PUSH2",
      "value": "0x1013"
    },
    "4108": {
      "op": "JUMPI"
    },
    "4109": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4111": {
      "op": "DUP3"
    },
    "4112": {
      "op": "AND"
    },
    "4113": {
      "op": "SWAP2"
    },
    "4114": {
      "op": "POP"
    },
    "4115": {
      "op": "JUMPDEST"
    },
    "4116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4118": {
      "op": "DUP3"
    },
    "4119": {
      "op": "LT"
    },
    "4120": {
      "op": "DUP2"
    },
    "4121": {
      "op": "EQ"
    },
    "4122": {
      "op": "ISZERO"
    },
    "4123": {
      "op": "PUSH2",
      "value": "0x1034"
    },
    "4126": {
      "op": "JUMPI"
    },
    "4127": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4132": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4134": {
      "op": "SHL"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4137": {
      "op": "MSTORE"
    },
    "4138": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4140": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4142": {
      "op": "MSTORE"
    },
    "4143": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4145": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4147": {
      "op": "REVERT"
    },
    "4148": {
      "op": "JUMPDEST"
    },
    "4149": {
      "op": "POP"
    },
    "4150": {
      "op": "SWAP2"
    },
    "4151": {
      "op": "SWAP1"
    },
    "4152": {
      "op": "POP"
    },
    "4153": {
      "jump": "o",
      "op": "JUMP"
    },
    "4154": {
      "op": "JUMPDEST"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4157": {
      "op": "DUP1"
    },
    "4158": {
      "op": "DUP3"
    },
    "4159": {
      "op": "MSTORE"
    },
    "4160": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "4162": {
      "op": "SWAP1"
    },
    "4163": {
      "op": "DUP3"
    },
    "4164": {
      "op": "ADD"
    },
    "4165": {
      "op": "MSTORE"
    },
    "4166": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "4199": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4201": {
      "op": "DUP3"
    },
    "4202": {
      "op": "ADD"
    },
    "4203": {
      "op": "MSTORE"
    },
    "4204": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "4222": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4224": {
      "op": "SHL"
    },
    "4225": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4227": {
      "op": "DUP3"
    },
    "4228": {
      "op": "ADD"
    },
    "4229": {
      "op": "MSTORE"
    },
    "4230": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4232": {
      "op": "ADD"
    },
    "4233": {
      "op": "SWAP1"
    },
    "4234": {
      "jump": "o",
      "op": "JUMP"
    },
    "4235": {
      "op": "JUMPDEST"
    },
    "4236": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4238": {
      "op": "DUP4"
    },
    "4239": {
      "op": "MLOAD"
    },
    "4240": {
      "op": "PUSH2",
      "value": "0x109D"
    },
    "4243": {
      "op": "DUP2"
    },
    "4244": {
      "op": "DUP5"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4247": {
      "op": "DUP9"
    },
    "4248": {
      "op": "ADD"
    },
    "4249": {
      "op": "PUSH2",
      "value": "0xD7D"
    },
    "4252": {
      "jump": "i",
      "op": "JUMP"
    },
    "4253": {
      "op": "JUMPDEST"
    },
    "4254": {
      "op": "DUP4"
    },
    "4255": {
      "op": "MLOAD"
    },
    "4256": {
      "op": "SWAP1"
    },
    "4257": {
      "op": "DUP4"
    },
    "4258": {
      "op": "ADD"
    },
    "4259": {
      "op": "SWAP1"
    },
    "4260": {
      "op": "PUSH2",
      "value": "0x10B1"
    },
    "4263": {
      "op": "DUP2"
    },
    "4264": {
      "op": "DUP4"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4267": {
      "op": "DUP9"
    },
    "4268": {
      "op": "ADD"
    },
    "4269": {
      "op": "PUSH2",
      "value": "0xD7D"
    },
    "4272": {
      "jump": "i",
      "op": "JUMP"
    },
    "4273": {
      "op": "JUMPDEST"
    },
    "4274": {
      "op": "ADD"
    },
    "4275": {
      "op": "SWAP5"
    },
    "4276": {
      "op": "SWAP4"
    },
    "4277": {
      "op": "POP"
    },
    "4278": {
      "op": "POP"
    },
    "4279": {
      "op": "POP"
    },
    "4280": {
      "op": "POP"
    },
    "4281": {
      "jump": "o",
      "op": "JUMP"
    },
    "4282": {
      "op": "JUMPDEST"
    },
    "4283": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4288": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4290": {
      "op": "SHL"
    },
    "4291": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4293": {
      "op": "MSTORE"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4298": {
      "op": "MSTORE"
    },
    "4299": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4301": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4303": {
      "op": "REVERT"
    },
    "4304": {
      "op": "JUMPDEST"
    },
    "4305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4307": {
      "op": "DUP3"
    },
    "4308": {
      "op": "DUP3"
    },
    "4309": {
      "op": "LT"
    },
    "4310": {
      "op": "ISZERO"
    },
    "4311": {
      "op": "PUSH2",
      "value": "0x10E2"
    },
    "4314": {
      "op": "JUMPI"
    },
    "4315": {
      "op": "PUSH2",
      "value": "0x10E2"
    },
    "4318": {
      "op": "PUSH2",
      "value": "0x10BA"
    },
    "4321": {
      "jump": "i",
      "op": "JUMP"
    },
    "4322": {
      "op": "JUMPDEST"
    },
    "4323": {
      "op": "POP"
    },
    "4324": {
      "op": "SUB"
    },
    "4325": {
      "op": "SWAP1"
    },
    "4326": {
      "jump": "o",
      "op": "JUMP"
    },
    "4327": {
      "op": "JUMPDEST"
    },
    "4328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4330": {
      "op": "DUP3"
    },
    "4331": {
      "op": "NOT"
    },
    "4332": {
      "op": "DUP3"
    },
    "4333": {
      "op": "GT"
    },
    "4334": {
      "op": "ISZERO"
    },
    "4335": {
      "op": "PUSH2",
      "value": "0x10FA"
    },
    "4338": {
      "op": "JUMPI"
    },
    "4339": {
      "op": "PUSH2",
      "value": "0x10FA"
    },
    "4342": {
      "op": "PUSH2",
      "value": "0x10BA"
    },
    "4345": {
      "jump": "i",
      "op": "JUMP"
    },
    "4346": {
      "op": "JUMPDEST"
    },
    "4347": {
      "op": "POP"
    },
    "4348": {
      "op": "ADD"
    },
    "4349": {
      "op": "SWAP1"
    },
    "4350": {
      "jump": "o",
      "op": "JUMP"
    },
    "4351": {
      "op": "JUMPDEST"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4354": {
      "op": "DUP1"
    },
    "4355": {
      "op": "DUP3"
    },
    "4356": {
      "op": "MSTORE"
    },
    "4357": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4359": {
      "op": "SWAP1"
    },
    "4360": {
      "op": "DUP3"
    },
    "4361": {
      "op": "ADD"
    },
    "4362": {
      "op": "MSTORE"
    },
    "4363": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4398": {
      "op": "DUP3"
    },
    "4399": {
      "op": "ADD"
    },
    "4400": {
      "op": "MSTORE"
    },
    "4401": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "4420": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "4422": {
      "op": "SHL"
    },
    "4423": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4425": {
      "op": "DUP3"
    },
    "4426": {
      "op": "ADD"
    },
    "4427": {
      "op": "MSTORE"
    },
    "4428": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4430": {
      "op": "ADD"
    },
    "4431": {
      "op": "SWAP1"
    },
    "4432": {
      "jump": "o",
      "op": "JUMP"
    },
    "4433": {
      "op": "JUMPDEST"
    },
    "4434": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4438": {
      "op": "NOT"
    },
    "4439": {
      "op": "DUP3"
    },
    "4440": {
      "op": "EQ"
    },
    "4441": {
      "op": "ISZERO"
    },
    "4442": {
      "op": "PUSH2",
      "value": "0x1165"
    },
    "4445": {
      "op": "JUMPI"
    },
    "4446": {
      "op": "PUSH2",
      "value": "0x1165"
    },
    "4449": {
      "op": "PUSH2",
      "value": "0x10BA"
    },
    "4452": {
      "jump": "i",
      "op": "JUMP"
    },
    "4453": {
      "op": "JUMPDEST"
    },
    "4454": {
      "op": "POP"
    },
    "4455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4457": {
      "op": "ADD"
    },
    "4458": {
      "op": "SWAP1"
    },
    "4459": {
      "jump": "o",
      "op": "JUMP"
    },
    "4460": {
      "op": "JUMPDEST"
    },
    "4461": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4466": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4468": {
      "op": "SHL"
    },
    "4469": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4471": {
      "op": "MSTORE"
    },
    "4472": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4474": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4476": {
      "op": "MSTORE"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4481": {
      "op": "REVERT"
    },
    "4482": {
      "op": "JUMPDEST"
    },
    "4483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4485": {
      "op": "DUP3"
    },
    "4486": {
      "op": "PUSH2",
      "value": "0x1191"
    },
    "4489": {
      "op": "JUMPI"
    },
    "4490": {
      "op": "PUSH2",
      "value": "0x1191"
    },
    "4493": {
      "op": "PUSH2",
      "value": "0x116C"
    },
    "4496": {
      "jump": "i",
      "op": "JUMP"
    },
    "4497": {
      "op": "JUMPDEST"
    },
    "4498": {
      "op": "POP"
    },
    "4499": {
      "op": "DIV"
    },
    "4500": {
      "op": "SWAP1"
    },
    "4501": {
      "jump": "o",
      "op": "JUMP"
    },
    "4502": {
      "op": "JUMPDEST"
    },
    "4503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4505": {
      "op": "DUP3"
    },
    "4506": {
      "op": "PUSH2",
      "value": "0x11A5"
    },
    "4509": {
      "op": "JUMPI"
    },
    "4510": {
      "op": "PUSH2",
      "value": "0x11A5"
    },
    "4513": {
      "op": "PUSH2",
      "value": "0x116C"
    },
    "4516": {
      "jump": "i",
      "op": "JUMP"
    },
    "4517": {
      "op": "JUMPDEST"
    },
    "4518": {
      "op": "POP"
    },
    "4519": {
      "op": "MOD"
    },
    "4520": {
      "op": "SWAP1"
    },
    "4521": {
      "jump": "o",
      "op": "JUMP"
    },
    "4522": {
      "op": "JUMPDEST"
    },
    "4523": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4528": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4530": {
      "op": "SHL"
    },
    "4531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4533": {
      "op": "MSTORE"
    },
    "4534": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4536": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4538": {
      "op": "MSTORE"
    },
    "4539": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4541": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4543": {
      "op": "REVERT"
    },
    "4544": {
      "op": "JUMPDEST"
    },
    "4545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4551": {
      "op": "SHL"
    },
    "4552": {
      "op": "SUB"
    },
    "4553": {
      "op": "DUP6"
    },
    "4554": {
      "op": "DUP2"
    },
    "4555": {
      "op": "AND"
    },
    "4556": {
      "op": "DUP3"
    },
    "4557": {
      "op": "MSTORE"
    },
    "4558": {
      "op": "DUP5"
    },
    "4559": {
      "op": "AND"
    },
    "4560": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4562": {
      "op": "DUP3"
    },
    "4563": {
      "op": "ADD"
    },
    "4564": {
      "op": "MSTORE"
    },
    "4565": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4567": {
      "op": "DUP2"
    },
    "4568": {
      "op": "ADD"
    },
    "4569": {
      "op": "DUP4"
    },
    "4570": {
      "op": "SWAP1"
    },
    "4571": {
      "op": "MSTORE"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4574": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4576": {
      "op": "DUP3"
    },
    "4577": {
      "op": "ADD"
    },
    "4578": {
      "op": "DUP2"
    },
    "4579": {
      "op": "SWAP1"
    },
    "4580": {
      "op": "MSTORE"
    },
    "4581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4583": {
      "op": "SWAP1"
    },
    "4584": {
      "op": "PUSH2",
      "value": "0x11F3"
    },
    "4587": {
      "op": "SWAP1"
    },
    "4588": {
      "op": "DUP4"
    },
    "4589": {
      "op": "ADD"
    },
    "4590": {
      "op": "DUP5"
    },
    "4591": {
      "op": "PUSH2",
      "value": "0xDA9"
    },
    "4594": {
      "jump": "i",
      "op": "JUMP"
    },
    "4595": {
      "op": "JUMPDEST"
    },
    "4596": {
      "op": "SWAP7"
    },
    "4597": {
      "op": "SWAP6"
    },
    "4598": {
      "op": "POP"
    },
    "4599": {
      "op": "POP"
    },
    "4600": {
      "op": "POP"
    },
    "4601": {
      "op": "POP"
    },
    "4602": {
      "op": "POP"
    },
    "4603": {
      "op": "POP"
    },
    "4604": {
      "jump": "o",
      "op": "JUMP"
    },
    "4605": {
      "op": "JUMPDEST"
    },
    "4606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4610": {
      "op": "DUP3"
    },
    "4611": {
      "op": "DUP5"
    },
    "4612": {
      "op": "SUB"
    },
    "4613": {
      "op": "SLT"
    },
    "4614": {
      "op": "ISZERO"
    },
    "4615": {
      "op": "PUSH2",
      "value": "0x120F"
    },
    "4618": {
      "op": "JUMPI"
    },
    "4619": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4621": {
      "op": "DUP1"
    },
    "4622": {
      "op": "REVERT"
    },
    "4623": {
      "op": "JUMPDEST"
    },
    "4624": {
      "op": "DUP2"
    },
    "4625": {
      "op": "MLOAD"
    },
    "4626": {
      "op": "PUSH2",
      "value": "0x73D"
    },
    "4629": {
      "op": "DUP2"
    },
    "4630": {
      "op": "PUSH2",
      "value": "0xD47"
    },
    "4633": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "9158a1e5d76c0e1ebc9a2bde2dad0b06223eff9b",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overriden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n",
  "sourceMap": "613:13006:2:-:0;;;1375:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1441:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1464:17:2;;;;:7;;:17;;;;;:::i;:::-;;1375:113;;613:13006;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;613:13006:2;;;-1:-1:-1;613:13006:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:13;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:13;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:13;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:13:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:13;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;613:13006:2;;;;;;",
  "sourcePath": "/Users/nolanterry/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.4.1/contracts/token/ERC721/ERC721.sol",
  "type": "contract"
}