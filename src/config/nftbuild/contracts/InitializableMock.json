{
  "abi": [
    {
      "inputs": [],
      "name": "fail",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initializeOnlyInitializing",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_x",
          "type": "uint256"
        }
      ],
      "name": "initializeWithX",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initializerNested",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initializerRan",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_x",
          "type": "uint256"
        }
      ],
      "name": "nonInitializable",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "onlyInitializingNested",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "onlyInitializingRan",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "x",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "116": "contracts/openzeppelin/contracts/mocks/InitializableMock.sol",
    "155": "contracts/openzeppelin/contracts/proxy/utils/Initializable.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/mocks/InitializableMock.sol",
    "exportedSymbols": {
      "Address": [
        26327
      ],
      "ConstructorInitializableMock": [
        12744
      ],
      "Initializable": [
        17613
      ],
      "InitializableMock": [
        12705
      ]
    },
    "id": 12745,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12625,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:116"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/proxy/utils/Initializable.sol",
        "file": "../proxy/utils/Initializable.sol",
        "id": 12626,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12745,
        "sourceUnit": 17614,
        "src": "58:42:116",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12628,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17613,
              "src": "236:13:116"
            },
            "id": 12629,
            "nodeType": "InheritanceSpecifier",
            "src": "236:13:116"
          }
        ],
        "canonicalName": "InitializableMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 12627,
          "nodeType": "StructuredDocumentation",
          "src": "102:103:116",
          "text": " @title InitializableMock\n @dev This contract is a mock to test initializable functionality"
        },
        "fullyImplemented": true,
        "id": 12705,
        "linearizedBaseContracts": [
          12705,
          17613
        ],
        "name": "InitializableMock",
        "nameLocation": "215:17:116",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c3b8ef2a",
            "id": 12631,
            "mutability": "mutable",
            "name": "initializerRan",
            "nameLocation": "268:14:116",
            "nodeType": "VariableDeclaration",
            "scope": 12705,
            "src": "256:26:116",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 12630,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "256:4:116",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7cffe97a",
            "id": 12633,
            "mutability": "mutable",
            "name": "onlyInitializingRan",
            "nameLocation": "300:19:116",
            "nodeType": "VariableDeclaration",
            "scope": 12705,
            "src": "288:31:116",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 12632,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "288:4:116",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0c55699c",
            "id": 12635,
            "mutability": "mutable",
            "name": "x",
            "nameLocation": "340:1:116",
            "nodeType": "VariableDeclaration",
            "scope": 12705,
            "src": "325:16:116",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 12634,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "325:7:116",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 12644,
              "nodeType": "Block",
              "src": "389:38:116",
              "statements": [
                {
                  "expression": {
                    "id": 12642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12640,
                      "name": "initializerRan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12631,
                      "src": "399:14:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 12641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "416:4:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "399:21:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12643,
                  "nodeType": "ExpressionStatement",
                  "src": "399:21:116"
                }
              ]
            },
            "functionSelector": "8129fc1c",
            "id": 12645,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12638,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12637,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17587,
                  "src": "377:11:116"
                },
                "nodeType": "ModifierInvocation",
                "src": "377:11:116"
              }
            ],
            "name": "initialize",
            "nameLocation": "357:10:116",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "367:2:116"
            },
            "returnParameters": {
              "id": 12639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "389:0:116"
            },
            "scope": 12705,
            "src": "348:79:116",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12654,
              "nodeType": "Block",
              "src": "495:43:116",
              "statements": [
                {
                  "expression": {
                    "id": 12652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12650,
                      "name": "onlyInitializingRan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12633,
                      "src": "505:19:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 12651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "527:4:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "505:26:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12653,
                  "nodeType": "ExpressionStatement",
                  "src": "505:26:116"
                }
              ]
            },
            "functionSelector": "10065ed2",
            "id": 12655,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12648,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12647,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17597,
                  "src": "478:16:116"
                },
                "nodeType": "ModifierInvocation",
                "src": "478:16:116"
              }
            ],
            "name": "initializeOnlyInitializing",
            "nameLocation": "442:26:116",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12646,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "468:2:116"
            },
            "returnParameters": {
              "id": 12649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "495:0:116"
            },
            "scope": 12705,
            "src": "433:105:116",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12663,
              "nodeType": "Block",
              "src": "592:29:116",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 12660,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12645,
                      "src": "602:10:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 12661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "602:12:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12662,
                  "nodeType": "ExpressionStatement",
                  "src": "602:12:116"
                }
              ]
            },
            "functionSelector": "76268ae8",
            "id": 12664,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12658,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12657,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17587,
                  "src": "580:11:116"
                },
                "nodeType": "ModifierInvocation",
                "src": "580:11:116"
              }
            ],
            "name": "initializerNested",
            "nameLocation": "553:17:116",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "570:2:116"
            },
            "returnParameters": {
              "id": 12659,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "592:0:116"
            },
            "scope": 12705,
            "src": "544:77:116",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12672,
              "nodeType": "Block",
              "src": "680:45:116",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 12669,
                      "name": "initializeOnlyInitializing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12655,
                      "src": "690:26:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 12670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "690:28:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12671,
                  "nodeType": "ExpressionStatement",
                  "src": "690:28:116"
                }
              ]
            },
            "functionSelector": "68449d1b",
            "id": 12673,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12667,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12666,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17587,
                  "src": "668:11:116"
                },
                "nodeType": "ModifierInvocation",
                "src": "668:11:116"
              }
            ],
            "name": "onlyInitializingNested",
            "nameLocation": "636:22:116",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "658:2:116"
            },
            "returnParameters": {
              "id": 12668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "680:0:116"
            },
            "scope": 12705,
            "src": "627:98:116",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12684,
              "nodeType": "Block",
              "src": "795:23:116",
              "statements": [
                {
                  "expression": {
                    "id": 12682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12680,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12635,
                      "src": "805:1:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12681,
                      "name": "_x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12675,
                      "src": "809:2:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "805:6:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12683,
                  "nodeType": "ExpressionStatement",
                  "src": "805:6:116"
                }
              ]
            },
            "functionSelector": "0018eaa8",
            "id": 12685,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12678,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12677,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17587,
                  "src": "783:11:116"
                },
                "nodeType": "ModifierInvocation",
                "src": "783:11:116"
              }
            ],
            "name": "initializeWithX",
            "nameLocation": "740:15:116",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12676,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12675,
                  "mutability": "mutable",
                  "name": "_x",
                  "nameLocation": "764:2:116",
                  "nodeType": "VariableDeclaration",
                  "scope": 12685,
                  "src": "756:10:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12674,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "756:7:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "755:12:116"
            },
            "returnParameters": {
              "id": 12679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "795:0:116"
            },
            "scope": 12705,
            "src": "731:87:116",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12694,
              "nodeType": "Block",
              "src": "877:23:116",
              "statements": [
                {
                  "expression": {
                    "id": 12692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12690,
                      "name": "x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12635,
                      "src": "887:1:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12691,
                      "name": "_x",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12687,
                      "src": "891:2:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "887:6:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12693,
                  "nodeType": "ExpressionStatement",
                  "src": "887:6:116"
                }
              ]
            },
            "functionSelector": "e955c9ec",
            "id": 12695,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nonInitializable",
            "nameLocation": "833:16:116",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12688,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12687,
                  "mutability": "mutable",
                  "name": "_x",
                  "nameLocation": "858:2:116",
                  "nodeType": "VariableDeclaration",
                  "scope": 12695,
                  "src": "850:10:116",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12686,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "850:7:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "849:12:116"
            },
            "returnParameters": {
              "id": 12689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "877:0:116"
            },
            "scope": 12705,
            "src": "824:76:116",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12703,
              "nodeType": "Block",
              "src": "934:67:116",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66616c7365",
                        "id": 12699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "952:5:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "496e697469616c697a61626c654d6f636b20666f72636564206661696c757265",
                        "id": 12700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "959:34:116",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70458f305ab12a5814a8a6125666b5faf9428e7481e52fe1e943f8addb4009b7",
                          "typeString": "literal_string \"InitializableMock forced failure\""
                        },
                        "value": "InitializableMock forced failure"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70458f305ab12a5814a8a6125666b5faf9428e7481e52fe1e943f8addb4009b7",
                          "typeString": "literal_string \"InitializableMock forced failure\""
                        }
                      ],
                      "id": 12698,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "944:7:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "944:50:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12702,
                  "nodeType": "ExpressionStatement",
                  "src": "944:50:116"
                }
              ]
            },
            "functionSelector": "a9cc4718",
            "id": 12704,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fail",
            "nameLocation": "915:4:116",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "919:2:116"
            },
            "returnParameters": {
              "id": 12697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "934:0:116"
            },
            "scope": 12705,
            "src": "906:95:116",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 12745,
        "src": "206:797:116",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12706,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17613,
              "src": "1046:13:116"
            },
            "id": 12707,
            "nodeType": "InheritanceSpecifier",
            "src": "1046:13:116"
          }
        ],
        "canonicalName": "ConstructorInitializableMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 12744,
        "linearizedBaseContracts": [
          12744,
          17613
        ],
        "name": "ConstructorInitializableMock",
        "nameLocation": "1014:28:116",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "c3b8ef2a",
            "id": 12709,
            "mutability": "mutable",
            "name": "initializerRan",
            "nameLocation": "1078:14:116",
            "nodeType": "VariableDeclaration",
            "scope": 12744,
            "src": "1066:26:116",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 12708,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1066:4:116",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7cffe97a",
            "id": 12711,
            "mutability": "mutable",
            "name": "onlyInitializingRan",
            "nameLocation": "1110:19:116",
            "nodeType": "VariableDeclaration",
            "scope": 12744,
            "src": "1098:31:116",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 12710,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1098:4:116",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 12722,
              "nodeType": "Block",
              "src": "1162:67:116",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 12716,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12733,
                      "src": "1172:10:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 12717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1172:12:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12718,
                  "nodeType": "ExpressionStatement",
                  "src": "1172:12:116"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 12719,
                      "name": "initializeOnlyInitializing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12743,
                      "src": "1194:26:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 12720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1194:28:116",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12721,
                  "nodeType": "ExpressionStatement",
                  "src": "1194:28:116"
                }
              ]
            },
            "id": 12723,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "id": 12714,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12713,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17587,
                  "src": "1150:11:116"
                },
                "nodeType": "ModifierInvocation",
                "src": "1150:11:116"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1147:2:116"
            },
            "returnParameters": {
              "id": 12715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1162:0:116"
            },
            "scope": 12744,
            "src": "1136:93:116",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12732,
              "nodeType": "Block",
              "src": "1276:38:116",
              "statements": [
                {
                  "expression": {
                    "id": 12730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12728,
                      "name": "initializerRan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12709,
                      "src": "1286:14:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 12729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1303:4:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1286:21:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12731,
                  "nodeType": "ExpressionStatement",
                  "src": "1286:21:116"
                }
              ]
            },
            "functionSelector": "8129fc1c",
            "id": 12733,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12726,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12725,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17587,
                  "src": "1264:11:116"
                },
                "nodeType": "ModifierInvocation",
                "src": "1264:11:116"
              }
            ],
            "name": "initialize",
            "nameLocation": "1244:10:116",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12724,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1254:2:116"
            },
            "returnParameters": {
              "id": 12727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1276:0:116"
            },
            "scope": 12744,
            "src": "1235:79:116",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12742,
              "nodeType": "Block",
              "src": "1382:43:116",
              "statements": [
                {
                  "expression": {
                    "id": 12740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12738,
                      "name": "onlyInitializingRan",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12711,
                      "src": "1392:19:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 12739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1414:4:116",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1392:26:116",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12741,
                  "nodeType": "ExpressionStatement",
                  "src": "1392:26:116"
                }
              ]
            },
            "functionSelector": "10065ed2",
            "id": 12743,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12736,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12735,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 17597,
                  "src": "1365:16:116"
                },
                "nodeType": "ModifierInvocation",
                "src": "1365:16:116"
              }
            ],
            "name": "initializeOnlyInitializing",
            "nameLocation": "1329:26:116",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1355:2:116"
            },
            "returnParameters": {
              "id": 12737,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1382:0:116"
            },
            "scope": 12744,
            "src": "1320:105:116",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 12745,
        "src": "1005:422:116",
        "usedErrors": []
      }
    ],
    "src": "33:1395:116"
  },
  "bytecode": "608060405234801561001057600080fd5b506104e3806100206000396000f3fe6080604052600436106100905760003560e01c80637cffe97a116100595780637cffe97a146101125780638129fc1c14610143578063a9cc471814610158578063c3b8ef2a1461016d578063e955c9ec1461018d57600080fd5b806218eaa8146100955780630c55699c146100aa57806310065ed2146100d357806368449d1b146100e857806376268ae8146100fd575b600080fd5b6100a86100a3366004610446565b6101a0565b005b3480156100b657600080fd5b506100c060015481565b6040519081526020015b60405180910390f35b3480156100df57600080fd5b506100a8610221565b3480156100f457600080fd5b506100a86102a1565b34801561010957600080fd5b506100a861031b565b34801561011e57600080fd5b50600054610133906301000000900460ff1681565b60405190151581526020016100ca565b34801561014f57600080fd5b506100a861037c565b34801561016457600080fd5b506100a86103fe565b34801561017957600080fd5b506000546101339062010000900460ff1681565b6100a861019b366004610446565b600155565b600054610100900460ff166101bb5760005460ff16156101bf565b303b155b6101e45760405162461bcd60e51b81526004016101db9061045f565b60405180910390fd5b600054610100900460ff16158015610206576000805461ffff19166101011790555b6001829055801561021d576000805461ff00191690555b5050565b600054610100900460ff1661028c5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016101db565b6000805463ff00000019166301000000179055565b600054610100900460ff166102bc5760005460ff16156102c0565b303b155b6102dc5760405162461bcd60e51b81526004016101db9061045f565b600054610100900460ff161580156102fe576000805461ffff19166101011790555b610306610221565b8015610318576000805461ff00191690555b50565b600054610100900460ff166103365760005460ff161561033a565b303b155b6103565760405162461bcd60e51b81526004016101db9061045f565b600054610100900460ff16158015610378576000805461ffff19166101011790555b6103065b600054610100900460ff166103975760005460ff161561039b565b303b155b6103b75760405162461bcd60e51b81526004016101db9061045f565b600054610100900460ff161580156103d9576000805461ffff19166101011790555b6000805462ff00001916620100001790558015610318576000805461ff001916905550565b60405162461bcd60e51b815260206004820181905260248201527f496e697469616c697a61626c654d6f636b20666f72636564206661696c75726560448201526064016101db565b60006020828403121561045857600080fd5b5035919050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b60608201526080019056fea264697066735822122005e7bba9543eaa8c5f8142ca11a79566ed05fd6461806e03014d119c9809c6c164736f6c634300080c0033",
  "bytecodeSha1": "8c302253dcb403093cb7152a75ec9d1f4a586352",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "InitializableMock",
  "coverageMap": {
    "branches": {
      "116": {},
      "155": {
        "InitializableMock.initialize": {
          "9": [
            2358,
            2371,
            true
          ],
          "10": [
            2358,
            2406,
            true
          ]
        },
        "InitializableMock.initializeOnlyInitializing": {
          "8": [
            2941,
            2954,
            true
          ]
        }
      }
    },
    "statements": {
      "116": {
        "InitializableMock.fail": {
          "7": [
            944,
            994
          ]
        },
        "InitializableMock.initialize": {
          "6": [
            399,
            420
          ]
        },
        "InitializableMock.initializeOnlyInitializing": {
          "3": [
            505,
            531
          ]
        },
        "InitializableMock.initializeWithX": {
          "2": [
            805,
            811
          ]
        },
        "InitializableMock.initializerNested": {
          "5": [
            602,
            614
          ]
        },
        "InitializableMock.nonInitializable": {
          "0": [
            887,
            893
          ]
        },
        "InitializableMock.onlyInitializingNested": {
          "4": [
            690,
            718
          ]
        }
      },
      "155": {
        "Initializable._isConstructor": {
          "1": [
            3090,
            3131
          ]
        }
      }
    }
  },
  "dependencies": [
    "Initializable"
  ],
  "deployedBytecode": "6080604052600436106100905760003560e01c80637cffe97a116100595780637cffe97a146101125780638129fc1c14610143578063a9cc471814610158578063c3b8ef2a1461016d578063e955c9ec1461018d57600080fd5b806218eaa8146100955780630c55699c146100aa57806310065ed2146100d357806368449d1b146100e857806376268ae8146100fd575b600080fd5b6100a86100a3366004610446565b6101a0565b005b3480156100b657600080fd5b506100c060015481565b6040519081526020015b60405180910390f35b3480156100df57600080fd5b506100a8610221565b3480156100f457600080fd5b506100a86102a1565b34801561010957600080fd5b506100a861031b565b34801561011e57600080fd5b50600054610133906301000000900460ff1681565b60405190151581526020016100ca565b34801561014f57600080fd5b506100a861037c565b34801561016457600080fd5b506100a86103fe565b34801561017957600080fd5b506000546101339062010000900460ff1681565b6100a861019b366004610446565b600155565b600054610100900460ff166101bb5760005460ff16156101bf565b303b155b6101e45760405162461bcd60e51b81526004016101db9061045f565b60405180910390fd5b600054610100900460ff16158015610206576000805461ffff19166101011790555b6001829055801561021d576000805461ff00191690555b5050565b600054610100900460ff1661028c5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016101db565b6000805463ff00000019166301000000179055565b600054610100900460ff166102bc5760005460ff16156102c0565b303b155b6102dc5760405162461bcd60e51b81526004016101db9061045f565b600054610100900460ff161580156102fe576000805461ffff19166101011790555b610306610221565b8015610318576000805461ff00191690555b50565b600054610100900460ff166103365760005460ff161561033a565b303b155b6103565760405162461bcd60e51b81526004016101db9061045f565b600054610100900460ff16158015610378576000805461ffff19166101011790555b6103065b600054610100900460ff166103975760005460ff161561039b565b303b155b6103b75760405162461bcd60e51b81526004016101db9061045f565b600054610100900460ff161580156103d9576000805461ffff19166101011790555b6000805462ff00001916620100001790558015610318576000805461ff001916905550565b60405162461bcd60e51b815260206004820181905260248201527f496e697469616c697a61626c654d6f636b20666f72636564206661696c75726560448201526064016101db565b60006020828403121561045857600080fd5b5035919050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b60608201526080019056fea264697066735822122005e7bba9543eaa8c5f8142ca11a79566ed05fd6461806e03014d119c9809c6c164736f6c634300080c0033",
  "deployedSourceMap": "206:797:116:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;731:87;;;;;;:::i;:::-;;:::i;:::-;;325:16;;;;;;;;;;;;;;;;;;;345:25:239;;;333:2;318:18;325:16:116;;;;;;;;433:105;;;;;;;;;;;;;:::i;627:98::-;;;;;;;;;;;;;:::i;544:77::-;;;;;;;;;;;;;:::i;288:31::-;;;;;;;;;;-1:-1:-1;288:31:116;;;;;;;;;;;;;;546:14:239;;539:22;521:41;;509:2;494:18;288:31:116;381:187:239;348:79:116;;;;;;;;;;;;;:::i;906:95::-;;;;;;;;;;;;;:::i;256:26::-;;;;;;;;;;-1:-1:-1;256:26:116;;;;;;;;;;;824:76;;;;;;:::i;:::-;887:1;:6;824:76;731:87;2358:13:155;;;;;;;:48;;2394:12;;;;2393:13;2358:48;;;3125:4;1465:19:206;:23;2374:16:155;2350:107;;;;-1:-1:-1;;;2350:107:155;;;;;;;:::i;:::-;;;;;;;;;2468:19;2491:13;;;;;;2490:14;2514:98;;;;2548:13;:20;;-1:-1:-1;;2582:19:155;;;;;2514:98;805:1:116::1;:6:::0;;;2634:66:155;;;;2684:5;2668:21;;-1:-1:-1;;2668:21:155;;;2634:66;2069:637;731:87:116;:::o;433:105::-;2941:13:155;;;;;;;2933:69;;;;-1:-1:-1;;;2933:69:155;;1190:2:239;2933:69:155;;;1172:21:239;1229:2;1209:18;;;1202:30;1268:34;1248:18;;;1241:62;-1:-1:-1;;;1319:18:239;;;1312:41;1370:19;;2933:69:155;988:407:239;2933:69:155;505:19:116::1;:26:::0;;-1:-1:-1;;505:26:116::1;::::0;::::1;::::0;;433:105::o;627:98::-;2358:13:155;;;;;;;:48;;2394:12;;;;2393:13;2358:48;;;3125:4;1465:19:206;:23;2374:16:155;2350:107;;;;-1:-1:-1;;;2350:107:155;;;;;;;:::i;:::-;2468:19;2491:13;;;;;;2490:14;2514:98;;;;2548:13;:20;;-1:-1:-1;;2582:19:155;;;;;2514:98;690:28:116::1;:26;:28::i;:::-;2638:14:155::0;2634:66;;;2684:5;2668:21;;-1:-1:-1;;2668:21:155;;;2634:66;2069:637;627:98:116:o;544:77::-;2358:13:155;;;;;;;:48;;2394:12;;;;2393:13;2358:48;;;3125:4;1465:19:206;:23;2374:16:155;2350:107;;;;-1:-1:-1;;;2350:107:155;;;;;;;:::i;:::-;2468:19;2491:13;;;;;;2490:14;2514:98;;;;2548:13;:20;;-1:-1:-1;;2582:19:155;;;;;2514:98;602:12:116::1;348:79:::0;2358:13:155;;;;;;;:48;;2394:12;;;;2393:13;2358:48;;;3125:4;1465:19:206;:23;2374:16:155;2350:107;;;;-1:-1:-1;;;2350:107:155;;;;;;;:::i;:::-;2468:19;2491:13;;;;;;2490:14;2514:98;;;;2548:13;:20;;-1:-1:-1;;2582:19:155;;;;;2514:98;399:14:116::1;:21:::0;;-1:-1:-1;;399:21:116::1;::::0;::::1;::::0;;2634:66:155;;;;2684:5;2668:21;;-1:-1:-1;;2668:21:155;;;2069:637;348:79:116:o;906:95::-;944:50;;-1:-1:-1;;;944:50:116;;1602:2:239;944:50:116;;;1584:21:239;;;1621:18;;;1614:30;1680:34;1660:18;;;1653:62;1732:18;;944:50:116;1400:356:239;14:180;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:239;;14:180;-1:-1:-1;14:180:239:o;573:410::-;775:2;757:21;;;814:2;794:18;;;787:30;853:34;848:2;833:18;;826:62;-1:-1:-1;;;919:2:239;904:18;;897:44;973:3;958:19;;573:410::o",
  "language": "Solidity",
  "natspec": {
    "details": "This contract is a mock to test initializable functionality",
    "kind": "dev",
    "methods": {},
    "title": "InitializableMock",
    "version": 1
  },
  "offset": [
    206,
    1003
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x90 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7CFFE97A GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x7CFFE97A EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0xA9CC4718 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xC3B8EF2A EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0xE955C9EC EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x18EAA8 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xC55699C EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x10065ED2 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0x68449D1B EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x76268AE8 EQ PUSH2 0xFD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA8 PUSH2 0xA3 CALLDATASIZE PUSH1 0x4 PUSH2 0x446 JUMP JUMPDEST PUSH2 0x1A0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC0 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x221 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x2A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x31B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x133 SWAP1 PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xCA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x37C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA8 PUSH2 0x3FE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x133 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xA8 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x446 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1BB JUMPI PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1BF JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0x1E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DB SWAP1 PUSH2 0x45F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x28C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x6E697469616C697A696E67 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1DB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH4 0xFF000000 NOT AND PUSH4 0x1000000 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2BC JUMPI PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2C0 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0x2DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DB SWAP1 PUSH2 0x45F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x2FE JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x306 PUSH2 0x221 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x336 JUMPI PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x33A JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0x356 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DB SWAP1 PUSH2 0x45F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x378 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH2 0x306 JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x397 JUMPI PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x39B JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0x3B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DB SWAP1 PUSH2 0x45F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFFFF NOT AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH3 0xFF0000 NOT AND PUSH3 0x10000 OR SWAP1 SSTORE DUP1 ISZERO PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH2 0xFF00 NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C654D6F636B20666F72636564206661696C757265 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1DB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x191E481A5B9A5D1A585B1A5E9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV 0xE7 0xBB 0xA9 SLOAD RETURNDATACOPY 0xAA DUP13 0x5F DUP2 TIMESTAMP 0xCA GT 0xA7 SWAP6 PUSH7 0xED05FD6461806E SUB ADD 0x4D GT SWAP13 SWAP9 MULMOD 0xC6 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        206,
        1003
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "MSTORE",
      "path": "116"
    },
    "5": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "CALLDATASIZE",
      "path": "116"
    },
    "8": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "LT",
      "path": "116"
    },
    "9": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x90"
    },
    "12": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "JUMPI",
      "path": "116"
    },
    "13": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "CALLDATALOAD",
      "path": "116"
    },
    "16": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "SHR",
      "path": "116"
    },
    "19": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "DUP1",
      "path": "116"
    },
    "20": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH4",
      "path": "116",
      "value": "0x7CFFE97A"
    },
    "25": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "GT",
      "path": "116"
    },
    "26": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x59"
    },
    "29": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "JUMPI",
      "path": "116"
    },
    "30": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "DUP1",
      "path": "116"
    },
    "31": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH4",
      "path": "116",
      "value": "0x7CFFE97A"
    },
    "36": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "EQ",
      "path": "116"
    },
    "37": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x112"
    },
    "40": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "JUMPI",
      "path": "116"
    },
    "41": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "DUP1",
      "path": "116"
    },
    "42": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH4",
      "path": "116",
      "value": "0x8129FC1C"
    },
    "47": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "EQ",
      "path": "116"
    },
    "48": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x143"
    },
    "51": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "JUMPI",
      "path": "116"
    },
    "52": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "DUP1",
      "path": "116"
    },
    "53": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH4",
      "path": "116",
      "value": "0xA9CC4718"
    },
    "58": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "EQ",
      "path": "116"
    },
    "59": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x158"
    },
    "62": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "JUMPI",
      "path": "116"
    },
    "63": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "DUP1",
      "path": "116"
    },
    "64": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH4",
      "path": "116",
      "value": "0xC3B8EF2A"
    },
    "69": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "EQ",
      "path": "116"
    },
    "70": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x16D"
    },
    "73": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "JUMPI",
      "path": "116"
    },
    "74": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "DUP1",
      "path": "116"
    },
    "75": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH4",
      "path": "116",
      "value": "0xE955C9EC"
    },
    "80": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "EQ",
      "path": "116"
    },
    "81": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x18D"
    },
    "84": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "JUMPI",
      "path": "116"
    },
    "85": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0x0"
    },
    "87": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "DUP1",
      "path": "116"
    },
    "88": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "REVERT",
      "path": "116"
    },
    "89": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "90": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "DUP1",
      "path": "116"
    },
    "91": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH3",
      "path": "116",
      "value": "0x18EAA8"
    },
    "95": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "EQ",
      "path": "116"
    },
    "96": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x95"
    },
    "99": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "JUMPI",
      "path": "116"
    },
    "100": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "DUP1",
      "path": "116"
    },
    "101": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH4",
      "path": "116",
      "value": "0xC55699C"
    },
    "106": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "EQ",
      "path": "116"
    },
    "107": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0xAA"
    },
    "110": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "JUMPI",
      "path": "116"
    },
    "111": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "DUP1",
      "path": "116"
    },
    "112": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH4",
      "path": "116",
      "value": "0x10065ED2"
    },
    "117": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "EQ",
      "path": "116"
    },
    "118": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0xD3"
    },
    "121": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "JUMPI",
      "path": "116"
    },
    "122": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "DUP1",
      "path": "116"
    },
    "123": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH4",
      "path": "116",
      "value": "0x68449D1B"
    },
    "128": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "EQ",
      "path": "116"
    },
    "129": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0xE8"
    },
    "132": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "JUMPI",
      "path": "116"
    },
    "133": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "DUP1",
      "path": "116"
    },
    "134": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH4",
      "path": "116",
      "value": "0x76268AE8"
    },
    "139": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "EQ",
      "path": "116"
    },
    "140": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0xFD"
    },
    "143": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "JUMPI",
      "path": "116"
    },
    "144": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "145": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0x0"
    },
    "147": {
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "DUP1",
      "path": "116"
    },
    "148": {
      "first_revert": true,
      "fn": null,
      "offset": [
        206,
        1003
      ],
      "op": "REVERT",
      "path": "116"
    },
    "149": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        731,
        818
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "150": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        731,
        818
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0xA8"
    },
    "153": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        731,
        818
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0xA3"
    },
    "156": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        731,
        818
      ],
      "op": "CALLDATASIZE",
      "path": "116"
    },
    "157": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        731,
        818
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0x4"
    },
    "159": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        731,
        818
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x446"
    },
    "162": {
      "fn": "InitializableMock.initializeWithX",
      "jump": "i",
      "offset": [
        731,
        818
      ],
      "op": "JUMP",
      "path": "116"
    },
    "163": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        731,
        818
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "164": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        731,
        818
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x1A0"
    },
    "167": {
      "fn": "InitializableMock.initializeWithX",
      "jump": "i",
      "offset": [
        731,
        818
      ],
      "op": "JUMP",
      "path": "116"
    },
    "168": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        731,
        818
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "169": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        731,
        818
      ],
      "op": "STOP",
      "path": "116"
    },
    "170": {
      "offset": [
        325,
        341
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "171": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        325,
        341
      ],
      "op": "CALLVALUE",
      "path": "116"
    },
    "172": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        325,
        341
      ],
      "op": "DUP1",
      "path": "116"
    },
    "173": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        325,
        341
      ],
      "op": "ISZERO",
      "path": "116"
    },
    "174": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        325,
        341
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0xB6"
    },
    "177": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        325,
        341
      ],
      "op": "JUMPI",
      "path": "116"
    },
    "178": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        325,
        341
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0x0"
    },
    "180": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        325,
        341
      ],
      "op": "DUP1",
      "path": "116"
    },
    "181": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        325,
        341
      ],
      "op": "REVERT",
      "path": "116"
    },
    "182": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        325,
        341
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "183": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        325,
        341
      ],
      "op": "POP",
      "path": "116"
    },
    "184": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        325,
        341
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0xC0"
    },
    "187": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        325,
        341
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0x1"
    },
    "189": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        325,
        341
      ],
      "op": "SLOAD",
      "path": "116"
    },
    "190": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        325,
        341
      ],
      "op": "DUP2",
      "path": "116"
    },
    "191": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        325,
        341
      ],
      "op": "JUMP",
      "path": "116"
    },
    "192": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        325,
        341
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "193": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        325,
        341
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0x40"
    },
    "195": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        325,
        341
      ],
      "op": "MLOAD",
      "path": "116"
    },
    "196": {
      "op": "SWAP1"
    },
    "197": {
      "op": "DUP2"
    },
    "198": {
      "op": "MSTORE"
    },
    "199": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "201": {
      "op": "ADD"
    },
    "202": {
      "offset": [
        325,
        341
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "203": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        325,
        341
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0x40"
    },
    "205": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        325,
        341
      ],
      "op": "MLOAD",
      "path": "116"
    },
    "206": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        325,
        341
      ],
      "op": "DUP1",
      "path": "116"
    },
    "207": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        325,
        341
      ],
      "op": "SWAP2",
      "path": "116"
    },
    "208": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        325,
        341
      ],
      "op": "SUB",
      "path": "116"
    },
    "209": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        325,
        341
      ],
      "op": "SWAP1",
      "path": "116"
    },
    "210": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        325,
        341
      ],
      "op": "RETURN",
      "path": "116"
    },
    "211": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        433,
        538
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "212": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        433,
        538
      ],
      "op": "CALLVALUE",
      "path": "116"
    },
    "213": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        433,
        538
      ],
      "op": "DUP1",
      "path": "116"
    },
    "214": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        433,
        538
      ],
      "op": "ISZERO",
      "path": "116"
    },
    "215": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        433,
        538
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0xDF"
    },
    "218": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        433,
        538
      ],
      "op": "JUMPI",
      "path": "116"
    },
    "219": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        433,
        538
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0x0"
    },
    "221": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        433,
        538
      ],
      "op": "DUP1",
      "path": "116"
    },
    "222": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        433,
        538
      ],
      "op": "REVERT",
      "path": "116"
    },
    "223": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        433,
        538
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "224": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        433,
        538
      ],
      "op": "POP",
      "path": "116"
    },
    "225": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        433,
        538
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0xA8"
    },
    "228": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        433,
        538
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x221"
    },
    "231": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "jump": "i",
      "offset": [
        433,
        538
      ],
      "op": "JUMP",
      "path": "116"
    },
    "232": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        627,
        725
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "233": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        627,
        725
      ],
      "op": "CALLVALUE",
      "path": "116"
    },
    "234": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        627,
        725
      ],
      "op": "DUP1",
      "path": "116"
    },
    "235": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        627,
        725
      ],
      "op": "ISZERO",
      "path": "116"
    },
    "236": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        627,
        725
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0xF4"
    },
    "239": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        627,
        725
      ],
      "op": "JUMPI",
      "path": "116"
    },
    "240": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        627,
        725
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0x0"
    },
    "242": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        627,
        725
      ],
      "op": "DUP1",
      "path": "116"
    },
    "243": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        627,
        725
      ],
      "op": "REVERT",
      "path": "116"
    },
    "244": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        627,
        725
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "245": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        627,
        725
      ],
      "op": "POP",
      "path": "116"
    },
    "246": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        627,
        725
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0xA8"
    },
    "249": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        627,
        725
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x2A1"
    },
    "252": {
      "fn": "InitializableMock.onlyInitializingNested",
      "jump": "i",
      "offset": [
        627,
        725
      ],
      "op": "JUMP",
      "path": "116"
    },
    "253": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        544,
        621
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "254": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        544,
        621
      ],
      "op": "CALLVALUE",
      "path": "116"
    },
    "255": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        544,
        621
      ],
      "op": "DUP1",
      "path": "116"
    },
    "256": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        544,
        621
      ],
      "op": "ISZERO",
      "path": "116"
    },
    "257": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        544,
        621
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x109"
    },
    "260": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        544,
        621
      ],
      "op": "JUMPI",
      "path": "116"
    },
    "261": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        544,
        621
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0x0"
    },
    "263": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        544,
        621
      ],
      "op": "DUP1",
      "path": "116"
    },
    "264": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        544,
        621
      ],
      "op": "REVERT",
      "path": "116"
    },
    "265": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        544,
        621
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "266": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        544,
        621
      ],
      "op": "POP",
      "path": "116"
    },
    "267": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        544,
        621
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0xA8"
    },
    "270": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        544,
        621
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x31B"
    },
    "273": {
      "fn": "InitializableMock.initializerNested",
      "jump": "i",
      "offset": [
        544,
        621
      ],
      "op": "JUMP",
      "path": "116"
    },
    "274": {
      "offset": [
        288,
        319
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "275": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        288,
        319
      ],
      "op": "CALLVALUE",
      "path": "116"
    },
    "276": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        288,
        319
      ],
      "op": "DUP1",
      "path": "116"
    },
    "277": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        288,
        319
      ],
      "op": "ISZERO",
      "path": "116"
    },
    "278": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        288,
        319
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x11E"
    },
    "281": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        288,
        319
      ],
      "op": "JUMPI",
      "path": "116"
    },
    "282": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        288,
        319
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0x0"
    },
    "284": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        288,
        319
      ],
      "op": "DUP1",
      "path": "116"
    },
    "285": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        288,
        319
      ],
      "op": "REVERT",
      "path": "116"
    },
    "286": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        288,
        319
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "287": {
      "op": "POP"
    },
    "288": {
      "offset": [
        288,
        319
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0x0"
    },
    "290": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        288,
        319
      ],
      "op": "SLOAD",
      "path": "116"
    },
    "291": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        288,
        319
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x133"
    },
    "294": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        288,
        319
      ],
      "op": "SWAP1",
      "path": "116"
    },
    "295": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        288,
        319
      ],
      "op": "PUSH4",
      "path": "116",
      "value": "0x1000000"
    },
    "300": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        288,
        319
      ],
      "op": "SWAP1",
      "path": "116"
    },
    "301": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        288,
        319
      ],
      "op": "DIV",
      "path": "116"
    },
    "302": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        288,
        319
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0xFF"
    },
    "304": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        288,
        319
      ],
      "op": "AND",
      "path": "116"
    },
    "305": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        288,
        319
      ],
      "op": "DUP2",
      "path": "116"
    },
    "306": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        288,
        319
      ],
      "op": "JUMP",
      "path": "116"
    },
    "307": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        288,
        319
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "308": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        288,
        319
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0x40"
    },
    "310": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        288,
        319
      ],
      "op": "MLOAD",
      "path": "116"
    },
    "311": {
      "op": "SWAP1"
    },
    "312": {
      "op": "ISZERO"
    },
    "313": {
      "op": "ISZERO"
    },
    "314": {
      "op": "DUP2"
    },
    "315": {
      "op": "MSTORE"
    },
    "316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "318": {
      "op": "ADD"
    },
    "319": {
      "offset": [
        288,
        319
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0xCA"
    },
    "322": {
      "op": "JUMP"
    },
    "323": {
      "fn": "InitializableMock.initialize",
      "offset": [
        348,
        427
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "324": {
      "fn": "InitializableMock.initialize",
      "offset": [
        348,
        427
      ],
      "op": "CALLVALUE",
      "path": "116"
    },
    "325": {
      "fn": "InitializableMock.initialize",
      "offset": [
        348,
        427
      ],
      "op": "DUP1",
      "path": "116"
    },
    "326": {
      "fn": "InitializableMock.initialize",
      "offset": [
        348,
        427
      ],
      "op": "ISZERO",
      "path": "116"
    },
    "327": {
      "fn": "InitializableMock.initialize",
      "offset": [
        348,
        427
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x14F"
    },
    "330": {
      "fn": "InitializableMock.initialize",
      "offset": [
        348,
        427
      ],
      "op": "JUMPI",
      "path": "116"
    },
    "331": {
      "fn": "InitializableMock.initialize",
      "offset": [
        348,
        427
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0x0"
    },
    "333": {
      "fn": "InitializableMock.initialize",
      "offset": [
        348,
        427
      ],
      "op": "DUP1",
      "path": "116"
    },
    "334": {
      "fn": "InitializableMock.initialize",
      "offset": [
        348,
        427
      ],
      "op": "REVERT",
      "path": "116"
    },
    "335": {
      "fn": "InitializableMock.initialize",
      "offset": [
        348,
        427
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "336": {
      "fn": "InitializableMock.initialize",
      "offset": [
        348,
        427
      ],
      "op": "POP",
      "path": "116"
    },
    "337": {
      "fn": "InitializableMock.initialize",
      "offset": [
        348,
        427
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0xA8"
    },
    "340": {
      "fn": "InitializableMock.initialize",
      "offset": [
        348,
        427
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x37C"
    },
    "343": {
      "fn": "InitializableMock.initialize",
      "jump": "i",
      "offset": [
        348,
        427
      ],
      "op": "JUMP",
      "path": "116"
    },
    "344": {
      "fn": "InitializableMock.fail",
      "offset": [
        906,
        1001
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "345": {
      "fn": "InitializableMock.fail",
      "offset": [
        906,
        1001
      ],
      "op": "CALLVALUE",
      "path": "116"
    },
    "346": {
      "fn": "InitializableMock.fail",
      "offset": [
        906,
        1001
      ],
      "op": "DUP1",
      "path": "116"
    },
    "347": {
      "fn": "InitializableMock.fail",
      "offset": [
        906,
        1001
      ],
      "op": "ISZERO",
      "path": "116"
    },
    "348": {
      "fn": "InitializableMock.fail",
      "offset": [
        906,
        1001
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x164"
    },
    "351": {
      "fn": "InitializableMock.fail",
      "offset": [
        906,
        1001
      ],
      "op": "JUMPI",
      "path": "116"
    },
    "352": {
      "fn": "InitializableMock.fail",
      "offset": [
        906,
        1001
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0x0"
    },
    "354": {
      "fn": "InitializableMock.fail",
      "offset": [
        906,
        1001
      ],
      "op": "DUP1",
      "path": "116"
    },
    "355": {
      "fn": "InitializableMock.fail",
      "offset": [
        906,
        1001
      ],
      "op": "REVERT",
      "path": "116"
    },
    "356": {
      "fn": "InitializableMock.fail",
      "offset": [
        906,
        1001
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "357": {
      "fn": "InitializableMock.fail",
      "offset": [
        906,
        1001
      ],
      "op": "POP",
      "path": "116"
    },
    "358": {
      "fn": "InitializableMock.fail",
      "offset": [
        906,
        1001
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0xA8"
    },
    "361": {
      "fn": "InitializableMock.fail",
      "offset": [
        906,
        1001
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x3FE"
    },
    "364": {
      "fn": "InitializableMock.fail",
      "jump": "i",
      "offset": [
        906,
        1001
      ],
      "op": "JUMP",
      "path": "116"
    },
    "365": {
      "offset": [
        256,
        282
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "366": {
      "fn": "InitializableMock.fail",
      "offset": [
        256,
        282
      ],
      "op": "CALLVALUE",
      "path": "116"
    },
    "367": {
      "fn": "InitializableMock.fail",
      "offset": [
        256,
        282
      ],
      "op": "DUP1",
      "path": "116"
    },
    "368": {
      "fn": "InitializableMock.fail",
      "offset": [
        256,
        282
      ],
      "op": "ISZERO",
      "path": "116"
    },
    "369": {
      "fn": "InitializableMock.fail",
      "offset": [
        256,
        282
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x179"
    },
    "372": {
      "fn": "InitializableMock.fail",
      "offset": [
        256,
        282
      ],
      "op": "JUMPI",
      "path": "116"
    },
    "373": {
      "fn": "InitializableMock.fail",
      "offset": [
        256,
        282
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0x0"
    },
    "375": {
      "fn": "InitializableMock.fail",
      "offset": [
        256,
        282
      ],
      "op": "DUP1",
      "path": "116"
    },
    "376": {
      "fn": "InitializableMock.fail",
      "offset": [
        256,
        282
      ],
      "op": "REVERT",
      "path": "116"
    },
    "377": {
      "fn": "InitializableMock.fail",
      "offset": [
        256,
        282
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "378": {
      "op": "POP"
    },
    "379": {
      "offset": [
        256,
        282
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0x0"
    },
    "381": {
      "fn": "InitializableMock.fail",
      "offset": [
        256,
        282
      ],
      "op": "SLOAD",
      "path": "116"
    },
    "382": {
      "fn": "InitializableMock.fail",
      "offset": [
        256,
        282
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x133"
    },
    "385": {
      "fn": "InitializableMock.fail",
      "offset": [
        256,
        282
      ],
      "op": "SWAP1",
      "path": "116"
    },
    "386": {
      "fn": "InitializableMock.fail",
      "offset": [
        256,
        282
      ],
      "op": "PUSH3",
      "path": "116",
      "value": "0x10000"
    },
    "390": {
      "fn": "InitializableMock.fail",
      "offset": [
        256,
        282
      ],
      "op": "SWAP1",
      "path": "116"
    },
    "391": {
      "fn": "InitializableMock.fail",
      "offset": [
        256,
        282
      ],
      "op": "DIV",
      "path": "116"
    },
    "392": {
      "fn": "InitializableMock.fail",
      "offset": [
        256,
        282
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0xFF"
    },
    "394": {
      "fn": "InitializableMock.fail",
      "offset": [
        256,
        282
      ],
      "op": "AND",
      "path": "116"
    },
    "395": {
      "fn": "InitializableMock.fail",
      "offset": [
        256,
        282
      ],
      "op": "DUP2",
      "path": "116"
    },
    "396": {
      "fn": "InitializableMock.fail",
      "offset": [
        256,
        282
      ],
      "op": "JUMP",
      "path": "116"
    },
    "397": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        824,
        900
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "398": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        824,
        900
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0xA8"
    },
    "401": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        824,
        900
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x19B"
    },
    "404": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        824,
        900
      ],
      "op": "CALLDATASIZE",
      "path": "116"
    },
    "405": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        824,
        900
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0x4"
    },
    "407": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        824,
        900
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x446"
    },
    "410": {
      "fn": "InitializableMock.nonInitializable",
      "jump": "i",
      "offset": [
        824,
        900
      ],
      "op": "JUMP",
      "path": "116"
    },
    "411": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        824,
        900
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "412": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        887,
        888
      ],
      "op": "PUSH1",
      "path": "116",
      "statement": 0,
      "value": "0x1"
    },
    "414": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        887,
        893
      ],
      "op": "SSTORE",
      "path": "116"
    },
    "415": {
      "fn": "InitializableMock.nonInitializable",
      "offset": [
        824,
        900
      ],
      "op": "JUMP",
      "path": "116"
    },
    "416": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        731,
        818
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "417": {
      "offset": [
        2358,
        2371
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x0"
    },
    "419": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        2358,
        2371
      ],
      "op": "SLOAD",
      "path": "155"
    },
    "420": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        2358,
        2371
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x100"
    },
    "423": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        2358,
        2371
      ],
      "op": "SWAP1",
      "path": "155"
    },
    "424": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        2358,
        2371
      ],
      "op": "DIV",
      "path": "155"
    },
    "425": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        2358,
        2371
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0xFF"
    },
    "427": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        2358,
        2371
      ],
      "op": "AND",
      "path": "155"
    },
    "428": {
      "offset": [
        2358,
        2406
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x1BB"
    },
    "431": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        2358,
        2406
      ],
      "op": "JUMPI",
      "path": "155"
    },
    "432": {
      "offset": [
        2394,
        2406
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x0"
    },
    "434": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        2394,
        2406
      ],
      "op": "SLOAD",
      "path": "155"
    },
    "435": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        2394,
        2406
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0xFF"
    },
    "437": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        2394,
        2406
      ],
      "op": "AND",
      "path": "155"
    },
    "438": {
      "offset": [
        2393,
        2406
      ],
      "op": "ISZERO",
      "path": "155"
    },
    "439": {
      "offset": [
        2358,
        2406
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x1BF"
    },
    "442": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        2358,
        2406
      ],
      "op": "JUMP",
      "path": "155"
    },
    "443": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        2358,
        2406
      ],
      "op": "JUMPDEST",
      "path": "155"
    },
    "444": {
      "fn": "Initializable._isConstructor",
      "offset": [
        3125,
        3129
      ],
      "op": "ADDRESS",
      "path": "155",
      "statement": 1
    },
    "445": {
      "op": "EXTCODESIZE"
    },
    "446": {
      "op": "ISZERO"
    },
    "447": {
      "offset": [
        2374,
        2390
      ],
      "op": "JUMPDEST",
      "path": "155"
    },
    "448": {
      "offset": [
        2350,
        2457
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x1E4"
    },
    "451": {
      "offset": [
        2350,
        2457
      ],
      "op": "JUMPI",
      "path": "155"
    },
    "452": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x40"
    },
    "454": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "MLOAD",
      "path": "155"
    },
    "455": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "459": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "461": {
      "op": "SHL"
    },
    "462": {
      "offset": [
        2350,
        2457
      ],
      "op": "DUP2",
      "path": "155"
    },
    "463": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "MSTORE",
      "path": "155"
    },
    "464": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x4"
    },
    "466": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "ADD",
      "path": "155"
    },
    "467": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x1DB"
    },
    "470": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "SWAP1",
      "path": "155"
    },
    "471": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x45F"
    },
    "474": {
      "fn": "Initializable._isConstructor",
      "jump": "i",
      "offset": [
        2350,
        2457
      ],
      "op": "JUMP",
      "path": "155"
    },
    "475": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "JUMPDEST",
      "path": "155"
    },
    "476": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x40"
    },
    "478": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "MLOAD",
      "path": "155"
    },
    "479": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "DUP1",
      "path": "155"
    },
    "480": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "SWAP2",
      "path": "155"
    },
    "481": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "SUB",
      "path": "155"
    },
    "482": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "SWAP1",
      "path": "155"
    },
    "483": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "155"
    },
    "484": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "JUMPDEST",
      "path": "155"
    },
    "485": {
      "offset": [
        2468,
        2487
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x0"
    },
    "487": {
      "offset": [
        2491,
        2504
      ],
      "op": "SLOAD",
      "path": "155"
    },
    "488": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2491,
        2504
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x100"
    },
    "491": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2491,
        2504
      ],
      "op": "SWAP1",
      "path": "155"
    },
    "492": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2491,
        2504
      ],
      "op": "DIV",
      "path": "155"
    },
    "493": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2491,
        2504
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0xFF"
    },
    "495": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2491,
        2504
      ],
      "op": "AND",
      "path": "155"
    },
    "496": {
      "offset": [
        2490,
        2504
      ],
      "op": "ISZERO",
      "path": "155"
    },
    "497": {
      "offset": [
        2514,
        2612
      ],
      "op": "DUP1",
      "path": "155"
    },
    "498": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2514,
        2612
      ],
      "op": "ISZERO",
      "path": "155"
    },
    "499": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2514,
        2612
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x206"
    },
    "502": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2514,
        2612
      ],
      "op": "JUMPI",
      "path": "155"
    },
    "503": {
      "offset": [
        2548,
        2561
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x0"
    },
    "505": {
      "offset": [
        2548,
        2568
      ],
      "op": "DUP1",
      "path": "155"
    },
    "506": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2548,
        2568
      ],
      "op": "SLOAD",
      "path": "155"
    },
    "507": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "510": {
      "op": "NOT"
    },
    "511": {
      "offset": [
        2582,
        2601
      ],
      "op": "AND",
      "path": "155"
    },
    "512": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2582,
        2601
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x101"
    },
    "515": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2582,
        2601
      ],
      "op": "OR",
      "path": "155"
    },
    "516": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2582,
        2601
      ],
      "op": "SWAP1",
      "path": "155"
    },
    "517": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2582,
        2601
      ],
      "op": "SSTORE",
      "path": "155"
    },
    "518": {
      "offset": [
        2514,
        2612
      ],
      "op": "JUMPDEST",
      "path": "155"
    },
    "519": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        805,
        806
      ],
      "op": "PUSH1",
      "path": "116",
      "statement": 2,
      "value": "0x1"
    },
    "521": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        805,
        811
      ],
      "op": "DUP3",
      "path": "116"
    },
    "522": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        805,
        811
      ],
      "op": "SWAP1",
      "path": "116"
    },
    "523": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        805,
        811
      ],
      "op": "SSTORE",
      "path": "116"
    },
    "524": {
      "offset": [
        2634,
        2700
      ],
      "op": "DUP1",
      "path": "155"
    },
    "525": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        2634,
        2700
      ],
      "op": "ISZERO",
      "path": "155"
    },
    "526": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        2634,
        2700
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x21D"
    },
    "529": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        2634,
        2700
      ],
      "op": "JUMPI",
      "path": "155"
    },
    "530": {
      "offset": [
        2684,
        2689
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x0"
    },
    "532": {
      "offset": [
        2668,
        2689
      ],
      "op": "DUP1",
      "path": "155"
    },
    "533": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        2668,
        2689
      ],
      "op": "SLOAD",
      "path": "155"
    },
    "534": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "537": {
      "op": "NOT"
    },
    "538": {
      "offset": [
        2668,
        2689
      ],
      "op": "AND",
      "path": "155"
    },
    "539": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        2668,
        2689
      ],
      "op": "SWAP1",
      "path": "155"
    },
    "540": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        2668,
        2689
      ],
      "op": "SSTORE",
      "path": "155"
    },
    "541": {
      "offset": [
        2634,
        2700
      ],
      "op": "JUMPDEST",
      "path": "155"
    },
    "542": {
      "offset": [
        2069,
        2706
      ],
      "op": "POP",
      "path": "155"
    },
    "543": {
      "fn": "InitializableMock.initializeWithX",
      "offset": [
        731,
        818
      ],
      "op": "POP",
      "path": "116"
    },
    "544": {
      "fn": "InitializableMock.initializeWithX",
      "jump": "o",
      "offset": [
        731,
        818
      ],
      "op": "JUMP",
      "path": "116"
    },
    "545": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        433,
        538
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "546": {
      "offset": [
        2941,
        2954
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x0"
    },
    "548": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        2941,
        2954
      ],
      "op": "SLOAD",
      "path": "155"
    },
    "549": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        2941,
        2954
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x100"
    },
    "552": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        2941,
        2954
      ],
      "op": "SWAP1",
      "path": "155"
    },
    "553": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        2941,
        2954
      ],
      "op": "DIV",
      "path": "155"
    },
    "554": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        2941,
        2954
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0xFF"
    },
    "556": {
      "branch": 8,
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        2941,
        2954
      ],
      "op": "AND",
      "path": "155"
    },
    "557": {
      "offset": [
        2933,
        3002
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x28C"
    },
    "560": {
      "branch": 8,
      "offset": [
        2933,
        3002
      ],
      "op": "JUMPI",
      "path": "155"
    },
    "561": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        2933,
        3002
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x40"
    },
    "563": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        2933,
        3002
      ],
      "op": "MLOAD",
      "path": "155"
    },
    "564": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "568": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "570": {
      "op": "SHL"
    },
    "571": {
      "offset": [
        2933,
        3002
      ],
      "op": "DUP2",
      "path": "155"
    },
    "572": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        2933,
        3002
      ],
      "op": "MSTORE",
      "path": "155"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "575": {
      "offset": [
        2933,
        3002
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x4"
    },
    "577": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        2933,
        3002
      ],
      "op": "DUP3",
      "path": "155"
    },
    "578": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        2933,
        3002
      ],
      "op": "ADD",
      "path": "155"
    },
    "579": {
      "op": "MSTORE"
    },
    "580": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "582": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "584": {
      "op": "DUP3"
    },
    "585": {
      "op": "ADD"
    },
    "586": {
      "op": "MSTORE"
    },
    "587": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E7472616374206973206E6F742069"
    },
    "620": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "622": {
      "op": "DUP3"
    },
    "623": {
      "op": "ADD"
    },
    "624": {
      "op": "MSTORE"
    },
    "625": {
      "op": "PUSH11",
      "value": "0x6E697469616C697A696E67"
    },
    "637": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "639": {
      "op": "SHL"
    },
    "640": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "642": {
      "op": "DUP3"
    },
    "643": {
      "op": "ADD"
    },
    "644": {
      "op": "MSTORE"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "647": {
      "op": "ADD"
    },
    "648": {
      "offset": [
        2933,
        3002
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x1DB"
    },
    "651": {
      "op": "JUMP"
    },
    "652": {
      "offset": [
        2933,
        3002
      ],
      "op": "JUMPDEST",
      "path": "155"
    },
    "653": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        505,
        524
      ],
      "op": "PUSH1",
      "path": "116",
      "statement": 3,
      "value": "0x0"
    },
    "655": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        505,
        531
      ],
      "op": "DUP1",
      "path": "116"
    },
    "656": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        505,
        531
      ],
      "op": "SLOAD",
      "path": "116"
    },
    "657": {
      "op": "PUSH4",
      "value": "0xFF000000"
    },
    "662": {
      "op": "NOT"
    },
    "663": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        505,
        531
      ],
      "op": "AND",
      "path": "116"
    },
    "664": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        505,
        531
      ],
      "op": "PUSH4",
      "path": "116",
      "value": "0x1000000"
    },
    "669": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        505,
        531
      ],
      "op": "OR",
      "path": "116"
    },
    "670": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        505,
        531
      ],
      "op": "SWAP1",
      "path": "116"
    },
    "671": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "offset": [
        505,
        531
      ],
      "op": "SSTORE",
      "path": "116"
    },
    "672": {
      "fn": "InitializableMock.initializeOnlyInitializing",
      "jump": "o",
      "offset": [
        433,
        538
      ],
      "op": "JUMP",
      "path": "116"
    },
    "673": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        627,
        725
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "674": {
      "offset": [
        2358,
        2371
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x0"
    },
    "676": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        2358,
        2371
      ],
      "op": "SLOAD",
      "path": "155"
    },
    "677": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        2358,
        2371
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x100"
    },
    "680": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        2358,
        2371
      ],
      "op": "SWAP1",
      "path": "155"
    },
    "681": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        2358,
        2371
      ],
      "op": "DIV",
      "path": "155"
    },
    "682": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        2358,
        2371
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0xFF"
    },
    "684": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        2358,
        2371
      ],
      "op": "AND",
      "path": "155"
    },
    "685": {
      "offset": [
        2358,
        2406
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x2BC"
    },
    "688": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        2358,
        2406
      ],
      "op": "JUMPI",
      "path": "155"
    },
    "689": {
      "offset": [
        2394,
        2406
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x0"
    },
    "691": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        2394,
        2406
      ],
      "op": "SLOAD",
      "path": "155"
    },
    "692": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        2394,
        2406
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0xFF"
    },
    "694": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        2394,
        2406
      ],
      "op": "AND",
      "path": "155"
    },
    "695": {
      "offset": [
        2393,
        2406
      ],
      "op": "ISZERO",
      "path": "155"
    },
    "696": {
      "offset": [
        2358,
        2406
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x2C0"
    },
    "699": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        2358,
        2406
      ],
      "op": "JUMP",
      "path": "155"
    },
    "700": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        2358,
        2406
      ],
      "op": "JUMPDEST",
      "path": "155"
    },
    "701": {
      "fn": "Initializable._isConstructor",
      "offset": [
        3125,
        3129
      ],
      "op": "ADDRESS",
      "path": "155"
    },
    "702": {
      "op": "EXTCODESIZE"
    },
    "703": {
      "op": "ISZERO"
    },
    "704": {
      "offset": [
        2374,
        2390
      ],
      "op": "JUMPDEST",
      "path": "155"
    },
    "705": {
      "offset": [
        2350,
        2457
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x2DC"
    },
    "708": {
      "offset": [
        2350,
        2457
      ],
      "op": "JUMPI",
      "path": "155"
    },
    "709": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x40"
    },
    "711": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "MLOAD",
      "path": "155"
    },
    "712": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "716": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "718": {
      "op": "SHL"
    },
    "719": {
      "offset": [
        2350,
        2457
      ],
      "op": "DUP2",
      "path": "155"
    },
    "720": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "MSTORE",
      "path": "155"
    },
    "721": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x4"
    },
    "723": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "ADD",
      "path": "155"
    },
    "724": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x1DB"
    },
    "727": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "SWAP1",
      "path": "155"
    },
    "728": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x45F"
    },
    "731": {
      "fn": "Initializable._isConstructor",
      "jump": "i",
      "offset": [
        2350,
        2457
      ],
      "op": "JUMP",
      "path": "155"
    },
    "732": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "JUMPDEST",
      "path": "155"
    },
    "733": {
      "offset": [
        2468,
        2487
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x0"
    },
    "735": {
      "offset": [
        2491,
        2504
      ],
      "op": "SLOAD",
      "path": "155"
    },
    "736": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2491,
        2504
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x100"
    },
    "739": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2491,
        2504
      ],
      "op": "SWAP1",
      "path": "155"
    },
    "740": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2491,
        2504
      ],
      "op": "DIV",
      "path": "155"
    },
    "741": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2491,
        2504
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0xFF"
    },
    "743": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2491,
        2504
      ],
      "op": "AND",
      "path": "155"
    },
    "744": {
      "offset": [
        2490,
        2504
      ],
      "op": "ISZERO",
      "path": "155"
    },
    "745": {
      "offset": [
        2514,
        2612
      ],
      "op": "DUP1",
      "path": "155"
    },
    "746": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2514,
        2612
      ],
      "op": "ISZERO",
      "path": "155"
    },
    "747": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2514,
        2612
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x2FE"
    },
    "750": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2514,
        2612
      ],
      "op": "JUMPI",
      "path": "155"
    },
    "751": {
      "offset": [
        2548,
        2561
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x0"
    },
    "753": {
      "offset": [
        2548,
        2568
      ],
      "op": "DUP1",
      "path": "155"
    },
    "754": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2548,
        2568
      ],
      "op": "SLOAD",
      "path": "155"
    },
    "755": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "758": {
      "op": "NOT"
    },
    "759": {
      "offset": [
        2582,
        2601
      ],
      "op": "AND",
      "path": "155"
    },
    "760": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2582,
        2601
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x101"
    },
    "763": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2582,
        2601
      ],
      "op": "OR",
      "path": "155"
    },
    "764": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2582,
        2601
      ],
      "op": "SWAP1",
      "path": "155"
    },
    "765": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2582,
        2601
      ],
      "op": "SSTORE",
      "path": "155"
    },
    "766": {
      "offset": [
        2514,
        2612
      ],
      "op": "JUMPDEST",
      "path": "155"
    },
    "767": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        690,
        718
      ],
      "op": "PUSH2",
      "path": "116",
      "statement": 4,
      "value": "0x306"
    },
    "770": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        690,
        716
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x221"
    },
    "773": {
      "fn": "InitializableMock.onlyInitializingNested",
      "jump": "i",
      "offset": [
        690,
        718
      ],
      "op": "JUMP",
      "path": "116"
    },
    "774": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        690,
        718
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "775": {
      "offset": [
        2638,
        2652
      ],
      "op": "DUP1",
      "path": "155"
    },
    "776": {
      "offset": [
        2634,
        2700
      ],
      "op": "ISZERO",
      "path": "155"
    },
    "777": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        2634,
        2700
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x318"
    },
    "780": {
      "offset": [
        2634,
        2700
      ],
      "op": "JUMPI",
      "path": "155"
    },
    "781": {
      "offset": [
        2684,
        2689
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x0"
    },
    "783": {
      "offset": [
        2668,
        2689
      ],
      "op": "DUP1",
      "path": "155"
    },
    "784": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        2668,
        2689
      ],
      "op": "SLOAD",
      "path": "155"
    },
    "785": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "788": {
      "op": "NOT"
    },
    "789": {
      "offset": [
        2668,
        2689
      ],
      "op": "AND",
      "path": "155"
    },
    "790": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        2668,
        2689
      ],
      "op": "SWAP1",
      "path": "155"
    },
    "791": {
      "fn": "InitializableMock.onlyInitializingNested",
      "offset": [
        2668,
        2689
      ],
      "op": "SSTORE",
      "path": "155"
    },
    "792": {
      "offset": [
        2634,
        2700
      ],
      "op": "JUMPDEST",
      "path": "155"
    },
    "793": {
      "offset": [
        2069,
        2706
      ],
      "op": "POP",
      "path": "155"
    },
    "794": {
      "fn": "InitializableMock.onlyInitializingNested",
      "jump": "o",
      "offset": [
        627,
        725
      ],
      "op": "JUMP",
      "path": "116"
    },
    "795": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        544,
        621
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "796": {
      "offset": [
        2358,
        2371
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x0"
    },
    "798": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        2358,
        2371
      ],
      "op": "SLOAD",
      "path": "155"
    },
    "799": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        2358,
        2371
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x100"
    },
    "802": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        2358,
        2371
      ],
      "op": "SWAP1",
      "path": "155"
    },
    "803": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        2358,
        2371
      ],
      "op": "DIV",
      "path": "155"
    },
    "804": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        2358,
        2371
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0xFF"
    },
    "806": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        2358,
        2371
      ],
      "op": "AND",
      "path": "155"
    },
    "807": {
      "offset": [
        2358,
        2406
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x336"
    },
    "810": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        2358,
        2406
      ],
      "op": "JUMPI",
      "path": "155"
    },
    "811": {
      "offset": [
        2394,
        2406
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x0"
    },
    "813": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        2394,
        2406
      ],
      "op": "SLOAD",
      "path": "155"
    },
    "814": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        2394,
        2406
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0xFF"
    },
    "816": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        2394,
        2406
      ],
      "op": "AND",
      "path": "155"
    },
    "817": {
      "offset": [
        2393,
        2406
      ],
      "op": "ISZERO",
      "path": "155"
    },
    "818": {
      "offset": [
        2358,
        2406
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x33A"
    },
    "821": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        2358,
        2406
      ],
      "op": "JUMP",
      "path": "155"
    },
    "822": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        2358,
        2406
      ],
      "op": "JUMPDEST",
      "path": "155"
    },
    "823": {
      "fn": "Initializable._isConstructor",
      "offset": [
        3125,
        3129
      ],
      "op": "ADDRESS",
      "path": "155"
    },
    "824": {
      "op": "EXTCODESIZE"
    },
    "825": {
      "op": "ISZERO"
    },
    "826": {
      "offset": [
        2374,
        2390
      ],
      "op": "JUMPDEST",
      "path": "155"
    },
    "827": {
      "offset": [
        2350,
        2457
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x356"
    },
    "830": {
      "offset": [
        2350,
        2457
      ],
      "op": "JUMPI",
      "path": "155"
    },
    "831": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x40"
    },
    "833": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "MLOAD",
      "path": "155"
    },
    "834": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "838": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "840": {
      "op": "SHL"
    },
    "841": {
      "offset": [
        2350,
        2457
      ],
      "op": "DUP2",
      "path": "155"
    },
    "842": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "MSTORE",
      "path": "155"
    },
    "843": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x4"
    },
    "845": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "ADD",
      "path": "155"
    },
    "846": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x1DB"
    },
    "849": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "SWAP1",
      "path": "155"
    },
    "850": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x45F"
    },
    "853": {
      "fn": "Initializable._isConstructor",
      "jump": "i",
      "offset": [
        2350,
        2457
      ],
      "op": "JUMP",
      "path": "155"
    },
    "854": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "JUMPDEST",
      "path": "155"
    },
    "855": {
      "offset": [
        2468,
        2487
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x0"
    },
    "857": {
      "offset": [
        2491,
        2504
      ],
      "op": "SLOAD",
      "path": "155"
    },
    "858": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2491,
        2504
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x100"
    },
    "861": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2491,
        2504
      ],
      "op": "SWAP1",
      "path": "155"
    },
    "862": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2491,
        2504
      ],
      "op": "DIV",
      "path": "155"
    },
    "863": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2491,
        2504
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0xFF"
    },
    "865": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2491,
        2504
      ],
      "op": "AND",
      "path": "155"
    },
    "866": {
      "offset": [
        2490,
        2504
      ],
      "op": "ISZERO",
      "path": "155"
    },
    "867": {
      "offset": [
        2514,
        2612
      ],
      "op": "DUP1",
      "path": "155"
    },
    "868": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2514,
        2612
      ],
      "op": "ISZERO",
      "path": "155"
    },
    "869": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2514,
        2612
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x378"
    },
    "872": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2514,
        2612
      ],
      "op": "JUMPI",
      "path": "155"
    },
    "873": {
      "offset": [
        2548,
        2561
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x0"
    },
    "875": {
      "offset": [
        2548,
        2568
      ],
      "op": "DUP1",
      "path": "155"
    },
    "876": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2548,
        2568
      ],
      "op": "SLOAD",
      "path": "155"
    },
    "877": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "880": {
      "op": "NOT"
    },
    "881": {
      "offset": [
        2582,
        2601
      ],
      "op": "AND",
      "path": "155"
    },
    "882": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2582,
        2601
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x101"
    },
    "885": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2582,
        2601
      ],
      "op": "OR",
      "path": "155"
    },
    "886": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2582,
        2601
      ],
      "op": "SWAP1",
      "path": "155"
    },
    "887": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2582,
        2601
      ],
      "op": "SSTORE",
      "path": "155"
    },
    "888": {
      "offset": [
        2514,
        2612
      ],
      "op": "JUMPDEST",
      "path": "155"
    },
    "889": {
      "fn": "InitializableMock.initializerNested",
      "offset": [
        602,
        614
      ],
      "op": "PUSH2",
      "path": "116",
      "statement": 5,
      "value": "0x306"
    },
    "892": {
      "fn": "InitializableMock.initialize",
      "offset": [
        348,
        427
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "893": {
      "offset": [
        2358,
        2371
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x0"
    },
    "895": {
      "fn": "InitializableMock.initialize",
      "offset": [
        2358,
        2371
      ],
      "op": "SLOAD",
      "path": "155"
    },
    "896": {
      "fn": "InitializableMock.initialize",
      "offset": [
        2358,
        2371
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x100"
    },
    "899": {
      "fn": "InitializableMock.initialize",
      "offset": [
        2358,
        2371
      ],
      "op": "SWAP1",
      "path": "155"
    },
    "900": {
      "fn": "InitializableMock.initialize",
      "offset": [
        2358,
        2371
      ],
      "op": "DIV",
      "path": "155"
    },
    "901": {
      "fn": "InitializableMock.initialize",
      "offset": [
        2358,
        2371
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0xFF"
    },
    "903": {
      "branch": 9,
      "fn": "InitializableMock.initialize",
      "offset": [
        2358,
        2371
      ],
      "op": "AND",
      "path": "155"
    },
    "904": {
      "offset": [
        2358,
        2406
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x397"
    },
    "907": {
      "branch": 9,
      "fn": "InitializableMock.initialize",
      "offset": [
        2358,
        2406
      ],
      "op": "JUMPI",
      "path": "155"
    },
    "908": {
      "offset": [
        2394,
        2406
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x0"
    },
    "910": {
      "fn": "InitializableMock.initialize",
      "offset": [
        2394,
        2406
      ],
      "op": "SLOAD",
      "path": "155"
    },
    "911": {
      "fn": "InitializableMock.initialize",
      "offset": [
        2394,
        2406
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0xFF"
    },
    "913": {
      "fn": "InitializableMock.initialize",
      "offset": [
        2394,
        2406
      ],
      "op": "AND",
      "path": "155"
    },
    "914": {
      "offset": [
        2393,
        2406
      ],
      "op": "ISZERO",
      "path": "155"
    },
    "915": {
      "offset": [
        2358,
        2406
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x39B"
    },
    "918": {
      "fn": "InitializableMock.initialize",
      "offset": [
        2358,
        2406
      ],
      "op": "JUMP",
      "path": "155"
    },
    "919": {
      "branch": 10,
      "fn": "InitializableMock.initialize",
      "offset": [
        2358,
        2406
      ],
      "op": "JUMPDEST",
      "path": "155"
    },
    "920": {
      "fn": "Initializable._isConstructor",
      "offset": [
        3125,
        3129
      ],
      "op": "ADDRESS",
      "path": "155"
    },
    "921": {
      "op": "EXTCODESIZE"
    },
    "922": {
      "op": "ISZERO"
    },
    "923": {
      "offset": [
        2374,
        2390
      ],
      "op": "JUMPDEST",
      "path": "155"
    },
    "924": {
      "offset": [
        2350,
        2457
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x3B7"
    },
    "927": {
      "branch": 10,
      "offset": [
        2350,
        2457
      ],
      "op": "JUMPI",
      "path": "155"
    },
    "928": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x40"
    },
    "930": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "MLOAD",
      "path": "155"
    },
    "931": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "935": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "937": {
      "op": "SHL"
    },
    "938": {
      "offset": [
        2350,
        2457
      ],
      "op": "DUP2",
      "path": "155"
    },
    "939": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "MSTORE",
      "path": "155"
    },
    "940": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x4"
    },
    "942": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "ADD",
      "path": "155"
    },
    "943": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x1DB"
    },
    "946": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "SWAP1",
      "path": "155"
    },
    "947": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x45F"
    },
    "950": {
      "fn": "Initializable._isConstructor",
      "jump": "i",
      "offset": [
        2350,
        2457
      ],
      "op": "JUMP",
      "path": "155"
    },
    "951": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2350,
        2457
      ],
      "op": "JUMPDEST",
      "path": "155"
    },
    "952": {
      "offset": [
        2468,
        2487
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x0"
    },
    "954": {
      "offset": [
        2491,
        2504
      ],
      "op": "SLOAD",
      "path": "155"
    },
    "955": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2491,
        2504
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x100"
    },
    "958": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2491,
        2504
      ],
      "op": "SWAP1",
      "path": "155"
    },
    "959": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2491,
        2504
      ],
      "op": "DIV",
      "path": "155"
    },
    "960": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2491,
        2504
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0xFF"
    },
    "962": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2491,
        2504
      ],
      "op": "AND",
      "path": "155"
    },
    "963": {
      "offset": [
        2490,
        2504
      ],
      "op": "ISZERO",
      "path": "155"
    },
    "964": {
      "offset": [
        2514,
        2612
      ],
      "op": "DUP1",
      "path": "155"
    },
    "965": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2514,
        2612
      ],
      "op": "ISZERO",
      "path": "155"
    },
    "966": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2514,
        2612
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x3D9"
    },
    "969": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2514,
        2612
      ],
      "op": "JUMPI",
      "path": "155"
    },
    "970": {
      "offset": [
        2548,
        2561
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x0"
    },
    "972": {
      "offset": [
        2548,
        2568
      ],
      "op": "DUP1",
      "path": "155"
    },
    "973": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2548,
        2568
      ],
      "op": "SLOAD",
      "path": "155"
    },
    "974": {
      "op": "PUSH2",
      "value": "0xFFFF"
    },
    "977": {
      "op": "NOT"
    },
    "978": {
      "offset": [
        2582,
        2601
      ],
      "op": "AND",
      "path": "155"
    },
    "979": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2582,
        2601
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x101"
    },
    "982": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2582,
        2601
      ],
      "op": "OR",
      "path": "155"
    },
    "983": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2582,
        2601
      ],
      "op": "SWAP1",
      "path": "155"
    },
    "984": {
      "fn": "Initializable._isConstructor",
      "offset": [
        2582,
        2601
      ],
      "op": "SSTORE",
      "path": "155"
    },
    "985": {
      "offset": [
        2514,
        2612
      ],
      "op": "JUMPDEST",
      "path": "155"
    },
    "986": {
      "fn": "InitializableMock.initialize",
      "offset": [
        399,
        413
      ],
      "op": "PUSH1",
      "path": "116",
      "statement": 6,
      "value": "0x0"
    },
    "988": {
      "fn": "InitializableMock.initialize",
      "offset": [
        399,
        420
      ],
      "op": "DUP1",
      "path": "116"
    },
    "989": {
      "fn": "InitializableMock.initialize",
      "offset": [
        399,
        420
      ],
      "op": "SLOAD",
      "path": "116"
    },
    "990": {
      "op": "PUSH3",
      "value": "0xFF0000"
    },
    "994": {
      "op": "NOT"
    },
    "995": {
      "fn": "InitializableMock.initialize",
      "offset": [
        399,
        420
      ],
      "op": "AND",
      "path": "116"
    },
    "996": {
      "fn": "InitializableMock.initialize",
      "offset": [
        399,
        420
      ],
      "op": "PUSH3",
      "path": "116",
      "value": "0x10000"
    },
    "1000": {
      "fn": "InitializableMock.initialize",
      "offset": [
        399,
        420
      ],
      "op": "OR",
      "path": "116"
    },
    "1001": {
      "fn": "InitializableMock.initialize",
      "offset": [
        399,
        420
      ],
      "op": "SWAP1",
      "path": "116"
    },
    "1002": {
      "fn": "InitializableMock.initialize",
      "offset": [
        399,
        420
      ],
      "op": "SSTORE",
      "path": "116"
    },
    "1003": {
      "offset": [
        2634,
        2700
      ],
      "op": "DUP1",
      "path": "155"
    },
    "1004": {
      "fn": "InitializableMock.initialize",
      "offset": [
        2634,
        2700
      ],
      "op": "ISZERO",
      "path": "155"
    },
    "1005": {
      "fn": "InitializableMock.initialize",
      "offset": [
        2634,
        2700
      ],
      "op": "PUSH2",
      "path": "155",
      "value": "0x318"
    },
    "1008": {
      "fn": "InitializableMock.initialize",
      "offset": [
        2634,
        2700
      ],
      "op": "JUMPI",
      "path": "155"
    },
    "1009": {
      "offset": [
        2684,
        2689
      ],
      "op": "PUSH1",
      "path": "155",
      "value": "0x0"
    },
    "1011": {
      "offset": [
        2668,
        2689
      ],
      "op": "DUP1",
      "path": "155"
    },
    "1012": {
      "fn": "InitializableMock.initialize",
      "offset": [
        2668,
        2689
      ],
      "op": "SLOAD",
      "path": "155"
    },
    "1013": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "1016": {
      "op": "NOT"
    },
    "1017": {
      "offset": [
        2668,
        2689
      ],
      "op": "AND",
      "path": "155"
    },
    "1018": {
      "fn": "InitializableMock.initialize",
      "offset": [
        2668,
        2689
      ],
      "op": "SWAP1",
      "path": "155"
    },
    "1019": {
      "fn": "InitializableMock.initialize",
      "offset": [
        2668,
        2689
      ],
      "op": "SSTORE",
      "path": "155"
    },
    "1020": {
      "offset": [
        2069,
        2706
      ],
      "op": "POP",
      "path": "155"
    },
    "1021": {
      "fn": "InitializableMock.initialize",
      "jump": "o",
      "offset": [
        348,
        427
      ],
      "op": "JUMP",
      "path": "116"
    },
    "1022": {
      "fn": "InitializableMock.fail",
      "offset": [
        906,
        1001
      ],
      "op": "JUMPDEST",
      "path": "116"
    },
    "1023": {
      "fn": "InitializableMock.fail",
      "offset": [
        944,
        994
      ],
      "op": "PUSH1",
      "path": "116",
      "statement": 7,
      "value": "0x40"
    },
    "1025": {
      "fn": "InitializableMock.fail",
      "offset": [
        944,
        994
      ],
      "op": "MLOAD",
      "path": "116"
    },
    "1026": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1030": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1032": {
      "op": "SHL"
    },
    "1033": {
      "fn": "InitializableMock.fail",
      "offset": [
        944,
        994
      ],
      "op": "DUP2",
      "path": "116"
    },
    "1034": {
      "fn": "InitializableMock.fail",
      "offset": [
        944,
        994
      ],
      "op": "MSTORE",
      "path": "116"
    },
    "1035": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1037": {
      "fn": "InitializableMock.fail",
      "offset": [
        944,
        994
      ],
      "op": "PUSH1",
      "path": "116",
      "value": "0x4"
    },
    "1039": {
      "fn": "InitializableMock.fail",
      "offset": [
        944,
        994
      ],
      "op": "DUP3",
      "path": "116"
    },
    "1040": {
      "fn": "InitializableMock.fail",
      "offset": [
        944,
        994
      ],
      "op": "ADD",
      "path": "116"
    },
    "1041": {
      "op": "DUP2"
    },
    "1042": {
      "op": "SWAP1"
    },
    "1043": {
      "op": "MSTORE"
    },
    "1044": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1046": {
      "op": "DUP3"
    },
    "1047": {
      "op": "ADD"
    },
    "1048": {
      "op": "MSTORE"
    },
    "1049": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C654D6F636B20666F72636564206661696C757265"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1084": {
      "op": "DUP3"
    },
    "1085": {
      "op": "ADD"
    },
    "1086": {
      "op": "MSTORE"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1089": {
      "op": "ADD"
    },
    "1090": {
      "fn": "InitializableMock.fail",
      "offset": [
        944,
        994
      ],
      "op": "PUSH2",
      "path": "116",
      "value": "0x1DB"
    },
    "1093": {
      "op": "JUMP"
    },
    "1094": {
      "op": "JUMPDEST"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1097": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1099": {
      "op": "DUP3"
    },
    "1100": {
      "op": "DUP5"
    },
    "1101": {
      "op": "SUB"
    },
    "1102": {
      "op": "SLT"
    },
    "1103": {
      "op": "ISZERO"
    },
    "1104": {
      "op": "PUSH2",
      "value": "0x458"
    },
    "1107": {
      "op": "JUMPI"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1110": {
      "op": "DUP1"
    },
    "1111": {
      "op": "REVERT"
    },
    "1112": {
      "op": "JUMPDEST"
    },
    "1113": {
      "op": "POP"
    },
    "1114": {
      "op": "CALLDATALOAD"
    },
    "1115": {
      "op": "SWAP2"
    },
    "1116": {
      "op": "SWAP1"
    },
    "1117": {
      "op": "POP"
    },
    "1118": {
      "jump": "o",
      "op": "JUMP"
    },
    "1119": {
      "op": "JUMPDEST"
    },
    "1120": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1122": {
      "op": "DUP1"
    },
    "1123": {
      "op": "DUP3"
    },
    "1124": {
      "op": "MSTORE"
    },
    "1125": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "1127": {
      "op": "SWAP1"
    },
    "1128": {
      "op": "DUP3"
    },
    "1129": {
      "op": "ADD"
    },
    "1130": {
      "op": "MSTORE"
    },
    "1131": {
      "op": "PUSH32",
      "value": "0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1166": {
      "op": "DUP3"
    },
    "1167": {
      "op": "ADD"
    },
    "1168": {
      "op": "MSTORE"
    },
    "1169": {
      "op": "PUSH14",
      "value": "0x191E481A5B9A5D1A585B1A5E9959"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x92"
    },
    "1186": {
      "op": "SHL"
    },
    "1187": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1189": {
      "op": "DUP3"
    },
    "1190": {
      "op": "ADD"
    },
    "1191": {
      "op": "MSTORE"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "1194": {
      "op": "ADD"
    },
    "1195": {
      "op": "SWAP1"
    },
    "1196": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "00de3e1a260815e61b9fab6efbe8cda911d7043d",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @title InitializableMock\n * @dev This contract is a mock to test initializable functionality\n */\ncontract InitializableMock is Initializable {\n    bool public initializerRan;\n    bool public onlyInitializingRan;\n    uint256 public x;\n\n    function initialize() public initializer {\n        initializerRan = true;\n    }\n\n    function initializeOnlyInitializing() public onlyInitializing {\n        onlyInitializingRan = true;\n    }\n\n    function initializerNested() public initializer {\n        initialize();\n    }\n\n    function onlyInitializingNested() public initializer {\n        initializeOnlyInitializing();\n    }\n\n    function initializeWithX(uint256 _x) public payable initializer {\n        x = _x;\n    }\n\n    function nonInitializable(uint256 _x) public payable {\n        x = _x;\n    }\n\n    function fail() public pure {\n        require(false, \"InitializableMock forced failure\");\n    }\n}\n\ncontract ConstructorInitializableMock is Initializable {\n    bool public initializerRan;\n    bool public onlyInitializingRan;\n\n    constructor() initializer {\n        initialize();\n        initializeOnlyInitializing();\n    }\n\n    function initialize() public initializer {\n        initializerRan = true;\n    }\n\n    function initializeOnlyInitializing() public onlyInitializing {\n        onlyInitializingRan = true;\n    }\n}\n",
  "sourceMap": "206:797:116:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/mocks/InitializableMock.sol",
  "type": "contract"
}