{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "trustedForwarder",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "integerValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "stringValue",
          "type": "string"
        }
      ],
      "name": "Data",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "Sender",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "forwarder",
          "type": "address"
        }
      ],
      "name": "isTrustedForwarder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "integerValue",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "stringValue",
          "type": "string"
        }
      ],
      "name": "msgData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "msgSender",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "210": "contracts/openzeppelin/contracts/utils/Context.sol",
    "50": "contracts/openzeppelin/contracts/metatx/ERC2771Context.sol",
    "64": "contracts/openzeppelin/contracts/mocks/ContextMock.sol",
    "94": "contracts/openzeppelin/contracts/mocks/ERC2771ContextMock.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/mocks/ERC2771ContextMock.sol",
    "exportedSymbols": {
      "Context": [
        26715
      ],
      "ContextMock": [
        7837
      ],
      "ContextMockCaller": [
        7868
      ],
      "ERC2771Context": [
        6957
      ],
      "ERC2771ContextMock": [
        9514
      ]
    },
    "id": 9515,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9466,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:94"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/mocks/ContextMock.sol",
        "file": "./ContextMock.sol",
        "id": 9467,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9515,
        "sourceUnit": 7869,
        "src": "58:27:94",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/metatx/ERC2771Context.sol",
        "file": "../metatx/ERC2771Context.sol",
        "id": 9468,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9515,
        "sourceUnit": 6958,
        "src": "86:38:94",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9469,
              "name": "ContextMock",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7837,
              "src": "253:11:94"
            },
            "id": 9470,
            "nodeType": "InheritanceSpecifier",
            "src": "253:11:94"
          },
          {
            "baseName": {
              "id": 9471,
              "name": "ERC2771Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6957,
              "src": "266:14:94"
            },
            "id": 9472,
            "nodeType": "InheritanceSpecifier",
            "src": "266:14:94"
          }
        ],
        "canonicalName": "ERC2771ContextMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 9514,
        "linearizedBaseContracts": [
          9514,
          6957,
          7837,
          26715
        ],
        "name": "ERC2771ContextMock",
        "nameLocation": "231:18:94",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 9486,
              "nodeType": "Block",
              "src": "411:99:94",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 9482,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            9500
                          ],
                          "referencedDeclaration": 9500,
                          "src": "433:10:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 9483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "433:12:94",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9481,
                      "name": "Sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7804,
                      "src": "426:6:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 9484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "426:20:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9485,
                  "nodeType": "EmitStatement",
                  "src": "421:25:94"
                }
              ]
            },
            "documentation": {
              "id": 9473,
              "nodeType": "StructuredDocumentation",
              "src": "287:48:94",
              "text": "@custom:oz-upgrades-unsafe-allow constructor"
            },
            "id": 9487,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 9478,
                    "name": "trustedForwarder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9475,
                    "src": "393:16:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 9479,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 9477,
                  "name": "ERC2771Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6957,
                  "src": "378:14:94"
                },
                "nodeType": "ModifierInvocation",
                "src": "378:32:94"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9475,
                  "mutability": "mutable",
                  "name": "trustedForwarder",
                  "nameLocation": "360:16:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 9487,
                  "src": "352:24:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9474,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "352:7:94",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "351:26:94"
            },
            "returnParameters": {
              "id": 9480,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "411:0:94"
            },
            "scope": 9514,
            "src": "340:170:94",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6929,
              26705
            ],
            "body": {
              "id": 9499,
              "nodeType": "Block",
              "src": "612:51:94",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 9495,
                        "name": "ERC2771Context",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6957,
                        "src": "629:14:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771Context_$6957_$",
                          "typeString": "type(contract ERC2771Context)"
                        }
                      },
                      "id": 9496,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6929,
                      "src": "629:25:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 9497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "629:27:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 9494,
                  "id": 9498,
                  "nodeType": "Return",
                  "src": "622:34:94"
                }
              ]
            },
            "id": 9500,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "525:10:94",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9491,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 9489,
                  "name": "Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26715,
                  "src": "569:7:94"
                },
                {
                  "id": 9490,
                  "name": "ERC2771Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6957,
                  "src": "578:14:94"
                }
              ],
              "src": "560:33:94"
            },
            "parameters": {
              "id": 9488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "535:2:94"
            },
            "returnParameters": {
              "id": 9494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9493,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9500,
                  "src": "603:7:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9492,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "603:7:94",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "602:9:94"
            },
            "scope": 9514,
            "src": "516:147:94",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              6956,
              26714
            ],
            "body": {
              "id": 9512,
              "nodeType": "Block",
              "src": "770:49:94",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 9508,
                        "name": "ERC2771Context",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6957,
                        "src": "787:14:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC2771Context_$6957_$",
                          "typeString": "type(contract ERC2771Context)"
                        }
                      },
                      "id": 9509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6956,
                      "src": "787:23:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_calldata_ptr_$",
                        "typeString": "function () view returns (bytes calldata)"
                      }
                    },
                    "id": 9510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "787:25:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 9507,
                  "id": 9511,
                  "nodeType": "Return",
                  "src": "780:32:94"
                }
              ]
            },
            "id": 9513,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "678:8:94",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9504,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 9502,
                  "name": "Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26715,
                  "src": "720:7:94"
                },
                {
                  "id": 9503,
                  "name": "ERC2771Context",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6957,
                  "src": "729:14:94"
                }
              ],
              "src": "711:33:94"
            },
            "parameters": {
              "id": 9501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "686:2:94"
            },
            "returnParameters": {
              "id": 9507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9506,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9513,
                  "src": "754:14:94",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 9505,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "754:5:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "753:16:94"
            },
            "scope": 9514,
            "src": "669:150:94",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 9515,
        "src": "222:599:94",
        "usedErrors": []
      }
    ],
    "src": "33:789:94"
  },
  "bytecode": "60a060405234801561001057600080fd5b506040516104f63803806104f683398101604081905261002f916100d8565b6001600160a01b0381166080527fd6558c3ed910d959271054471fd1c326679d9fece99c5091b00ed89627cf2bfc610065610086565b6040516001600160a01b03909116815260200160405180910390a150610108565b600061009a61009f60201b6101491760201c565b905090565b6080516000906001600160a01b03163314156100c2575060131936013560601c90565b61009a6100d460201b6101701760201c565b3390565b6000602082840312156100ea57600080fd5b81516001600160a01b038116811461010157600080fd5b9392505050565b6080516103d4610122600039600060d301526103d46000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063376bf26214610046578063572b6c051461005b578063d737d0c714610082575b600080fd5b6100596100543660046101dc565b61008a565b005b61006e610069366004610297565b6100d1565b604051901515815260200160405180910390f35b610059610103565b7faf235354a0a47c91ee171961326335cb2d1a8e55b8a89859b0e61eb049e50ea06100b3610174565b84846040516100c594939291906102c7565b60405180910390a15050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b7fd6558c3ed910d959271054471fd1c326679d9fece99c5091b00ed89627cf2bfc61012c610187565b6040516001600160a01b03909116815260200160405180910390a1565b6000610154336100d1565b15610166575060131936013560601c90565b503390565b905090565b3390565b36600061017f610191565b915091509091565b600061016b610149565b36600061019d336100d1565b156101be57600080366101b160148261034f565b9261017f93929190610374565b60003661017f565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156101ef57600080fd5b82359150602083013567ffffffffffffffff8082111561020e57600080fd5b818501915085601f83011261022257600080fd5b813581811115610234576102346101c6565b604051601f8201601f19908116603f0116810190838211818310171561025c5761025c6101c6565b8160405282815288602084870101111561027557600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000602082840312156102a957600080fd5b81356001600160a01b03811681146102c057600080fd5b9392505050565b60608152836060820152838560808301376000608085830101526000601f1980601f8701168301602086818601526080858303016040860152855180608084015260005b818110156103275787810183015184820160a00152820161030b565b8181111561033957600060a083860101525b50601f019092160160a001979650505050505050565b60008282101561036f57634e487b7160e01b600052601160045260246000fd5b500390565b6000808585111561038457600080fd5b8386111561039157600080fd5b505082019391909203915056fea26469706673582212200fdffab380ae97a68cb58c47ecd6e99374109dee8e6037eece7d2c31991c267264736f6c634300080c0033",
  "bytecodeSha1": "2eb8f4e740bbedee8a6aa11ecc922d62952bc3dd",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "ERC2771ContextMock",
  "coverageMap": {
    "branches": {
      "210": {},
      "50": {
        "ERC2771Context._msgData": {
          "10": [
            1175,
            1205,
            false
          ]
        },
        "ERC2771Context._msgSender": {
          "9": [
            770,
            800,
            false
          ]
        }
      },
      "64": {},
      "94": {}
    },
    "statements": {
      "210": {
        "Context._msgSender": {
          "3": [
            712,
            729
          ]
        }
      },
      "50": {
        "ERC2771Context._msgData": {
          "7": [
            1221,
            1259
          ],
          "8": [
            1290,
            1313
          ]
        },
        "ERC2771Context._msgSender": {
          "4": [
            1037,
            1062
          ]
        },
        "ERC2771Context.isTrustedForwarder": {
          "1": [
            628,
            665
          ]
        }
      },
      "64": {
        "ContextMock.msgData": {
          "0": [
            393,
            441
          ]
        },
        "ContextMock.msgSender": {
          "2": [
            201,
            226
          ]
        }
      },
      "94": {
        "ERC2771ContextMock._msgData": {
          "5": [
            780,
            812
          ]
        },
        "ERC2771ContextMock._msgSender": {
          "6": [
            622,
            656
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "ContextMock",
    "ERC2771Context"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100415760003560e01c8063376bf26214610046578063572b6c051461005b578063d737d0c714610082575b600080fd5b6100596100543660046101dc565b61008a565b005b61006e610069366004610297565b6100d1565b604051901515815260200160405180910390f35b610059610103565b7faf235354a0a47c91ee171961326335cb2d1a8e55b8a89859b0e61eb049e50ea06100b3610174565b84846040516100c594939291906102c7565b60405180910390a15050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b7fd6558c3ed910d959271054471fd1c326679d9fece99c5091b00ed89627cf2bfc61012c610187565b6040516001600160a01b03909116815260200160405180910390a1565b6000610154336100d1565b15610166575060131936013560601c90565b503390565b905090565b3390565b36600061017f610191565b915091509091565b600061016b610149565b36600061019d336100d1565b156101be57600080366101b160148261034f565b9261017f93929190610374565b60003661017f565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156101ef57600080fd5b82359150602083013567ffffffffffffffff8082111561020e57600080fd5b818501915085601f83011261022257600080fd5b813581811115610234576102346101c6565b604051601f8201601f19908116603f0116810190838211818310171561025c5761025c6101c6565b8160405282815288602084870101111561027557600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000602082840312156102a957600080fd5b81356001600160a01b03811681146102c057600080fd5b9392505050565b60608152836060820152838560808301376000608085830101526000601f1980601f8701168301602086818601526080858303016040860152855180608084015260005b818110156103275787810183015184820160a00152820161030b565b8181111561033957600060a083860101525b50601f019092160160a001979650505050505050565b60008282101561036f57634e487b7160e01b600052601160045260246000fd5b500390565b6000808585111561038457600080fd5b8386111561039157600080fd5b505082019391909203915056fea26469706673582212200fdffab380ae97a68cb58c47ecd6e99374109dee8e6037eece7d2c31991c267264736f6c634300080c0033",
  "deployedSourceMap": "222:599:94:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;310:138:64;;;;;;:::i;:::-;;:::i;:::-;;536:136:50;;;;;;:::i;:::-;;:::i;:::-;;;1597:14:239;;1590:22;1572:41;;1560:2;1545:18;536:136:50;;;;;;;163:70:64;;;:::i;310:138::-;398:43;403:10;:8;:10::i;:::-;415:12;429:11;398:43;;;;;;;;;:::i;:::-;;;;;;;;310:138;;:::o;536:136:50:-;648:17;-1:-1:-1;;;;;635:30:50;;;;;;;536:136::o;163:70:64:-;206:20;213:12;:10;:12::i;:::-;206:20;;-1:-1:-1;;;;;2793:32:239;;;2775:51;;2763:2;2748:18;206:20:64;;;;;;;163:70::o;678:401:50:-;740:14;770:30;789:10;770:18;:30::i;:::-;766:307;;;-1:-1:-1;;;972:14:50;968:23;955:37;951:2;947:46;678:401;:::o;766:307::-;-1:-1:-1;719:10:210;;678:401:50:o;1044:18::-;1037:25;;678:401;:::o;640:96:210:-;719:10;;640:96::o;669:150:94:-;754:14;;787:25;:23;:25::i;:::-;780:32;;;;669:150;;:::o;516:147::-;603:7;629:27;:25;:27::i;1085:245:50:-;1145:14;;1175:30;1194:10;1175:18;:30::i;:::-;1171:153;;;1228:8;;;1238:20;1256:2;1228:8;1238:20;:::i;:::-;1228:31;;;;;;;:::i;1171:153::-;793:14:210;;1297:16:50;742:99:210;14:127:239;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:990;224:6;232;285:2;273:9;264:7;260:23;256:32;253:52;;;301:1;298;291:12;253:52;337:9;324:23;314:33;;398:2;387:9;383:18;370:32;421:18;462:2;454:6;451:14;448:34;;;478:1;475;468:12;448:34;516:6;505:9;501:22;491:32;;561:7;554:4;550:2;546:13;542:27;532:55;;583:1;580;573:12;532:55;619:2;606:16;641:2;637;634:10;631:36;;;647:18;;:::i;:::-;722:2;716:9;690:2;776:13;;-1:-1:-1;;772:22:239;;;796:2;768:31;764:40;752:53;;;820:18;;;840:22;;;817:46;814:72;;;866:18;;:::i;:::-;906:10;902:2;895:22;941:2;933:6;926:18;981:7;976:2;971;967;963:11;959:20;956:33;953:53;;;1002:1;999;992:12;953:53;1058:2;1053;1049;1045:11;1040:2;1032:6;1028:15;1015:46;1103:1;1098:2;1093;1085:6;1081:15;1077:24;1070:35;1124:6;1114:16;;;;;;;146:990;;;;;:::o;1141:286::-;1200:6;1253:2;1241:9;1232:7;1228:23;1224:32;1221:52;;;1269:1;1266;1259:12;1221:52;1295:23;;-1:-1:-1;;;;;1347:31:239;;1337:42;;1327:70;;1393:1;1390;1383:12;1327:70;1416:5;1141:286;-1:-1:-1;;;1141:286:239:o;1624:1000::-;1857:2;1846:9;1839:21;1896:6;1891:2;1880:9;1876:18;1869:34;1954:6;1946;1940:3;1929:9;1925:19;1912:49;2011:1;2005:3;1996:6;1985:9;1981:22;1977:32;1970:43;1820:4;2036:2;2032:7;2094:2;2089;2081:6;2077:15;2073:24;2062:9;2058:40;2117:4;2157:6;2152:2;2141:9;2137:18;2130:34;2224:3;2212:9;2208:2;2204:18;2200:28;2195:2;2184:9;2180:18;2173:56;2258:6;2252:13;2295:6;2289:3;2285:2;2281:12;2274:28;2320:1;2330:134;2344:6;2341:1;2338:13;2330:134;;;2433:14;;;2429:23;;2423:30;2405:10;;;2417:3;2401:20;2394:60;2359:10;;2330:134;;;2482:6;2479:1;2476:13;2473:85;;;2546:1;2540:3;2531:6;2527:2;2523:15;2519:25;2512:36;2473:85;-1:-1:-1;2603:2:239;2591:15;2587:24;;;2579:33;2614:3;2575:43;;1624:1000;-1:-1:-1;;;;;;;1624:1000:239:o;2837:222::-;2877:4;2905:1;2902;2899:8;2896:131;;;2949:10;2944:3;2940:20;2937:1;2930:31;2984:4;2981:1;2974:15;3012:4;3009:1;3002:15;2896:131;-1:-1:-1;3044:9:239;;2837:222::o;3064:331::-;3169:9;3180;3222:8;3210:10;3207:24;3204:44;;;3244:1;3241;3234:12;3204:44;3273:6;3263:8;3260:20;3257:40;;;3293:1;3290;3283:12;3257:40;-1:-1:-1;;3319:23:239;;;3364:25;;;;;-1:-1:-1;3064:331:239:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "custom:oz-upgrades-unsafe-allow": "constructor"
      }
    },
    "version": 1
  },
  "offset": [
    222,
    821
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x376BF262 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0xD737D0C7 EQ PUSH2 0x82 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DC JUMP JUMPDEST PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x69 CALLDATASIZE PUSH1 0x4 PUSH2 0x297 JUMP JUMPDEST PUSH2 0xD1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59 PUSH2 0x103 JUMP JUMPDEST PUSH32 0xAF235354A0A47C91EE171961326335CB2D1A8E55B8A89859B0E61EB049E50EA0 PUSH2 0xB3 PUSH2 0x174 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ SWAP1 JUMP JUMPDEST PUSH32 0xD6558C3ED910D959271054471FD1C326679D9FECE99C5091B00ED89627CF2BFC PUSH2 0x12C PUSH2 0x187 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x154 CALLER PUSH2 0xD1 JUMP JUMPDEST ISZERO PUSH2 0x166 JUMPI POP PUSH1 0x13 NOT CALLDATASIZE ADD CALLDATALOAD PUSH1 0x60 SHR SWAP1 JUMP JUMPDEST POP CALLER SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 PUSH2 0x17F PUSH2 0x191 JUMP JUMPDEST SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16B PUSH2 0x149 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 PUSH2 0x19D CALLER PUSH2 0xD1 JUMP JUMPDEST ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 CALLDATASIZE PUSH2 0x1B1 PUSH1 0x14 DUP3 PUSH2 0x34F JUMP JUMPDEST SWAP3 PUSH2 0x17F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x374 JUMP JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH2 0x17F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x20E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x222 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x234 JUMPI PUSH2 0x234 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x25C JUMPI PUSH2 0x25C PUSH2 0x1C6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE DUP4 PUSH1 0x60 DUP3 ADD MSTORE DUP4 DUP6 PUSH1 0x80 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x80 DUP6 DUP4 ADD ADD MSTORE PUSH1 0x0 PUSH1 0x1F NOT DUP1 PUSH1 0x1F DUP8 ADD AND DUP4 ADD PUSH1 0x20 DUP7 DUP2 DUP7 ADD MSTORE PUSH1 0x80 DUP6 DUP4 SUB ADD PUSH1 0x40 DUP7 ADD MSTORE DUP6 MLOAD DUP1 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x327 JUMPI DUP8 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD PUSH1 0xA0 ADD MSTORE DUP3 ADD PUSH2 0x30B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 PUSH1 0xA0 DUP4 DUP7 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD SWAP1 SWAP3 AND ADD PUSH1 0xA0 ADD SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x36F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0xDF STATICCALL 0xB3 DUP1 0xAE SWAP8 0xA6 DUP13 0xB5 DUP13 SELFBALANCE 0xEC 0xD6 0xE9 SWAP4 PUSH21 0x109DEE8E6037EECE7D2C31991C267264736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        222,
        821
      ],
      "op": "PUSH1",
      "path": "94",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH1",
      "path": "94",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "MSTORE",
      "path": "94"
    },
    "5": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "CALLVALUE",
      "path": "94"
    },
    "6": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "DUP1",
      "path": "94"
    },
    "7": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "ISZERO",
      "path": "94"
    },
    "8": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH2",
      "path": "94",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "JUMPI",
      "path": "94"
    },
    "12": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH1",
      "path": "94",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "DUP1",
      "path": "94"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "REVERT",
      "path": "94"
    },
    "16": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "JUMPDEST",
      "path": "94"
    },
    "17": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "POP",
      "path": "94"
    },
    "18": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH1",
      "path": "94",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "CALLDATASIZE",
      "path": "94"
    },
    "21": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "LT",
      "path": "94"
    },
    "22": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH2",
      "path": "94",
      "value": "0x41"
    },
    "25": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "JUMPI",
      "path": "94"
    },
    "26": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH1",
      "path": "94",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "CALLDATALOAD",
      "path": "94"
    },
    "29": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH1",
      "path": "94",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "SHR",
      "path": "94"
    },
    "32": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "DUP1",
      "path": "94"
    },
    "33": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH4",
      "path": "94",
      "value": "0x376BF262"
    },
    "38": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "EQ",
      "path": "94"
    },
    "39": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH2",
      "path": "94",
      "value": "0x46"
    },
    "42": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "JUMPI",
      "path": "94"
    },
    "43": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "DUP1",
      "path": "94"
    },
    "44": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH4",
      "path": "94",
      "value": "0x572B6C05"
    },
    "49": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "EQ",
      "path": "94"
    },
    "50": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH2",
      "path": "94",
      "value": "0x5B"
    },
    "53": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "JUMPI",
      "path": "94"
    },
    "54": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "DUP1",
      "path": "94"
    },
    "55": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH4",
      "path": "94",
      "value": "0xD737D0C7"
    },
    "60": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "EQ",
      "path": "94"
    },
    "61": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH2",
      "path": "94",
      "value": "0x82"
    },
    "64": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "JUMPI",
      "path": "94"
    },
    "65": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "JUMPDEST",
      "path": "94"
    },
    "66": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "PUSH1",
      "path": "94",
      "value": "0x0"
    },
    "68": {
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "DUP1",
      "path": "94"
    },
    "69": {
      "first_revert": true,
      "fn": null,
      "offset": [
        222,
        821
      ],
      "op": "REVERT",
      "path": "94"
    },
    "70": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "JUMPDEST",
      "path": "64"
    },
    "71": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "PUSH2",
      "path": "64",
      "value": "0x59"
    },
    "74": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "PUSH2",
      "path": "64",
      "value": "0x54"
    },
    "77": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "CALLDATASIZE",
      "path": "64"
    },
    "78": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "PUSH1",
      "path": "64",
      "value": "0x4"
    },
    "80": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "PUSH2",
      "path": "64",
      "value": "0x1DC"
    },
    "83": {
      "fn": "ContextMock.msgData",
      "jump": "i",
      "offset": [
        310,
        448
      ],
      "op": "JUMP",
      "path": "64"
    },
    "84": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "JUMPDEST",
      "path": "64"
    },
    "85": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "PUSH2",
      "path": "64",
      "value": "0x8A"
    },
    "88": {
      "fn": "ContextMock.msgData",
      "jump": "i",
      "offset": [
        310,
        448
      ],
      "op": "JUMP",
      "path": "64"
    },
    "89": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "JUMPDEST",
      "path": "64"
    },
    "90": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "STOP",
      "path": "64"
    },
    "91": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        536,
        672
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "92": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        536,
        672
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x6E"
    },
    "95": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        536,
        672
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x69"
    },
    "98": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        536,
        672
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "99": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        536,
        672
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x4"
    },
    "101": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        536,
        672
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x297"
    },
    "104": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "jump": "i",
      "offset": [
        536,
        672
      ],
      "op": "JUMP",
      "path": "50"
    },
    "105": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        536,
        672
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "106": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        536,
        672
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xD1"
    },
    "109": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "jump": "i",
      "offset": [
        536,
        672
      ],
      "op": "JUMP",
      "path": "50"
    },
    "110": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        536,
        672
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "111": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        536,
        672
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "113": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        536,
        672
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "114": {
      "op": "SWAP1"
    },
    "115": {
      "op": "ISZERO"
    },
    "116": {
      "op": "ISZERO"
    },
    "117": {
      "op": "DUP2"
    },
    "118": {
      "op": "MSTORE"
    },
    "119": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "121": {
      "op": "ADD"
    },
    "122": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        536,
        672
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x40"
    },
    "124": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        536,
        672
      ],
      "op": "MLOAD",
      "path": "50"
    },
    "125": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        536,
        672
      ],
      "op": "DUP1",
      "path": "50"
    },
    "126": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        536,
        672
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "127": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        536,
        672
      ],
      "op": "SUB",
      "path": "50"
    },
    "128": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        536,
        672
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "129": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        536,
        672
      ],
      "op": "RETURN",
      "path": "50"
    },
    "130": {
      "fn": "ContextMock.msgSender",
      "offset": [
        163,
        233
      ],
      "op": "JUMPDEST",
      "path": "64"
    },
    "131": {
      "fn": "ContextMock.msgSender",
      "offset": [
        163,
        233
      ],
      "op": "PUSH2",
      "path": "64",
      "value": "0x59"
    },
    "134": {
      "fn": "ContextMock.msgSender",
      "offset": [
        163,
        233
      ],
      "op": "PUSH2",
      "path": "64",
      "value": "0x103"
    },
    "137": {
      "fn": "ContextMock.msgSender",
      "jump": "i",
      "offset": [
        163,
        233
      ],
      "op": "JUMP",
      "path": "64"
    },
    "138": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "JUMPDEST",
      "path": "64"
    },
    "139": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "PUSH32",
      "path": "64",
      "statement": 0,
      "value": "0xAF235354A0A47C91EE171961326335CB2D1A8E55B8A89859B0E61EB049E50EA0"
    },
    "172": {
      "fn": "ContextMock.msgData",
      "offset": [
        403,
        413
      ],
      "op": "PUSH2",
      "path": "64",
      "value": "0xB3"
    },
    "175": {
      "fn": "ContextMock.msgData",
      "offset": [
        403,
        411
      ],
      "op": "PUSH2",
      "path": "64",
      "value": "0x174"
    },
    "178": {
      "fn": "ContextMock.msgData",
      "jump": "i",
      "offset": [
        403,
        413
      ],
      "op": "JUMP",
      "path": "64"
    },
    "179": {
      "fn": "ContextMock.msgData",
      "offset": [
        403,
        413
      ],
      "op": "JUMPDEST",
      "path": "64"
    },
    "180": {
      "fn": "ContextMock.msgData",
      "offset": [
        415,
        427
      ],
      "op": "DUP5",
      "path": "64"
    },
    "181": {
      "fn": "ContextMock.msgData",
      "offset": [
        429,
        440
      ],
      "op": "DUP5",
      "path": "64"
    },
    "182": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "PUSH1",
      "path": "64",
      "value": "0x40"
    },
    "184": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "MLOAD",
      "path": "64"
    },
    "185": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "PUSH2",
      "path": "64",
      "value": "0xC5"
    },
    "188": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "SWAP5",
      "path": "64"
    },
    "189": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "SWAP4",
      "path": "64"
    },
    "190": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "SWAP3",
      "path": "64"
    },
    "191": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "SWAP2",
      "path": "64"
    },
    "192": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "SWAP1",
      "path": "64"
    },
    "193": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "PUSH2",
      "path": "64",
      "value": "0x2C7"
    },
    "196": {
      "fn": "ContextMock.msgData",
      "jump": "i",
      "offset": [
        398,
        441
      ],
      "op": "JUMP",
      "path": "64"
    },
    "197": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "JUMPDEST",
      "path": "64"
    },
    "198": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "PUSH1",
      "path": "64",
      "value": "0x40"
    },
    "200": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "MLOAD",
      "path": "64"
    },
    "201": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "DUP1",
      "path": "64"
    },
    "202": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "SWAP2",
      "path": "64"
    },
    "203": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "SUB",
      "path": "64"
    },
    "204": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "SWAP1",
      "path": "64"
    },
    "205": {
      "fn": "ContextMock.msgData",
      "offset": [
        398,
        441
      ],
      "op": "LOG1",
      "path": "64"
    },
    "206": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "POP",
      "path": "64"
    },
    "207": {
      "fn": "ContextMock.msgData",
      "offset": [
        310,
        448
      ],
      "op": "POP",
      "path": "64"
    },
    "208": {
      "fn": "ContextMock.msgData",
      "jump": "o",
      "offset": [
        310,
        448
      ],
      "op": "JUMP",
      "path": "64"
    },
    "209": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        536,
        672
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "210": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        648,
        665
      ],
      "op": "PUSH32",
      "path": "50",
      "statement": 1,
      "value": "0x0"
    },
    "243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "247": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "249": {
      "op": "SHL"
    },
    "250": {
      "op": "SUB"
    },
    "251": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        635,
        665
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "252": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        635,
        665
      ],
      "op": "DUP2",
      "path": "50"
    },
    "253": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        635,
        665
      ],
      "op": "AND",
      "path": "50"
    },
    "254": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        635,
        665
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "255": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        635,
        665
      ],
      "op": "AND",
      "path": "50"
    },
    "256": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        635,
        665
      ],
      "op": "EQ",
      "path": "50"
    },
    "257": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "offset": [
        635,
        665
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "258": {
      "fn": "ERC2771Context.isTrustedForwarder",
      "jump": "o",
      "offset": [
        536,
        672
      ],
      "op": "JUMP",
      "path": "50"
    },
    "259": {
      "fn": "ContextMock.msgSender",
      "offset": [
        163,
        233
      ],
      "op": "JUMPDEST",
      "path": "64"
    },
    "260": {
      "fn": "ContextMock.msgSender",
      "offset": [
        206,
        226
      ],
      "op": "PUSH32",
      "path": "64",
      "statement": 2,
      "value": "0xD6558C3ED910D959271054471FD1C326679D9FECE99C5091B00ED89627CF2BFC"
    },
    "293": {
      "fn": "ContextMock.msgSender",
      "offset": [
        213,
        225
      ],
      "op": "PUSH2",
      "path": "64",
      "value": "0x12C"
    },
    "296": {
      "fn": "ContextMock.msgSender",
      "offset": [
        213,
        223
      ],
      "op": "PUSH2",
      "path": "64",
      "value": "0x187"
    },
    "299": {
      "fn": "ContextMock.msgSender",
      "jump": "i",
      "offset": [
        213,
        225
      ],
      "op": "JUMP",
      "path": "64"
    },
    "300": {
      "fn": "ContextMock.msgSender",
      "offset": [
        213,
        225
      ],
      "op": "JUMPDEST",
      "path": "64"
    },
    "301": {
      "fn": "ContextMock.msgSender",
      "offset": [
        206,
        226
      ],
      "op": "PUSH1",
      "path": "64",
      "value": "0x40"
    },
    "303": {
      "fn": "ContextMock.msgSender",
      "offset": [
        206,
        226
      ],
      "op": "MLOAD",
      "path": "64"
    },
    "304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "310": {
      "op": "SHL"
    },
    "311": {
      "op": "SUB"
    },
    "312": {
      "op": "SWAP1"
    },
    "313": {
      "op": "SWAP2"
    },
    "314": {
      "op": "AND"
    },
    "315": {
      "op": "DUP2"
    },
    "316": {
      "op": "MSTORE"
    },
    "317": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "319": {
      "op": "ADD"
    },
    "320": {
      "fn": "ContextMock.msgSender",
      "offset": [
        206,
        226
      ],
      "op": "PUSH1",
      "path": "64",
      "value": "0x40"
    },
    "322": {
      "fn": "ContextMock.msgSender",
      "offset": [
        206,
        226
      ],
      "op": "MLOAD",
      "path": "64"
    },
    "323": {
      "fn": "ContextMock.msgSender",
      "offset": [
        206,
        226
      ],
      "op": "DUP1",
      "path": "64"
    },
    "324": {
      "fn": "ContextMock.msgSender",
      "offset": [
        206,
        226
      ],
      "op": "SWAP2",
      "path": "64"
    },
    "325": {
      "fn": "ContextMock.msgSender",
      "offset": [
        206,
        226
      ],
      "op": "SUB",
      "path": "64"
    },
    "326": {
      "fn": "ContextMock.msgSender",
      "offset": [
        206,
        226
      ],
      "op": "SWAP1",
      "path": "64"
    },
    "327": {
      "fn": "ContextMock.msgSender",
      "offset": [
        206,
        226
      ],
      "op": "LOG1",
      "path": "64"
    },
    "328": {
      "fn": "ContextMock.msgSender",
      "jump": "o",
      "offset": [
        163,
        233
      ],
      "op": "JUMP",
      "path": "64"
    },
    "329": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        678,
        1079
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "330": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        740,
        754
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "332": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        770,
        800
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x154"
    },
    "335": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        789,
        799
      ],
      "op": "CALLER",
      "path": "50"
    },
    "336": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        770,
        788
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xD1"
    },
    "339": {
      "fn": "ERC2771Context._msgSender",
      "jump": "i",
      "offset": [
        770,
        800
      ],
      "op": "JUMP",
      "path": "50"
    },
    "340": {
      "branch": 9,
      "fn": "ERC2771Context._msgSender",
      "offset": [
        770,
        800
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "341": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        766,
        1073
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "342": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        766,
        1073
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x166"
    },
    "345": {
      "branch": 9,
      "fn": "ERC2771Context._msgSender",
      "offset": [
        766,
        1073
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "346": {
      "op": "POP"
    },
    "347": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "349": {
      "op": "NOT"
    },
    "350": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        972,
        986
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "351": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        968,
        991
      ],
      "op": "ADD",
      "path": "50"
    },
    "352": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        955,
        992
      ],
      "op": "CALLDATALOAD",
      "path": "50"
    },
    "353": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        951,
        953
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x60"
    },
    "355": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        947,
        993
      ],
      "op": "SHR",
      "path": "50"
    },
    "356": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        678,
        1079
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "357": {
      "fn": "ERC2771Context._msgSender",
      "jump": "o",
      "offset": [
        678,
        1079
      ],
      "op": "JUMP",
      "path": "50"
    },
    "358": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        766,
        1073
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "359": {
      "op": "POP"
    },
    "360": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210",
      "statement": 3
    },
    "361": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "210"
    },
    "362": {
      "fn": "ERC2771Context._msgSender",
      "jump": "o",
      "offset": [
        678,
        1079
      ],
      "op": "JUMP",
      "path": "50"
    },
    "363": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        1044,
        1062
      ],
      "op": "JUMPDEST",
      "path": "50",
      "statement": 4
    },
    "364": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        1037,
        1062
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "365": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        1037,
        1062
      ],
      "op": "POP",
      "path": "50"
    },
    "366": {
      "fn": "ERC2771Context._msgSender",
      "offset": [
        678,
        1079
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "367": {
      "fn": "ERC2771Context._msgSender",
      "jump": "o",
      "offset": [
        678,
        1079
      ],
      "op": "JUMP",
      "path": "50"
    },
    "368": {
      "fn": "Context._msgSender",
      "offset": [
        640,
        736
      ],
      "op": "JUMPDEST",
      "path": "210"
    },
    "369": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "370": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "210"
    },
    "371": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        640,
        736
      ],
      "op": "JUMP",
      "path": "210"
    },
    "372": {
      "fn": "ERC2771ContextMock._msgData",
      "offset": [
        669,
        819
      ],
      "op": "JUMPDEST",
      "path": "94"
    },
    "373": {
      "fn": "ERC2771ContextMock._msgData",
      "offset": [
        754,
        768
      ],
      "op": "CALLDATASIZE",
      "path": "94"
    },
    "374": {
      "fn": "ERC2771ContextMock._msgData",
      "offset": [
        754,
        768
      ],
      "op": "PUSH1",
      "path": "94",
      "value": "0x0"
    },
    "376": {
      "fn": "ERC2771ContextMock._msgData",
      "offset": [
        787,
        812
      ],
      "op": "PUSH2",
      "path": "94",
      "statement": 5,
      "value": "0x17F"
    },
    "379": {
      "fn": "ERC2771ContextMock._msgData",
      "offset": [
        787,
        810
      ],
      "op": "PUSH2",
      "path": "94",
      "value": "0x191"
    },
    "382": {
      "fn": "ERC2771ContextMock._msgData",
      "jump": "i",
      "offset": [
        787,
        812
      ],
      "op": "JUMP",
      "path": "94"
    },
    "383": {
      "fn": "ERC2771ContextMock._msgData",
      "offset": [
        787,
        812
      ],
      "op": "JUMPDEST",
      "path": "94"
    },
    "384": {
      "fn": "ERC2771ContextMock._msgData",
      "offset": [
        780,
        812
      ],
      "op": "SWAP2",
      "path": "94"
    },
    "385": {
      "fn": "ERC2771ContextMock._msgData",
      "offset": [
        780,
        812
      ],
      "op": "POP",
      "path": "94"
    },
    "386": {
      "fn": "ERC2771ContextMock._msgData",
      "offset": [
        780,
        812
      ],
      "op": "SWAP2",
      "path": "94"
    },
    "387": {
      "fn": "ERC2771ContextMock._msgData",
      "offset": [
        780,
        812
      ],
      "op": "POP",
      "path": "94"
    },
    "388": {
      "fn": "ERC2771ContextMock._msgData",
      "offset": [
        669,
        819
      ],
      "op": "SWAP1",
      "path": "94"
    },
    "389": {
      "fn": "ERC2771ContextMock._msgData",
      "offset": [
        669,
        819
      ],
      "op": "SWAP2",
      "path": "94"
    },
    "390": {
      "fn": "ERC2771ContextMock._msgData",
      "jump": "o",
      "offset": [
        669,
        819
      ],
      "op": "JUMP",
      "path": "94"
    },
    "391": {
      "fn": "ERC2771ContextMock._msgSender",
      "offset": [
        516,
        663
      ],
      "op": "JUMPDEST",
      "path": "94"
    },
    "392": {
      "fn": "ERC2771ContextMock._msgSender",
      "offset": [
        603,
        610
      ],
      "op": "PUSH1",
      "path": "94",
      "value": "0x0"
    },
    "394": {
      "fn": "ERC2771ContextMock._msgSender",
      "offset": [
        629,
        656
      ],
      "op": "PUSH2",
      "path": "94",
      "statement": 6,
      "value": "0x16B"
    },
    "397": {
      "fn": "ERC2771ContextMock._msgSender",
      "offset": [
        629,
        654
      ],
      "op": "PUSH2",
      "path": "94",
      "value": "0x149"
    },
    "400": {
      "fn": "ERC2771ContextMock._msgSender",
      "jump": "i",
      "offset": [
        629,
        656
      ],
      "op": "JUMP",
      "path": "94"
    },
    "401": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1085,
        1330
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "402": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1145,
        1159
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "403": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1145,
        1159
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x0"
    },
    "405": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1175,
        1205
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x19D"
    },
    "408": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1194,
        1204
      ],
      "op": "CALLER",
      "path": "50"
    },
    "409": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1175,
        1193
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0xD1"
    },
    "412": {
      "fn": "ERC2771Context._msgData",
      "jump": "i",
      "offset": [
        1175,
        1205
      ],
      "op": "JUMP",
      "path": "50"
    },
    "413": {
      "branch": 10,
      "fn": "ERC2771Context._msgData",
      "offset": [
        1175,
        1205
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "414": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1171,
        1324
      ],
      "op": "ISZERO",
      "path": "50"
    },
    "415": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1171,
        1324
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1BE"
    },
    "418": {
      "branch": 10,
      "fn": "ERC2771Context._msgData",
      "offset": [
        1171,
        1324
      ],
      "op": "JUMPI",
      "path": "50"
    },
    "419": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1228,
        1236
      ],
      "op": "PUSH1",
      "path": "50",
      "statement": 7,
      "value": "0x0"
    },
    "421": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1228,
        1236
      ],
      "op": "DUP1",
      "path": "50"
    },
    "422": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1228,
        1236
      ],
      "op": "CALLDATASIZE",
      "path": "50"
    },
    "423": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1238,
        1258
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x1B1"
    },
    "426": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1256,
        1258
      ],
      "op": "PUSH1",
      "path": "50",
      "value": "0x14"
    },
    "428": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1228,
        1236
      ],
      "op": "DUP3",
      "path": "50"
    },
    "429": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1238,
        1258
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x34F"
    },
    "432": {
      "fn": "ERC2771Context._msgData",
      "jump": "i",
      "offset": [
        1238,
        1258
      ],
      "op": "JUMP",
      "path": "50"
    },
    "433": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1238,
        1258
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "434": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1228,
        1259
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "435": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1228,
        1259
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x17F"
    },
    "438": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1228,
        1259
      ],
      "op": "SWAP4",
      "path": "50"
    },
    "439": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1228,
        1259
      ],
      "op": "SWAP3",
      "path": "50"
    },
    "440": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1228,
        1259
      ],
      "op": "SWAP2",
      "path": "50"
    },
    "441": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1228,
        1259
      ],
      "op": "SWAP1",
      "path": "50"
    },
    "442": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1228,
        1259
      ],
      "op": "PUSH2",
      "path": "50",
      "value": "0x374"
    },
    "445": {
      "fn": "ERC2771Context._msgData",
      "jump": "i",
      "offset": [
        1228,
        1259
      ],
      "op": "JUMP",
      "path": "50"
    },
    "446": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1171,
        1324
      ],
      "op": "JUMPDEST",
      "path": "50"
    },
    "447": {
      "fn": "Context._msgData",
      "offset": [
        793,
        807
      ],
      "op": "PUSH1",
      "path": "210",
      "value": "0x0"
    },
    "449": {
      "fn": "Context._msgData",
      "offset": [
        793,
        807
      ],
      "op": "CALLDATASIZE",
      "path": "210"
    },
    "450": {
      "fn": "ERC2771Context._msgData",
      "offset": [
        1297,
        1313
      ],
      "op": "PUSH2",
      "path": "50",
      "statement": 8,
      "value": "0x17F"
    },
    "453": {
      "fn": "Context._msgData",
      "offset": [
        742,
        841
      ],
      "op": "JUMP",
      "path": "210"
    },
    "454": {
      "op": "JUMPDEST"
    },
    "455": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "460": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "462": {
      "op": "SHL"
    },
    "463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "465": {
      "op": "MSTORE"
    },
    "466": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "468": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "470": {
      "op": "MSTORE"
    },
    "471": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "475": {
      "op": "REVERT"
    },
    "476": {
      "op": "JUMPDEST"
    },
    "477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "479": {
      "op": "DUP1"
    },
    "480": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "482": {
      "op": "DUP4"
    },
    "483": {
      "op": "DUP6"
    },
    "484": {
      "op": "SUB"
    },
    "485": {
      "op": "SLT"
    },
    "486": {
      "op": "ISZERO"
    },
    "487": {
      "op": "PUSH2",
      "value": "0x1EF"
    },
    "490": {
      "op": "JUMPI"
    },
    "491": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "493": {
      "op": "DUP1"
    },
    "494": {
      "op": "REVERT"
    },
    "495": {
      "op": "JUMPDEST"
    },
    "496": {
      "op": "DUP3"
    },
    "497": {
      "op": "CALLDATALOAD"
    },
    "498": {
      "op": "SWAP2"
    },
    "499": {
      "op": "POP"
    },
    "500": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "502": {
      "op": "DUP4"
    },
    "503": {
      "op": "ADD"
    },
    "504": {
      "op": "CALLDATALOAD"
    },
    "505": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "514": {
      "op": "DUP1"
    },
    "515": {
      "op": "DUP3"
    },
    "516": {
      "op": "GT"
    },
    "517": {
      "op": "ISZERO"
    },
    "518": {
      "op": "PUSH2",
      "value": "0x20E"
    },
    "521": {
      "op": "JUMPI"
    },
    "522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "524": {
      "op": "DUP1"
    },
    "525": {
      "op": "REVERT"
    },
    "526": {
      "op": "JUMPDEST"
    },
    "527": {
      "op": "DUP2"
    },
    "528": {
      "op": "DUP6"
    },
    "529": {
      "op": "ADD"
    },
    "530": {
      "op": "SWAP2"
    },
    "531": {
      "op": "POP"
    },
    "532": {
      "op": "DUP6"
    },
    "533": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "535": {
      "op": "DUP4"
    },
    "536": {
      "op": "ADD"
    },
    "537": {
      "op": "SLT"
    },
    "538": {
      "op": "PUSH2",
      "value": "0x222"
    },
    "541": {
      "op": "JUMPI"
    },
    "542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "544": {
      "op": "DUP1"
    },
    "545": {
      "op": "REVERT"
    },
    "546": {
      "op": "JUMPDEST"
    },
    "547": {
      "op": "DUP2"
    },
    "548": {
      "op": "CALLDATALOAD"
    },
    "549": {
      "op": "DUP2"
    },
    "550": {
      "op": "DUP2"
    },
    "551": {
      "op": "GT"
    },
    "552": {
      "op": "ISZERO"
    },
    "553": {
      "op": "PUSH2",
      "value": "0x234"
    },
    "556": {
      "op": "JUMPI"
    },
    "557": {
      "op": "PUSH2",
      "value": "0x234"
    },
    "560": {
      "op": "PUSH2",
      "value": "0x1C6"
    },
    "563": {
      "jump": "i",
      "op": "JUMP"
    },
    "564": {
      "op": "JUMPDEST"
    },
    "565": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "567": {
      "op": "MLOAD"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "570": {
      "op": "DUP3"
    },
    "571": {
      "op": "ADD"
    },
    "572": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "574": {
      "op": "NOT"
    },
    "575": {
      "op": "SWAP1"
    },
    "576": {
      "op": "DUP2"
    },
    "577": {
      "op": "AND"
    },
    "578": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "580": {
      "op": "ADD"
    },
    "581": {
      "op": "AND"
    },
    "582": {
      "op": "DUP2"
    },
    "583": {
      "op": "ADD"
    },
    "584": {
      "op": "SWAP1"
    },
    "585": {
      "op": "DUP4"
    },
    "586": {
      "op": "DUP3"
    },
    "587": {
      "op": "GT"
    },
    "588": {
      "op": "DUP2"
    },
    "589": {
      "op": "DUP4"
    },
    "590": {
      "op": "LT"
    },
    "591": {
      "op": "OR"
    },
    "592": {
      "op": "ISZERO"
    },
    "593": {
      "op": "PUSH2",
      "value": "0x25C"
    },
    "596": {
      "op": "JUMPI"
    },
    "597": {
      "op": "PUSH2",
      "value": "0x25C"
    },
    "600": {
      "op": "PUSH2",
      "value": "0x1C6"
    },
    "603": {
      "jump": "i",
      "op": "JUMP"
    },
    "604": {
      "op": "JUMPDEST"
    },
    "605": {
      "op": "DUP2"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "608": {
      "op": "MSTORE"
    },
    "609": {
      "op": "DUP3"
    },
    "610": {
      "op": "DUP2"
    },
    "611": {
      "op": "MSTORE"
    },
    "612": {
      "op": "DUP9"
    },
    "613": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "615": {
      "op": "DUP5"
    },
    "616": {
      "op": "DUP8"
    },
    "617": {
      "op": "ADD"
    },
    "618": {
      "op": "ADD"
    },
    "619": {
      "op": "GT"
    },
    "620": {
      "op": "ISZERO"
    },
    "621": {
      "op": "PUSH2",
      "value": "0x275"
    },
    "624": {
      "op": "JUMPI"
    },
    "625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "627": {
      "op": "DUP1"
    },
    "628": {
      "op": "REVERT"
    },
    "629": {
      "op": "JUMPDEST"
    },
    "630": {
      "op": "DUP3"
    },
    "631": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "633": {
      "op": "DUP7"
    },
    "634": {
      "op": "ADD"
    },
    "635": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "637": {
      "op": "DUP4"
    },
    "638": {
      "op": "ADD"
    },
    "639": {
      "op": "CALLDATACOPY"
    },
    "640": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "642": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "644": {
      "op": "DUP5"
    },
    "645": {
      "op": "DUP4"
    },
    "646": {
      "op": "ADD"
    },
    "647": {
      "op": "ADD"
    },
    "648": {
      "op": "MSTORE"
    },
    "649": {
      "op": "DUP1"
    },
    "650": {
      "op": "SWAP6"
    },
    "651": {
      "op": "POP"
    },
    "652": {
      "op": "POP"
    },
    "653": {
      "op": "POP"
    },
    "654": {
      "op": "POP"
    },
    "655": {
      "op": "POP"
    },
    "656": {
      "op": "POP"
    },
    "657": {
      "op": "SWAP3"
    },
    "658": {
      "op": "POP"
    },
    "659": {
      "op": "SWAP3"
    },
    "660": {
      "op": "SWAP1"
    },
    "661": {
      "op": "POP"
    },
    "662": {
      "jump": "o",
      "op": "JUMP"
    },
    "663": {
      "op": "JUMPDEST"
    },
    "664": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "666": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "668": {
      "op": "DUP3"
    },
    "669": {
      "op": "DUP5"
    },
    "670": {
      "op": "SUB"
    },
    "671": {
      "op": "SLT"
    },
    "672": {
      "op": "ISZERO"
    },
    "673": {
      "op": "PUSH2",
      "value": "0x2A9"
    },
    "676": {
      "op": "JUMPI"
    },
    "677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "679": {
      "op": "DUP1"
    },
    "680": {
      "op": "REVERT"
    },
    "681": {
      "op": "JUMPDEST"
    },
    "682": {
      "op": "DUP2"
    },
    "683": {
      "op": "CALLDATALOAD"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "688": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "690": {
      "op": "SHL"
    },
    "691": {
      "op": "SUB"
    },
    "692": {
      "op": "DUP2"
    },
    "693": {
      "op": "AND"
    },
    "694": {
      "op": "DUP2"
    },
    "695": {
      "op": "EQ"
    },
    "696": {
      "op": "PUSH2",
      "value": "0x2C0"
    },
    "699": {
      "op": "JUMPI"
    },
    "700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "702": {
      "op": "DUP1"
    },
    "703": {
      "op": "REVERT"
    },
    "704": {
      "op": "JUMPDEST"
    },
    "705": {
      "op": "SWAP4"
    },
    "706": {
      "op": "SWAP3"
    },
    "707": {
      "op": "POP"
    },
    "708": {
      "op": "POP"
    },
    "709": {
      "op": "POP"
    },
    "710": {
      "jump": "o",
      "op": "JUMP"
    },
    "711": {
      "op": "JUMPDEST"
    },
    "712": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "714": {
      "op": "DUP2"
    },
    "715": {
      "op": "MSTORE"
    },
    "716": {
      "op": "DUP4"
    },
    "717": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "719": {
      "op": "DUP3"
    },
    "720": {
      "op": "ADD"
    },
    "721": {
      "op": "MSTORE"
    },
    "722": {
      "op": "DUP4"
    },
    "723": {
      "op": "DUP6"
    },
    "724": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "726": {
      "op": "DUP4"
    },
    "727": {
      "op": "ADD"
    },
    "728": {
      "op": "CALLDATACOPY"
    },
    "729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "731": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "733": {
      "op": "DUP6"
    },
    "734": {
      "op": "DUP4"
    },
    "735": {
      "op": "ADD"
    },
    "736": {
      "op": "ADD"
    },
    "737": {
      "op": "MSTORE"
    },
    "738": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "740": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "742": {
      "op": "NOT"
    },
    "743": {
      "op": "DUP1"
    },
    "744": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "746": {
      "op": "DUP8"
    },
    "747": {
      "op": "ADD"
    },
    "748": {
      "op": "AND"
    },
    "749": {
      "op": "DUP4"
    },
    "750": {
      "op": "ADD"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "753": {
      "op": "DUP7"
    },
    "754": {
      "op": "DUP2"
    },
    "755": {
      "op": "DUP7"
    },
    "756": {
      "op": "ADD"
    },
    "757": {
      "op": "MSTORE"
    },
    "758": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "760": {
      "op": "DUP6"
    },
    "761": {
      "op": "DUP4"
    },
    "762": {
      "op": "SUB"
    },
    "763": {
      "op": "ADD"
    },
    "764": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "766": {
      "op": "DUP7"
    },
    "767": {
      "op": "ADD"
    },
    "768": {
      "op": "MSTORE"
    },
    "769": {
      "op": "DUP6"
    },
    "770": {
      "op": "MLOAD"
    },
    "771": {
      "op": "DUP1"
    },
    "772": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "774": {
      "op": "DUP5"
    },
    "775": {
      "op": "ADD"
    },
    "776": {
      "op": "MSTORE"
    },
    "777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "779": {
      "op": "JUMPDEST"
    },
    "780": {
      "op": "DUP2"
    },
    "781": {
      "op": "DUP2"
    },
    "782": {
      "op": "LT"
    },
    "783": {
      "op": "ISZERO"
    },
    "784": {
      "op": "PUSH2",
      "value": "0x327"
    },
    "787": {
      "op": "JUMPI"
    },
    "788": {
      "op": "DUP8"
    },
    "789": {
      "op": "DUP2"
    },
    "790": {
      "op": "ADD"
    },
    "791": {
      "op": "DUP4"
    },
    "792": {
      "op": "ADD"
    },
    "793": {
      "op": "MLOAD"
    },
    "794": {
      "op": "DUP5"
    },
    "795": {
      "op": "DUP3"
    },
    "796": {
      "op": "ADD"
    },
    "797": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "799": {
      "op": "ADD"
    },
    "800": {
      "op": "MSTORE"
    },
    "801": {
      "op": "DUP3"
    },
    "802": {
      "op": "ADD"
    },
    "803": {
      "op": "PUSH2",
      "value": "0x30B"
    },
    "806": {
      "op": "JUMP"
    },
    "807": {
      "op": "JUMPDEST"
    },
    "808": {
      "op": "DUP2"
    },
    "809": {
      "op": "DUP2"
    },
    "810": {
      "op": "GT"
    },
    "811": {
      "op": "ISZERO"
    },
    "812": {
      "op": "PUSH2",
      "value": "0x339"
    },
    "815": {
      "op": "JUMPI"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "818": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "820": {
      "op": "DUP4"
    },
    "821": {
      "op": "DUP7"
    },
    "822": {
      "op": "ADD"
    },
    "823": {
      "op": "ADD"
    },
    "824": {
      "op": "MSTORE"
    },
    "825": {
      "op": "JUMPDEST"
    },
    "826": {
      "op": "POP"
    },
    "827": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "829": {
      "op": "ADD"
    },
    "830": {
      "op": "SWAP1"
    },
    "831": {
      "op": "SWAP3"
    },
    "832": {
      "op": "AND"
    },
    "833": {
      "op": "ADD"
    },
    "834": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "836": {
      "op": "ADD"
    },
    "837": {
      "op": "SWAP8"
    },
    "838": {
      "op": "SWAP7"
    },
    "839": {
      "op": "POP"
    },
    "840": {
      "op": "POP"
    },
    "841": {
      "op": "POP"
    },
    "842": {
      "op": "POP"
    },
    "843": {
      "op": "POP"
    },
    "844": {
      "op": "POP"
    },
    "845": {
      "op": "POP"
    },
    "846": {
      "jump": "o",
      "op": "JUMP"
    },
    "847": {
      "op": "JUMPDEST"
    },
    "848": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "850": {
      "op": "DUP3"
    },
    "851": {
      "op": "DUP3"
    },
    "852": {
      "op": "LT"
    },
    "853": {
      "op": "ISZERO"
    },
    "854": {
      "op": "PUSH2",
      "value": "0x36F"
    },
    "857": {
      "op": "JUMPI"
    },
    "858": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "863": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "865": {
      "op": "SHL"
    },
    "866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "868": {
      "op": "MSTORE"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "873": {
      "op": "MSTORE"
    },
    "874": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "878": {
      "op": "REVERT"
    },
    "879": {
      "op": "JUMPDEST"
    },
    "880": {
      "op": "POP"
    },
    "881": {
      "op": "SUB"
    },
    "882": {
      "op": "SWAP1"
    },
    "883": {
      "jump": "o",
      "op": "JUMP"
    },
    "884": {
      "op": "JUMPDEST"
    },
    "885": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "887": {
      "op": "DUP1"
    },
    "888": {
      "op": "DUP6"
    },
    "889": {
      "op": "DUP6"
    },
    "890": {
      "op": "GT"
    },
    "891": {
      "op": "ISZERO"
    },
    "892": {
      "op": "PUSH2",
      "value": "0x384"
    },
    "895": {
      "op": "JUMPI"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "898": {
      "op": "DUP1"
    },
    "899": {
      "op": "REVERT"
    },
    "900": {
      "op": "JUMPDEST"
    },
    "901": {
      "op": "DUP4"
    },
    "902": {
      "op": "DUP7"
    },
    "903": {
      "op": "GT"
    },
    "904": {
      "op": "ISZERO"
    },
    "905": {
      "op": "PUSH2",
      "value": "0x391"
    },
    "908": {
      "op": "JUMPI"
    },
    "909": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "911": {
      "op": "DUP1"
    },
    "912": {
      "op": "REVERT"
    },
    "913": {
      "op": "JUMPDEST"
    },
    "914": {
      "op": "POP"
    },
    "915": {
      "op": "POP"
    },
    "916": {
      "op": "DUP3"
    },
    "917": {
      "op": "ADD"
    },
    "918": {
      "op": "SWAP4"
    },
    "919": {
      "op": "SWAP2"
    },
    "920": {
      "op": "SWAP1"
    },
    "921": {
      "op": "SWAP3"
    },
    "922": {
      "op": "SUB"
    },
    "923": {
      "op": "SWAP2"
    },
    "924": {
      "op": "POP"
    },
    "925": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "2b33c85d0da1cb4e8f62cfed03c3a13f6048161b",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.9;\n\nimport \"./ContextMock.sol\";\nimport \"../metatx/ERC2771Context.sol\";\n\n// By inheriting from ERC2771Context, Context's internal functions are overridden automatically\ncontract ERC2771ContextMock is ContextMock, ERC2771Context {\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor(address trustedForwarder) ERC2771Context(trustedForwarder) {\n        emit Sender(_msgSender()); // _msgSender() should be accessible during construction\n    }\n\n    function _msgSender() internal view virtual override(Context, ERC2771Context) returns (address) {\n        return ERC2771Context._msgSender();\n    }\n\n    function _msgData() internal view virtual override(Context, ERC2771Context) returns (bytes calldata) {\n        return ERC2771Context._msgData();\n    }\n}\n",
  "sourceMap": "222:599:94:-:0;;;340:170;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;487:36:50;;;;426:20:94::1;433:12;:10;:12::i;:::-;426:20;::::0;-1:-1:-1;;;;;473:32:239;;;455:51;;443:2;428:18;426:20:94::1;;;;;;;340:170:::0;222:599;;516:147;603:7;629:27;:25;;;;;:27;;:::i;:::-;622:34;;516:147;:::o;678:401:50:-;648:17;;740:14;;-1:-1:-1;;;;;635:30:50;789:10;635:30;766:307;;;-1:-1:-1;;;972:14:50;968:23;955:37;951:2;947:46;678:401;:::o;766:307::-;1044:18;:16;;;;;:18;;:::i;640:96:210:-;719:10;;640:96::o;14:290:239:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:239;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:239:o;309:203::-;222:599:94;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/mocks/ERC2771ContextMock.sol",
  "type": "contract"
}