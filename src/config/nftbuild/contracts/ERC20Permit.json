{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "170": "contracts/openzeppelin/contracts/token/ERC20/ERC20.sol",
    "171": "contracts/openzeppelin/contracts/token/ERC20/IERC20.sol",
    "180": "contracts/openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "181": "contracts/openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol",
    "182": "contracts/openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
    "210": "contracts/openzeppelin/contracts/utils/Context.sol",
    "211": "contracts/openzeppelin/contracts/utils/Counters.sol",
    "215": "contracts/openzeppelin/contracts/utils/Strings.sol",
    "217": "contracts/openzeppelin/contracts/utils/cryptography/ECDSA.sol",
    "220": "contracts/openzeppelin/contracts/utils/cryptography/draft-EIP712.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol",
    "exportedSymbols": {
      "Context": [
        26715
      ],
      "Counters": [
        26789
      ],
      "ECDSA": [
        27839
      ],
      "EIP712": [
        28166
      ],
      "ERC20": [
        20343
      ],
      "ERC20Permit": [
        22066
      ],
      "IERC20": [
        20421
      ],
      "IERC20Metadata": [
        21897
      ],
      "IERC20Permit": [
        22102
      ],
      "Strings": [
        27218
      ]
    },
    "id": 22067,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 21899,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "113:23:181"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
        "file": "./draft-IERC20Permit.sol",
        "id": 21900,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22067,
        "sourceUnit": 22103,
        "src": "138:34:181",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "../ERC20.sol",
        "id": 21901,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22067,
        "sourceUnit": 20344,
        "src": "173:22:181",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/cryptography/draft-EIP712.sol",
        "file": "../../../utils/cryptography/draft-EIP712.sol",
        "id": 21902,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22067,
        "sourceUnit": 28167,
        "src": "196:54:181",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "file": "../../../utils/cryptography/ECDSA.sol",
        "id": 21903,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22067,
        "sourceUnit": 27840,
        "src": "251:47:181",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/Counters.sol",
        "file": "../../../utils/Counters.sol",
        "id": 21904,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22067,
        "sourceUnit": 26790,
        "src": "299:37:181",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 21906,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20343,
              "src": "889:5:181"
            },
            "id": 21907,
            "nodeType": "InheritanceSpecifier",
            "src": "889:5:181"
          },
          {
            "baseName": {
              "id": 21908,
              "name": "IERC20Permit",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22102,
              "src": "896:12:181"
            },
            "id": 21909,
            "nodeType": "InheritanceSpecifier",
            "src": "896:12:181"
          },
          {
            "baseName": {
              "id": 21910,
              "name": "EIP712",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28166,
              "src": "910:6:181"
            },
            "id": 21911,
            "nodeType": "InheritanceSpecifier",
            "src": "910:6:181"
          }
        ],
        "canonicalName": "ERC20Permit",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 21905,
          "nodeType": "StructuredDocumentation",
          "src": "338:517:181",
          "text": " @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._"
        },
        "fullyImplemented": false,
        "id": 22066,
        "linearizedBaseContracts": [
          22066,
          28166,
          22102,
          20343,
          21897,
          20421,
          26715
        ],
        "name": "ERC20Permit",
        "nameLocation": "874:11:181",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 21915,
            "libraryName": {
              "id": 21912,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26789,
              "src": "929:8:181"
            },
            "nodeType": "UsingForDirective",
            "src": "923:36:181",
            "typeName": {
              "id": 21914,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21913,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26721,
                "src": "942:16:181"
              },
              "referencedDeclaration": 26721,
              "src": "942:16:181",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$26721_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 21920,
            "mutability": "mutable",
            "name": "_nonces",
            "nameLocation": "1010:7:181",
            "nodeType": "VariableDeclaration",
            "scope": 22066,
            "src": "965:52:181",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$26721_storage_$",
              "typeString": "mapping(address => struct Counters.Counter)"
            },
            "typeName": {
              "id": 21919,
              "keyType": {
                "id": 21916,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "973:7:181",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "965:36:181",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$26721_storage_$",
                "typeString": "mapping(address => struct Counters.Counter)"
              },
              "valueType": {
                "id": 21918,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 21917,
                  "name": "Counters.Counter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26721,
                  "src": "984:16:181"
                },
                "referencedDeclaration": 26721,
                "src": "984:16:181",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Counter_$26721_storage_ptr",
                  "typeString": "struct Counters.Counter"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 21925,
            "mutability": "immutable",
            "name": "_PERMIT_TYPEHASH",
            "nameLocation": "1102:16:181",
            "nodeType": "VariableDeclaration",
            "scope": 22066,
            "src": "1076:148:181",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 21921,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1076:7:181",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
                  "id": 21923,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1139:84:181",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
                    "typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
                  },
                  "value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
                    "typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
                  }
                ],
                "id": 21922,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1129:9:181",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 21924,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1129:95:181",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 21935,
              "nodeType": "Block",
              "src": "1506:2:181",
              "statements": []
            },
            "documentation": {
              "id": 21926,
              "nodeType": "StructuredDocumentation",
              "src": "1231:220:181",
              "text": " @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."
            },
            "id": 21936,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 21931,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21928,
                    "src": "1495:4:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "hexValue": "31",
                    "id": 21932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1501:3:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                      "typeString": "literal_string \"1\""
                    },
                    "value": "1"
                  }
                ],
                "id": 21933,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 21930,
                  "name": "EIP712",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28166,
                  "src": "1488:6:181"
                },
                "nodeType": "ModifierInvocation",
                "src": "1488:17:181"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21928,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1482:4:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 21936,
                  "src": "1468:18:181",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 21927,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1468:6:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1467:20:181"
            },
            "returnParameters": {
              "id": 21934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1506:0:181"
            },
            "scope": 22066,
            "src": "1456:52:181",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              22087
            ],
            "body": {
              "id": 22008,
              "nodeType": "Block",
              "src": "1767:428:181",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 21959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 21956,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1785:5:181",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 21957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1785:15:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 21958,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21945,
                          "src": "1804:8:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1785:27:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332305065726d69743a206578706972656420646561646c696e65",
                        "id": 21960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1814:31:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd",
                          "typeString": "literal_string \"ERC20Permit: expired deadline\""
                        },
                        "value": "ERC20Permit: expired deadline"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd",
                          "typeString": "literal_string \"ERC20Permit: expired deadline\""
                        }
                      ],
                      "id": 21955,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1777:7:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1777:69:181",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21962,
                  "nodeType": "ExpressionStatement",
                  "src": "1777:69:181"
                },
                {
                  "assignments": [
                    21964
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21964,
                      "mutability": "mutable",
                      "name": "structHash",
                      "nameLocation": "1865:10:181",
                      "nodeType": "VariableDeclaration",
                      "scope": 22008,
                      "src": "1857:18:181",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 21963,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1857:7:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21978,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21968,
                            "name": "_PERMIT_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21925,
                            "src": "1899:16:181",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 21969,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21939,
                            "src": "1917:5:181",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 21970,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21941,
                            "src": "1924:7:181",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 21971,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21943,
                            "src": "1933:5:181",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 21973,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21939,
                                "src": "1950:5:181",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 21972,
                              "name": "_useNonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22065,
                              "src": "1940:9:181",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) returns (uint256)"
                              }
                            },
                            "id": 21974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1940:16:181",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 21975,
                            "name": "deadline",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21945,
                            "src": "1958:8:181",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 21966,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1888:3:181",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 21967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1888:10:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 21976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1888:79:181",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 21965,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1878:9:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 21977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1878:90:181",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1857:111:181"
                },
                {
                  "assignments": [
                    21980
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21980,
                      "mutability": "mutable",
                      "name": "hash",
                      "nameLocation": "1987:4:181",
                      "nodeType": "VariableDeclaration",
                      "scope": 22008,
                      "src": "1979:12:181",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 21979,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1979:7:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21984,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 21982,
                        "name": "structHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21964,
                        "src": "2011:10:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 21981,
                      "name": "_hashTypedDataV4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28165,
                      "src": "1994:16:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32) view returns (bytes32)"
                      }
                    },
                    "id": 21983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1994:28:181",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1979:43:181"
                },
                {
                  "assignments": [
                    21986
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21986,
                      "mutability": "mutable",
                      "name": "signer",
                      "nameLocation": "2041:6:181",
                      "nodeType": "VariableDeclaration",
                      "scope": 22008,
                      "src": "2033:14:181",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 21985,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2033:7:181",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21994,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 21989,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21980,
                        "src": "2064:4:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 21990,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21947,
                        "src": "2070:1:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      {
                        "id": 21991,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21949,
                        "src": "2073:1:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 21992,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21951,
                        "src": "2076:1:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 21987,
                        "name": "ECDSA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27839,
                        "src": "2050:5:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ECDSA_$27839_$",
                          "typeString": "type(library ECDSA)"
                        }
                      },
                      "id": 21988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 27779,
                      "src": "2050:13:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                      }
                    },
                    "id": 21993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2050:28:181",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2033:45:181"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 21996,
                          "name": "signer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21986,
                          "src": "2096:6:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 21997,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21939,
                          "src": "2106:5:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2096:15:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332305065726d69743a20696e76616c6964207369676e6174757265",
                        "id": 21999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2113:32:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124",
                          "typeString": "literal_string \"ERC20Permit: invalid signature\""
                        },
                        "value": "ERC20Permit: invalid signature"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124",
                          "typeString": "literal_string \"ERC20Permit: invalid signature\""
                        }
                      ],
                      "id": 21995,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2088:7:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2088:58:181",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22001,
                  "nodeType": "ExpressionStatement",
                  "src": "2088:58:181"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22003,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21939,
                        "src": "2166:5:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22004,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21941,
                        "src": "2173:7:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22005,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21943,
                        "src": "2182:5:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22002,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20277,
                      "src": "2157:8:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 22006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2157:31:181",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22007,
                  "nodeType": "ExpressionStatement",
                  "src": "2157:31:181"
                }
              ]
            },
            "documentation": {
              "id": 21937,
              "nodeType": "StructuredDocumentation",
              "src": "1514:50:181",
              "text": " @dev See {IERC20Permit-permit}."
            },
            "functionSelector": "d505accf",
            "id": 22009,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "permit",
            "nameLocation": "1578:6:181",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 21953,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1758:8:181"
            },
            "parameters": {
              "id": 21952,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21939,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1602:5:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 22009,
                  "src": "1594:13:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21938,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1594:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21941,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "1625:7:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 22009,
                  "src": "1617:15:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1617:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21943,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1650:5:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 22009,
                  "src": "1642:13:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21942,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1642:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21945,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "1673:8:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 22009,
                  "src": "1665:16:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21944,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1665:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21947,
                  "mutability": "mutable",
                  "name": "v",
                  "nameLocation": "1697:1:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 22009,
                  "src": "1691:7:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 21946,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1691:5:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21949,
                  "mutability": "mutable",
                  "name": "r",
                  "nameLocation": "1716:1:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 22009,
                  "src": "1708:9:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 21948,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1708:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21951,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "1735:1:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 22009,
                  "src": "1727:9:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 21950,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1727:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1584:158:181"
            },
            "returnParameters": {
              "id": 21954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1767:0:181"
            },
            "scope": 22066,
            "src": "1569:626:181",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              22095
            ],
            "body": {
              "id": 22024,
              "nodeType": "Block",
              "src": "2334:48:181",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 22018,
                          "name": "_nonces",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21920,
                          "src": "2351:7:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$26721_storage_$",
                            "typeString": "mapping(address => struct Counters.Counter storage ref)"
                          }
                        },
                        "id": 22020,
                        "indexExpression": {
                          "id": 22019,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22012,
                          "src": "2359:5:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2351:14:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$26721_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 22021,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26733,
                      "src": "2351:22:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$26721_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$26721_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 22022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2351:24:181",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 22017,
                  "id": 22023,
                  "nodeType": "Return",
                  "src": "2344:31:181"
                }
              ]
            },
            "documentation": {
              "id": 22010,
              "nodeType": "StructuredDocumentation",
              "src": "2201:50:181",
              "text": " @dev See {IERC20Permit-nonces}."
            },
            "functionSelector": "7ecebe00",
            "id": 22025,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "nonces",
            "nameLocation": "2265:6:181",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22014,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2307:8:181"
            },
            "parameters": {
              "id": 22013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22012,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2280:5:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 22025,
                  "src": "2272:13:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2272:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2271:15:181"
            },
            "returnParameters": {
              "id": 22017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22016,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22025,
                  "src": "2325:7:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2325:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2324:9:181"
            },
            "scope": 22066,
            "src": "2256:126:181",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              22101
            ],
            "body": {
              "id": 22035,
              "nodeType": "Block",
              "src": "2575:44:181",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 22032,
                      "name": "_domainSeparatorV4",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28122,
                      "src": "2592:18:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view returns (bytes32)"
                      }
                    },
                    "id": 22033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2592:20:181",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 22031,
                  "id": 22034,
                  "nodeType": "Return",
                  "src": "2585:27:181"
                }
              ]
            },
            "documentation": {
              "id": 22026,
              "nodeType": "StructuredDocumentation",
              "src": "2388:60:181",
              "text": " @dev See {IERC20Permit-DOMAIN_SEPARATOR}."
            },
            "functionSelector": "3644e515",
            "id": 22036,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "DOMAIN_SEPARATOR",
            "nameLocation": "2515:16:181",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22028,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2548:8:181"
            },
            "parameters": {
              "id": 22027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2531:2:181"
            },
            "returnParameters": {
              "id": 22031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22030,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22036,
                  "src": "2566:7:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 22029,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2566:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2565:9:181"
            },
            "scope": 22066,
            "src": "2506:113:181",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 22064,
              "nodeType": "Block",
              "src": "2827:126:181",
              "statements": [
                {
                  "assignments": [
                    22048
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22048,
                      "mutability": "mutable",
                      "name": "nonce",
                      "nameLocation": "2862:5:181",
                      "nodeType": "VariableDeclaration",
                      "scope": 22064,
                      "src": "2837:30:181",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$26721_storage_ptr",
                        "typeString": "struct Counters.Counter"
                      },
                      "typeName": {
                        "id": 22047,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 22046,
                          "name": "Counters.Counter",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 26721,
                          "src": "2837:16:181"
                        },
                        "referencedDeclaration": 26721,
                        "src": "2837:16:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$26721_storage_ptr",
                          "typeString": "struct Counters.Counter"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22052,
                  "initialValue": {
                    "baseExpression": {
                      "id": 22049,
                      "name": "_nonces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21920,
                      "src": "2870:7:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Counter_$26721_storage_$",
                        "typeString": "mapping(address => struct Counters.Counter storage ref)"
                      }
                    },
                    "id": 22051,
                    "indexExpression": {
                      "id": 22050,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22039,
                      "src": "2878:5:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2870:14:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$26721_storage",
                      "typeString": "struct Counters.Counter storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2837:47:181"
                },
                {
                  "expression": {
                    "id": 22057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22053,
                      "name": "current",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22042,
                      "src": "2894:7:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 22054,
                          "name": "nonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22048,
                          "src": "2904:5:181",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Counter_$26721_storage_ptr",
                            "typeString": "struct Counters.Counter storage pointer"
                          }
                        },
                        "id": 22055,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "current",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 26733,
                        "src": "2904:13:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$26721_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$26721_storage_ptr_$",
                          "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                        }
                      },
                      "id": 22056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2904:15:181",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2894:25:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 22058,
                  "nodeType": "ExpressionStatement",
                  "src": "2894:25:181"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 22059,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22048,
                        "src": "2929:5:181",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$26721_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 22061,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26747,
                      "src": "2929:15:181",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$26721_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$26721_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 22062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2929:17:181",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22063,
                  "nodeType": "ExpressionStatement",
                  "src": "2929:17:181"
                }
              ]
            },
            "documentation": {
              "id": 22037,
              "nodeType": "StructuredDocumentation",
              "src": "2625:120:181",
              "text": " @dev \"Consume a nonce\": return the current value and increment.\n _Available since v4.1._"
            },
            "id": 22065,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_useNonce",
            "nameLocation": "2759:9:181",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22039,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2777:5:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 22065,
                  "src": "2769:13:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22038,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2769:7:181",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2768:15:181"
            },
            "returnParameters": {
              "id": 22043,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22042,
                  "mutability": "mutable",
                  "name": "current",
                  "nameLocation": "2818:7:181",
                  "nodeType": "VariableDeclaration",
                  "scope": 22065,
                  "src": "2810:15:181",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22041,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2810:7:181",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2809:17:181"
            },
            "scope": 22066,
            "src": "2750:203:181",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 22067,
        "src": "856:2099:181",
        "usedErrors": []
      }
    ],
    "src": "113:2843:181"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "ERC20Permit",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [
    "Context",
    "Counters",
    "ECDSA",
    "EIP712",
    "ERC20",
    "IERC20",
    "IERC20Metadata",
    "IERC20Permit",
    "Strings"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._",
    "kind": "dev",
    "methods": {
      "DOMAIN_SEPARATOR()": {
        "details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "nonces(address)": {
        "details": "See {IERC20Permit-nonces}."
      },
      "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
        "details": "See {IERC20Permit-permit}."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "offset": [
    856,
    2955
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "efd3d3a7f5825544be6db5220c5fa69736546e62",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./draft-IERC20Permit.sol\";\nimport \"../ERC20.sol\";\nimport \"../../../utils/cryptography/draft-EIP712.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\nimport \"../../../utils/Counters.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * _Available since v3.4._\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712 {\n    using Counters for Counters.Counter;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private immutable _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @dev See {IERC20Permit-permit}.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\n\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @dev See {IERC20Permit-nonces}.\n     */\n    function nonces(address owner) public view virtual override returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @dev See {IERC20Permit-DOMAIN_SEPARATOR}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev \"Consume a nonce\": return the current value and increment.\n     *\n     * _Available since v4.1._\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        Counters.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n}\n",
  "sourceMap": "",
  "sourcePath": "contracts/openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol",
  "type": "contract"
}