{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "isValidSignatureNow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "131": "contracts/openzeppelin/contracts/mocks/SignatureCheckerMock.sol",
    "215": "contracts/openzeppelin/contracts/utils/Strings.sol",
    "217": "contracts/openzeppelin/contracts/utils/cryptography/ECDSA.sol",
    "219": "contracts/openzeppelin/contracts/utils/cryptography/SignatureChecker.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/mocks/SignatureCheckerMock.sol",
    "exportedSymbols": {
      "Address": [
        26327
      ],
      "ECDSA": [
        27839
      ],
      "IERC1271": [
        6674
      ],
      "SignatureChecker": [
        28012
      ],
      "SignatureCheckerMock": [
        14540
      ],
      "Strings": [
        27218
      ]
    },
    "id": 14541,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14517,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:131"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
        "file": "../utils/cryptography/SignatureChecker.sol",
        "id": 14518,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14541,
        "sourceUnit": 28013,
        "src": "58:52:131",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SignatureCheckerMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 14540,
        "linearizedBaseContracts": [
          14540
        ],
        "name": "SignatureCheckerMock",
        "nameLocation": "121:20:131",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 14521,
            "libraryName": {
              "id": 14519,
              "name": "SignatureChecker",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28012,
              "src": "154:16:131"
            },
            "nodeType": "UsingForDirective",
            "src": "148:35:131",
            "typeName": {
              "id": 14520,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "175:7:131",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "body": {
              "id": 14538,
              "nodeType": "Block",
              "src": "329:67:131",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14534,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14525,
                        "src": "373:4:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 14535,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14527,
                        "src": "379:9:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 14532,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14523,
                        "src": "346:6:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 14533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isValidSignatureNow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28011,
                      "src": "346:26:131",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address,bytes32,bytes memory) view returns (bool)"
                      }
                    },
                    "id": 14536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "346:43:131",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 14531,
                  "id": 14537,
                  "nodeType": "Return",
                  "src": "339:50:131"
                }
              ]
            },
            "functionSelector": "6ccea652",
            "id": 14539,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignatureNow",
            "nameLocation": "198:19:131",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14523,
                  "mutability": "mutable",
                  "name": "signer",
                  "nameLocation": "235:6:131",
                  "nodeType": "VariableDeclaration",
                  "scope": 14539,
                  "src": "227:14:131",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14522,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "227:7:131",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14525,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "259:4:131",
                  "nodeType": "VariableDeclaration",
                  "scope": 14539,
                  "src": "251:12:131",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 14524,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "251:7:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14527,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "286:9:131",
                  "nodeType": "VariableDeclaration",
                  "scope": 14539,
                  "src": "273:22:131",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14526,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "273:5:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "217:84:131"
            },
            "returnParameters": {
              "id": 14531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14530,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14539,
                  "src": "323:4:131",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14529,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "323:4:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "322:6:131"
            },
            "scope": 14540,
            "src": "189:207:131",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 14541,
        "src": "112:286:131",
        "usedErrors": []
      }
    ],
    "src": "33:366:131"
  },
  "bytecode": "608060405234801561001057600080fd5b5061056a806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80636ccea65214610030575b600080fd5b61004361003e36600461036f565b610057565b604051901515815260200160405180910390f35b600061006d6001600160a01b0385168484610077565b90505b9392505050565b600080600061008685856101c3565b9092509050600081600481111561009f5761009f610448565b1480156100bd5750856001600160a01b0316826001600160a01b0316145b156100cd57600192505050610070565b600080876001600160a01b0316631626ba7e60e01b88886040516024016100f592919061048e565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161013391906104c8565b600060405180830381855afa9150503d806000811461016e576040519150601f19603f3d011682016040523d82523d6000602084013e610173565b606091505b5091509150818015610186575080516020145b80156101b757508051630b135d3f60e11b906101ab90830160209081019084016104e4565b6001600160e01b031916145b98975050505050505050565b6000808251604114156101fa5760208301516040840151606085015160001a6101ee87828585610233565b9450945050505061022c565b8251604014156102245760208301516040840151610219868383610320565b93509350505061022c565b506000905060025b9250929050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561026a5750600090506003610317565b8460ff16601b1415801561028257508460ff16601c14155b156102935750600090506004610317565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156102e7573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661031057600060019250925050610317565b9150600090505b94509492505050565b6000806001600160ff1b0383168161033d60ff86901c601b61050e565b905061034b87828885610233565b935093505050935093915050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561038457600080fd5b83356001600160a01b038116811461039b57600080fd5b925060208401359150604084013567ffffffffffffffff808211156103bf57600080fd5b818601915086601f8301126103d357600080fd5b8135818111156103e5576103e5610359565b604051601f8201601f19908116603f0116810190838211818310171561040d5761040d610359565b8160405282815289602084870101111561042657600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b634e487b7160e01b600052602160045260246000fd5b60005b83811015610479578181015183820152602001610461565b83811115610488576000848401525b50505050565b82815260406020820152600082518060408401526104b381606085016020870161045e565b601f01601f1916919091016060019392505050565b600082516104da81846020870161045e565b9190910192915050565b6000602082840312156104f657600080fd5b81516001600160e01b03198116811461007057600080fd5b6000821982111561052f57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220fe4747ece04af59d1e6f88450514923e61d6e448f385c9335d64334add4171f064736f6c634300080c0033",
  "bytecodeSha1": "7d6185f0e75e1b82ec2857857ec11586e9d3523b",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "SignatureCheckerMock",
  "coverageMap": {
    "branches": {
      "131": {},
      "215": {},
      "217": {
        "ECDSA.tryRecover": {
          "11": [
            2554,
            2576,
            false
          ],
          "12": [
            3036,
            3058,
            false
          ],
          "13": [
            6753,
            6832,
            false
          ],
          "14": [
            6923,
            6930,
            false
          ],
          "15": [
            6934,
            6941,
            false
          ],
          "16": [
            7168,
            7188,
            false
          ]
        }
      },
      "219": {
        "SignatureChecker.isValidSignatureNow": {
          "17": [
            1286,
            1321,
            false
          ],
          "18": [
            1325,
            1344,
            false
          ]
        }
      }
    },
    "statements": {
      "131": {
        "SignatureCheckerMock.isValidSignatureNow": {
          "0": [
            339,
            389
          ]
        }
      },
      "215": {},
      "217": {
        "ECDSA.tryRecover": {
          "3": [
            2983,
            3015
          ],
          "4": [
            3388,
            3418
          ],
          "5": [
            3449,
            3505
          ],
          "6": [
            6848,
            6899
          ],
          "7": [
            6957,
            7008
          ],
          "8": [
            7204,
            7254
          ],
          "9": [
            7275,
            7312
          ],
          "10": [
            5086,
            5118
          ]
        }
      },
      "219": {
        "SignatureChecker.isValidSignatureNow": {
          "1": [
            1360,
            1371
          ],
          "2": [
            1556,
            1665
          ]
        }
      }
    }
  },
  "dependencies": [
    "ECDSA",
    "SignatureChecker",
    "Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061002b5760003560e01c80636ccea65214610030575b600080fd5b61004361003e36600461036f565b610057565b604051901515815260200160405180910390f35b600061006d6001600160a01b0385168484610077565b90505b9392505050565b600080600061008685856101c3565b9092509050600081600481111561009f5761009f610448565b1480156100bd5750856001600160a01b0316826001600160a01b0316145b156100cd57600192505050610070565b600080876001600160a01b0316631626ba7e60e01b88886040516024016100f592919061048e565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161013391906104c8565b600060405180830381855afa9150503d806000811461016e576040519150601f19603f3d011682016040523d82523d6000602084013e610173565b606091505b5091509150818015610186575080516020145b80156101b757508051630b135d3f60e11b906101ab90830160209081019084016104e4565b6001600160e01b031916145b98975050505050505050565b6000808251604114156101fa5760208301516040840151606085015160001a6101ee87828585610233565b9450945050505061022c565b8251604014156102245760208301516040840151610219868383610320565b93509350505061022c565b506000905060025b9250929050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561026a5750600090506003610317565b8460ff16601b1415801561028257508460ff16601c14155b156102935750600090506004610317565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156102e7573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661031057600060019250925050610317565b9150600090505b94509492505050565b6000806001600160ff1b0383168161033d60ff86901c601b61050e565b905061034b87828885610233565b935093505050935093915050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561038457600080fd5b83356001600160a01b038116811461039b57600080fd5b925060208401359150604084013567ffffffffffffffff808211156103bf57600080fd5b818601915086601f8301126103d357600080fd5b8135818111156103e5576103e5610359565b604051601f8201601f19908116603f0116810190838211818310171561040d5761040d610359565b8160405282815289602084870101111561042657600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b634e487b7160e01b600052602160045260246000fd5b60005b83811015610479578181015183820152602001610461565b83811115610488576000848401525b50505050565b82815260406020820152600082518060408401526104b381606085016020870161045e565b601f01601f1916919091016060019392505050565b600082516104da81846020870161045e565b9190910192915050565b6000602082840312156104f657600080fd5b81516001600160e01b03198116811461007057600080fd5b6000821982111561052f57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220fe4747ece04af59d1e6f88450514923e61d6e448f385c9335d64334add4171f064736f6c634300080c0033",
  "deployedSourceMap": "112:286:131:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;189:207;;;;;;:::i;:::-;;:::i;:::-;;;1479:14:239;;1472:22;1454:41;;1442:2;1427:18;189:207:131;;;;;;;;323:4;346:43;-1:-1:-1;;;;;346:26:131;;373:4;379:9;346:26;:43::i;:::-;339:50;;189:207;;;;;;:::o;1039:633:219:-;1175:4;1192:17;1211:24;1239:33;1256:4;1262:9;1239:16;:33::i;:::-;1191:81;;-1:-1:-1;1191:81:219;-1:-1:-1;1295:26:219;1286:5;:35;;;;;;;;:::i;:::-;;:58;;;;;1338:6;-1:-1:-1;;;;;1325:19:219;:9;-1:-1:-1;;;;;1325:19:219;;1286:58;1282:100;;;1367:4;1360:11;;;;;;1282:100;1393:12;1407:19;1430:6;-1:-1:-1;;;;;1430:17:219;1484:34;;;1520:4;1526:9;1461:75;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1461:75:219;;;;;;;;;;;;;;-1:-1:-1;;;;;1461:75:219;-1:-1:-1;;;;;;1461:75:219;;;;;;;;;;1430:116;;;;1461:75;1430:116;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1392:154;;;;1564:7;:30;;;;;1575:6;:13;1592:2;1575:19;1564:30;:100;;;;-1:-1:-1;1598:28:219;;-1:-1:-1;;;1630:34:219;1598:28;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;1598:66:219;;1564:100;1556:109;1039:633;-1:-1:-1;;;;;;;;1039:633:219:o;2243:1279:217:-;2324:7;2333:12;2554:9;:16;2574:2;2554:22;2550:966;;;2843:4;2828:20;;2822:27;2892:4;2877:20;;2871:27;2949:4;2934:20;;2928:27;2592:9;2920:36;2990:25;3001:4;2920:36;2822:27;2871;2990:10;:25::i;:::-;2983:32;;;;;;;;;2550:966;3036:9;:16;3056:2;3036:22;3032:484;;;3305:4;3290:20;;3284:27;3355:4;3340:20;;3334:27;3395:23;3406:4;3284:27;3334;3395:10;:23::i;:::-;3388:30;;;;;;;;3032:484;-1:-1:-1;3465:1:217;;-1:-1:-1;3469:35:217;3032:484;2243:1279;;;;;:::o;5716:1603::-;5842:7;;6766:66;6753:79;;6749:161;;;-1:-1:-1;6864:1:217;;-1:-1:-1;6868:30:217;6848:51;;6749:161;6923:1;:7;;6928:2;6923:7;;:18;;;;;6934:1;:7;;6939:2;6934:7;;6923:18;6919:100;;;-1:-1:-1;6973:1:217;;-1:-1:-1;6977:30:217;6957:51;;6919:100;7130:24;;;7113:14;7130:24;;;;;;;;;3159:25:239;;;3232:4;3220:17;;3200:18;;;3193:45;;;;3254:18;;;3247:34;;;3297:18;;;3290:34;;;7130:24:217;;3131:19:239;;7130:24:217;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7130:24:217;;-1:-1:-1;;7130:24:217;;;-1:-1:-1;;;;;;;7168:20:217;;7164:101;;7220:1;7224:29;7204:50;;;;;;;7164:101;7283:6;-1:-1:-1;7291:20:217;;-1:-1:-1;5716:1603:217;;;;;;;;:::o;4789:336::-;4899:7;;-1:-1:-1;;;;;4944:80:217;;4899:7;5050:25;5066:3;5051:18;;;5073:2;5050:25;:::i;:::-;5034:42;;5093:25;5104:4;5110:1;5113;5116;5093:10;:25::i;:::-;5086:32;;;;;;4789:336;;;;;;:::o;14:127:239:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1163;232:6;240;248;301:2;289:9;280:7;276:23;272:32;269:52;;;317:1;314;307:12;269:52;343:23;;-1:-1:-1;;;;;395:31:239;;385:42;;375:70;;441:1;438;431:12;375:70;464:5;-1:-1:-1;516:2:239;501:18;;488:32;;-1:-1:-1;571:2:239;556:18;;543:32;594:18;624:14;;;621:34;;;651:1;648;641:12;621:34;689:6;678:9;674:22;664:32;;734:7;727:4;723:2;719:13;715:27;705:55;;756:1;753;746:12;705:55;792:2;779:16;814:2;810;807:10;804:36;;;820:18;;:::i;:::-;895:2;889:9;863:2;949:13;;-1:-1:-1;;945:22:239;;;969:2;941:31;937:40;925:53;;;993:18;;;1013:22;;;990:46;987:72;;;1039:18;;:::i;:::-;1079:10;1075:2;1068:22;1114:2;1106:6;1099:18;1154:7;1149:2;1144;1140;1136:11;1132:20;1129:33;1126:53;;;1175:1;1172;1165:12;1126:53;1231:2;1226;1222;1218:11;1213:2;1205:6;1201:15;1188:46;1276:1;1271:2;1266;1258:6;1254:15;1250:24;1243:35;1297:6;1287:16;;;;;;;146:1163;;;;;:::o;1506:127::-;1567:10;1562:3;1558:20;1555:1;1548:31;1598:4;1595:1;1588:15;1622:4;1619:1;1612:15;1638:258;1710:1;1720:113;1734:6;1731:1;1728:13;1720:113;;;1810:11;;;1804:18;1791:11;;;1784:39;1756:2;1749:10;1720:113;;;1851:6;1848:1;1845:13;1842:48;;;1886:1;1877:6;1872:3;1868:16;1861:27;1842:48;;1638:258;;;:::o;1901:452::-;2076:6;2065:9;2058:25;2119:2;2114;2103:9;2099:18;2092:30;2039:4;2151:6;2145:13;2194:6;2189:2;2178:9;2174:18;2167:34;2210:66;2269:6;2264:2;2253:9;2249:18;2244:2;2236:6;2232:15;2210:66;:::i;:::-;2337:2;2316:15;-1:-1:-1;;2312:29:239;2297:45;;;;2344:2;2293:54;;1901:452;-1:-1:-1;;;1901:452:239:o;2358:274::-;2487:3;2525:6;2519:13;2541:53;2587:6;2582:3;2575:4;2567:6;2563:17;2541:53;:::i;:::-;2610:16;;;;;2358:274;-1:-1:-1;;2358:274:239:o;2637:290::-;2706:6;2759:2;2747:9;2738:7;2734:23;2730:32;2727:52;;;2775:1;2772;2765:12;2727:52;2801:16;;-1:-1:-1;;;;;;2846:32:239;;2836:43;;2826:71;;2893:1;2890;2883:12;3335:225;3375:3;3406:1;3402:6;3399:1;3396:13;3393:136;;;3451:10;3446:3;3442:20;3439:1;3432:31;3486:4;3483:1;3476:15;3514:4;3511:1;3504:15;3393:136;-1:-1:-1;3545:9:239;;3335:225::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    112,
    398
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6CCEA652 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x36F JUMP JUMPDEST PUSH2 0x57 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x6D PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 DUP5 PUSH2 0x77 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x86 DUP6 DUP6 PUSH2 0x1C3 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x9F JUMPI PUSH2 0x9F PUSH2 0x448 JUMP JUMPDEST EQ DUP1 ISZERO PUSH2 0xBD JUMPI POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST ISZERO PUSH2 0xCD JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x70 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1626BA7E PUSH1 0xE0 SHL DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF5 SWAP3 SWAP2 SWAP1 PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x133 SWAP2 SWAP1 PUSH2 0x4C8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS STATICCALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x16E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x173 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x186 JUMPI POP DUP1 MLOAD PUSH1 0x20 EQ JUMPDEST DUP1 ISZERO PUSH2 0x1B7 JUMPI POP DUP1 MLOAD PUSH4 0xB135D3F PUSH1 0xE1 SHL SWAP1 PUSH2 0x1AB SWAP1 DUP4 ADD PUSH1 0x20 SWAP1 DUP2 ADD SWAP1 DUP5 ADD PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 MLOAD PUSH1 0x41 EQ ISZERO PUSH2 0x1FA JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x1EE DUP8 DUP3 DUP6 DUP6 PUSH2 0x233 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP POP POP PUSH2 0x22C JUMP JUMPDEST DUP3 MLOAD PUSH1 0x40 EQ ISZERO PUSH2 0x224 JUMPI PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH2 0x219 DUP7 DUP4 DUP4 PUSH2 0x320 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP PUSH2 0x22C JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP PUSH1 0x2 JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x26A JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x317 JUMP JUMPDEST DUP5 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x282 JUMPI POP DUP5 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x293 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x4 PUSH2 0x317 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x310 JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x317 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP4 AND DUP2 PUSH2 0x33D PUSH1 0xFF DUP7 SWAP1 SHR PUSH1 0x1B PUSH2 0x50E JUMP JUMPDEST SWAP1 POP PUSH2 0x34B DUP8 DUP3 DUP9 DUP6 PUSH2 0x233 JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x384 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x3BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x3E5 JUMPI PUSH2 0x3E5 PUSH2 0x359 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x40D JUMPI PUSH2 0x40D PUSH2 0x359 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x479 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x461 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x488 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x4B3 DUP2 PUSH1 0x60 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x45E JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x60 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x4DA DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x45E JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x52F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 INVALID SELFBALANCE SELFBALANCE 0xEC 0xE0 0x4A CREATE2 SWAP14 0x1E PUSH16 0x88450514923E61D6E448F385C9335D64 CALLER 0x4A 0xDD COINBASE PUSH18 0xF064736F6C634300080C0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        112,
        398
      ],
      "op": "PUSH1",
      "path": "131",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH1",
      "path": "131",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "MSTORE",
      "path": "131"
    },
    "5": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "CALLVALUE",
      "path": "131"
    },
    "6": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "DUP1",
      "path": "131"
    },
    "7": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "ISZERO",
      "path": "131"
    },
    "8": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH2",
      "path": "131",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "JUMPI",
      "path": "131"
    },
    "12": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH1",
      "path": "131",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "DUP1",
      "path": "131"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "REVERT",
      "path": "131"
    },
    "16": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "JUMPDEST",
      "path": "131"
    },
    "17": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "POP",
      "path": "131"
    },
    "18": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH1",
      "path": "131",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "CALLDATASIZE",
      "path": "131"
    },
    "21": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "LT",
      "path": "131"
    },
    "22": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH2",
      "path": "131",
      "value": "0x2B"
    },
    "25": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "JUMPI",
      "path": "131"
    },
    "26": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH1",
      "path": "131",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "CALLDATALOAD",
      "path": "131"
    },
    "29": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH1",
      "path": "131",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "SHR",
      "path": "131"
    },
    "32": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "DUP1",
      "path": "131"
    },
    "33": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH4",
      "path": "131",
      "value": "0x6CCEA652"
    },
    "38": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "EQ",
      "path": "131"
    },
    "39": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH2",
      "path": "131",
      "value": "0x30"
    },
    "42": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "JUMPI",
      "path": "131"
    },
    "43": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "JUMPDEST",
      "path": "131"
    },
    "44": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "PUSH1",
      "path": "131",
      "value": "0x0"
    },
    "46": {
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "DUP1",
      "path": "131"
    },
    "47": {
      "first_revert": true,
      "fn": null,
      "offset": [
        112,
        398
      ],
      "op": "REVERT",
      "path": "131"
    },
    "48": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "JUMPDEST",
      "path": "131"
    },
    "49": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "PUSH2",
      "path": "131",
      "value": "0x43"
    },
    "52": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "PUSH2",
      "path": "131",
      "value": "0x3E"
    },
    "55": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "CALLDATASIZE",
      "path": "131"
    },
    "56": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "PUSH1",
      "path": "131",
      "value": "0x4"
    },
    "58": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "PUSH2",
      "path": "131",
      "value": "0x36F"
    },
    "61": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "jump": "i",
      "offset": [
        189,
        396
      ],
      "op": "JUMP",
      "path": "131"
    },
    "62": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "JUMPDEST",
      "path": "131"
    },
    "63": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "PUSH2",
      "path": "131",
      "value": "0x57"
    },
    "66": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "jump": "i",
      "offset": [
        189,
        396
      ],
      "op": "JUMP",
      "path": "131"
    },
    "67": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "JUMPDEST",
      "path": "131"
    },
    "68": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "PUSH1",
      "path": "131",
      "value": "0x40"
    },
    "70": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "MLOAD",
      "path": "131"
    },
    "71": {
      "op": "SWAP1"
    },
    "72": {
      "op": "ISZERO"
    },
    "73": {
      "op": "ISZERO"
    },
    "74": {
      "op": "DUP2"
    },
    "75": {
      "op": "MSTORE"
    },
    "76": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "78": {
      "op": "ADD"
    },
    "79": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "PUSH1",
      "path": "131",
      "value": "0x40"
    },
    "81": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "MLOAD",
      "path": "131"
    },
    "82": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "DUP1",
      "path": "131"
    },
    "83": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "SWAP2",
      "path": "131"
    },
    "84": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "SUB",
      "path": "131"
    },
    "85": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "SWAP1",
      "path": "131"
    },
    "86": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "RETURN",
      "path": "131"
    },
    "87": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "JUMPDEST",
      "path": "131"
    },
    "88": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        323,
        327
      ],
      "op": "PUSH1",
      "path": "131",
      "value": "0x0"
    },
    "90": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        346,
        389
      ],
      "op": "PUSH2",
      "path": "131",
      "statement": 0,
      "value": "0x6D"
    },
    "93": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "95": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "97": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "99": {
      "op": "SHL"
    },
    "100": {
      "op": "SUB"
    },
    "101": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        346,
        372
      ],
      "op": "DUP6",
      "path": "131"
    },
    "102": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        346,
        372
      ],
      "op": "AND",
      "path": "131"
    },
    "103": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        373,
        377
      ],
      "op": "DUP5",
      "path": "131"
    },
    "104": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        379,
        388
      ],
      "op": "DUP5",
      "path": "131"
    },
    "105": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        346,
        372
      ],
      "op": "PUSH2",
      "path": "131",
      "value": "0x77"
    },
    "108": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "jump": "i",
      "offset": [
        346,
        389
      ],
      "op": "JUMP",
      "path": "131"
    },
    "109": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        346,
        389
      ],
      "op": "JUMPDEST",
      "path": "131"
    },
    "110": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        339,
        389
      ],
      "op": "SWAP1",
      "path": "131"
    },
    "111": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        339,
        389
      ],
      "op": "POP",
      "path": "131"
    },
    "112": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "JUMPDEST",
      "path": "131"
    },
    "113": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "SWAP4",
      "path": "131"
    },
    "114": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "SWAP3",
      "path": "131"
    },
    "115": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "POP",
      "path": "131"
    },
    "116": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "POP",
      "path": "131"
    },
    "117": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "offset": [
        189,
        396
      ],
      "op": "POP",
      "path": "131"
    },
    "118": {
      "fn": "SignatureCheckerMock.isValidSignatureNow",
      "jump": "o",
      "offset": [
        189,
        396
      ],
      "op": "JUMP",
      "path": "131"
    },
    "119": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1039,
        1672
      ],
      "op": "JUMPDEST",
      "path": "219"
    },
    "120": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1175,
        1179
      ],
      "op": "PUSH1",
      "path": "219",
      "value": "0x0"
    },
    "122": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1192,
        1209
      ],
      "op": "DUP1",
      "path": "219"
    },
    "123": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1211,
        1235
      ],
      "op": "PUSH1",
      "path": "219",
      "value": "0x0"
    },
    "125": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1239,
        1272
      ],
      "op": "PUSH2",
      "path": "219",
      "value": "0x86"
    },
    "128": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1256,
        1260
      ],
      "op": "DUP6",
      "path": "219"
    },
    "129": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1262,
        1271
      ],
      "op": "DUP6",
      "path": "219"
    },
    "130": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1239,
        1255
      ],
      "op": "PUSH2",
      "path": "219",
      "value": "0x1C3"
    },
    "133": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "jump": "i",
      "offset": [
        1239,
        1272
      ],
      "op": "JUMP",
      "path": "219"
    },
    "134": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1239,
        1272
      ],
      "op": "JUMPDEST",
      "path": "219"
    },
    "135": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1191,
        1272
      ],
      "op": "SWAP1",
      "path": "219"
    },
    "136": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1191,
        1272
      ],
      "op": "SWAP3",
      "path": "219"
    },
    "137": {
      "op": "POP"
    },
    "138": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1191,
        1272
      ],
      "op": "SWAP1",
      "path": "219"
    },
    "139": {
      "op": "POP"
    },
    "140": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1295,
        1321
      ],
      "op": "PUSH1",
      "path": "219",
      "value": "0x0"
    },
    "142": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1286,
        1291
      ],
      "op": "DUP2",
      "path": "219"
    },
    "143": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1286,
        1321
      ],
      "op": "PUSH1",
      "path": "219",
      "value": "0x4"
    },
    "145": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1286,
        1321
      ],
      "op": "DUP2",
      "path": "219"
    },
    "146": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1286,
        1321
      ],
      "op": "GT",
      "path": "219"
    },
    "147": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1286,
        1321
      ],
      "op": "ISZERO",
      "path": "219"
    },
    "148": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1286,
        1321
      ],
      "op": "PUSH2",
      "path": "219",
      "value": "0x9F"
    },
    "151": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1286,
        1321
      ],
      "op": "JUMPI",
      "path": "219"
    },
    "152": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1286,
        1321
      ],
      "op": "PUSH2",
      "path": "219",
      "value": "0x9F"
    },
    "155": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1286,
        1321
      ],
      "op": "PUSH2",
      "path": "219",
      "value": "0x448"
    },
    "158": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "jump": "i",
      "offset": [
        1286,
        1321
      ],
      "op": "JUMP",
      "path": "219"
    },
    "159": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1286,
        1321
      ],
      "op": "JUMPDEST",
      "path": "219"
    },
    "160": {
      "branch": 17,
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1286,
        1321
      ],
      "op": "EQ",
      "path": "219"
    },
    "161": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1286,
        1344
      ],
      "op": "DUP1",
      "path": "219"
    },
    "162": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1286,
        1344
      ],
      "op": "ISZERO",
      "path": "219"
    },
    "163": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1286,
        1344
      ],
      "op": "PUSH2",
      "path": "219",
      "value": "0xBD"
    },
    "166": {
      "branch": 17,
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1286,
        1344
      ],
      "op": "JUMPI",
      "path": "219"
    },
    "167": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1286,
        1344
      ],
      "op": "POP",
      "path": "219"
    },
    "168": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1338,
        1344
      ],
      "op": "DUP6",
      "path": "219"
    },
    "169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "175": {
      "op": "SHL"
    },
    "176": {
      "op": "SUB"
    },
    "177": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1325,
        1344
      ],
      "op": "AND",
      "path": "219"
    },
    "178": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1325,
        1334
      ],
      "op": "DUP3",
      "path": "219"
    },
    "179": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "181": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "183": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "185": {
      "op": "SHL"
    },
    "186": {
      "op": "SUB"
    },
    "187": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1325,
        1344
      ],
      "op": "AND",
      "path": "219"
    },
    "188": {
      "branch": 18,
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1325,
        1344
      ],
      "op": "EQ",
      "path": "219"
    },
    "189": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1286,
        1344
      ],
      "op": "JUMPDEST",
      "path": "219"
    },
    "190": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1282,
        1382
      ],
      "op": "ISZERO",
      "path": "219"
    },
    "191": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1282,
        1382
      ],
      "op": "PUSH2",
      "path": "219",
      "value": "0xCD"
    },
    "194": {
      "branch": 18,
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1282,
        1382
      ],
      "op": "JUMPI",
      "path": "219"
    },
    "195": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1367,
        1371
      ],
      "op": "PUSH1",
      "path": "219",
      "statement": 1,
      "value": "0x1"
    },
    "197": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1360,
        1371
      ],
      "op": "SWAP3",
      "path": "219"
    },
    "198": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1360,
        1371
      ],
      "op": "POP",
      "path": "219"
    },
    "199": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1360,
        1371
      ],
      "op": "POP",
      "path": "219"
    },
    "200": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1360,
        1371
      ],
      "op": "POP",
      "path": "219"
    },
    "201": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1360,
        1371
      ],
      "op": "PUSH2",
      "path": "219",
      "value": "0x70"
    },
    "204": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1360,
        1371
      ],
      "op": "JUMP",
      "path": "219"
    },
    "205": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1282,
        1382
      ],
      "op": "JUMPDEST",
      "path": "219"
    },
    "206": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1393,
        1405
      ],
      "op": "PUSH1",
      "path": "219",
      "value": "0x0"
    },
    "208": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1407,
        1426
      ],
      "op": "DUP1",
      "path": "219"
    },
    "209": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1436
      ],
      "op": "DUP8",
      "path": "219"
    },
    "210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "216": {
      "op": "SHL"
    },
    "217": {
      "op": "SUB"
    },
    "218": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1447
      ],
      "op": "AND",
      "path": "219"
    },
    "219": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1484,
        1518
      ],
      "op": "PUSH4",
      "path": "219",
      "value": "0x1626BA7E"
    },
    "224": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1484,
        1518
      ],
      "op": "PUSH1",
      "path": "219",
      "value": "0xE0"
    },
    "226": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1484,
        1518
      ],
      "op": "SHL",
      "path": "219"
    },
    "227": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1520,
        1524
      ],
      "op": "DUP9",
      "path": "219"
    },
    "228": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1526,
        1535
      ],
      "op": "DUP9",
      "path": "219"
    },
    "229": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "PUSH1",
      "path": "219",
      "value": "0x40"
    },
    "231": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "MLOAD",
      "path": "219"
    },
    "232": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "PUSH1",
      "path": "219",
      "value": "0x24"
    },
    "234": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "ADD",
      "path": "219"
    },
    "235": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "PUSH2",
      "path": "219",
      "value": "0xF5"
    },
    "238": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "SWAP3",
      "path": "219"
    },
    "239": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "SWAP2",
      "path": "219"
    },
    "240": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "SWAP1",
      "path": "219"
    },
    "241": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "PUSH2",
      "path": "219",
      "value": "0x48E"
    },
    "244": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "jump": "i",
      "offset": [
        1461,
        1536
      ],
      "op": "JUMP",
      "path": "219"
    },
    "245": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "JUMPDEST",
      "path": "219"
    },
    "246": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "PUSH1",
      "path": "219",
      "value": "0x40"
    },
    "248": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "DUP1",
      "path": "219"
    },
    "249": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "MLOAD",
      "path": "219"
    },
    "250": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "252": {
      "op": "NOT"
    },
    "253": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "DUP2",
      "path": "219"
    },
    "254": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "DUP5",
      "path": "219"
    },
    "255": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "SUB",
      "path": "219"
    },
    "256": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "ADD",
      "path": "219"
    },
    "257": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "DUP2",
      "path": "219"
    },
    "258": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "MSTORE",
      "path": "219"
    },
    "259": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "SWAP2",
      "path": "219"
    },
    "260": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "DUP2",
      "path": "219"
    },
    "261": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "MSTORE",
      "path": "219"
    },
    "262": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "PUSH1",
      "path": "219",
      "value": "0x20"
    },
    "264": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "DUP3",
      "path": "219"
    },
    "265": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "ADD",
      "path": "219"
    },
    "266": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "DUP1",
      "path": "219"
    },
    "267": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "MLOAD",
      "path": "219"
    },
    "268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "272": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "274": {
      "op": "SHL"
    },
    "275": {
      "op": "SUB"
    },
    "276": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "AND",
      "path": "219"
    },
    "277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "281": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "283": {
      "op": "SHL"
    },
    "284": {
      "op": "SUB"
    },
    "285": {
      "op": "NOT"
    },
    "286": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "SWAP1",
      "path": "219"
    },
    "287": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "SWAP5",
      "path": "219"
    },
    "288": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "AND",
      "path": "219"
    },
    "289": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "SWAP4",
      "path": "219"
    },
    "290": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "SWAP1",
      "path": "219"
    },
    "291": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "SWAP4",
      "path": "219"
    },
    "292": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "OR",
      "path": "219"
    },
    "293": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "SWAP1",
      "path": "219"
    },
    "294": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "SWAP3",
      "path": "219"
    },
    "295": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "MSTORE",
      "path": "219"
    },
    "296": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "SWAP1",
      "path": "219"
    },
    "297": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "MLOAD",
      "path": "219"
    },
    "298": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "PUSH2",
      "path": "219",
      "value": "0x133"
    },
    "301": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "SWAP2",
      "path": "219"
    },
    "302": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1461,
        1536
      ],
      "op": "SWAP1",
      "path": "219"
    },
    "303": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "PUSH2",
      "path": "219",
      "value": "0x4C8"
    },
    "306": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "jump": "i",
      "offset": [
        1430,
        1546
      ],
      "op": "JUMP",
      "path": "219"
    },
    "307": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "JUMPDEST",
      "path": "219"
    },
    "308": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "PUSH1",
      "path": "219",
      "value": "0x0"
    },
    "310": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "PUSH1",
      "path": "219",
      "value": "0x40"
    },
    "312": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "MLOAD",
      "path": "219"
    },
    "313": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "DUP1",
      "path": "219"
    },
    "314": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "DUP4",
      "path": "219"
    },
    "315": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "SUB",
      "path": "219"
    },
    "316": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "DUP2",
      "path": "219"
    },
    "317": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "DUP6",
      "path": "219"
    },
    "318": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "GAS",
      "path": "219"
    },
    "319": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "STATICCALL",
      "path": "219"
    },
    "320": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "SWAP2",
      "path": "219"
    },
    "321": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "POP",
      "path": "219"
    },
    "322": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "POP",
      "path": "219"
    },
    "323": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "RETURNDATASIZE",
      "path": "219"
    },
    "324": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "DUP1",
      "path": "219"
    },
    "325": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "PUSH1",
      "path": "219",
      "value": "0x0"
    },
    "327": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "DUP2",
      "path": "219"
    },
    "328": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "EQ",
      "path": "219"
    },
    "329": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "PUSH2",
      "path": "219",
      "value": "0x16E"
    },
    "332": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "JUMPI",
      "path": "219"
    },
    "333": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "PUSH1",
      "path": "219",
      "value": "0x40"
    },
    "335": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "MLOAD",
      "path": "219"
    },
    "336": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "SWAP2",
      "path": "219"
    },
    "337": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "POP",
      "path": "219"
    },
    "338": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "PUSH1",
      "path": "219",
      "value": "0x1F"
    },
    "340": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "NOT",
      "path": "219"
    },
    "341": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "PUSH1",
      "path": "219",
      "value": "0x3F"
    },
    "343": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "RETURNDATASIZE",
      "path": "219"
    },
    "344": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "ADD",
      "path": "219"
    },
    "345": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "AND",
      "path": "219"
    },
    "346": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "DUP3",
      "path": "219"
    },
    "347": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "ADD",
      "path": "219"
    },
    "348": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "PUSH1",
      "path": "219",
      "value": "0x40"
    },
    "350": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "MSTORE",
      "path": "219"
    },
    "351": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "RETURNDATASIZE",
      "path": "219"
    },
    "352": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "DUP3",
      "path": "219"
    },
    "353": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "MSTORE",
      "path": "219"
    },
    "354": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "RETURNDATASIZE",
      "path": "219"
    },
    "355": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "PUSH1",
      "path": "219",
      "value": "0x0"
    },
    "357": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "PUSH1",
      "path": "219",
      "value": "0x20"
    },
    "359": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "DUP5",
      "path": "219"
    },
    "360": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "ADD",
      "path": "219"
    },
    "361": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "RETURNDATACOPY",
      "path": "219"
    },
    "362": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "PUSH2",
      "path": "219",
      "value": "0x173"
    },
    "365": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "JUMP",
      "path": "219"
    },
    "366": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "JUMPDEST",
      "path": "219"
    },
    "367": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "PUSH1",
      "path": "219",
      "value": "0x60"
    },
    "369": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "SWAP2",
      "path": "219"
    },
    "370": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "POP",
      "path": "219"
    },
    "371": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "JUMPDEST",
      "path": "219"
    },
    "372": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1430,
        1546
      ],
      "op": "POP",
      "path": "219"
    },
    "373": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1392,
        1546
      ],
      "op": "SWAP2",
      "path": "219"
    },
    "374": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1392,
        1546
      ],
      "op": "POP",
      "path": "219"
    },
    "375": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1392,
        1546
      ],
      "op": "SWAP2",
      "path": "219"
    },
    "376": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1392,
        1546
      ],
      "op": "POP",
      "path": "219"
    },
    "377": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1564,
        1571
      ],
      "op": "DUP2",
      "path": "219",
      "statement": 2
    },
    "378": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1564,
        1594
      ],
      "op": "DUP1",
      "path": "219"
    },
    "379": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1564,
        1594
      ],
      "op": "ISZERO",
      "path": "219"
    },
    "380": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1564,
        1594
      ],
      "op": "PUSH2",
      "path": "219",
      "value": "0x186"
    },
    "383": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1564,
        1594
      ],
      "op": "JUMPI",
      "path": "219"
    },
    "384": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1564,
        1594
      ],
      "op": "POP",
      "path": "219"
    },
    "385": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1575,
        1581
      ],
      "op": "DUP1",
      "path": "219"
    },
    "386": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1575,
        1588
      ],
      "op": "MLOAD",
      "path": "219"
    },
    "387": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1592,
        1594
      ],
      "op": "PUSH1",
      "path": "219",
      "value": "0x20"
    },
    "389": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1575,
        1594
      ],
      "op": "EQ",
      "path": "219"
    },
    "390": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1564,
        1594
      ],
      "op": "JUMPDEST",
      "path": "219"
    },
    "391": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1564,
        1664
      ],
      "op": "DUP1",
      "path": "219"
    },
    "392": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1564,
        1664
      ],
      "op": "ISZERO",
      "path": "219"
    },
    "393": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1564,
        1664
      ],
      "op": "PUSH2",
      "path": "219",
      "value": "0x1B7"
    },
    "396": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1564,
        1664
      ],
      "op": "JUMPI",
      "path": "219"
    },
    "397": {
      "op": "POP"
    },
    "398": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1598,
        1626
      ],
      "op": "DUP1",
      "path": "219"
    },
    "399": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1598,
        1626
      ],
      "op": "MLOAD",
      "path": "219"
    },
    "400": {
      "op": "PUSH4",
      "value": "0xB135D3F"
    },
    "405": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "407": {
      "op": "SHL"
    },
    "408": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1630,
        1664
      ],
      "op": "SWAP1",
      "path": "219"
    },
    "409": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1598,
        1626
      ],
      "op": "PUSH2",
      "path": "219",
      "value": "0x1AB"
    },
    "412": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1598,
        1626
      ],
      "op": "SWAP1",
      "path": "219"
    },
    "413": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1598,
        1626
      ],
      "op": "DUP4",
      "path": "219"
    },
    "414": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1598,
        1626
      ],
      "op": "ADD",
      "path": "219"
    },
    "415": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1598,
        1626
      ],
      "op": "PUSH1",
      "path": "219",
      "value": "0x20"
    },
    "417": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1598,
        1626
      ],
      "op": "SWAP1",
      "path": "219"
    },
    "418": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1598,
        1626
      ],
      "op": "DUP2",
      "path": "219"
    },
    "419": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1598,
        1626
      ],
      "op": "ADD",
      "path": "219"
    },
    "420": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1598,
        1626
      ],
      "op": "SWAP1",
      "path": "219"
    },
    "421": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1598,
        1626
      ],
      "op": "DUP5",
      "path": "219"
    },
    "422": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1598,
        1626
      ],
      "op": "ADD",
      "path": "219"
    },
    "423": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1598,
        1626
      ],
      "op": "PUSH2",
      "path": "219",
      "value": "0x4E4"
    },
    "426": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "jump": "i",
      "offset": [
        1598,
        1626
      ],
      "op": "JUMP",
      "path": "219"
    },
    "427": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1598,
        1626
      ],
      "op": "JUMPDEST",
      "path": "219"
    },
    "428": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "432": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "434": {
      "op": "SHL"
    },
    "435": {
      "op": "SUB"
    },
    "436": {
      "op": "NOT"
    },
    "437": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1598,
        1664
      ],
      "op": "AND",
      "path": "219"
    },
    "438": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1598,
        1664
      ],
      "op": "EQ",
      "path": "219"
    },
    "439": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1564,
        1664
      ],
      "op": "JUMPDEST",
      "path": "219"
    },
    "440": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1556,
        1665
      ],
      "op": "SWAP9",
      "path": "219"
    },
    "441": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "offset": [
        1039,
        1672
      ],
      "op": "SWAP8",
      "path": "219"
    },
    "442": {
      "op": "POP"
    },
    "443": {
      "op": "POP"
    },
    "444": {
      "op": "POP"
    },
    "445": {
      "op": "POP"
    },
    "446": {
      "op": "POP"
    },
    "447": {
      "op": "POP"
    },
    "448": {
      "op": "POP"
    },
    "449": {
      "op": "POP"
    },
    "450": {
      "fn": "SignatureChecker.isValidSignatureNow",
      "jump": "o",
      "offset": [
        1039,
        1672
      ],
      "op": "JUMP",
      "path": "219"
    },
    "451": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2243,
        3522
      ],
      "op": "JUMPDEST",
      "path": "217"
    },
    "452": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2324,
        2331
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x0"
    },
    "454": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2333,
        2345
      ],
      "op": "DUP1",
      "path": "217"
    },
    "455": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2554,
        2563
      ],
      "op": "DUP3",
      "path": "217"
    },
    "456": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2554,
        2570
      ],
      "op": "MLOAD",
      "path": "217"
    },
    "457": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2574,
        2576
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x41"
    },
    "459": {
      "branch": 11,
      "fn": "ECDSA.tryRecover",
      "offset": [
        2554,
        2576
      ],
      "op": "EQ",
      "path": "217"
    },
    "460": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2550,
        3516
      ],
      "op": "ISZERO",
      "path": "217"
    },
    "461": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2550,
        3516
      ],
      "op": "PUSH2",
      "path": "217",
      "value": "0x1FA"
    },
    "464": {
      "branch": 11,
      "fn": "ECDSA.tryRecover",
      "offset": [
        2550,
        3516
      ],
      "op": "JUMPI",
      "path": "217"
    },
    "465": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2843,
        2847
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x20"
    },
    "467": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2828,
        2848
      ],
      "op": "DUP4",
      "path": "217"
    },
    "468": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2828,
        2848
      ],
      "op": "ADD",
      "path": "217"
    },
    "469": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2822,
        2849
      ],
      "op": "MLOAD",
      "path": "217"
    },
    "470": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2892,
        2896
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x40"
    },
    "472": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2877,
        2897
      ],
      "op": "DUP5",
      "path": "217"
    },
    "473": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2877,
        2897
      ],
      "op": "ADD",
      "path": "217"
    },
    "474": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2871,
        2898
      ],
      "op": "MLOAD",
      "path": "217"
    },
    "475": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2949,
        2953
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x60"
    },
    "477": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2934,
        2954
      ],
      "op": "DUP6",
      "path": "217"
    },
    "478": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2934,
        2954
      ],
      "op": "ADD",
      "path": "217"
    },
    "479": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2928,
        2955
      ],
      "op": "MLOAD",
      "path": "217"
    },
    "480": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2592,
        2601
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x0"
    },
    "482": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2920,
        2956
      ],
      "op": "BYTE",
      "path": "217"
    },
    "483": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2990,
        3015
      ],
      "op": "PUSH2",
      "path": "217",
      "statement": 3,
      "value": "0x1EE"
    },
    "486": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3001,
        3005
      ],
      "op": "DUP8",
      "path": "217"
    },
    "487": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2920,
        2956
      ],
      "op": "DUP3",
      "path": "217"
    },
    "488": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2822,
        2849
      ],
      "op": "DUP6",
      "path": "217"
    },
    "489": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2871,
        2898
      ],
      "op": "DUP6",
      "path": "217"
    },
    "490": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2990,
        3000
      ],
      "op": "PUSH2",
      "path": "217",
      "value": "0x233"
    },
    "493": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        2990,
        3015
      ],
      "op": "JUMP",
      "path": "217"
    },
    "494": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2990,
        3015
      ],
      "op": "JUMPDEST",
      "path": "217"
    },
    "495": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "SWAP5",
      "path": "217"
    },
    "496": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "POP",
      "path": "217"
    },
    "497": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "SWAP5",
      "path": "217"
    },
    "498": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "POP",
      "path": "217"
    },
    "499": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "POP",
      "path": "217"
    },
    "500": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "POP",
      "path": "217"
    },
    "501": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "POP",
      "path": "217"
    },
    "502": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "PUSH2",
      "path": "217",
      "value": "0x22C"
    },
    "505": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2983,
        3015
      ],
      "op": "JUMP",
      "path": "217"
    },
    "506": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2550,
        3516
      ],
      "op": "JUMPDEST",
      "path": "217"
    },
    "507": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3036,
        3045
      ],
      "op": "DUP3",
      "path": "217"
    },
    "508": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3036,
        3052
      ],
      "op": "MLOAD",
      "path": "217"
    },
    "509": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3056,
        3058
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x40"
    },
    "511": {
      "branch": 12,
      "fn": "ECDSA.tryRecover",
      "offset": [
        3036,
        3058
      ],
      "op": "EQ",
      "path": "217"
    },
    "512": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3032,
        3516
      ],
      "op": "ISZERO",
      "path": "217"
    },
    "513": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3032,
        3516
      ],
      "op": "PUSH2",
      "path": "217",
      "value": "0x224"
    },
    "516": {
      "branch": 12,
      "fn": "ECDSA.tryRecover",
      "offset": [
        3032,
        3516
      ],
      "op": "JUMPI",
      "path": "217"
    },
    "517": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3305,
        3309
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x20"
    },
    "519": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3290,
        3310
      ],
      "op": "DUP4",
      "path": "217"
    },
    "520": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3290,
        3310
      ],
      "op": "ADD",
      "path": "217"
    },
    "521": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3284,
        3311
      ],
      "op": "MLOAD",
      "path": "217"
    },
    "522": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3355,
        3359
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x40"
    },
    "524": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3340,
        3360
      ],
      "op": "DUP5",
      "path": "217"
    },
    "525": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3340,
        3360
      ],
      "op": "ADD",
      "path": "217"
    },
    "526": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3334,
        3361
      ],
      "op": "MLOAD",
      "path": "217"
    },
    "527": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3395,
        3418
      ],
      "op": "PUSH2",
      "path": "217",
      "statement": 4,
      "value": "0x219"
    },
    "530": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3406,
        3410
      ],
      "op": "DUP7",
      "path": "217"
    },
    "531": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3284,
        3311
      ],
      "op": "DUP4",
      "path": "217"
    },
    "532": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3334,
        3361
      ],
      "op": "DUP4",
      "path": "217"
    },
    "533": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3395,
        3405
      ],
      "op": "PUSH2",
      "path": "217",
      "value": "0x320"
    },
    "536": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        3395,
        3418
      ],
      "op": "JUMP",
      "path": "217"
    },
    "537": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3395,
        3418
      ],
      "op": "JUMPDEST",
      "path": "217"
    },
    "538": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3388,
        3418
      ],
      "op": "SWAP4",
      "path": "217"
    },
    "539": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3388,
        3418
      ],
      "op": "POP",
      "path": "217"
    },
    "540": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3388,
        3418
      ],
      "op": "SWAP4",
      "path": "217"
    },
    "541": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3388,
        3418
      ],
      "op": "POP",
      "path": "217"
    },
    "542": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3388,
        3418
      ],
      "op": "POP",
      "path": "217"
    },
    "543": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3388,
        3418
      ],
      "op": "POP",
      "path": "217"
    },
    "544": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3388,
        3418
      ],
      "op": "PUSH2",
      "path": "217",
      "value": "0x22C"
    },
    "547": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3388,
        3418
      ],
      "op": "JUMP",
      "path": "217"
    },
    "548": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3032,
        3516
      ],
      "op": "JUMPDEST",
      "path": "217"
    },
    "549": {
      "op": "POP"
    },
    "550": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3465,
        3466
      ],
      "op": "PUSH1",
      "path": "217",
      "statement": 5,
      "value": "0x0"
    },
    "552": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3465,
        3466
      ],
      "op": "SWAP1",
      "path": "217"
    },
    "553": {
      "op": "POP"
    },
    "554": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3469,
        3504
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x2"
    },
    "556": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        3032,
        3516
      ],
      "op": "JUMPDEST",
      "path": "217"
    },
    "557": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2243,
        3522
      ],
      "op": "SWAP3",
      "path": "217"
    },
    "558": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2243,
        3522
      ],
      "op": "POP",
      "path": "217"
    },
    "559": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2243,
        3522
      ],
      "op": "SWAP3",
      "path": "217"
    },
    "560": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2243,
        3522
      ],
      "op": "SWAP1",
      "path": "217"
    },
    "561": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        2243,
        3522
      ],
      "op": "POP",
      "path": "217"
    },
    "562": {
      "fn": "ECDSA.tryRecover",
      "jump": "o",
      "offset": [
        2243,
        3522
      ],
      "op": "JUMP",
      "path": "217"
    },
    "563": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "JUMPDEST",
      "path": "217"
    },
    "564": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5842,
        5849
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x0"
    },
    "566": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5842,
        5849
      ],
      "op": "DUP1",
      "path": "217"
    },
    "567": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6766,
        6832
      ],
      "op": "PUSH32",
      "path": "217",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
    },
    "600": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6753,
        6832
      ],
      "op": "DUP4",
      "path": "217"
    },
    "601": {
      "branch": 13,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6753,
        6832
      ],
      "op": "GT",
      "path": "217"
    },
    "602": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6749,
        6910
      ],
      "op": "ISZERO",
      "path": "217"
    },
    "603": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6749,
        6910
      ],
      "op": "PUSH2",
      "path": "217",
      "value": "0x26A"
    },
    "606": {
      "branch": 13,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6749,
        6910
      ],
      "op": "JUMPI",
      "path": "217"
    },
    "607": {
      "op": "POP"
    },
    "608": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6864,
        6865
      ],
      "op": "PUSH1",
      "path": "217",
      "statement": 6,
      "value": "0x0"
    },
    "610": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6864,
        6865
      ],
      "op": "SWAP1",
      "path": "217"
    },
    "611": {
      "op": "POP"
    },
    "612": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6868,
        6898
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x3"
    },
    "614": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6848,
        6899
      ],
      "op": "PUSH2",
      "path": "217",
      "value": "0x317"
    },
    "617": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6848,
        6899
      ],
      "op": "JUMP",
      "path": "217"
    },
    "618": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6749,
        6910
      ],
      "op": "JUMPDEST",
      "path": "217"
    },
    "619": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6924
      ],
      "op": "DUP5",
      "path": "217"
    },
    "620": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6930
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0xFF"
    },
    "622": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6930
      ],
      "op": "AND",
      "path": "217"
    },
    "623": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6928,
        6930
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x1B"
    },
    "625": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6930
      ],
      "op": "EQ",
      "path": "217"
    },
    "626": {
      "branch": 14,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6930
      ],
      "op": "ISZERO",
      "path": "217"
    },
    "627": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6941
      ],
      "op": "DUP1",
      "path": "217"
    },
    "628": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6941
      ],
      "op": "ISZERO",
      "path": "217"
    },
    "629": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6941
      ],
      "op": "PUSH2",
      "path": "217",
      "value": "0x282"
    },
    "632": {
      "branch": 14,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6941
      ],
      "op": "JUMPI",
      "path": "217"
    },
    "633": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6941
      ],
      "op": "POP",
      "path": "217"
    },
    "634": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6934,
        6935
      ],
      "op": "DUP5",
      "path": "217"
    },
    "635": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6934,
        6941
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0xFF"
    },
    "637": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6934,
        6941
      ],
      "op": "AND",
      "path": "217"
    },
    "638": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6939,
        6941
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x1C"
    },
    "640": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6934,
        6941
      ],
      "op": "EQ",
      "path": "217"
    },
    "641": {
      "branch": 15,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6934,
        6941
      ],
      "op": "ISZERO",
      "path": "217"
    },
    "642": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6923,
        6941
      ],
      "op": "JUMPDEST",
      "path": "217"
    },
    "643": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6919,
        7019
      ],
      "op": "ISZERO",
      "path": "217"
    },
    "644": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6919,
        7019
      ],
      "op": "PUSH2",
      "path": "217",
      "value": "0x293"
    },
    "647": {
      "branch": 15,
      "fn": "ECDSA.tryRecover",
      "offset": [
        6919,
        7019
      ],
      "op": "JUMPI",
      "path": "217"
    },
    "648": {
      "op": "POP"
    },
    "649": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6973,
        6974
      ],
      "op": "PUSH1",
      "path": "217",
      "statement": 7,
      "value": "0x0"
    },
    "651": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6973,
        6974
      ],
      "op": "SWAP1",
      "path": "217"
    },
    "652": {
      "op": "POP"
    },
    "653": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6977,
        7007
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x4"
    },
    "655": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6957,
        7008
      ],
      "op": "PUSH2",
      "path": "217",
      "value": "0x317"
    },
    "658": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6957,
        7008
      ],
      "op": "JUMP",
      "path": "217"
    },
    "659": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        6919,
        7019
      ],
      "op": "JUMPDEST",
      "path": "217"
    },
    "660": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x40"
    },
    "662": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP1",
      "path": "217"
    },
    "663": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "MLOAD",
      "path": "217"
    },
    "664": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7113,
        7127
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x0"
    },
    "666": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP1",
      "path": "217"
    },
    "667": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP3",
      "path": "217"
    },
    "668": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "MSTORE",
      "path": "217"
    },
    "669": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x20"
    },
    "671": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP3",
      "path": "217"
    },
    "672": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "ADD",
      "path": "217"
    },
    "673": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP1",
      "path": "217"
    },
    "674": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP5",
      "path": "217"
    },
    "675": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "MSTORE",
      "path": "217"
    },
    "676": {
      "op": "DUP10"
    },
    "677": {
      "op": "SWAP1"
    },
    "678": {
      "op": "MSTORE"
    },
    "679": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "681": {
      "op": "DUP9"
    },
    "682": {
      "op": "AND"
    },
    "683": {
      "op": "SWAP3"
    },
    "684": {
      "op": "DUP3"
    },
    "685": {
      "op": "ADD"
    },
    "686": {
      "op": "SWAP3"
    },
    "687": {
      "op": "SWAP1"
    },
    "688": {
      "op": "SWAP3"
    },
    "689": {
      "op": "MSTORE"
    },
    "690": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "692": {
      "op": "DUP2"
    },
    "693": {
      "op": "ADD"
    },
    "694": {
      "op": "DUP7"
    },
    "695": {
      "op": "SWAP1"
    },
    "696": {
      "op": "MSTORE"
    },
    "697": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "699": {
      "op": "DUP2"
    },
    "700": {
      "op": "ADD"
    },
    "701": {
      "op": "DUP6"
    },
    "702": {
      "op": "SWAP1"
    },
    "703": {
      "op": "MSTORE"
    },
    "704": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x1"
    },
    "706": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "SWAP1",
      "path": "217"
    },
    "707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "709": {
      "op": "ADD"
    },
    "710": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x20"
    },
    "712": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x40"
    },
    "714": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "MLOAD",
      "path": "217"
    },
    "715": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x20"
    },
    "717": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP2",
      "path": "217"
    },
    "718": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "SUB",
      "path": "217"
    },
    "719": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "SWAP1",
      "path": "217"
    },
    "720": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP1",
      "path": "217"
    },
    "721": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP5",
      "path": "217"
    },
    "722": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "SUB",
      "path": "217"
    },
    "723": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "SWAP1",
      "path": "217"
    },
    "724": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP6",
      "path": "217"
    },
    "725": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "GAS",
      "path": "217"
    },
    "726": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "STATICCALL",
      "path": "217"
    },
    "727": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "ISZERO",
      "path": "217"
    },
    "728": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP1",
      "path": "217"
    },
    "729": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "ISZERO",
      "path": "217"
    },
    "730": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH2",
      "path": "217",
      "value": "0x2E7"
    },
    "733": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "JUMPI",
      "path": "217"
    },
    "734": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "RETURNDATASIZE",
      "path": "217"
    },
    "735": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x0"
    },
    "737": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "DUP1",
      "path": "217"
    },
    "738": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "RETURNDATACOPY",
      "path": "217"
    },
    "739": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "RETURNDATASIZE",
      "path": "217"
    },
    "740": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x0"
    },
    "742": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "REVERT",
      "path": "217"
    },
    "743": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "JUMPDEST",
      "path": "217"
    },
    "744": {
      "op": "POP"
    },
    "745": {
      "op": "POP"
    },
    "746": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x40"
    },
    "748": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "MLOAD",
      "path": "217"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "751": {
      "op": "NOT"
    },
    "752": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "ADD",
      "path": "217"
    },
    "753": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "MLOAD",
      "path": "217"
    },
    "754": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7130,
        7154
      ],
      "op": "SWAP2",
      "path": "217"
    },
    "755": {
      "op": "POP"
    },
    "756": {
      "op": "POP"
    },
    "757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "763": {
      "op": "SHL"
    },
    "764": {
      "op": "SUB"
    },
    "765": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7168,
        7188
      ],
      "op": "DUP2",
      "path": "217"
    },
    "766": {
      "branch": 16,
      "fn": "ECDSA.tryRecover",
      "offset": [
        7168,
        7188
      ],
      "op": "AND",
      "path": "217"
    },
    "767": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7164,
        7265
      ],
      "op": "PUSH2",
      "path": "217",
      "value": "0x310"
    },
    "770": {
      "branch": 16,
      "fn": "ECDSA.tryRecover",
      "offset": [
        7164,
        7265
      ],
      "op": "JUMPI",
      "path": "217"
    },
    "771": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7220,
        7221
      ],
      "op": "PUSH1",
      "path": "217",
      "statement": 8,
      "value": "0x0"
    },
    "773": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7224,
        7253
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x1"
    },
    "775": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7204,
        7254
      ],
      "op": "SWAP3",
      "path": "217"
    },
    "776": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7204,
        7254
      ],
      "op": "POP",
      "path": "217"
    },
    "777": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7204,
        7254
      ],
      "op": "SWAP3",
      "path": "217"
    },
    "778": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7204,
        7254
      ],
      "op": "POP",
      "path": "217"
    },
    "779": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7204,
        7254
      ],
      "op": "POP",
      "path": "217"
    },
    "780": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7204,
        7254
      ],
      "op": "PUSH2",
      "path": "217",
      "value": "0x317"
    },
    "783": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7204,
        7254
      ],
      "op": "JUMP",
      "path": "217"
    },
    "784": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7164,
        7265
      ],
      "op": "JUMPDEST",
      "path": "217"
    },
    "785": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7283,
        7289
      ],
      "op": "SWAP2",
      "path": "217",
      "statement": 9
    },
    "786": {
      "op": "POP"
    },
    "787": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7291,
        7311
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x0"
    },
    "789": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        7291,
        7311
      ],
      "op": "SWAP1",
      "path": "217"
    },
    "790": {
      "op": "POP"
    },
    "791": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "JUMPDEST",
      "path": "217"
    },
    "792": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "SWAP5",
      "path": "217"
    },
    "793": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "POP",
      "path": "217"
    },
    "794": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "SWAP5",
      "path": "217"
    },
    "795": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "SWAP3",
      "path": "217"
    },
    "796": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "POP",
      "path": "217"
    },
    "797": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "POP",
      "path": "217"
    },
    "798": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5716,
        7319
      ],
      "op": "POP",
      "path": "217"
    },
    "799": {
      "fn": "ECDSA.tryRecover",
      "jump": "o",
      "offset": [
        5716,
        7319
      ],
      "op": "JUMP",
      "path": "217"
    },
    "800": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4789,
        5125
      ],
      "op": "JUMPDEST",
      "path": "217"
    },
    "801": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4899,
        4906
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x0"
    },
    "803": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4899,
        4906
      ],
      "op": "DUP1",
      "path": "217"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "808": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "810": {
      "op": "SHL"
    },
    "811": {
      "op": "SUB"
    },
    "812": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4944,
        5024
      ],
      "op": "DUP4",
      "path": "217"
    },
    "813": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4944,
        5024
      ],
      "op": "AND",
      "path": "217"
    },
    "814": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4899,
        4906
      ],
      "op": "DUP2",
      "path": "217"
    },
    "815": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5050,
        5075
      ],
      "op": "PUSH2",
      "path": "217",
      "value": "0x33D"
    },
    "818": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5066,
        5069
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0xFF"
    },
    "820": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5051,
        5069
      ],
      "op": "DUP7",
      "path": "217"
    },
    "821": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5051,
        5069
      ],
      "op": "SWAP1",
      "path": "217"
    },
    "822": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5051,
        5069
      ],
      "op": "SHR",
      "path": "217"
    },
    "823": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5073,
        5075
      ],
      "op": "PUSH1",
      "path": "217",
      "value": "0x1B"
    },
    "825": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5050,
        5075
      ],
      "op": "PUSH2",
      "path": "217",
      "value": "0x50E"
    },
    "828": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        5050,
        5075
      ],
      "op": "JUMP",
      "path": "217"
    },
    "829": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5050,
        5075
      ],
      "op": "JUMPDEST",
      "path": "217"
    },
    "830": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5034,
        5076
      ],
      "op": "SWAP1",
      "path": "217"
    },
    "831": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5034,
        5076
      ],
      "op": "POP",
      "path": "217"
    },
    "832": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5093,
        5118
      ],
      "op": "PUSH2",
      "path": "217",
      "statement": 10,
      "value": "0x34B"
    },
    "835": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5104,
        5108
      ],
      "op": "DUP8",
      "path": "217"
    },
    "836": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5110,
        5111
      ],
      "op": "DUP3",
      "path": "217"
    },
    "837": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5113,
        5114
      ],
      "op": "DUP9",
      "path": "217"
    },
    "838": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5116,
        5117
      ],
      "op": "DUP6",
      "path": "217"
    },
    "839": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5093,
        5103
      ],
      "op": "PUSH2",
      "path": "217",
      "value": "0x233"
    },
    "842": {
      "fn": "ECDSA.tryRecover",
      "jump": "i",
      "offset": [
        5093,
        5118
      ],
      "op": "JUMP",
      "path": "217"
    },
    "843": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5093,
        5118
      ],
      "op": "JUMPDEST",
      "path": "217"
    },
    "844": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5086,
        5118
      ],
      "op": "SWAP4",
      "path": "217"
    },
    "845": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5086,
        5118
      ],
      "op": "POP",
      "path": "217"
    },
    "846": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5086,
        5118
      ],
      "op": "SWAP4",
      "path": "217"
    },
    "847": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5086,
        5118
      ],
      "op": "POP",
      "path": "217"
    },
    "848": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5086,
        5118
      ],
      "op": "POP",
      "path": "217"
    },
    "849": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        5086,
        5118
      ],
      "op": "POP",
      "path": "217"
    },
    "850": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4789,
        5125
      ],
      "op": "SWAP4",
      "path": "217"
    },
    "851": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4789,
        5125
      ],
      "op": "POP",
      "path": "217"
    },
    "852": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4789,
        5125
      ],
      "op": "SWAP4",
      "path": "217"
    },
    "853": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4789,
        5125
      ],
      "op": "SWAP2",
      "path": "217"
    },
    "854": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4789,
        5125
      ],
      "op": "POP",
      "path": "217"
    },
    "855": {
      "fn": "ECDSA.tryRecover",
      "offset": [
        4789,
        5125
      ],
      "op": "POP",
      "path": "217"
    },
    "856": {
      "fn": "ECDSA.tryRecover",
      "jump": "o",
      "offset": [
        4789,
        5125
      ],
      "op": "JUMP",
      "path": "217"
    },
    "857": {
      "op": "JUMPDEST"
    },
    "858": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "863": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "865": {
      "op": "SHL"
    },
    "866": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "868": {
      "op": "MSTORE"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "871": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "873": {
      "op": "MSTORE"
    },
    "874": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "878": {
      "op": "REVERT"
    },
    "879": {
      "op": "JUMPDEST"
    },
    "880": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "882": {
      "op": "DUP1"
    },
    "883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "885": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "887": {
      "op": "DUP5"
    },
    "888": {
      "op": "DUP7"
    },
    "889": {
      "op": "SUB"
    },
    "890": {
      "op": "SLT"
    },
    "891": {
      "op": "ISZERO"
    },
    "892": {
      "op": "PUSH2",
      "value": "0x384"
    },
    "895": {
      "op": "JUMPI"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "898": {
      "op": "DUP1"
    },
    "899": {
      "op": "REVERT"
    },
    "900": {
      "op": "JUMPDEST"
    },
    "901": {
      "op": "DUP4"
    },
    "902": {
      "op": "CALLDATALOAD"
    },
    "903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "909": {
      "op": "SHL"
    },
    "910": {
      "op": "SUB"
    },
    "911": {
      "op": "DUP2"
    },
    "912": {
      "op": "AND"
    },
    "913": {
      "op": "DUP2"
    },
    "914": {
      "op": "EQ"
    },
    "915": {
      "op": "PUSH2",
      "value": "0x39B"
    },
    "918": {
      "op": "JUMPI"
    },
    "919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "921": {
      "op": "DUP1"
    },
    "922": {
      "op": "REVERT"
    },
    "923": {
      "op": "JUMPDEST"
    },
    "924": {
      "op": "SWAP3"
    },
    "925": {
      "op": "POP"
    },
    "926": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "928": {
      "op": "DUP5"
    },
    "929": {
      "op": "ADD"
    },
    "930": {
      "op": "CALLDATALOAD"
    },
    "931": {
      "op": "SWAP2"
    },
    "932": {
      "op": "POP"
    },
    "933": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "935": {
      "op": "DUP5"
    },
    "936": {
      "op": "ADD"
    },
    "937": {
      "op": "CALLDATALOAD"
    },
    "938": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "947": {
      "op": "DUP1"
    },
    "948": {
      "op": "DUP3"
    },
    "949": {
      "op": "GT"
    },
    "950": {
      "op": "ISZERO"
    },
    "951": {
      "op": "PUSH2",
      "value": "0x3BF"
    },
    "954": {
      "op": "JUMPI"
    },
    "955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "957": {
      "op": "DUP1"
    },
    "958": {
      "op": "REVERT"
    },
    "959": {
      "op": "JUMPDEST"
    },
    "960": {
      "op": "DUP2"
    },
    "961": {
      "op": "DUP7"
    },
    "962": {
      "op": "ADD"
    },
    "963": {
      "op": "SWAP2"
    },
    "964": {
      "op": "POP"
    },
    "965": {
      "op": "DUP7"
    },
    "966": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "968": {
      "op": "DUP4"
    },
    "969": {
      "op": "ADD"
    },
    "970": {
      "op": "SLT"
    },
    "971": {
      "op": "PUSH2",
      "value": "0x3D3"
    },
    "974": {
      "op": "JUMPI"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "977": {
      "op": "DUP1"
    },
    "978": {
      "op": "REVERT"
    },
    "979": {
      "op": "JUMPDEST"
    },
    "980": {
      "op": "DUP2"
    },
    "981": {
      "op": "CALLDATALOAD"
    },
    "982": {
      "op": "DUP2"
    },
    "983": {
      "op": "DUP2"
    },
    "984": {
      "op": "GT"
    },
    "985": {
      "op": "ISZERO"
    },
    "986": {
      "op": "PUSH2",
      "value": "0x3E5"
    },
    "989": {
      "op": "JUMPI"
    },
    "990": {
      "op": "PUSH2",
      "value": "0x3E5"
    },
    "993": {
      "op": "PUSH2",
      "value": "0x359"
    },
    "996": {
      "jump": "i",
      "op": "JUMP"
    },
    "997": {
      "op": "JUMPDEST"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1000": {
      "op": "MLOAD"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1003": {
      "op": "DUP3"
    },
    "1004": {
      "op": "ADD"
    },
    "1005": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1007": {
      "op": "NOT"
    },
    "1008": {
      "op": "SWAP1"
    },
    "1009": {
      "op": "DUP2"
    },
    "1010": {
      "op": "AND"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1013": {
      "op": "ADD"
    },
    "1014": {
      "op": "AND"
    },
    "1015": {
      "op": "DUP2"
    },
    "1016": {
      "op": "ADD"
    },
    "1017": {
      "op": "SWAP1"
    },
    "1018": {
      "op": "DUP4"
    },
    "1019": {
      "op": "DUP3"
    },
    "1020": {
      "op": "GT"
    },
    "1021": {
      "op": "DUP2"
    },
    "1022": {
      "op": "DUP4"
    },
    "1023": {
      "op": "LT"
    },
    "1024": {
      "op": "OR"
    },
    "1025": {
      "op": "ISZERO"
    },
    "1026": {
      "op": "PUSH2",
      "value": "0x40D"
    },
    "1029": {
      "op": "JUMPI"
    },
    "1030": {
      "op": "PUSH2",
      "value": "0x40D"
    },
    "1033": {
      "op": "PUSH2",
      "value": "0x359"
    },
    "1036": {
      "jump": "i",
      "op": "JUMP"
    },
    "1037": {
      "op": "JUMPDEST"
    },
    "1038": {
      "op": "DUP2"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1041": {
      "op": "MSTORE"
    },
    "1042": {
      "op": "DUP3"
    },
    "1043": {
      "op": "DUP2"
    },
    "1044": {
      "op": "MSTORE"
    },
    "1045": {
      "op": "DUP10"
    },
    "1046": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1048": {
      "op": "DUP5"
    },
    "1049": {
      "op": "DUP8"
    },
    "1050": {
      "op": "ADD"
    },
    "1051": {
      "op": "ADD"
    },
    "1052": {
      "op": "GT"
    },
    "1053": {
      "op": "ISZERO"
    },
    "1054": {
      "op": "PUSH2",
      "value": "0x426"
    },
    "1057": {
      "op": "JUMPI"
    },
    "1058": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1060": {
      "op": "DUP1"
    },
    "1061": {
      "op": "REVERT"
    },
    "1062": {
      "op": "JUMPDEST"
    },
    "1063": {
      "op": "DUP3"
    },
    "1064": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1066": {
      "op": "DUP7"
    },
    "1067": {
      "op": "ADD"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1070": {
      "op": "DUP4"
    },
    "1071": {
      "op": "ADD"
    },
    "1072": {
      "op": "CALLDATACOPY"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1077": {
      "op": "DUP5"
    },
    "1078": {
      "op": "DUP4"
    },
    "1079": {
      "op": "ADD"
    },
    "1080": {
      "op": "ADD"
    },
    "1081": {
      "op": "MSTORE"
    },
    "1082": {
      "op": "DUP1"
    },
    "1083": {
      "op": "SWAP6"
    },
    "1084": {
      "op": "POP"
    },
    "1085": {
      "op": "POP"
    },
    "1086": {
      "op": "POP"
    },
    "1087": {
      "op": "POP"
    },
    "1088": {
      "op": "POP"
    },
    "1089": {
      "op": "POP"
    },
    "1090": {
      "op": "SWAP3"
    },
    "1091": {
      "op": "POP"
    },
    "1092": {
      "op": "SWAP3"
    },
    "1093": {
      "op": "POP"
    },
    "1094": {
      "op": "SWAP3"
    },
    "1095": {
      "jump": "o",
      "op": "JUMP"
    },
    "1096": {
      "op": "JUMPDEST"
    },
    "1097": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1104": {
      "op": "SHL"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1107": {
      "op": "MSTORE"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1110": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1112": {
      "op": "MSTORE"
    },
    "1113": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1117": {
      "op": "REVERT"
    },
    "1118": {
      "op": "JUMPDEST"
    },
    "1119": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1121": {
      "op": "JUMPDEST"
    },
    "1122": {
      "op": "DUP4"
    },
    "1123": {
      "op": "DUP2"
    },
    "1124": {
      "op": "LT"
    },
    "1125": {
      "op": "ISZERO"
    },
    "1126": {
      "op": "PUSH2",
      "value": "0x479"
    },
    "1129": {
      "op": "JUMPI"
    },
    "1130": {
      "op": "DUP2"
    },
    "1131": {
      "op": "DUP2"
    },
    "1132": {
      "op": "ADD"
    },
    "1133": {
      "op": "MLOAD"
    },
    "1134": {
      "op": "DUP4"
    },
    "1135": {
      "op": "DUP3"
    },
    "1136": {
      "op": "ADD"
    },
    "1137": {
      "op": "MSTORE"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1140": {
      "op": "ADD"
    },
    "1141": {
      "op": "PUSH2",
      "value": "0x461"
    },
    "1144": {
      "op": "JUMP"
    },
    "1145": {
      "op": "JUMPDEST"
    },
    "1146": {
      "op": "DUP4"
    },
    "1147": {
      "op": "DUP2"
    },
    "1148": {
      "op": "GT"
    },
    "1149": {
      "op": "ISZERO"
    },
    "1150": {
      "op": "PUSH2",
      "value": "0x488"
    },
    "1153": {
      "op": "JUMPI"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1156": {
      "op": "DUP5"
    },
    "1157": {
      "op": "DUP5"
    },
    "1158": {
      "op": "ADD"
    },
    "1159": {
      "op": "MSTORE"
    },
    "1160": {
      "op": "JUMPDEST"
    },
    "1161": {
      "op": "POP"
    },
    "1162": {
      "op": "POP"
    },
    "1163": {
      "op": "POP"
    },
    "1164": {
      "op": "POP"
    },
    "1165": {
      "jump": "o",
      "op": "JUMP"
    },
    "1166": {
      "op": "JUMPDEST"
    },
    "1167": {
      "op": "DUP3"
    },
    "1168": {
      "op": "DUP2"
    },
    "1169": {
      "op": "MSTORE"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1174": {
      "op": "DUP3"
    },
    "1175": {
      "op": "ADD"
    },
    "1176": {
      "op": "MSTORE"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1179": {
      "op": "DUP3"
    },
    "1180": {
      "op": "MLOAD"
    },
    "1181": {
      "op": "DUP1"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1184": {
      "op": "DUP5"
    },
    "1185": {
      "op": "ADD"
    },
    "1186": {
      "op": "MSTORE"
    },
    "1187": {
      "op": "PUSH2",
      "value": "0x4B3"
    },
    "1190": {
      "op": "DUP2"
    },
    "1191": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1193": {
      "op": "DUP6"
    },
    "1194": {
      "op": "ADD"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1197": {
      "op": "DUP8"
    },
    "1198": {
      "op": "ADD"
    },
    "1199": {
      "op": "PUSH2",
      "value": "0x45E"
    },
    "1202": {
      "jump": "i",
      "op": "JUMP"
    },
    "1203": {
      "op": "JUMPDEST"
    },
    "1204": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1206": {
      "op": "ADD"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1209": {
      "op": "NOT"
    },
    "1210": {
      "op": "AND"
    },
    "1211": {
      "op": "SWAP2"
    },
    "1212": {
      "op": "SWAP1"
    },
    "1213": {
      "op": "SWAP2"
    },
    "1214": {
      "op": "ADD"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1217": {
      "op": "ADD"
    },
    "1218": {
      "op": "SWAP4"
    },
    "1219": {
      "op": "SWAP3"
    },
    "1220": {
      "op": "POP"
    },
    "1221": {
      "op": "POP"
    },
    "1222": {
      "op": "POP"
    },
    "1223": {
      "jump": "o",
      "op": "JUMP"
    },
    "1224": {
      "op": "JUMPDEST"
    },
    "1225": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1227": {
      "op": "DUP3"
    },
    "1228": {
      "op": "MLOAD"
    },
    "1229": {
      "op": "PUSH2",
      "value": "0x4DA"
    },
    "1232": {
      "op": "DUP2"
    },
    "1233": {
      "op": "DUP5"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1236": {
      "op": "DUP8"
    },
    "1237": {
      "op": "ADD"
    },
    "1238": {
      "op": "PUSH2",
      "value": "0x45E"
    },
    "1241": {
      "jump": "i",
      "op": "JUMP"
    },
    "1242": {
      "op": "JUMPDEST"
    },
    "1243": {
      "op": "SWAP2"
    },
    "1244": {
      "op": "SWAP1"
    },
    "1245": {
      "op": "SWAP2"
    },
    "1246": {
      "op": "ADD"
    },
    "1247": {
      "op": "SWAP3"
    },
    "1248": {
      "op": "SWAP2"
    },
    "1249": {
      "op": "POP"
    },
    "1250": {
      "op": "POP"
    },
    "1251": {
      "jump": "o",
      "op": "JUMP"
    },
    "1252": {
      "op": "JUMPDEST"
    },
    "1253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1257": {
      "op": "DUP3"
    },
    "1258": {
      "op": "DUP5"
    },
    "1259": {
      "op": "SUB"
    },
    "1260": {
      "op": "SLT"
    },
    "1261": {
      "op": "ISZERO"
    },
    "1262": {
      "op": "PUSH2",
      "value": "0x4F6"
    },
    "1265": {
      "op": "JUMPI"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1268": {
      "op": "DUP1"
    },
    "1269": {
      "op": "REVERT"
    },
    "1270": {
      "op": "JUMPDEST"
    },
    "1271": {
      "op": "DUP2"
    },
    "1272": {
      "op": "MLOAD"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1279": {
      "op": "SHL"
    },
    "1280": {
      "op": "SUB"
    },
    "1281": {
      "op": "NOT"
    },
    "1282": {
      "op": "DUP2"
    },
    "1283": {
      "op": "AND"
    },
    "1284": {
      "op": "DUP2"
    },
    "1285": {
      "op": "EQ"
    },
    "1286": {
      "op": "PUSH2",
      "value": "0x70"
    },
    "1289": {
      "op": "JUMPI"
    },
    "1290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1292": {
      "op": "DUP1"
    },
    "1293": {
      "op": "REVERT"
    },
    "1294": {
      "op": "JUMPDEST"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1297": {
      "op": "DUP3"
    },
    "1298": {
      "op": "NOT"
    },
    "1299": {
      "op": "DUP3"
    },
    "1300": {
      "op": "GT"
    },
    "1301": {
      "op": "ISZERO"
    },
    "1302": {
      "op": "PUSH2",
      "value": "0x52F"
    },
    "1305": {
      "op": "JUMPI"
    },
    "1306": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1313": {
      "op": "SHL"
    },
    "1314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1316": {
      "op": "MSTORE"
    },
    "1317": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1319": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1321": {
      "op": "MSTORE"
    },
    "1322": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1326": {
      "op": "REVERT"
    },
    "1327": {
      "op": "JUMPDEST"
    },
    "1328": {
      "op": "POP"
    },
    "1329": {
      "op": "ADD"
    },
    "1330": {
      "op": "SWAP1"
    },
    "1331": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "9c65a2a647015c763080192c89b8da94a84e1af7",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/cryptography/SignatureChecker.sol\";\n\ncontract SignatureCheckerMock {\n    using SignatureChecker for address;\n\n    function isValidSignatureNow(\n        address signer,\n        bytes32 hash,\n        bytes memory signature\n    ) public view returns (bool) {\n        return signer.isValidSignatureNow(hash, signature);\n    }\n}\n",
  "sourceMap": "112:286:131:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/mocks/SignatureCheckerMock.sol",
  "type": "contract"
}