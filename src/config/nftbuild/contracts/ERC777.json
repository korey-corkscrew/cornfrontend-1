{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address[]",
          "name": "defaultOperators_",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Sent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultOperators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "171": "contracts/openzeppelin/contracts/token/ERC20/IERC20.sol",
    "200": "contracts/openzeppelin/contracts/token/ERC777/ERC777.sol",
    "201": "contracts/openzeppelin/contracts/token/ERC777/IERC777.sol",
    "202": "contracts/openzeppelin/contracts/token/ERC777/IERC777Recipient.sol",
    "203": "contracts/openzeppelin/contracts/token/ERC777/IERC777Sender.sol",
    "206": "contracts/openzeppelin/contracts/utils/Address.sol",
    "210": "contracts/openzeppelin/contracts/utils/Context.sol",
    "230": "contracts/openzeppelin/contracts/utils/introspection/IERC1820Registry.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/token/ERC777/ERC777.sol",
    "exportedSymbols": {
      "Address": [
        26327
      ],
      "Context": [
        26715
      ],
      "ERC777": [
        25600
      ],
      "IERC1820Registry": [
        28928
      ],
      "IERC20": [
        20421
      ],
      "IERC777": [
        25759
      ],
      "IERC777Recipient": [
        25779
      ],
      "IERC777Sender": [
        25799
      ]
    },
    "id": 25601,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 24511,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "107:23:200"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC777/IERC777.sol",
        "file": "./IERC777.sol",
        "id": 24512,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25601,
        "sourceUnit": 25760,
        "src": "132:23:200",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC777/IERC777Recipient.sol",
        "file": "./IERC777Recipient.sol",
        "id": 24513,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25601,
        "sourceUnit": 25780,
        "src": "156:32:200",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC777/IERC777Sender.sol",
        "file": "./IERC777Sender.sol",
        "id": 24514,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25601,
        "sourceUnit": 25800,
        "src": "189:29:200",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "../ERC20/IERC20.sol",
        "id": 24515,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25601,
        "sourceUnit": 20422,
        "src": "219:29:200",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 24516,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25601,
        "sourceUnit": 26328,
        "src": "249:33:200",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 24517,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25601,
        "sourceUnit": 26716,
        "src": "283:33:200",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/introspection/IERC1820Registry.sol",
        "file": "../../utils/introspection/IERC1820Registry.sol",
        "id": 24518,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 25601,
        "sourceUnit": 28929,
        "src": "317:56:200",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24520,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26715,
              "src": "1107:7:200"
            },
            "id": 24521,
            "nodeType": "InheritanceSpecifier",
            "src": "1107:7:200"
          },
          {
            "baseName": {
              "id": 24522,
              "name": "IERC777",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25759,
              "src": "1116:7:200"
            },
            "id": 24523,
            "nodeType": "InheritanceSpecifier",
            "src": "1116:7:200"
          },
          {
            "baseName": {
              "id": 24524,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20421,
              "src": "1125:6:200"
            },
            "id": 24525,
            "nodeType": "InheritanceSpecifier",
            "src": "1125:6:200"
          }
        ],
        "canonicalName": "ERC777",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 24519,
          "nodeType": "StructuredDocumentation",
          "src": "375:712:200",
          "text": " @dev Implementation of the {IERC777} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n Support for ERC20 is included in this contract, as specified by the EIP: both\n the ERC777 and ERC20 interfaces can be safely used when interacting with it.\n Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token\n movements.\n Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there\n are no special restrictions in the amount of tokens that created, moved, or\n destroyed. This makes integration with ERC20 applications seamless."
        },
        "fullyImplemented": true,
        "id": 25600,
        "linearizedBaseContracts": [
          25600,
          20421,
          25759,
          26715
        ],
        "name": "ERC777",
        "nameLocation": "1097:6:200",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 24528,
            "libraryName": {
              "id": 24526,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26327,
              "src": "1144:7:200"
            },
            "nodeType": "UsingForDirective",
            "src": "1138:26:200",
            "typeName": {
              "id": 24527,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1156:7:200",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": true,
            "id": 24534,
            "mutability": "constant",
            "name": "_ERC1820_REGISTRY",
            "nameLocation": "1205:17:200",
            "nodeType": "VariableDeclaration",
            "scope": 25600,
            "src": "1170:115:200",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC1820Registry_$28928",
              "typeString": "contract IERC1820Registry"
            },
            "typeName": {
              "id": 24530,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24529,
                "name": "IERC1820Registry",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28928,
                "src": "1170:16:200"
              },
              "referencedDeclaration": 28928,
              "src": "1170:16:200",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Registry_$28928",
                "typeString": "contract IERC1820Registry"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307831383230613442373631384264453731446365386364633733614142364339353930356661443234",
                  "id": 24532,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1242:42:200",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 24531,
                "name": "IERC1820Registry",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 28928,
                "src": "1225:16:200",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC1820Registry_$28928_$",
                  "typeString": "type(contract IERC1820Registry)"
                }
              },
              "id": 24533,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1225:60:200",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Registry_$28928",
                "typeString": "contract IERC1820Registry"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 24538,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1328:9:200",
            "nodeType": "VariableDeclaration",
            "scope": 25600,
            "src": "1292:45:200",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 24537,
              "keyType": {
                "id": 24535,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1300:7:200",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1292:27:200",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 24536,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1311:7:200",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 24540,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1360:12:200",
            "nodeType": "VariableDeclaration",
            "scope": 25600,
            "src": "1344:28:200",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24539,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1344:7:200",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 24542,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1394:5:200",
            "nodeType": "VariableDeclaration",
            "scope": 25600,
            "src": "1379:20:200",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 24541,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1379:6:200",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 24544,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1420:7:200",
            "nodeType": "VariableDeclaration",
            "scope": 25600,
            "src": "1405:22:200",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 24543,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1405:6:200",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 24549,
            "mutability": "constant",
            "name": "_TOKENS_SENDER_INTERFACE_HASH",
            "nameLocation": "1459:29:200",
            "nodeType": "VariableDeclaration",
            "scope": 25600,
            "src": "1434:88:200",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 24545,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1434:7:200",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "455243373737546f6b656e7353656e646572",
                  "id": 24547,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1501:20:200",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
                    "typeString": "literal_string \"ERC777TokensSender\""
                  },
                  "value": "ERC777TokensSender"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
                    "typeString": "literal_string \"ERC777TokensSender\""
                  }
                ],
                "id": 24546,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1491:9:200",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 24548,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1491:31:200",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 24554,
            "mutability": "constant",
            "name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
            "nameLocation": "1553:32:200",
            "nodeType": "VariableDeclaration",
            "scope": 25600,
            "src": "1528:94:200",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 24550,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1528:7:200",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "455243373737546f6b656e73526563697069656e74",
                  "id": 24552,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1598:23:200",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
                    "typeString": "literal_string \"ERC777TokensRecipient\""
                  },
                  "value": "ERC777TokensRecipient"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
                    "typeString": "literal_string \"ERC777TokensRecipient\""
                  }
                ],
                "id": 24551,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1588:9:200",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 24553,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1588:34:200",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 24557,
            "mutability": "mutable",
            "name": "_defaultOperatorsArray",
            "nameLocation": "1739:22:200",
            "nodeType": "VariableDeclaration",
            "scope": 25600,
            "src": "1721:40:200",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 24555,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1721:7:200",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 24556,
              "nodeType": "ArrayTypeName",
              "src": "1721:9:200",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 24561,
            "mutability": "mutable",
            "name": "_defaultOperators",
            "nameLocation": "1888:17:200",
            "nodeType": "VariableDeclaration",
            "scope": 25600,
            "src": "1855:50:200",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 24560,
              "keyType": {
                "id": 24558,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1863:7:200",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1855:24:200",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 24559,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1874:4:200",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 24567,
            "mutability": "mutable",
            "name": "_operators",
            "nameLocation": "2048:10:200",
            "nodeType": "VariableDeclaration",
            "scope": 25600,
            "src": "1995:63:200",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 24566,
              "keyType": {
                "id": 24562,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2003:7:200",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1995:44:200",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 24565,
                "keyType": {
                  "id": 24563,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2022:7:200",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2014:24:200",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 24564,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2033:4:200",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 24573,
            "mutability": "mutable",
            "name": "_revokedDefaultOperators",
            "nameLocation": "2117:24:200",
            "nodeType": "VariableDeclaration",
            "scope": 25600,
            "src": "2064:77:200",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 24572,
              "keyType": {
                "id": 24568,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2072:7:200",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2064:44:200",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 24571,
                "keyType": {
                  "id": 24569,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2091:7:200",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2083:24:200",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 24570,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2102:4:200",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 24579,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "2228:11:200",
            "nodeType": "VariableDeclaration",
            "scope": 25600,
            "src": "2172:67:200",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 24578,
              "keyType": {
                "id": 24574,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2180:7:200",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2172:47:200",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 24577,
                "keyType": {
                  "id": 24575,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2199:7:200",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2191:27:200",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 24576,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2210:7:200",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 24655,
              "nodeType": "Block",
              "src": "2438:490:200",
              "statements": [
                {
                  "expression": {
                    "id": 24592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24590,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24542,
                      "src": "2448:5:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 24591,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24582,
                      "src": "2456:5:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2448:13:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 24593,
                  "nodeType": "ExpressionStatement",
                  "src": "2448:13:200"
                },
                {
                  "expression": {
                    "id": 24596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24594,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24544,
                      "src": "2471:7:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 24595,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24584,
                      "src": "2481:7:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2471:17:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 24597,
                  "nodeType": "ExpressionStatement",
                  "src": "2471:17:200"
                },
                {
                  "expression": {
                    "id": 24600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24598,
                      "name": "_defaultOperatorsArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24557,
                      "src": "2499:22:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 24599,
                      "name": "defaultOperators_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24587,
                      "src": "2524:17:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "src": "2499:42:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 24601,
                  "nodeType": "ExpressionStatement",
                  "src": "2499:42:200"
                },
                {
                  "body": {
                    "id": 24621,
                    "nodeType": "Block",
                    "src": "2606:71:200",
                    "statements": [
                      {
                        "expression": {
                          "id": 24619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 24613,
                              "name": "_defaultOperators",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24561,
                              "src": "2620:17:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 24617,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 24614,
                                "name": "defaultOperators_",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24587,
                                "src": "2638:17:200",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 24616,
                              "indexExpression": {
                                "id": 24615,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24603,
                                "src": "2656:1:200",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2638:20:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2620:39:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 24618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2662:4:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2620:46:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 24620,
                        "nodeType": "ExpressionStatement",
                        "src": "2620:46:200"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24606,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24603,
                      "src": "2571:1:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 24607,
                        "name": "defaultOperators_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24587,
                        "src": "2575:17:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 24608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2575:24:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2571:28:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24622,
                  "initializationExpression": {
                    "assignments": [
                      24603
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24603,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2564:1:200",
                        "nodeType": "VariableDeclaration",
                        "scope": 24622,
                        "src": "2556:9:200",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24602,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2556:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24605,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2568:1:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2556:13:200"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2601:3:200",
                      "subExpression": {
                        "id": 24610,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24603,
                        "src": "2601:1:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24612,
                    "nodeType": "ExpressionStatement",
                    "src": "2601:3:200"
                  },
                  "nodeType": "ForStatement",
                  "src": "2551:126:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24628,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2768:4:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777_$25600",
                              "typeString": "contract ERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777_$25600",
                              "typeString": "contract ERC777"
                            }
                          ],
                          "id": 24627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2760:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24626,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2760:7:200",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2760:13:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "455243373737546f6b656e",
                            "id": 24631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2785:13:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054",
                              "typeString": "literal_string \"ERC777Token\""
                            },
                            "value": "ERC777Token"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_ac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce2177054",
                              "typeString": "literal_string \"ERC777Token\""
                            }
                          ],
                          "id": 24630,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2775:9:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 24632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2775:24:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 24635,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2809:4:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777_$25600",
                              "typeString": "contract ERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777_$25600",
                              "typeString": "contract ERC777"
                            }
                          ],
                          "id": 24634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2801:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24633,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2801:7:200",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2801:13:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24623,
                        "name": "_ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24534,
                        "src": "2718:17:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$28928",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 24625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28867,
                      "src": "2718:41:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,address) external"
                      }
                    },
                    "id": 24637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2718:97:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24638,
                  "nodeType": "ExpressionStatement",
                  "src": "2718:97:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24644,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2875:4:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777_$25600",
                              "typeString": "contract ERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777_$25600",
                              "typeString": "contract ERC777"
                            }
                          ],
                          "id": 24643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2867:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24642,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2867:7:200",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2867:13:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "4552433230546f6b656e",
                            "id": 24647,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2892:12:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
                              "typeString": "literal_string \"ERC20Token\""
                            },
                            "value": "ERC20Token"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_aea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a",
                              "typeString": "literal_string \"ERC20Token\""
                            }
                          ],
                          "id": 24646,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2882:9:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 24648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2882:23:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 24651,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2915:4:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777_$25600",
                              "typeString": "contract ERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777_$25600",
                              "typeString": "contract ERC777"
                            }
                          ],
                          "id": 24650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2907:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 24649,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2907:7:200",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 24652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2907:13:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 24639,
                        "name": "_ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24534,
                        "src": "2825:17:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$28928",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 24641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28867,
                      "src": "2825:41:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,address) external"
                      }
                    },
                    "id": 24653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2825:96:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24654,
                  "nodeType": "ExpressionStatement",
                  "src": "2825:96:200"
                }
              ]
            },
            "documentation": {
              "id": 24580,
              "nodeType": "StructuredDocumentation",
              "src": "2246:65:200",
              "text": " @dev `defaultOperators` may be an empty array."
            },
            "id": 24656,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24588,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24582,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2351:5:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 24656,
                  "src": "2337:19:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24581,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2337:6:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24584,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2380:7:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 24656,
                  "src": "2366:21:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24583,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2366:6:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24587,
                  "mutability": "mutable",
                  "name": "defaultOperators_",
                  "nameLocation": "2414:17:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 24656,
                  "src": "2397:34:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24585,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2397:7:200",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24586,
                    "nodeType": "ArrayTypeName",
                    "src": "2397:9:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2327:110:200"
            },
            "returnParameters": {
              "id": 24589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2438:0:200"
            },
            "scope": 25600,
            "src": "2316:612:200",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              25609
            ],
            "body": {
              "id": 24665,
              "nodeType": "Block",
              "src": "3051:29:200",
              "statements": [
                {
                  "expression": {
                    "id": 24663,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24542,
                    "src": "3068:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 24662,
                  "id": 24664,
                  "nodeType": "Return",
                  "src": "3061:12:200"
                }
              ]
            },
            "documentation": {
              "id": 24657,
              "nodeType": "StructuredDocumentation",
              "src": "2934:43:200",
              "text": " @dev See {IERC777-name}."
            },
            "functionSelector": "06fdde03",
            "id": 24666,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2991:4:200",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24659,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3018:8:200"
            },
            "parameters": {
              "id": 24658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2995:2:200"
            },
            "returnParameters": {
              "id": 24662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24661,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24666,
                  "src": "3036:13:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24660,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3036:6:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3035:15:200"
            },
            "scope": 25600,
            "src": "2982:98:200",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              25615
            ],
            "body": {
              "id": 24675,
              "nodeType": "Block",
              "src": "3207:31:200",
              "statements": [
                {
                  "expression": {
                    "id": 24673,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24544,
                    "src": "3224:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 24672,
                  "id": 24674,
                  "nodeType": "Return",
                  "src": "3217:14:200"
                }
              ]
            },
            "documentation": {
              "id": 24667,
              "nodeType": "StructuredDocumentation",
              "src": "3086:45:200",
              "text": " @dev See {IERC777-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 24676,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "3145:6:200",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24669,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3174:8:200"
            },
            "parameters": {
              "id": 24668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3151:2:200"
            },
            "returnParameters": {
              "id": 24672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24671,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24676,
                  "src": "3192:13:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 24670,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3192:6:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3191:15:200"
            },
            "scope": 25600,
            "src": "3136:102:200",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 24684,
              "nodeType": "Block",
              "src": "3478:26:200",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 24682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3495:2:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 24681,
                  "id": 24683,
                  "nodeType": "Return",
                  "src": "3488:9:200"
                }
              ]
            },
            "documentation": {
              "id": 24677,
              "nodeType": "StructuredDocumentation",
              "src": "3244:173:200",
              "text": " @dev See {ERC20-decimals}.\n Always returns 18, as per the\n [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility)."
            },
            "functionSelector": "313ce567",
            "id": 24685,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3431:8:200",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3439:2:200"
            },
            "returnParameters": {
              "id": 24681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24680,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24685,
                  "src": "3471:5:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 24679,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3471:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3470:7:200"
            },
            "scope": 25600,
            "src": "3422:82:200",
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              25621
            ],
            "body": {
              "id": 24694,
              "nodeType": "Block",
              "src": "3689:25:200",
              "statements": [
                {
                  "expression": {
                    "hexValue": "31",
                    "id": 24692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3706:1:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "functionReturnParameters": 24691,
                  "id": 24693,
                  "nodeType": "Return",
                  "src": "3699:8:200"
                }
              ]
            },
            "documentation": {
              "id": 24686,
              "nodeType": "StructuredDocumentation",
              "src": "3510:104:200",
              "text": " @dev See {IERC777-granularity}.\n This implementation always returns `1`."
            },
            "functionSelector": "556f0dc7",
            "id": 24695,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "granularity",
            "nameLocation": "3628:11:200",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24688,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3662:8:200"
            },
            "parameters": {
              "id": 24687,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3639:2:200"
            },
            "returnParameters": {
              "id": 24691,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24690,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24695,
                  "src": "3680:7:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24689,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3680:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3679:9:200"
            },
            "scope": 25600,
            "src": "3619:95:200",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              20352,
              25627
            ],
            "body": {
              "id": 24706,
              "nodeType": "Block",
              "src": "3862:36:200",
              "statements": [
                {
                  "expression": {
                    "id": 24704,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24540,
                    "src": "3879:12:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 24703,
                  "id": 24705,
                  "nodeType": "Return",
                  "src": "3872:19:200"
                }
              ]
            },
            "documentation": {
              "id": 24696,
              "nodeType": "StructuredDocumentation",
              "src": "3720:50:200",
              "text": " @dev See {IERC777-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 24707,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3784:11:200",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24700,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 24698,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20421,
                  "src": "3827:6:200"
                },
                {
                  "id": 24699,
                  "name": "IERC777",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25759,
                  "src": "3835:7:200"
                }
              ],
              "src": "3818:25:200"
            },
            "parameters": {
              "id": 24697,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3795:2:200"
            },
            "returnParameters": {
              "id": 24703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24702,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24707,
                  "src": "3853:7:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24701,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3853:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3852:9:200"
            },
            "scope": 25600,
            "src": "3775:123:200",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              20360,
              25635
            ],
            "body": {
              "id": 24722,
              "nodeType": "Block",
              "src": "4102:46:200",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 24718,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24538,
                      "src": "4119:9:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 24720,
                    "indexExpression": {
                      "id": 24719,
                      "name": "tokenHolder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24710,
                      "src": "4129:11:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4119:22:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 24717,
                  "id": 24721,
                  "nodeType": "Return",
                  "src": "4112:29:200"
                }
              ]
            },
            "documentation": {
              "id": 24708,
              "nodeType": "StructuredDocumentation",
              "src": "3904:89:200",
              "text": " @dev Returns the amount of tokens owned by an account (`tokenHolder`)."
            },
            "functionSelector": "70a08231",
            "id": 24723,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "4007:9:200",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24714,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 24712,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20421,
                  "src": "4067:6:200"
                },
                {
                  "id": 24713,
                  "name": "IERC777",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 25759,
                  "src": "4075:7:200"
                }
              ],
              "src": "4058:25:200"
            },
            "parameters": {
              "id": 24711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24710,
                  "mutability": "mutable",
                  "name": "tokenHolder",
                  "nameLocation": "4025:11:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 24723,
                  "src": "4017:19:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24709,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4017:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4016:21:200"
            },
            "returnParameters": {
              "id": 24717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24716,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24723,
                  "src": "4093:7:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24715,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4093:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4092:9:200"
            },
            "scope": 25600,
            "src": "3998:150:200",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              25645
            ],
            "body": {
              "id": 24744,
              "nodeType": "Block",
              "src": "4400:71:200",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 24735,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26705,
                          "src": "4416:10:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 24736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4416:12:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24737,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24726,
                        "src": "4430:9:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24738,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24728,
                        "src": "4441:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24739,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24730,
                        "src": "4449:4:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 24740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4455:2:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4459:4:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24734,
                      "name": "_send",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25236,
                      "src": "4410:5:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 24742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4410:54:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24743,
                  "nodeType": "ExpressionStatement",
                  "src": "4410:54:200"
                }
              ]
            },
            "documentation": {
              "id": 24724,
              "nodeType": "StructuredDocumentation",
              "src": "4154:119:200",
              "text": " @dev See {IERC777-send}.\n Also emits a {IERC20-Transfer} event for ERC20 compatibility."
            },
            "functionSelector": "9bd9bbc6",
            "id": 24745,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "send",
            "nameLocation": "4287:4:200",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24732,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4391:8:200"
            },
            "parameters": {
              "id": 24731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24726,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4309:9:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 24745,
                  "src": "4301:17:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24725,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4301:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24728,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4336:6:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 24745,
                  "src": "4328:14:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24727,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4328:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24730,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4365:4:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 24745,
                  "src": "4352:17:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24729,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4352:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4291:84:200"
            },
            "returnParameters": {
              "id": 24733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4400:0:200"
            },
            "scope": 25600,
            "src": "4278:193:200",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              20370
            ],
            "body": {
              "id": 24768,
              "nodeType": "Block",
              "src": "4794:91:200",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 24757,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26705,
                          "src": "4810:10:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 24758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4810:12:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24759,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24748,
                        "src": "4824:9:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24760,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24750,
                        "src": "4835:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 24761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4843:2:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 24762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4847:2:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 24763,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4851:5:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24756,
                      "name": "_send",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25236,
                      "src": "4804:5:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 24764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4804:53:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24765,
                  "nodeType": "ExpressionStatement",
                  "src": "4804:53:200"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 24766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4874:4:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 24755,
                  "id": 24767,
                  "nodeType": "Return",
                  "src": "4867:11:200"
                }
              ]
            },
            "documentation": {
              "id": 24746,
              "nodeType": "StructuredDocumentation",
              "src": "4477:220:200",
              "text": " @dev See {IERC20-transfer}.\n Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient}\n interface if it is a contract.\n Also emits a {Sent} event."
            },
            "functionSelector": "a9059cbb",
            "id": 24769,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "4711:8:200",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24752,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4770:8:200"
            },
            "parameters": {
              "id": 24751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24748,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4728:9:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 24769,
                  "src": "4720:17:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4720:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24750,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4747:6:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 24769,
                  "src": "4739:14:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24749,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4739:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4719:35:200"
            },
            "returnParameters": {
              "id": 24755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24754,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24769,
                  "src": "4788:4:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24753,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4788:4:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4787:6:200"
            },
            "scope": 25600,
            "src": "4702:183:200",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              25653
            ],
            "body": {
              "id": 24786,
              "nodeType": "Block",
              "src": "5088:54:200",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 24779,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26705,
                          "src": "5104:10:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 24780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5104:12:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24781,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24772,
                        "src": "5118:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24782,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24774,
                        "src": "5126:4:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 24783,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5132:2:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 24778,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25329,
                      "src": "5098:5:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 24784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5098:37:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24785,
                  "nodeType": "ExpressionStatement",
                  "src": "5098:37:200"
                }
              ]
            },
            "documentation": {
              "id": 24770,
              "nodeType": "StructuredDocumentation",
              "src": "4891:119:200",
              "text": " @dev See {IERC777-burn}.\n Also emits a {IERC20-Transfer} event for ERC20 compatibility."
            },
            "functionSelector": "fe9d9303",
            "id": 24787,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "5024:4:200",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24776,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5079:8:200"
            },
            "parameters": {
              "id": 24775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24772,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5037:6:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 24787,
                  "src": "5029:14:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24771,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5029:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24774,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5058:4:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 24787,
                  "src": "5045:17:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24773,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5045:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5028:35:200"
            },
            "returnParameters": {
              "id": 24777,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5088:0:200"
            },
            "scope": 25600,
            "src": "5015:127:200",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              25663
            ],
            "body": {
              "id": 24820,
              "nodeType": "Block",
              "src": "5311:205:200",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 24818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 24812,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 24800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24798,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24790,
                          "src": "5340:8:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 24799,
                          "name": "tokenHolder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24792,
                          "src": "5352:11:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5340:23:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 24810,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 24801,
                                "name": "_defaultOperators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24561,
                                "src": "5380:17:200",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 24803,
                              "indexExpression": {
                                "id": 24802,
                                "name": "operator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24790,
                                "src": "5398:8:200",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5380:27:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "id": 24809,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "5411:48:200",
                              "subExpression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 24804,
                                    "name": "_revokedDefaultOperators",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24573,
                                    "src": "5412:24:200",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                      "typeString": "mapping(address => mapping(address => bool))"
                                    }
                                  },
                                  "id": 24806,
                                  "indexExpression": {
                                    "id": 24805,
                                    "name": "tokenHolder",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24792,
                                    "src": "5437:11:200",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5412:37:200",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 24808,
                                "indexExpression": {
                                  "id": 24807,
                                  "name": "operator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24790,
                                  "src": "5450:8:200",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5412:47:200",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5380:79:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "id": 24811,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "5379:81:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "5340:120:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 24813,
                          "name": "_operators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24567,
                          "src": "5476:10:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 24815,
                        "indexExpression": {
                          "id": 24814,
                          "name": "tokenHolder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24792,
                          "src": "5487:11:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5476:23:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 24817,
                      "indexExpression": {
                        "id": 24816,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24790,
                        "src": "5500:8:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5476:33:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5340:169:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 24797,
                  "id": 24819,
                  "nodeType": "Return",
                  "src": "5321:188:200"
                }
              ]
            },
            "documentation": {
              "id": 24788,
              "nodeType": "StructuredDocumentation",
              "src": "5148:52:200",
              "text": " @dev See {IERC777-isOperatorFor}."
            },
            "functionSelector": "d95b6371",
            "id": 24821,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOperatorFor",
            "nameLocation": "5214:13:200",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24794,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5287:8:200"
            },
            "parameters": {
              "id": 24793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24790,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5236:8:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 24821,
                  "src": "5228:16:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5228:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24792,
                  "mutability": "mutable",
                  "name": "tokenHolder",
                  "nameLocation": "5254:11:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 24821,
                  "src": "5246:19:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24791,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5246:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5227:39:200"
            },
            "returnParameters": {
              "id": 24797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24796,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24821,
                  "src": "5305:4:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24795,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5305:4:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5304:6:200"
            },
            "scope": 25600,
            "src": "5205:311:200",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              25669
            ],
            "body": {
              "id": 24865,
              "nodeType": "Block",
              "src": "5652:343:200",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 24832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24829,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26705,
                            "src": "5670:10:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 24830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5670:12:200",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 24831,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24824,
                          "src": "5686:8:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5670:24:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a20617574686f72697a696e672073656c66206173206f70657261746f72",
                        "id": 24833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5696:38:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c",
                          "typeString": "literal_string \"ERC777: authorizing self as operator\""
                        },
                        "value": "ERC777: authorizing self as operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4682b297c30e70ba17ae545f9c27f948e3607c0cc7dd469250dfcf8daa94218c",
                          "typeString": "literal_string \"ERC777: authorizing self as operator\""
                        }
                      ],
                      "id": 24828,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5662:7:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5662:73:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24835,
                  "nodeType": "ExpressionStatement",
                  "src": "5662:73:200"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 24836,
                      "name": "_defaultOperators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24561,
                      "src": "5750:17:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 24838,
                    "indexExpression": {
                      "id": 24837,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24824,
                      "src": "5768:8:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5750:27:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 24857,
                    "nodeType": "Block",
                    "src": "5865:66:200",
                    "statements": [
                      {
                        "expression": {
                          "id": 24855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 24848,
                                "name": "_operators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24567,
                                "src": "5879:10:200",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 24852,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 24849,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 26705,
                                  "src": "5890:10:200",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 24850,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5890:12:200",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5879:24:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 24853,
                            "indexExpression": {
                              "id": 24851,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24824,
                              "src": "5904:8:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5879:34:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 24854,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5916:4:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5879:41:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 24856,
                        "nodeType": "ExpressionStatement",
                        "src": "5879:41:200"
                      }
                    ]
                  },
                  "id": 24858,
                  "nodeType": "IfStatement",
                  "src": "5746:185:200",
                  "trueBody": {
                    "id": 24847,
                    "nodeType": "Block",
                    "src": "5779:80:200",
                    "statements": [
                      {
                        "expression": {
                          "id": 24845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "5793:55:200",
                          "subExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 24839,
                                "name": "_revokedDefaultOperators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24573,
                                "src": "5800:24:200",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 24842,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 24840,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 26705,
                                  "src": "5825:10:200",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 24841,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5825:12:200",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5800:38:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 24844,
                            "indexExpression": {
                              "id": 24843,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24824,
                              "src": "5839:8:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5800:48:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24846,
                        "nodeType": "ExpressionStatement",
                        "src": "5793:55:200"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 24860,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24824,
                        "src": "5965:8:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 24861,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26705,
                          "src": "5975:10:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 24862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5975:12:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24859,
                      "name": "AuthorizedOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25752,
                      "src": "5946:18:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 24863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5946:42:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24864,
                  "nodeType": "EmitStatement",
                  "src": "5941:47:200"
                }
              ]
            },
            "documentation": {
              "id": 24822,
              "nodeType": "StructuredDocumentation",
              "src": "5522:56:200",
              "text": " @dev See {IERC777-authorizeOperator}."
            },
            "functionSelector": "959b8c3f",
            "id": 24866,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "authorizeOperator",
            "nameLocation": "5592:17:200",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24826,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5643:8:200"
            },
            "parameters": {
              "id": 24825,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24824,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5618:8:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 24866,
                  "src": "5610:16:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24823,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5610:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5609:18:200"
            },
            "returnParameters": {
              "id": 24827,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5652:0:200"
            },
            "scope": 25600,
            "src": "5583:412:200",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              25675
            ],
            "body": {
              "id": 24910,
              "nodeType": "Block",
              "src": "6125:337:200",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 24877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 24874,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24869,
                          "src": "6143:8:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24875,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 26705,
                            "src": "6155:10:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 24876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6155:12:200",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6143:24:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207265766f6b696e672073656c66206173206f70657261746f72",
                        "id": 24878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6169:35:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5",
                          "typeString": "literal_string \"ERC777: revoking self as operator\""
                        },
                        "value": "ERC777: revoking self as operator"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_67ce503bd3a359eb530c6f3a909afa9e71899e0352d883198e721fd5fceefab5",
                          "typeString": "literal_string \"ERC777: revoking self as operator\""
                        }
                      ],
                      "id": 24873,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6135:7:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6135:70:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24880,
                  "nodeType": "ExpressionStatement",
                  "src": "6135:70:200"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 24881,
                      "name": "_defaultOperators",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24561,
                      "src": "6220:17:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 24883,
                    "indexExpression": {
                      "id": 24882,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24869,
                      "src": "6238:8:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6220:27:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 24902,
                    "nodeType": "Block",
                    "src": "6335:66:200",
                    "statements": [
                      {
                        "expression": {
                          "id": 24900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "6349:41:200",
                          "subExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 24894,
                                "name": "_operators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24567,
                                "src": "6356:10:200",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 24897,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 24895,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 26705,
                                  "src": "6367:10:200",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 24896,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6367:12:200",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6356:24:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 24899,
                            "indexExpression": {
                              "id": 24898,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24869,
                              "src": "6381:8:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6356:34:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24901,
                        "nodeType": "ExpressionStatement",
                        "src": "6349:41:200"
                      }
                    ]
                  },
                  "id": 24903,
                  "nodeType": "IfStatement",
                  "src": "6216:185:200",
                  "trueBody": {
                    "id": 24893,
                    "nodeType": "Block",
                    "src": "6249:80:200",
                    "statements": [
                      {
                        "expression": {
                          "id": 24891,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 24884,
                                "name": "_revokedDefaultOperators",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24573,
                                "src": "6263:24:200",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                                  "typeString": "mapping(address => mapping(address => bool))"
                                }
                              },
                              "id": 24888,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 24885,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 26705,
                                  "src": "6288:10:200",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 24886,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6288:12:200",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6263:38:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 24889,
                            "indexExpression": {
                              "id": 24887,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24869,
                              "src": "6302:8:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6263:48:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 24890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6314:4:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "6263:55:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 24892,
                        "nodeType": "ExpressionStatement",
                        "src": "6263:55:200"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 24905,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24869,
                        "src": "6432:8:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 24906,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26705,
                          "src": "6442:10:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 24907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6442:12:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24904,
                      "name": "RevokedOperator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25758,
                      "src": "6416:15:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 24908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6416:39:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24909,
                  "nodeType": "EmitStatement",
                  "src": "6411:44:200"
                }
              ]
            },
            "documentation": {
              "id": 24867,
              "nodeType": "StructuredDocumentation",
              "src": "6001:53:200",
              "text": " @dev See {IERC777-revokeOperator}."
            },
            "functionSelector": "fad8b32a",
            "id": 24911,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revokeOperator",
            "nameLocation": "6068:14:200",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24871,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6116:8:200"
            },
            "parameters": {
              "id": 24870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24869,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6091:8:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 24911,
                  "src": "6083:16:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24868,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6083:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6082:18:200"
            },
            "returnParameters": {
              "id": 24872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6125:0:200"
            },
            "scope": 25600,
            "src": "6059:403:200",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              25682
            ],
            "body": {
              "id": 24921,
              "nodeType": "Block",
              "src": "6612:46:200",
              "statements": [
                {
                  "expression": {
                    "id": 24919,
                    "name": "_defaultOperatorsArray",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24557,
                    "src": "6629:22:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 24918,
                  "id": 24920,
                  "nodeType": "Return",
                  "src": "6622:29:200"
                }
              ]
            },
            "documentation": {
              "id": 24912,
              "nodeType": "StructuredDocumentation",
              "src": "6468:55:200",
              "text": " @dev See {IERC777-defaultOperators}."
            },
            "functionSelector": "06e48538",
            "id": 24922,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "defaultOperators",
            "nameLocation": "6537:16:200",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24914,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6576:8:200"
            },
            "parameters": {
              "id": 24913,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6553:2:200"
            },
            "returnParameters": {
              "id": 24918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24917,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24922,
                  "src": "6594:16:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24915,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "6594:7:200",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24916,
                    "nodeType": "ArrayTypeName",
                    "src": "6594:9:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6593:18:200"
            },
            "scope": 25600,
            "src": "6528:130:200",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              25696
            ],
            "body": {
              "id": 24955,
              "nodeType": "Block",
              "src": "6966:177:200",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 24939,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26705,
                              "src": "6998:10:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 24940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6998:12:200",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 24941,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24925,
                            "src": "7012:6:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24938,
                          "name": "isOperatorFor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24821,
                          "src": "6984:13:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 24942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6984:35:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f7220666f7220686f6c646572",
                        "id": 24943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7021:46:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
                          "typeString": "literal_string \"ERC777: caller is not an operator for holder\""
                        },
                        "value": "ERC777: caller is not an operator for holder"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
                          "typeString": "literal_string \"ERC777: caller is not an operator for holder\""
                        }
                      ],
                      "id": 24937,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6976:7:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6976:92:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24945,
                  "nodeType": "ExpressionStatement",
                  "src": "6976:92:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24947,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24925,
                        "src": "7084:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24948,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24927,
                        "src": "7092:9:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24949,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24929,
                        "src": "7103:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24950,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24931,
                        "src": "7111:4:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 24951,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24933,
                        "src": "7117:12:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 24952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7131:4:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24946,
                      "name": "_send",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25236,
                      "src": "7078:5:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 24953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7078:58:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24954,
                  "nodeType": "ExpressionStatement",
                  "src": "7078:58:200"
                }
              ]
            },
            "documentation": {
              "id": 24923,
              "nodeType": "StructuredDocumentation",
              "src": "6664:108:200",
              "text": " @dev See {IERC777-operatorSend}.\n Emits {Sent} and {IERC20-Transfer} events."
            },
            "functionSelector": "62ad1b83",
            "id": 24956,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "operatorSend",
            "nameLocation": "6786:12:200",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24935,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6957:8:200"
            },
            "parameters": {
              "id": 24934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24925,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "6816:6:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 24956,
                  "src": "6808:14:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24924,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6808:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24927,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "6840:9:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 24956,
                  "src": "6832:17:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24926,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6832:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24929,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6867:6:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 24956,
                  "src": "6859:14:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24928,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6859:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24931,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "6896:4:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 24956,
                  "src": "6883:17:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24930,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6883:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24933,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "6923:12:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 24956,
                  "src": "6910:25:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24932,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6910:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6798:143:200"
            },
            "returnParameters": {
              "id": 24936,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6966:0:200"
            },
            "scope": 25600,
            "src": "6777:366:200",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              25708
            ],
            "body": {
              "id": 24985,
              "nodeType": "Block",
              "src": "7427:162:200",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 24971,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26705,
                              "src": "7459:10:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 24972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7459:12:200",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 24973,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24959,
                            "src": "7473:7:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 24970,
                          "name": "isOperatorFor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24821,
                          "src": "7445:13:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address,address) view returns (bool)"
                          }
                        },
                        "id": 24974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7445:36:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f7220666f7220686f6c646572",
                        "id": 24975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7483:46:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
                          "typeString": "literal_string \"ERC777: caller is not an operator for holder\""
                        },
                        "value": "ERC777: caller is not an operator for holder"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e912496dc7a0050c7f3e14272d4929a90a242e3fdaef730410cdf35f965235",
                          "typeString": "literal_string \"ERC777: caller is not an operator for holder\""
                        }
                      ],
                      "id": 24969,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7437:7:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7437:93:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24977,
                  "nodeType": "ExpressionStatement",
                  "src": "7437:93:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24979,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24959,
                        "src": "7546:7:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24980,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24961,
                        "src": "7555:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24981,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24963,
                        "src": "7563:4:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 24982,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24965,
                        "src": "7569:12:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 24978,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25329,
                      "src": "7540:5:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 24983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7540:42:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24984,
                  "nodeType": "ExpressionStatement",
                  "src": "7540:42:200"
                }
              ]
            },
            "documentation": {
              "id": 24957,
              "nodeType": "StructuredDocumentation",
              "src": "7149:110:200",
              "text": " @dev See {IERC777-operatorBurn}.\n Emits {Burned} and {IERC20-Transfer} events."
            },
            "functionSelector": "fc673c4f",
            "id": 24986,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "operatorBurn",
            "nameLocation": "7273:12:200",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24967,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7418:8:200"
            },
            "parameters": {
              "id": 24966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24959,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7303:7:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 24986,
                  "src": "7295:15:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7295:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24961,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7328:6:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 24986,
                  "src": "7320:14:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7320:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24963,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "7357:4:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 24986,
                  "src": "7344:17:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24962,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7344:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24965,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "7384:12:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 24986,
                  "src": "7371:25:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 24964,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7371:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7285:117:200"
            },
            "returnParameters": {
              "id": 24968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7427:0:200"
            },
            "scope": 25600,
            "src": "7264:325:200",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              20380
            ],
            "body": {
              "id": 25003,
              "nodeType": "Block",
              "src": "7927:52:200",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 24997,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24579,
                        "src": "7944:11:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 24999,
                      "indexExpression": {
                        "id": 24998,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24989,
                        "src": "7956:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7944:19:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 25001,
                    "indexExpression": {
                      "id": 25000,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24991,
                      "src": "7964:7:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7944:28:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 24996,
                  "id": 25002,
                  "nodeType": "Return",
                  "src": "7937:35:200"
                }
              ]
            },
            "documentation": {
              "id": 24987,
              "nodeType": "StructuredDocumentation",
              "src": "7595:228:200",
              "text": " @dev See {IERC20-allowance}.\n Note that operator and allowance concepts are orthogonal: operators may\n not have allowance, and accounts with allowance may not be operators\n themselves."
            },
            "functionSelector": "dd62ed3e",
            "id": 25004,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "7837:9:200",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 24993,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7900:8:200"
            },
            "parameters": {
              "id": 24992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24989,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "7855:6:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25004,
                  "src": "7847:14:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7847:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24991,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7871:7:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25004,
                  "src": "7863:15:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24990,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7863:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7846:33:200"
            },
            "returnParameters": {
              "id": 24996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24995,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25004,
                  "src": "7918:7:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24994,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7918:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7917:9:200"
            },
            "scope": 25600,
            "src": "7828:151:200",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              20390
            ],
            "body": {
              "id": 25028,
              "nodeType": "Block",
              "src": "8374:109:200",
              "statements": [
                {
                  "assignments": [
                    25016
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25016,
                      "mutability": "mutable",
                      "name": "holder",
                      "nameLocation": "8392:6:200",
                      "nodeType": "VariableDeclaration",
                      "scope": 25028,
                      "src": "8384:14:200",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 25015,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8384:7:200",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25019,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 25017,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26705,
                      "src": "8401:10:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 25018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8401:12:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8384:29:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25021,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25016,
                        "src": "8432:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25022,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25007,
                        "src": "8440:7:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25023,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25009,
                        "src": "8449:5:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25020,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25440,
                      "src": "8423:8:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 25024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8423:32:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25025,
                  "nodeType": "ExpressionStatement",
                  "src": "8423:32:200"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 25026,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "8472:4:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 25014,
                  "id": 25027,
                  "nodeType": "Return",
                  "src": "8465:11:200"
                }
              ]
            },
            "documentation": {
              "id": 25005,
              "nodeType": "StructuredDocumentation",
              "src": "7985:296:200",
              "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Note that accounts cannot have allowance issued by their operators."
            },
            "functionSelector": "095ea7b3",
            "id": 25029,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "8295:7:200",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 25011,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8350:8:200"
            },
            "parameters": {
              "id": 25010,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25007,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "8311:7:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25029,
                  "src": "8303:15:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25006,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8303:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25009,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "8328:5:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25029,
                  "src": "8320:13:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25008,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8320:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8302:32:200"
            },
            "returnParameters": {
              "id": 25014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25013,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25029,
                  "src": "8368:4:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25012,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8368:4:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8367:6:200"
            },
            "scope": 25600,
            "src": "8286:197:200",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              20402
            ],
            "body": {
              "id": 25064,
              "nodeType": "Block",
              "src": "9107:175:200",
              "statements": [
                {
                  "assignments": [
                    25043
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25043,
                      "mutability": "mutable",
                      "name": "spender",
                      "nameLocation": "9125:7:200",
                      "nodeType": "VariableDeclaration",
                      "scope": 25064,
                      "src": "9117:15:200",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 25042,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9117:7:200",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25046,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 25044,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26705,
                      "src": "9135:10:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 25045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9135:12:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9117:30:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25048,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25032,
                        "src": "9173:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25049,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25043,
                        "src": "9181:7:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25050,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25036,
                        "src": "9190:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25047,
                      "name": "_spendAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25586,
                      "src": "9157:15:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 25051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9157:40:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25052,
                  "nodeType": "ExpressionStatement",
                  "src": "9157:40:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25054,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25032,
                        "src": "9213:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25055,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25034,
                        "src": "9221:9:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25056,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25036,
                        "src": "9232:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 25057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9240:2:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "",
                        "id": 25058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9244:2:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 25059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9248:5:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25053,
                      "name": "_send",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25236,
                      "src": "9207:5:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 25060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9207:47:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25061,
                  "nodeType": "ExpressionStatement",
                  "src": "9207:47:200"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 25062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9271:4:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 25041,
                  "id": 25063,
                  "nodeType": "Return",
                  "src": "9264:11:200"
                }
              ]
            },
            "documentation": {
              "id": 25030,
              "nodeType": "StructuredDocumentation",
              "src": "8489:471:200",
              "text": " @dev See {IERC20-transferFrom}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Note that operator and allowance concepts are orthogonal: operators cannot\n call `transferFrom` (unless they have allowance), and accounts with\n allowance cannot call `operatorSend` (unless they are operators).\n Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events."
            },
            "functionSelector": "23b872dd",
            "id": 25065,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "8974:12:200",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 25038,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9083:8:200"
            },
            "parameters": {
              "id": 25037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25032,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "9004:6:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25065,
                  "src": "8996:14:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25031,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8996:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25034,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "9028:9:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25065,
                  "src": "9020:17:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25033,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9020:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25036,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9055:6:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25065,
                  "src": "9047:14:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25035,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9047:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8986:81:200"
            },
            "returnParameters": {
              "id": 25041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25040,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25065,
                  "src": "9101:4:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25039,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9101:4:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9100:6:200"
            },
            "scope": 25600,
            "src": "8965:317:200",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 25085,
              "nodeType": "Block",
              "src": "10005:69:200",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25078,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25068,
                        "src": "10021:7:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25079,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25070,
                        "src": "10030:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25080,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25072,
                        "src": "10038:8:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 25081,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25074,
                        "src": "10048:12:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 25082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10062:4:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25077,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        25086,
                        25166
                      ],
                      "referencedDeclaration": 25166,
                      "src": "10015:5:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 25083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10015:52:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25084,
                  "nodeType": "ExpressionStatement",
                  "src": "10015:52:200"
                }
              ]
            },
            "documentation": {
              "id": 25066,
              "nodeType": "StructuredDocumentation",
              "src": "9288:559:200",
              "text": " @dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n If a send hook is registered for `account`, the corresponding function\n will be called with `operator`, `data` and `operatorData`.\n See {IERC777Sender} and {IERC777Recipient}.\n Emits {Minted} and {IERC20-Transfer} events.\n Requirements\n - `account` cannot be the zero address.\n - if `account` is a contract, it must implement the {IERC777Recipient}\n interface."
            },
            "id": 25086,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "9861:5:200",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25068,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9884:7:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25086,
                  "src": "9876:15:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9876:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25070,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9909:6:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25086,
                  "src": "9901:14:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9901:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25072,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "9938:8:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25086,
                  "src": "9925:21:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25071,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9925:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25074,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "9969:12:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25086,
                  "src": "9956:25:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25073,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9956:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9866:121:200"
            },
            "returnParameters": {
              "id": 25076,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10005:0:200"
            },
            "scope": 25600,
            "src": "9852:222:200",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 25165,
              "nodeType": "Block",
              "src": "10883:539:200",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25101,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25089,
                          "src": "10901:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10920:1:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25103,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10912:7:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25102,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10912:7:200",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10912:10:200",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10901:21:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 25107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10924:34:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ce4f759423d0a519cbdf8529f47ad13e03ab9baec6702bc39e1fd5147c7e080",
                          "typeString": "literal_string \"ERC777: mint to the zero address\""
                        },
                        "value": "ERC777: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ce4f759423d0a519cbdf8529f47ad13e03ab9baec6702bc39e1fd5147c7e080",
                          "typeString": "literal_string \"ERC777: mint to the zero address\""
                        }
                      ],
                      "id": 25100,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10893:7:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10893:66:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25109,
                  "nodeType": "ExpressionStatement",
                  "src": "10893:66:200"
                },
                {
                  "assignments": [
                    25111
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25111,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "10978:8:200",
                      "nodeType": "VariableDeclaration",
                      "scope": 25165,
                      "src": "10970:16:200",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 25110,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10970:7:200",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25114,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 25112,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26705,
                      "src": "10989:10:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 25113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10989:12:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10970:31:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25116,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25111,
                        "src": "11033:8:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 25119,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11051:1:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 25118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11043:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25117,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11043:7:200",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11043:10:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25121,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25089,
                        "src": "11055:7:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25122,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25091,
                        "src": "11064:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25115,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25599,
                      "src": "11012:20:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 25123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11012:59:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25124,
                  "nodeType": "ExpressionStatement",
                  "src": "11012:59:200"
                },
                {
                  "expression": {
                    "id": 25127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25125,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24540,
                      "src": "11116:12:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 25126,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25091,
                      "src": "11132:6:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11116:22:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25128,
                  "nodeType": "ExpressionStatement",
                  "src": "11116:22:200"
                },
                {
                  "expression": {
                    "id": 25133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25129,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24538,
                        "src": "11148:9:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 25131,
                      "indexExpression": {
                        "id": 25130,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25089,
                        "src": "11158:7:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11148:18:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 25132,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25091,
                      "src": "11170:6:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11148:28:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25134,
                  "nodeType": "ExpressionStatement",
                  "src": "11148:28:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25136,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25111,
                        "src": "11207:8:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 25139,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11225:1:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 25138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11217:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25137,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11217:7:200",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11217:10:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25141,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25089,
                        "src": "11229:7:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25142,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25091,
                        "src": "11238:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25143,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25093,
                        "src": "11246:8:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 25144,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25095,
                        "src": "11256:12:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 25145,
                        "name": "requireReceptionAck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25097,
                        "src": "11270:19:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25135,
                      "name": "_callTokensReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25543,
                      "src": "11187:19:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 25146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11187:103:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25147,
                  "nodeType": "ExpressionStatement",
                  "src": "11187:103:200"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25149,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25111,
                        "src": "11313:8:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25150,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25089,
                        "src": "11323:7:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25151,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25091,
                        "src": "11332:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25152,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25093,
                        "src": "11340:8:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 25153,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25095,
                        "src": "11350:12:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 25148,
                      "name": "Minted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25734,
                      "src": "11306:6:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 25154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11306:57:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25155,
                  "nodeType": "EmitStatement",
                  "src": "11301:62:200"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 25159,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11395:1:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 25158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11387:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25157,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11387:7:200",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11387:10:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25161,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25089,
                        "src": "11399:7:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25162,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25091,
                        "src": "11408:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25156,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20411,
                      "src": "11378:8:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 25163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11378:37:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25164,
                  "nodeType": "EmitStatement",
                  "src": "11373:42:200"
                }
              ]
            },
            "documentation": {
              "id": 25087,
              "nodeType": "StructuredDocumentation",
              "src": "10080:611:200",
              "text": " @dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n If `requireReceptionAck` is set to true, and if a send hook is\n registered for `account`, the corresponding function will be called with\n `operator`, `data` and `operatorData`.\n See {IERC777Sender} and {IERC777Recipient}.\n Emits {Minted} and {IERC20-Transfer} events.\n Requirements\n - `account` cannot be the zero address.\n - if `account` is a contract, it must implement the {IERC777Recipient}\n interface."
            },
            "id": 25166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "10705:5:200",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25089,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10728:7:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25166,
                  "src": "10720:15:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25088,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10720:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25091,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10753:6:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25166,
                  "src": "10745:14:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25090,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10745:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25093,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "10782:8:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25166,
                  "src": "10769:21:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25092,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10769:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25095,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "10813:12:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25166,
                  "src": "10800:25:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25094,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10800:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25097,
                  "mutability": "mutable",
                  "name": "requireReceptionAck",
                  "nameLocation": "10840:19:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25166,
                  "src": "10835:24:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25096,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10835:4:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10710:155:200"
            },
            "returnParameters": {
              "id": 25099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10883:0:200"
            },
            "scope": 25600,
            "src": "10696:726:200",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 25235,
              "nodeType": "Block",
              "src": "12102:454:200",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25183,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25169,
                          "src": "12120:4:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12136:1:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25185,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12128:7:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25184,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12128:7:200",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12128:10:200",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12120:18:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 25189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12140:40:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a",
                          "typeString": "literal_string \"ERC777: transfer from the zero address\""
                        },
                        "value": "ERC777: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e354b0408f2a1e89707ec9f6aaa5427ceb97704ace0785924c7421e8f577dc7a",
                          "typeString": "literal_string \"ERC777: transfer from the zero address\""
                        }
                      ],
                      "id": 25182,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12112:7:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12112:69:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25191,
                  "nodeType": "ExpressionStatement",
                  "src": "12112:69:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25193,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25171,
                          "src": "12199:2:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12213:1:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25195,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12205:7:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25194,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12205:7:200",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12205:10:200",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12199:16:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 25199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12217:38:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
                          "typeString": "literal_string \"ERC777: transfer to the zero address\""
                        },
                        "value": "ERC777: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad1e0a820fe2a50167f341463ad5f6754fad4cf77d809141bc408c516e69c59a",
                          "typeString": "literal_string \"ERC777: transfer to the zero address\""
                        }
                      ],
                      "id": 25192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12191:7:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12191:65:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25201,
                  "nodeType": "ExpressionStatement",
                  "src": "12191:65:200"
                },
                {
                  "assignments": [
                    25203
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25203,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "12275:8:200",
                      "nodeType": "VariableDeclaration",
                      "scope": 25235,
                      "src": "12267:16:200",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 25202,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "12267:7:200",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25206,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 25204,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26705,
                      "src": "12286:10:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 25205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12286:12:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12267:31:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25208,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25203,
                        "src": "12327:8:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25209,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25169,
                        "src": "12337:4:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25210,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25171,
                        "src": "12343:2:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25211,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25173,
                        "src": "12347:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25212,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25175,
                        "src": "12355:8:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 25213,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25177,
                        "src": "12365:12:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 25207,
                      "name": "_callTokensToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25485,
                      "src": "12309:17:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 25214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12309:69:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25215,
                  "nodeType": "ExpressionStatement",
                  "src": "12309:69:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25217,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25203,
                        "src": "12395:8:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25218,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25169,
                        "src": "12405:4:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25219,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25171,
                        "src": "12411:2:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25220,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25173,
                        "src": "12415:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25221,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25175,
                        "src": "12423:8:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 25222,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25177,
                        "src": "12433:12:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 25216,
                      "name": "_move",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25395,
                      "src": "12389:5:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 25223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12389:57:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25224,
                  "nodeType": "ExpressionStatement",
                  "src": "12389:57:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25226,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25203,
                        "src": "12477:8:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25227,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25169,
                        "src": "12487:4:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25228,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25171,
                        "src": "12493:2:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25229,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25173,
                        "src": "12497:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25230,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25175,
                        "src": "12505:8:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 25231,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25177,
                        "src": "12515:12:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 25232,
                        "name": "requireReceptionAck",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25179,
                        "src": "12529:19:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25225,
                      "name": "_callTokensReceived",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25543,
                      "src": "12457:19:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,bool)"
                      }
                    },
                    "id": 25233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12457:92:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25234,
                  "nodeType": "ExpressionStatement",
                  "src": "12457:92:200"
                }
              ]
            },
            "documentation": {
              "id": 25167,
              "nodeType": "StructuredDocumentation",
              "src": "11428:465:200",
              "text": " @dev Send tokens\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)\n @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient"
            },
            "id": 25236,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_send",
            "nameLocation": "11907:5:200",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25169,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11930:4:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25236,
                  "src": "11922:12:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11922:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25171,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11952:2:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25236,
                  "src": "11944:10:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11944:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25173,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11972:6:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25236,
                  "src": "11964:14:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11964:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25175,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "12001:8:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25236,
                  "src": "11988:21:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25174,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11988:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25177,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "12032:12:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25236,
                  "src": "12019:25:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25176,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12019:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25179,
                  "mutability": "mutable",
                  "name": "requireReceptionAck",
                  "nameLocation": "12059:19:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25236,
                  "src": "12054:24:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25178,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12054:4:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11912:172:200"
            },
            "returnParameters": {
              "id": 25181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12102:0:200"
            },
            "scope": 25600,
            "src": "11898:658:200",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 25328,
              "nodeType": "Block",
              "src": "13007:665:200",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25249,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25239,
                          "src": "13025:4:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25252,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13041:1:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13033:7:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25250,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13033:7:200",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13033:10:200",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13025:18:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 25255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13045:36:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c",
                          "typeString": "literal_string \"ERC777: burn from the zero address\""
                        },
                        "value": "ERC777: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_37e8d125f24ef45023ef8033e82467f588cec434263b3a6b98bcdb3eca4b768c",
                          "typeString": "literal_string \"ERC777: burn from the zero address\""
                        }
                      ],
                      "id": 25248,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13017:7:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13017:65:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25257,
                  "nodeType": "ExpressionStatement",
                  "src": "13017:65:200"
                },
                {
                  "assignments": [
                    25259
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25259,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "13101:8:200",
                      "nodeType": "VariableDeclaration",
                      "scope": 25328,
                      "src": "13093:16:200",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 25258,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "13093:7:200",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25262,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 25260,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26705,
                      "src": "13112:10:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 25261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13112:12:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13093:31:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25264,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25259,
                        "src": "13153:8:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25265,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25239,
                        "src": "13163:4:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 25268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13177:1:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 25267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13169:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25266,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13169:7:200",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13169:10:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25270,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25241,
                        "src": "13181:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25271,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25243,
                        "src": "13189:4:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 25272,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25245,
                        "src": "13195:12:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 25263,
                      "name": "_callTokensToSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25485,
                      "src": "13135:17:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 25273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13135:73:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25274,
                  "nodeType": "ExpressionStatement",
                  "src": "13135:73:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25276,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25259,
                        "src": "13240:8:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25277,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25239,
                        "src": "13250:4:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 25280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13264:1:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 25279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13256:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25278,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13256:7:200",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13256:10:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25282,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25241,
                        "src": "13268:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25275,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25599,
                      "src": "13219:20:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 25283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13219:56:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25284,
                  "nodeType": "ExpressionStatement",
                  "src": "13219:56:200"
                },
                {
                  "assignments": [
                    25286
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25286,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "13328:11:200",
                      "nodeType": "VariableDeclaration",
                      "scope": 25328,
                      "src": "13320:19:200",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25285,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13320:7:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25290,
                  "initialValue": {
                    "baseExpression": {
                      "id": 25287,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24538,
                      "src": "13342:9:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 25289,
                    "indexExpression": {
                      "id": 25288,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25239,
                      "src": "13352:4:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13342:15:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13320:37:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25292,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25286,
                          "src": "13375:11:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 25293,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25241,
                          "src": "13390:6:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13375:21:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 25295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13398:37:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe",
                          "typeString": "literal_string \"ERC777: burn amount exceeds balance\""
                        },
                        "value": "ERC777: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ecdeb627d2306b8b9bb34685df56bbf05cde6b7bc6e45e0248ca50c1b0bd3ebe",
                          "typeString": "literal_string \"ERC777: burn amount exceeds balance\""
                        }
                      ],
                      "id": 25291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13367:7:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13367:69:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25297,
                  "nodeType": "ExpressionStatement",
                  "src": "13367:69:200"
                },
                {
                  "id": 25306,
                  "nodeType": "UncheckedBlock",
                  "src": "13446:73:200",
                  "statements": [
                    {
                      "expression": {
                        "id": 25304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 25298,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24538,
                            "src": "13470:9:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 25300,
                          "indexExpression": {
                            "id": 25299,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25239,
                            "src": "13480:4:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "13470:15:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 25303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 25301,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25286,
                            "src": "13488:11:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 25302,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25241,
                            "src": "13502:6:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13488:20:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13470:38:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 25305,
                      "nodeType": "ExpressionStatement",
                      "src": "13470:38:200"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 25309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25307,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24540,
                      "src": "13528:12:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 25308,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25241,
                      "src": "13544:6:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13528:22:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25310,
                  "nodeType": "ExpressionStatement",
                  "src": "13528:22:200"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25312,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25259,
                        "src": "13573:8:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25313,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25239,
                        "src": "13583:4:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25314,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25241,
                        "src": "13589:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25315,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25243,
                        "src": "13597:4:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 25316,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25245,
                        "src": "13603:12:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 25311,
                      "name": "Burned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25746,
                      "src": "13566:6:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 25317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13566:50:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25318,
                  "nodeType": "EmitStatement",
                  "src": "13561:55:200"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25320,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25239,
                        "src": "13640:4:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 25323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13654:1:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 25322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13646:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25321,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13646:7:200",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13646:10:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25325,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25241,
                        "src": "13658:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25319,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20411,
                      "src": "13631:8:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 25326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13631:34:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25327,
                  "nodeType": "EmitStatement",
                  "src": "13626:39:200"
                }
              ]
            },
            "documentation": {
              "id": 25237,
              "nodeType": "StructuredDocumentation",
              "src": "12562:294:200",
              "text": " @dev Burn tokens\n @param from address token holder address\n @param amount uint256 amount of tokens to burn\n @param data bytes extra information provided by the token holder\n @param operatorData bytes extra information provided by the operator (if any)"
            },
            "id": 25329,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "12870:5:200",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25239,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12893:4:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25329,
                  "src": "12885:12:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25238,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12885:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25241,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12915:6:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25329,
                  "src": "12907:14:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25240,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12907:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25243,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "12944:4:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25329,
                  "src": "12931:17:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25242,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12931:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25245,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "12971:12:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25329,
                  "src": "12958:25:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25244,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12958:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12875:114:200"
            },
            "returnParameters": {
              "id": 25247,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13007:0:200"
            },
            "scope": 25600,
            "src": "12861:811:200",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 25394,
              "nodeType": "Block",
              "src": "13865:424:200",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25345,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25331,
                        "src": "13896:8:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25346,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25333,
                        "src": "13906:4:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25347,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25335,
                        "src": "13912:2:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25348,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25337,
                        "src": "13916:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25344,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25599,
                      "src": "13875:20:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 25349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13875:48:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25350,
                  "nodeType": "ExpressionStatement",
                  "src": "13875:48:200"
                },
                {
                  "assignments": [
                    25352
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25352,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "13942:11:200",
                      "nodeType": "VariableDeclaration",
                      "scope": 25394,
                      "src": "13934:19:200",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25351,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "13934:7:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25356,
                  "initialValue": {
                    "baseExpression": {
                      "id": 25353,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24538,
                      "src": "13956:9:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 25355,
                    "indexExpression": {
                      "id": 25354,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25333,
                      "src": "13966:4:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "13956:15:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13934:37:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25358,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25352,
                          "src": "13989:11:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 25359,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25337,
                          "src": "14004:6:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13989:21:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 25361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14012:41:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b",
                          "typeString": "literal_string \"ERC777: transfer amount exceeds balance\""
                        },
                        "value": "ERC777: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f1c21f7056055b190ca6c77528b11af9437bed324def87929bb64fac4d57e6b",
                          "typeString": "literal_string \"ERC777: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 25357,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13981:7:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13981:73:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25363,
                  "nodeType": "ExpressionStatement",
                  "src": "13981:73:200"
                },
                {
                  "id": 25372,
                  "nodeType": "UncheckedBlock",
                  "src": "14064:73:200",
                  "statements": [
                    {
                      "expression": {
                        "id": 25370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 25364,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24538,
                            "src": "14088:9:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 25366,
                          "indexExpression": {
                            "id": 25365,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25333,
                            "src": "14098:4:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "14088:15:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 25369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 25367,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25352,
                            "src": "14106:11:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 25368,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25337,
                            "src": "14120:6:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14106:20:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14088:38:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 25371,
                      "nodeType": "ExpressionStatement",
                      "src": "14088:38:200"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 25377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 25373,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24538,
                        "src": "14146:9:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 25375,
                      "indexExpression": {
                        "id": 25374,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25335,
                        "src": "14156:2:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14146:13:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 25376,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25337,
                      "src": "14163:6:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14146:23:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25378,
                  "nodeType": "ExpressionStatement",
                  "src": "14146:23:200"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25380,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25331,
                        "src": "14190:8:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25381,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25333,
                        "src": "14200:4:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25382,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25335,
                        "src": "14206:2:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25383,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25337,
                        "src": "14210:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25384,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25339,
                        "src": "14218:8:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 25385,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25341,
                        "src": "14228:12:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 25379,
                      "name": "Sent",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25722,
                      "src": "14185:4:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory)"
                      }
                    },
                    "id": 25386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14185:56:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25387,
                  "nodeType": "EmitStatement",
                  "src": "14180:61:200"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25389,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25333,
                        "src": "14265:4:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25390,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25335,
                        "src": "14271:2:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25391,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25337,
                        "src": "14275:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25388,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20411,
                      "src": "14256:8:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 25392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14256:26:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25393,
                  "nodeType": "EmitStatement",
                  "src": "14251:31:200"
                }
              ]
            },
            "id": 25395,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_move",
            "nameLocation": "13687:5:200",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25331,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "13710:8:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25395,
                  "src": "13702:16:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13702:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25333,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13736:4:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25395,
                  "src": "13728:12:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25332,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13728:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25335,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13758:2:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25395,
                  "src": "13750:10:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25334,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13750:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25337,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13778:6:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25395,
                  "src": "13770:14:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25336,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13770:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25339,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "13807:8:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25395,
                  "src": "13794:21:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25338,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13794:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25341,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "13838:12:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25395,
                  "src": "13825:25:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25340,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13825:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13692:164:200"
            },
            "returnParameters": {
              "id": 25343,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13865:0:200"
            },
            "scope": 25600,
            "src": "13678:611:200",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 25439,
              "nodeType": "Block",
              "src": "14540:260:200",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25406,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25398,
                          "src": "14558:6:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14576:1:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14568:7:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25407,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14568:7:200",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14568:10:200",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14558:20:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 25412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14580:39:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7",
                          "typeString": "literal_string \"ERC777: approve from the zero address\""
                        },
                        "value": "ERC777: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0e27915827f7e9aa1f9e706fa48897705bd51fdbb8c4e17f0dcc074873455ca7",
                          "typeString": "literal_string \"ERC777: approve from the zero address\""
                        }
                      ],
                      "id": 25405,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14550:7:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14550:70:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25414,
                  "nodeType": "ExpressionStatement",
                  "src": "14550:70:200"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 25421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25416,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25400,
                          "src": "14638:7:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 25419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14657:1:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 25418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14649:7:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25417,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14649:7:200",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14649:10:200",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14638:21:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433737373a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 25422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14661:37:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d",
                          "typeString": "literal_string \"ERC777: approve to the zero address\""
                        },
                        "value": "ERC777: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f96aab14690ac2986315360e71dcbe877ff7fb69d13c692db6f39f8c2c01f20d",
                          "typeString": "literal_string \"ERC777: approve to the zero address\""
                        }
                      ],
                      "id": 25415,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14630:7:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 25423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14630:69:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25424,
                  "nodeType": "ExpressionStatement",
                  "src": "14630:69:200"
                },
                {
                  "expression": {
                    "id": 25431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 25425,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24579,
                          "src": "14710:11:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 25428,
                        "indexExpression": {
                          "id": 25426,
                          "name": "holder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25398,
                          "src": "14722:6:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "14710:19:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 25429,
                      "indexExpression": {
                        "id": 25427,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25400,
                        "src": "14730:7:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14710:28:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 25430,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25402,
                      "src": "14741:5:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14710:36:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 25432,
                  "nodeType": "ExpressionStatement",
                  "src": "14710:36:200"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 25434,
                        "name": "holder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25398,
                        "src": "14770:6:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25435,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25400,
                        "src": "14778:7:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25436,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25402,
                        "src": "14787:5:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25433,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20420,
                      "src": "14761:8:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 25437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14761:32:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25438,
                  "nodeType": "EmitStatement",
                  "src": "14756:37:200"
                }
              ]
            },
            "documentation": {
              "id": 25396,
              "nodeType": "StructuredDocumentation",
              "src": "14295:127:200",
              "text": " @dev See {ERC20-_approve}.\n Note that accounts cannot have allowance issued by their operators."
            },
            "id": 25440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "14436:8:200",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25398,
                  "mutability": "mutable",
                  "name": "holder",
                  "nameLocation": "14462:6:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25440,
                  "src": "14454:14:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25397,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14454:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25400,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "14486:7:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25440,
                  "src": "14478:15:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25399,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14478:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25402,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "14511:5:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25440,
                  "src": "14503:13:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25401,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14503:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14444:78:200"
            },
            "returnParameters": {
              "id": 25404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14540:0:200"
            },
            "scope": 25600,
            "src": "14427:373:200",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 25484,
              "nodeType": "Block",
              "src": "15472:273:200",
              "statements": [
                {
                  "assignments": [
                    25457
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25457,
                      "mutability": "mutable",
                      "name": "implementer",
                      "nameLocation": "15490:11:200",
                      "nodeType": "VariableDeclaration",
                      "scope": 25484,
                      "src": "15482:19:200",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 25456,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15482:7:200",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25463,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25460,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25445,
                        "src": "15546:4:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25461,
                        "name": "_TOKENS_SENDER_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24549,
                        "src": "15552:29:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25458,
                        "name": "_ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24534,
                        "src": "15504:17:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$28928",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 25459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28877,
                      "src": "15504:41:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (address,bytes32) view external returns (address)"
                      }
                    },
                    "id": 25462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15504:78:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15482:100:200"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 25469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25464,
                      "name": "implementer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25457,
                      "src": "15596:11:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 25467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "15619:1:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 25466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "15611:7:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 25465,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "15611:7:200",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 25468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15611:10:200",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "15596:25:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25483,
                  "nodeType": "IfStatement",
                  "src": "15592:147:200",
                  "trueBody": {
                    "id": 25482,
                    "nodeType": "Block",
                    "src": "15623:116:200",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 25474,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25443,
                              "src": "15677:8:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 25475,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25445,
                              "src": "15687:4:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 25476,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25447,
                              "src": "15693:2:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 25477,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25449,
                              "src": "15697:6:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 25478,
                              "name": "userData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25451,
                              "src": "15705:8:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 25479,
                              "name": "operatorData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25453,
                              "src": "15715:12:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 25471,
                                  "name": "implementer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25457,
                                  "src": "15651:11:200",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 25470,
                                "name": "IERC777Sender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25799,
                                "src": "15637:13:200",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC777Sender_$25799_$",
                                  "typeString": "type(contract IERC777Sender)"
                                }
                              },
                              "id": 25472,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15637:26:200",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC777Sender_$25799",
                                "typeString": "contract IERC777Sender"
                              }
                            },
                            "id": 25473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokensToSend",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25798,
                            "src": "15637:39:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address,uint256,bytes memory,bytes memory) external"
                            }
                          },
                          "id": 25480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15637:91:200",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25481,
                        "nodeType": "ExpressionStatement",
                        "src": "15637:91:200"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 25441,
              "nodeType": "StructuredDocumentation",
              "src": "14806:462:200",
              "text": " @dev Call from.tokensToSend() if the interface is registered\n @param operator address operator requesting the transfer\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)"
            },
            "id": 25485,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_callTokensToSend",
            "nameLocation": "15282:17:200",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25443,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "15317:8:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25485,
                  "src": "15309:16:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15309:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25445,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "15343:4:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25485,
                  "src": "15335:12:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25444,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15335:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25447,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15365:2:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25485,
                  "src": "15357:10:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25446,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15357:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25449,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "15385:6:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25485,
                  "src": "15377:14:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25448,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15377:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25451,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "15414:8:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25485,
                  "src": "15401:21:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25450,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15401:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25453,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "15445:12:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25485,
                  "src": "15432:25:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25452,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15432:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15299:164:200"
            },
            "returnParameters": {
              "id": 25455,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15472:0:200"
            },
            "scope": 25600,
            "src": "15273:472:200",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 25542,
              "nodeType": "Block",
              "src": "16669:441:200",
              "statements": [
                {
                  "assignments": [
                    25504
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25504,
                      "mutability": "mutable",
                      "name": "implementer",
                      "nameLocation": "16687:11:200",
                      "nodeType": "VariableDeclaration",
                      "scope": 25542,
                      "src": "16679:19:200",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 25503,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "16679:7:200",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25510,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25507,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25492,
                        "src": "16743:2:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25508,
                        "name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24554,
                        "src": "16747:32:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 25505,
                        "name": "_ERC1820_REGISTRY",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24534,
                        "src": "16701:17:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$28928",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 25506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28877,
                      "src": "16701:41:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (address,bytes32) view external returns (address)"
                      }
                    },
                    "id": 25509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16701:79:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16679:101:200"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 25516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25511,
                      "name": "implementer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25504,
                      "src": "16794:11:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 25514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16817:1:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 25513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "16809:7:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 25512,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "16809:7:200",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 25515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16809:10:200",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "16794:25:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "id": 25530,
                      "name": "requireReceptionAck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25500,
                      "src": "16952:19:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 25540,
                    "nodeType": "IfStatement",
                    "src": "16948:156:200",
                    "trueBody": {
                      "id": 25539,
                      "nodeType": "Block",
                      "src": "16973:131:200",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 25535,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "16995:16:200",
                                "subExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 25532,
                                      "name": "to",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 25492,
                                      "src": "16996:2:200",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "id": 25533,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "isContract",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 26050,
                                    "src": "16996:13:200",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                                      "typeString": "function (address) view returns (bool)"
                                    }
                                  },
                                  "id": 25534,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16996:15:200",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "4552433737373a20746f6b656e20726563697069656e7420636f6e747261637420686173206e6f20696d706c656d656e74657220666f7220455243373737546f6b656e73526563697069656e74",
                                "id": 25536,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "17013:79:200",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80",
                                  "typeString": "literal_string \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\""
                                },
                                "value": "ERC777: token recipient contract has no implementer for ERC777TokensRecipient"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_9ee9d43e266ccfb7408c78038627d2c5b376a4a82e9fcfbfea2a9c63dc07fa80",
                                  "typeString": "literal_string \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\""
                                }
                              ],
                              "id": 25531,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "16987:7:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 25537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16987:106:200",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 25538,
                          "nodeType": "ExpressionStatement",
                          "src": "16987:106:200"
                        }
                      ]
                    }
                  },
                  "id": 25541,
                  "nodeType": "IfStatement",
                  "src": "16790:314:200",
                  "trueBody": {
                    "id": 25529,
                    "nodeType": "Block",
                    "src": "16821:121:200",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 25521,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25488,
                              "src": "16880:8:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 25522,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25490,
                              "src": "16890:4:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 25523,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25492,
                              "src": "16896:2:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 25524,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25494,
                              "src": "16900:6:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 25525,
                              "name": "userData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25496,
                              "src": "16908:8:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "id": 25526,
                              "name": "operatorData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25498,
                              "src": "16918:12:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 25518,
                                  "name": "implementer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25504,
                                  "src": "16852:11:200",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 25517,
                                "name": "IERC777Recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25779,
                                "src": "16835:16:200",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC777Recipient_$25779_$",
                                  "typeString": "type(contract IERC777Recipient)"
                                }
                              },
                              "id": 25519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16835:29:200",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC777Recipient_$25779",
                                "typeString": "contract IERC777Recipient"
                              }
                            },
                            "id": 25520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokensReceived",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25778,
                            "src": "16835:44:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address,uint256,bytes memory,bytes memory) external"
                            }
                          },
                          "id": 25527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16835:96:200",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25528,
                        "nodeType": "ExpressionStatement",
                        "src": "16835:96:200"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 25486,
              "nodeType": "StructuredDocumentation",
              "src": "15751:678:200",
              "text": " @dev Call to.tokensReceived() if the interface is registered. Reverts if the recipient is a contract but\n tokensReceived() was not registered for the recipient\n @param operator address operator requesting the transfer\n @param from address token holder address\n @param to address recipient address\n @param amount uint256 amount of tokens to transfer\n @param userData bytes extra information provided by the token holder (if any)\n @param operatorData bytes extra information provided by the operator (if any)\n @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient"
            },
            "id": 25543,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_callTokensReceived",
            "nameLocation": "16443:19:200",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25488,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "16480:8:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25543,
                  "src": "16472:16:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25487,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16472:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25490,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "16506:4:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25543,
                  "src": "16498:12:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25489,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16498:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25492,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "16528:2:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25543,
                  "src": "16520:10:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25491,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16520:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25494,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "16548:6:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25543,
                  "src": "16540:14:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25493,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16540:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25496,
                  "mutability": "mutable",
                  "name": "userData",
                  "nameLocation": "16577:8:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25543,
                  "src": "16564:21:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25495,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16564:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25498,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "16608:12:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25543,
                  "src": "16595:25:200",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25497,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16595:5:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25500,
                  "mutability": "mutable",
                  "name": "requireReceptionAck",
                  "nameLocation": "16635:19:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25543,
                  "src": "16630:24:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25499,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "16630:4:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16462:198:200"
            },
            "returnParameters": {
              "id": 25502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16669:0:200"
            },
            "scope": 25600,
            "src": "16434:676:200",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 25585,
              "nodeType": "Block",
              "src": "17507:322:200",
              "statements": [
                {
                  "assignments": [
                    25554
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25554,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "17525:16:200",
                      "nodeType": "VariableDeclaration",
                      "scope": 25585,
                      "src": "17517:24:200",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25553,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17517:7:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25559,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25556,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25546,
                        "src": "17554:5:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25557,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25548,
                        "src": "17561:7:200",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25555,
                      "name": "allowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25004,
                      "src": "17544:9:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address,address) view returns (uint256)"
                      }
                    },
                    "id": 25558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17544:25:200",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17517:52:200"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25560,
                      "name": "currentAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25554,
                      "src": "17583:16:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 25563,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17608:7:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 25562,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "17608:7:200",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 25561,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "17603:4:200",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 25564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17603:13:200",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 25565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "17603:17:200",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17583:37:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25584,
                  "nodeType": "IfStatement",
                  "src": "17579:244:200",
                  "trueBody": {
                    "id": 25583,
                    "nodeType": "Block",
                    "src": "17622:201:200",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 25570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 25568,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25554,
                                "src": "17644:16:200",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 25569,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25550,
                                "src": "17664:6:200",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "17644:26:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4552433737373a20696e73756666696369656e7420616c6c6f77616e6365",
                              "id": 25571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17672:32:200",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_43a72b1be6b1964d60860b54d1c331016464b9d17c1d10dbea6a002344132abb",
                                "typeString": "literal_string \"ERC777: insufficient allowance\""
                              },
                              "value": "ERC777: insufficient allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_43a72b1be6b1964d60860b54d1c331016464b9d17c1d10dbea6a002344132abb",
                                "typeString": "literal_string \"ERC777: insufficient allowance\""
                              }
                            ],
                            "id": 25567,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "17636:7:200",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 25572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17636:69:200",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25573,
                        "nodeType": "ExpressionStatement",
                        "src": "17636:69:200"
                      },
                      {
                        "id": 25582,
                        "nodeType": "UncheckedBlock",
                        "src": "17719:94:200",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 25575,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25546,
                                  "src": "17756:5:200",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 25576,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 25548,
                                  "src": "17763:7:200",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 25579,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 25577,
                                    "name": "currentAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25554,
                                    "src": "17772:16:200",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 25578,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25550,
                                    "src": "17791:6:200",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "17772:25:200",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 25574,
                                "name": "_approve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25440,
                                "src": "17747:8:200",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
                              "id": 25580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17747:51:200",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 25581,
                            "nodeType": "ExpressionStatement",
                            "src": "17747:51:200"
                          }
                        ]
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 25544,
              "nodeType": "StructuredDocumentation",
              "src": "17116:266:200",
              "text": " @dev Spend `amount` form the allowance of `owner` toward `spender`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
            },
            "id": 25586,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_spendAllowance",
            "nameLocation": "17396:15:200",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25546,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "17429:5:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25586,
                  "src": "17421:13:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17421:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25548,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "17452:7:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25586,
                  "src": "17444:15:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25547,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17444:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25550,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "17477:6:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25586,
                  "src": "17469:14:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25549,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17469:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17411:78:200"
            },
            "returnParameters": {
              "id": 25552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17507:0:200"
            },
            "scope": 25600,
            "src": "17387:442:200",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 25598,
              "nodeType": "Block",
              "src": "18602:2:200",
              "statements": []
            },
            "documentation": {
              "id": 25587,
              "nodeType": "StructuredDocumentation",
              "src": "17835:617:200",
              "text": " @dev Hook that is called before any token transfer. This includes\n calls to {send}, {transfer}, {operatorSend}, minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 25599,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "18466:20:200",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25589,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "18504:8:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25599,
                  "src": "18496:16:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25588,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18496:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25591,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "18530:4:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25599,
                  "src": "18522:12:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25590,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18522:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25593,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "18552:2:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25599,
                  "src": "18544:10:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25592,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18544:7:200",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25595,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "18572:6:200",
                  "nodeType": "VariableDeclaration",
                  "scope": 25599,
                  "src": "18564:14:200",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25594,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18564:7:200",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18486:98:200"
            },
            "returnParameters": {
              "id": 25597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18602:0:200"
            },
            "scope": 25600,
            "src": "18457:147:200",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 25601,
        "src": "1088:17518:200",
        "usedErrors": []
      }
    ],
    "src": "107:18500:200"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162001bb138038062001bb18339810160408190526200003491620003f1565b82516200004990600290602086019062000215565b5081516200005f90600390602085019062000215565b50805162000075906004906020840190620002a4565b5060005b8151811015620000e5576001600560008484815181106200009e576200009e62000508565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580620000dc816200051e565b91505062000079565b506040516329965a1d60e01b815230600482018190527fac7fbab5f54a3ca8194167523c6753bfeb96a445279294b6125b68cce217705460248301526044820152731820a4b7618bde71dce8cdc73aab6c95905fad24906329965a1d90606401600060405180830381600087803b1580156200016057600080fd5b505af115801562000175573d6000803e3d6000fd5b50506040516329965a1d60e01b815230600482018190527faea199e31a596269b42cdafd93407f14436db6e4cad65417994c2eb37381e05a60248301526044820152731820a4b7618bde71dce8cdc73aab6c95905fad2492506329965a1d9150606401600060405180830381600087803b158015620001f357600080fd5b505af115801562000208573d6000803e3d6000fd5b5050505050505062000585565b828054620002239062000548565b90600052602060002090601f01602090048101928262000247576000855562000292565b82601f106200026257805160ff191683800117855562000292565b8280016001018555821562000292579182015b828111156200029257825182559160200191906001019062000275565b50620002a0929150620002fc565b5090565b82805482825590600052602060002090810192821562000292579160200282015b828111156200029257825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620002c5565b5b80821115620002a05760008155600101620002fd565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000354576200035462000313565b604052919050565b600082601f8301126200036e57600080fd5b81516001600160401b038111156200038a576200038a62000313565b6020620003a0601f8301601f1916820162000329565b8281528582848701011115620003b557600080fd5b60005b83811015620003d5578581018301518282018401528201620003b8565b83811115620003e75760008385840101525b5095945050505050565b6000806000606084860312156200040757600080fd5b83516001600160401b03808211156200041f57600080fd5b6200042d878388016200035c565b94506020915081860151818111156200044557600080fd5b62000453888289016200035c565b9450506040860151818111156200046957600080fd5b8601601f810188136200047b57600080fd5b80518281111562000490576200049062000313565b8060051b9250620004a384840162000329565b818152928201840192848101908a851115620004be57600080fd5b928501925b84841015620004f857835192506001600160a01b0383168314620004e75760008081fd5b8282529285019290850190620004c3565b8096505050505050509250925092565b634e487b7160e01b600052603260045260246000fd5b60006000198214156200054157634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c908216806200055d57607f821691505b602082108114156200057f57634e487b7160e01b600052602260045260246000fd5b50919050565b61161c80620005956000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063959b8c3f116100a2578063d95b637111610071578063d95b63711461022b578063dd62ed3e1461023e578063fad8b32a14610277578063fc673c4f1461028a578063fe9d93031461029d57600080fd5b8063959b8c3f146101ea57806395d89b41146101fd5780639bd9bbc614610205578063a9059cbb1461021857600080fd5b806323b872dd116100e957806323b872dd14610183578063313ce56714610196578063556f0dc7146101a557806362ad1b83146101ac57806370a08231146101c157600080fd5b806306e485381461011b57806306fdde0314610139578063095ea7b31461014e57806318160ddd14610171575b600080fd5b6101236102b0565b6040516101309190611090565b60405180910390f35b610141610312565b604051610130919061112a565b61016161015c366004611155565b61039b565b6040519015158152602001610130565b6001545b604051908152602001610130565b610161610191366004611181565b6103b3565b60405160128152602001610130565b6001610175565b6101bf6101ba366004611265565b6103f9565b005b6101756101cf3660046112f8565b6001600160a01b031660009081526020819052604090205490565b6101bf6101f83660046112f8565b61043e565b61014161055c565b6101bf610213366004611315565b61056b565b610161610226366004611155565b61058e565b61016161023936600461136e565b6105c6565b61017561024c36600461136e565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b6101bf6102853660046112f8565b610668565b6101bf6102983660046113a7565b610784565b6101bf6102ab366004611427565b6107bc565b6060600480548060200260200160405190810160405280929190818152602001828054801561030857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102ea575b5050505050905090565b6060600280546103219061146e565b80601f016020809104026020016040519081016040528092919081815260200182805461034d9061146e565b80156103085780601f1061036f57610100808354040283529160200191610308565b820191906000526020600020905b81548152906001019060200180831161037d57509395945050505050565b6000336103a98185856107db565b5060019392505050565b6000336103c1858285610902565b6103ee8585856040518060200160405280600081525060405180602001604052806000815250600061098e565b506001949350505050565b61040333866105c6565b6104285760405162461bcd60e51b815260040161041f906114a9565b60405180910390fd5b6104378585858585600161098e565b5050505050565b336001600160a01b03821614156104a35760405162461bcd60e51b8152602060048201526024808201527f4552433737373a20617574686f72697a696e672073656c66206173206f70657260448201526330ba37b960e11b606482015260840161041f565b6001600160a01b03811660009081526005602052604090205460ff16156104f4573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff19169055610523565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191660011790555b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b6060600380546103219061146e565b6105893384848460405180602001604052806000815250600161098e565b505050565b60006105bd3384846040518060200160405280600081525060405180602001604052806000815250600061098e565b50600192915050565b6000816001600160a01b0316836001600160a01b0316148061063157506001600160a01b03831660009081526005602052604090205460ff16801561063157506001600160a01b0380831660009081526007602090815260408083209387168352929052205460ff16155b8061066157506001600160a01b0380831660009081526006602090815260408083209387168352929052205460ff165b9392505050565b6001600160a01b0381163314156106cb5760405162461bcd60e51b815260206004820152602160248201527f4552433737373a207265766f6b696e672073656c66206173206f70657261746f6044820152603960f91b606482015260840161041f565b6001600160a01b03811660009081526005602052604090205460ff161561071f573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff1916600117905561074b565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191690555b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b61078e33856105c6565b6107aa5760405162461bcd60e51b815260040161041f906114a9565b6107b684848484610a8a565b50505050565b6107d733838360405180602001604052806000815250610a8a565b5050565b6001600160a01b03831661083f5760405162461bcd60e51b815260206004820152602560248201527f4552433737373a20617070726f76652066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161041f565b6001600160a01b0382166108a15760405162461bcd60e51b815260206004820152602360248201527f4552433737373a20617070726f766520746f20746865207a65726f206164647260448201526265737360e81b606482015260840161041f565b6001600160a01b0383811660008181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526008602090815260408083209386168352929052205460001981146107b657818110156109815760405162461bcd60e51b815260206004820152601e60248201527f4552433737373a20696e73756666696369656e7420616c6c6f77616e63650000604482015260640161041f565b6107b684848484036107db565b6001600160a01b0386166109f35760405162461bcd60e51b815260206004820152602660248201527f4552433737373a207472616e736665722066726f6d20746865207a65726f206160448201526564647265737360d01b606482015260840161041f565b6001600160a01b038516610a555760405162461bcd60e51b8152602060048201526024808201527f4552433737373a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161041f565b33610a64818888888888610c3e565b610a72818888888888610d65565b610a8181888888888888610ecb565b50505050505050565b6001600160a01b038416610aeb5760405162461bcd60e51b815260206004820152602260248201527f4552433737373a206275726e2066726f6d20746865207a65726f206164647265604482015261737360f01b606482015260840161041f565b33610afb81866000878787610c3e565b6001600160a01b03851660009081526020819052604090205484811015610b705760405162461bcd60e51b815260206004820152602360248201527f4552433737373a206275726e20616d6f756e7420657863656564732062616c616044820152626e636560e81b606482015260840161041f565b6001600160a01b0386166000908152602081905260408120868303905560018054879290610b9f90849061150b565b92505081905550856001600160a01b0316826001600160a01b03167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a4098878787604051610bed93929190611522565b60405180910390a36040518581526000906001600160a01b038816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe8956024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015610cbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce39190611557565b90506001600160a01b03811615610a8157604051633ad5cbc160e11b81526001600160a01b038216906375ab978290610d2a908a908a908a908a908a908a90600401611574565b600060405180830381600087803b158015610d4457600080fd5b505af1158015610d58573d6000803e3d6000fd5b5050505050505050505050565b6001600160a01b03851660009081526020819052604090205483811015610dde5760405162461bcd60e51b815260206004820152602760248201527f4552433737373a207472616e7366657220616d6f756e7420657863656564732060448201526662616c616e636560c81b606482015260840161041f565b6001600160a01b03808716600090815260208190526040808220878503905591871681529081208054869290610e159084906115ce565b92505081905550846001600160a01b0316866001600160a01b0316886001600160a01b03167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987878787604051610e6d93929190611522565b60405180910390a4846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610eba91815260200190565b60405180910390a350505050505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b6024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015610f4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f709190611557565b90506001600160a01b03811615610fec576040516223de2960e01b81526001600160a01b038216906223de2990610fb5908b908b908b908b908b908b90600401611574565b600060405180830381600087803b158015610fcf57600080fd5b505af1158015610fe3573d6000803e3d6000fd5b50505050611086565b8115611086576001600160a01b0386163b156110865760405162461bcd60e51b815260206004820152604d60248201527f4552433737373a20746f6b656e20726563697069656e7420636f6e747261637460448201527f20686173206e6f20696d706c656d656e74657220666f7220455243373737546f60648201526c1ad95b9cd49958da5c1a595b9d609a1b608482015260a40161041f565b5050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156110d15783516001600160a01b0316835292840192918401916001016110ac565b50909695505050505050565b6000815180845260005b81811015611103576020818501810151868301820152016110e7565b81811115611115576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061066160208301846110dd565b6001600160a01b038116811461115257600080fd5b50565b6000806040838503121561116857600080fd5b82356111738161113d565b946020939093013593505050565b60008060006060848603121561119657600080fd5b83356111a18161113d565b925060208401356111b18161113d565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126111e957600080fd5b813567ffffffffffffffff80821115611204576112046111c2565b604051601f8301601f19908116603f0116810190828211818310171561122c5761122c6111c2565b8160405283815286602085880101111561124557600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a0868803121561127d57600080fd5b85356112888161113d565b945060208601356112988161113d565b935060408601359250606086013567ffffffffffffffff808211156112bc57600080fd5b6112c889838a016111d8565b935060808801359150808211156112de57600080fd5b506112eb888289016111d8565b9150509295509295909350565b60006020828403121561130a57600080fd5b81356106618161113d565b60008060006060848603121561132a57600080fd5b83356113358161113d565b925060208401359150604084013567ffffffffffffffff81111561135857600080fd5b611364868287016111d8565b9150509250925092565b6000806040838503121561138157600080fd5b823561138c8161113d565b9150602083013561139c8161113d565b809150509250929050565b600080600080608085870312156113bd57600080fd5b84356113c88161113d565b935060208501359250604085013567ffffffffffffffff808211156113ec57600080fd5b6113f8888389016111d8565b9350606087013591508082111561140e57600080fd5b5061141b878288016111d8565b91505092959194509250565b6000806040838503121561143a57600080fd5b82359150602083013567ffffffffffffffff81111561145857600080fd5b611464858286016111d8565b9150509250929050565b600181811c9082168061148257607f821691505b602082108114156114a357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602c908201527f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60408201526b39103337b9103437b63232b960a11b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008282101561151d5761151d6114f5565b500390565b83815260606020820152600061153b60608301856110dd565b828103604084015261154d81856110dd565b9695505050505050565b60006020828403121561156957600080fd5b81516106618161113d565b6001600160a01b0387811682528681166020830152851660408201526060810184905260c0608082018190526000906115af908301856110dd565b82810360a08401526115c181856110dd565b9998505050505050505050565b600082198211156115e1576115e16114f5565b50019056fea26469706673582212202587ea43725730049aa37fbb86a141ccb0d1ed2eb9fd74d0281d66f5cfb9b01f64736f6c634300080c0033",
  "bytecodeSha1": "f3da77c9fb2fc85711e7bb92e00c3b63c3f6eb6c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "ERC777",
  "coverageMap": {
    "branches": {
      "171": {},
      "200": {
        "ERC777._approve": {
          "64": [
            14558,
            14578,
            true
          ],
          "65": [
            14638,
            14659,
            true
          ]
        },
        "ERC777._burn": {
          "70": [
            13025,
            13043,
            true
          ],
          "71": [
            13375,
            13396,
            true
          ]
        },
        "ERC777._callTokensReceived": {
          "74": [
            16794,
            16819,
            false
          ],
          "75": [
            16952,
            16971,
            false
          ]
        },
        "ERC777._callTokensToSend": {
          "72": [
            15596,
            15621,
            false
          ]
        },
        "ERC777._move": {
          "73": [
            13989,
            14010,
            true
          ]
        },
        "ERC777._send": {
          "68": [
            12120,
            12138,
            true
          ],
          "69": [
            12199,
            12215,
            true
          ]
        },
        "ERC777._spendAllowance": {
          "66": [
            17583,
            17620,
            false
          ],
          "67": [
            17644,
            17670,
            true
          ]
        },
        "ERC777.authorizeOperator": {
          "59": [
            5670,
            5694,
            true
          ],
          "60": [
            5750,
            5777,
            false
          ]
        },
        "ERC777.operatorBurn": {
          "63": [
            7445,
            7481,
            true
          ]
        },
        "ERC777.operatorSend": {
          "58": [
            6984,
            7019,
            true
          ]
        },
        "ERC777.revokeOperator": {
          "61": [
            6143,
            6167,
            true
          ],
          "62": [
            6220,
            6247,
            false
          ]
        }
      },
      "201": {},
      "202": {},
      "203": {},
      "206": {},
      "210": {},
      "230": {}
    },
    "statements": {
      "171": {},
      "200": {
        "ERC777._approve": {
          "31": [
            14550,
            14620
          ],
          "32": [
            14630,
            14699
          ],
          "33": [
            14710,
            14746
          ],
          "34": [
            14756,
            14793
          ]
        },
        "ERC777._burn": {
          "42": [
            13017,
            13082
          ],
          "43": [
            13135,
            13208
          ],
          "44": [
            13367,
            13436
          ],
          "45": [
            13470,
            13508
          ],
          "46": [
            13528,
            13550
          ],
          "47": [
            13561,
            13616
          ],
          "48": [
            13626,
            13665
          ]
        },
        "ERC777._callTokensReceived": {
          "55": [
            16835,
            16931
          ],
          "56": [
            16987,
            17093
          ]
        },
        "ERC777._callTokensToSend": {
          "49": [
            15637,
            15728
          ]
        },
        "ERC777._move": {
          "50": [
            13981,
            14054
          ],
          "51": [
            14088,
            14126
          ],
          "52": [
            14146,
            14169
          ],
          "53": [
            14180,
            14241
          ],
          "54": [
            14251,
            14282
          ]
        },
        "ERC777._send": {
          "37": [
            12112,
            12181
          ],
          "38": [
            12191,
            12256
          ],
          "39": [
            12309,
            12378
          ],
          "40": [
            12389,
            12446
          ],
          "41": [
            12457,
            12549
          ]
        },
        "ERC777._spendAllowance": {
          "35": [
            17636,
            17705
          ],
          "36": [
            17747,
            17798
          ]
        },
        "ERC777.allowance": {
          "4": [
            7937,
            7972
          ]
        },
        "ERC777.approve": {
          "8": [
            8423,
            8455
          ],
          "9": [
            8465,
            8476
          ]
        },
        "ERC777.authorizeOperator": {
          "15": [
            5662,
            5735
          ],
          "16": [
            5793,
            5848
          ],
          "17": [
            5879,
            5920
          ],
          "18": [
            5941,
            5988
          ]
        },
        "ERC777.balanceOf": {
          "3": [
            4112,
            4141
          ]
        },
        "ERC777.burn": {
          "30": [
            5098,
            5135
          ]
        },
        "ERC777.decimals": {
          "1": [
            3488,
            3497
          ]
        },
        "ERC777.defaultOperators": {
          "5": [
            6622,
            6651
          ]
        },
        "ERC777.granularity": {
          "2": [
            3699,
            3707
          ]
        },
        "ERC777.isOperatorFor": {
          "23": [
            5321,
            5509
          ]
        },
        "ERC777.name": {
          "6": [
            3061,
            3073
          ]
        },
        "ERC777.operatorBurn": {
          "28": [
            7437,
            7530
          ],
          "29": [
            7540,
            7582
          ]
        },
        "ERC777.operatorSend": {
          "13": [
            6976,
            7068
          ],
          "14": [
            7078,
            7136
          ]
        },
        "ERC777.revokeOperator": {
          "24": [
            6135,
            6205
          ],
          "25": [
            6263,
            6318
          ],
          "26": [
            6349,
            6390
          ],
          "27": [
            6411,
            6455
          ]
        },
        "ERC777.send": {
          "20": [
            4410,
            4464
          ]
        },
        "ERC777.symbol": {
          "19": [
            3217,
            3231
          ]
        },
        "ERC777.totalSupply": {
          "0": [
            3872,
            3891
          ]
        },
        "ERC777.transfer": {
          "21": [
            4804,
            4857
          ],
          "22": [
            4867,
            4878
          ]
        },
        "ERC777.transferFrom": {
          "10": [
            9157,
            9197
          ],
          "11": [
            9207,
            9254
          ],
          "12": [
            9264,
            9275
          ]
        }
      },
      "201": {},
      "202": {},
      "203": {},
      "206": {
        "Address.isContract": {
          "57": [
            1458,
            1488
          ]
        }
      },
      "210": {
        "Context._msgSender": {
          "7": [
            712,
            729
          ]
        }
      },
      "230": {}
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "IERC1820Registry",
    "IERC20",
    "IERC777",
    "IERC777Recipient",
    "IERC777Sender"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101165760003560e01c8063959b8c3f116100a2578063d95b637111610071578063d95b63711461022b578063dd62ed3e1461023e578063fad8b32a14610277578063fc673c4f1461028a578063fe9d93031461029d57600080fd5b8063959b8c3f146101ea57806395d89b41146101fd5780639bd9bbc614610205578063a9059cbb1461021857600080fd5b806323b872dd116100e957806323b872dd14610183578063313ce56714610196578063556f0dc7146101a557806362ad1b83146101ac57806370a08231146101c157600080fd5b806306e485381461011b57806306fdde0314610139578063095ea7b31461014e57806318160ddd14610171575b600080fd5b6101236102b0565b6040516101309190611090565b60405180910390f35b610141610312565b604051610130919061112a565b61016161015c366004611155565b61039b565b6040519015158152602001610130565b6001545b604051908152602001610130565b610161610191366004611181565b6103b3565b60405160128152602001610130565b6001610175565b6101bf6101ba366004611265565b6103f9565b005b6101756101cf3660046112f8565b6001600160a01b031660009081526020819052604090205490565b6101bf6101f83660046112f8565b61043e565b61014161055c565b6101bf610213366004611315565b61056b565b610161610226366004611155565b61058e565b61016161023936600461136e565b6105c6565b61017561024c36600461136e565b6001600160a01b03918216600090815260086020908152604080832093909416825291909152205490565b6101bf6102853660046112f8565b610668565b6101bf6102983660046113a7565b610784565b6101bf6102ab366004611427565b6107bc565b6060600480548060200260200160405190810160405280929190818152602001828054801561030857602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116102ea575b5050505050905090565b6060600280546103219061146e565b80601f016020809104026020016040519081016040528092919081815260200182805461034d9061146e565b80156103085780601f1061036f57610100808354040283529160200191610308565b820191906000526020600020905b81548152906001019060200180831161037d57509395945050505050565b6000336103a98185856107db565b5060019392505050565b6000336103c1858285610902565b6103ee8585856040518060200160405280600081525060405180602001604052806000815250600061098e565b506001949350505050565b61040333866105c6565b6104285760405162461bcd60e51b815260040161041f906114a9565b60405180910390fd5b6104378585858585600161098e565b5050505050565b336001600160a01b03821614156104a35760405162461bcd60e51b8152602060048201526024808201527f4552433737373a20617574686f72697a696e672073656c66206173206f70657260448201526330ba37b960e11b606482015260840161041f565b6001600160a01b03811660009081526005602052604090205460ff16156104f4573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff19169055610523565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191660011790555b60405133906001600160a01b038316907ff4caeb2d6ca8932a215a353d0703c326ec2d81fc68170f320eb2ab49e9df61f990600090a350565b6060600380546103219061146e565b6105893384848460405180602001604052806000815250600161098e565b505050565b60006105bd3384846040518060200160405280600081525060405180602001604052806000815250600061098e565b50600192915050565b6000816001600160a01b0316836001600160a01b0316148061063157506001600160a01b03831660009081526005602052604090205460ff16801561063157506001600160a01b0380831660009081526007602090815260408083209387168352929052205460ff16155b8061066157506001600160a01b0380831660009081526006602090815260408083209387168352929052205460ff165b9392505050565b6001600160a01b0381163314156106cb5760405162461bcd60e51b815260206004820152602160248201527f4552433737373a207265766f6b696e672073656c66206173206f70657261746f6044820152603960f91b606482015260840161041f565b6001600160a01b03811660009081526005602052604090205460ff161561071f573360009081526007602090815260408083206001600160a01b03851684529091529020805460ff1916600117905561074b565b3360009081526006602090815260408083206001600160a01b03851684529091529020805460ff191690555b60405133906001600160a01b038316907f50546e66e5f44d728365dc3908c63bc5cfeeab470722c1677e3073a6ac294aa190600090a350565b61078e33856105c6565b6107aa5760405162461bcd60e51b815260040161041f906114a9565b6107b684848484610a8a565b50505050565b6107d733838360405180602001604052806000815250610a8a565b5050565b6001600160a01b03831661083f5760405162461bcd60e51b815260206004820152602560248201527f4552433737373a20617070726f76652066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161041f565b6001600160a01b0382166108a15760405162461bcd60e51b815260206004820152602360248201527f4552433737373a20617070726f766520746f20746865207a65726f206164647260448201526265737360e81b606482015260840161041f565b6001600160a01b0383811660008181526008602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383811660009081526008602090815260408083209386168352929052205460001981146107b657818110156109815760405162461bcd60e51b815260206004820152601e60248201527f4552433737373a20696e73756666696369656e7420616c6c6f77616e63650000604482015260640161041f565b6107b684848484036107db565b6001600160a01b0386166109f35760405162461bcd60e51b815260206004820152602660248201527f4552433737373a207472616e736665722066726f6d20746865207a65726f206160448201526564647265737360d01b606482015260840161041f565b6001600160a01b038516610a555760405162461bcd60e51b8152602060048201526024808201527f4552433737373a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161041f565b33610a64818888888888610c3e565b610a72818888888888610d65565b610a8181888888888888610ecb565b50505050505050565b6001600160a01b038416610aeb5760405162461bcd60e51b815260206004820152602260248201527f4552433737373a206275726e2066726f6d20746865207a65726f206164647265604482015261737360f01b606482015260840161041f565b33610afb81866000878787610c3e565b6001600160a01b03851660009081526020819052604090205484811015610b705760405162461bcd60e51b815260206004820152602360248201527f4552433737373a206275726e20616d6f756e7420657863656564732062616c616044820152626e636560e81b606482015260840161041f565b6001600160a01b0386166000908152602081905260408120868303905560018054879290610b9f90849061150b565b92505081905550856001600160a01b0316826001600160a01b03167fa78a9be3a7b862d26933ad85fb11d80ef66b8f972d7cbba06621d583943a4098878787604051610bed93929190611522565b60405180910390a36040518581526000906001600160a01b038816907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe8956024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015610cbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce39190611557565b90506001600160a01b03811615610a8157604051633ad5cbc160e11b81526001600160a01b038216906375ab978290610d2a908a908a908a908a908a908a90600401611574565b600060405180830381600087803b158015610d4457600080fd5b505af1158015610d58573d6000803e3d6000fd5b5050505050505050505050565b6001600160a01b03851660009081526020819052604090205483811015610dde5760405162461bcd60e51b815260206004820152602760248201527f4552433737373a207472616e7366657220616d6f756e7420657863656564732060448201526662616c616e636560c81b606482015260840161041f565b6001600160a01b03808716600090815260208190526040808220878503905591871681529081208054869290610e159084906115ce565b92505081905550846001600160a01b0316866001600160a01b0316886001600160a01b03167f06b541ddaa720db2b10a4d0cdac39b8d360425fc073085fac19bc82614677987878787604051610e6d93929190611522565b60405180910390a4846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef86604051610eba91815260200190565b60405180910390a350505050505050565b60405163555ddc6560e11b81526001600160a01b03861660048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b6024820152600090731820a4b7618bde71dce8cdc73aab6c95905fad249063aabbb8ca90604401602060405180830381865afa158015610f4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f709190611557565b90506001600160a01b03811615610fec576040516223de2960e01b81526001600160a01b038216906223de2990610fb5908b908b908b908b908b908b90600401611574565b600060405180830381600087803b158015610fcf57600080fd5b505af1158015610fe3573d6000803e3d6000fd5b50505050611086565b8115611086576001600160a01b0386163b156110865760405162461bcd60e51b815260206004820152604d60248201527f4552433737373a20746f6b656e20726563697069656e7420636f6e747261637460448201527f20686173206e6f20696d706c656d656e74657220666f7220455243373737546f60648201526c1ad95b9cd49958da5c1a595b9d609a1b608482015260a40161041f565b5050505050505050565b6020808252825182820181905260009190848201906040850190845b818110156110d15783516001600160a01b0316835292840192918401916001016110ac565b50909695505050505050565b6000815180845260005b81811015611103576020818501810151868301820152016110e7565b81811115611115576000602083870101525b50601f01601f19169290920160200192915050565b60208152600061066160208301846110dd565b6001600160a01b038116811461115257600080fd5b50565b6000806040838503121561116857600080fd5b82356111738161113d565b946020939093013593505050565b60008060006060848603121561119657600080fd5b83356111a18161113d565b925060208401356111b18161113d565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126111e957600080fd5b813567ffffffffffffffff80821115611204576112046111c2565b604051601f8301601f19908116603f0116810190828211818310171561122c5761122c6111c2565b8160405283815286602085880101111561124557600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600080600060a0868803121561127d57600080fd5b85356112888161113d565b945060208601356112988161113d565b935060408601359250606086013567ffffffffffffffff808211156112bc57600080fd5b6112c889838a016111d8565b935060808801359150808211156112de57600080fd5b506112eb888289016111d8565b9150509295509295909350565b60006020828403121561130a57600080fd5b81356106618161113d565b60008060006060848603121561132a57600080fd5b83356113358161113d565b925060208401359150604084013567ffffffffffffffff81111561135857600080fd5b611364868287016111d8565b9150509250925092565b6000806040838503121561138157600080fd5b823561138c8161113d565b9150602083013561139c8161113d565b809150509250929050565b600080600080608085870312156113bd57600080fd5b84356113c88161113d565b935060208501359250604085013567ffffffffffffffff808211156113ec57600080fd5b6113f8888389016111d8565b9350606087013591508082111561140e57600080fd5b5061141b878288016111d8565b91505092959194509250565b6000806040838503121561143a57600080fd5b82359150602083013567ffffffffffffffff81111561145857600080fd5b611464858286016111d8565b9150509250929050565b600181811c9082168061148257607f821691505b602082108114156114a357634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602c908201527f4552433737373a2063616c6c6572206973206e6f7420616e206f70657261746f60408201526b39103337b9103437b63232b960a11b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008282101561151d5761151d6114f5565b500390565b83815260606020820152600061153b60608301856110dd565b828103604084015261154d81856110dd565b9695505050505050565b60006020828403121561156957600080fd5b81516106618161113d565b6001600160a01b0387811682528681166020830152851660408201526060810184905260c0608082018190526000906115af908301856110dd565b82810360a08401526115c181856110dd565b9998505050505050505050565b600082198211156115e1576115e16114f5565b50019056fea26469706673582212202587ea43725730049aa37fbb86a141ccb0d1ed2eb9fd74d0281d66f5cfb9b01f64736f6c634300080c0033",
  "deployedSourceMap": "1088:17518:200:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6528:130;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2982:98;;;:::i;:::-;;;;;;;:::i;8286:197::-;;;;;;:::i;:::-;;:::i;:::-;;;2000:14:239;;1993:22;1975:41;;1963:2;1948:18;8286:197:200;1835:187:239;3775:123:200;3879:12;;3775:123;;;2173:25:239;;;2161:2;2146:18;3775:123:200;2027:177:239;8965:317:200;;;;;;:::i;:::-;;:::i;3422:82::-;;;3495:2;2812:36:239;;2800:2;2785:18;3422:82:200;2670:184:239;3619:95:200;3706:1;3619:95;;6777:366;;;;;;:::i;:::-;;:::i;:::-;;3998:150;;;;;;:::i;:::-;-1:-1:-1;;;;;4119:22:200;4093:7;4119:22;;;;;;;;;;;;3998:150;5583:412;;;;;;:::i;:::-;;:::i;3136:102::-;;;:::i;4278:193::-;;;;;;:::i;:::-;;:::i;4702:183::-;;;;;;:::i;:::-;;:::i;5205:311::-;;;;;;:::i;:::-;;:::i;7828:151::-;;;;;;:::i;:::-;-1:-1:-1;;;;;7944:19:200;;;7918:7;7944:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;7828:151;6059:403;;;;;;:::i;:::-;;:::i;7264:325::-;;;;;;:::i;:::-;;:::i;5015:127::-;;;;;;:::i;:::-;;:::i;6528:130::-;6594:16;6629:22;6622:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6622:29:200;;;;;;;;;;;;;;;;;;;;;;;6528:130;:::o;2982:98::-;3036:13;3068:5;3061:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3061:12:200;;2982:98;-1:-1:-1;;;;;2982:98:200:o;8286:197::-;8368:4;719:10:210;8423:32:200;719:10:210;8440:7:200;8449:5;8423:8;:32::i;:::-;-1:-1:-1;8472:4:200;;8286:197;-1:-1:-1;;;8286:197:200:o;8965:317::-;9101:4;719:10:210;9157:40:200;9173:6;719:10:210;9190:6:200;9157:15;:40::i;:::-;9207:47;9213:6;9221:9;9232:6;9207:47;;;;;;;;;;;;;;;;;;;;;;;;9248:5;9207;:47::i;:::-;-1:-1:-1;9271:4:200;;8965:317;-1:-1:-1;;;;8965:317:200:o;6777:366::-;6984:35;719:10:210;7012:6:200;6984:13;:35::i;:::-;6976:92;;;;-1:-1:-1;;;6976:92:200;;;;;;;:::i;:::-;;;;;;;;;7078:58;7084:6;7092:9;7103:6;7111:4;7117:12;7131:4;7078:5;:58::i;:::-;6777:366;;;;;:::o;5583:412::-;719:10:210;-1:-1:-1;;;;;5670:24:200;;;;5662:73;;;;-1:-1:-1;;;5662:73:200;;7918:2:239;5662:73:200;;;7900:21:239;7957:2;7937:18;;;7930:30;7996:34;7976:18;;;7969:62;-1:-1:-1;;;8047:18:239;;;8040:34;8091:19;;5662:73:200;7716:400:239;5662:73:200;-1:-1:-1;;;;;5750:27:200;;;;;;:17;:27;;;;;;;;5746:185;;;719:10:210;5800:38:200;;;;:24;:38;;;;;;;;-1:-1:-1;;;;;5800:48:200;;;;;;;;;5793:55;;-1:-1:-1;;5793:55:200;;;5746:185;;;719:10:210;5879:24:200;;;;:10;:24;;;;;;;;-1:-1:-1;;;;;5879:34:200;;;;;;;;;:41;;-1:-1:-1;;5879:41:200;5916:4;5879:41;;;5746:185;5946:42;;719:10:210;;-1:-1:-1;;;;;5946:42:200;;;;;;;;5583:412;:::o;3136:102::-;3192:13;3224:7;3217:14;;;;;:::i;4278:193::-;4410:54;719:10:210;4430:9:200;4441:6;4449:4;4410:54;;;;;;;;;;;;4459:4;4410:5;:54::i;:::-;4278:193;;;:::o;4702:183::-;4788:4;4804:53;719:10:210;4824:9:200;4835:6;4804:53;;;;;;;;;;;;;;;;;;;;;;;;4851:5;4804;:53::i;:::-;-1:-1:-1;4874:4:200;4702:183;;;;:::o;5205:311::-;5305:4;5352:11;-1:-1:-1;;;;;5340:23:200;:8;-1:-1:-1;;;;;5340:23:200;;:120;;;-1:-1:-1;;;;;;5380:27:200;;;;;;:17;:27;;;;;;;;:79;;;;-1:-1:-1;;;;;;5412:37:200;;;;;;;:24;:37;;;;;;;;:47;;;;;;;;;;;;5411:48;5380:79;5340:169;;;-1:-1:-1;;;;;;5476:23:200;;;;;;;:10;:23;;;;;;;;:33;;;;;;;;;;;;5340:169;5321:188;5205:311;-1:-1:-1;;;5205:311:200:o;6059:403::-;-1:-1:-1;;;;;6143:24:200;;719:10:210;6143:24:200;;6135:70;;;;-1:-1:-1;;;6135:70:200;;8323:2:239;6135:70:200;;;8305:21:239;8362:2;8342:18;;;8335:30;8401:34;8381:18;;;8374:62;-1:-1:-1;;;8452:18:239;;;8445:31;8493:19;;6135:70:200;8121:397:239;6135:70:200;-1:-1:-1;;;;;6220:27:200;;;;;;:17;:27;;;;;;;;6216:185;;;719:10:210;6263:38:200;;;;:24;:38;;;;;;;;-1:-1:-1;;;;;6263:48:200;;;;;;;;;:55;;-1:-1:-1;;6263:55:200;6314:4;6263:55;;;6216:185;;;719:10:210;6356:24:200;;;;:10;:24;;;;;;;;-1:-1:-1;;;;;6356:34:200;;;;;;;;;6349:41;;-1:-1:-1;;6349:41:200;;;6216:185;6416:39;;719:10:210;;-1:-1:-1;;;;;6416:39:200;;;;;;;;6059:403;:::o;7264:325::-;7445:36;719:10:210;7473:7:200;7445:13;:36::i;:::-;7437:93;;;;-1:-1:-1;;;7437:93:200;;;;;;;:::i;:::-;7540:42;7546:7;7555:6;7563:4;7569:12;7540:5;:42::i;:::-;7264:325;;;;:::o;5015:127::-;5098:37;719:10:210;5118:6:200;5126:4;5098:37;;;;;;;;;;;;:5;:37::i;:::-;5015:127;;:::o;14427:373::-;-1:-1:-1;;;;;14558:20:200;;14550:70;;;;-1:-1:-1;;;14550:70:200;;8725:2:239;14550:70:200;;;8707:21:239;8764:2;8744:18;;;8737:30;8803:34;8783:18;;;8776:62;-1:-1:-1;;;8854:18:239;;;8847:35;8899:19;;14550:70:200;8523:401:239;14550:70:200;-1:-1:-1;;;;;14638:21:200;;14630:69;;;;-1:-1:-1;;;14630:69:200;;9131:2:239;14630:69:200;;;9113:21:239;9170:2;9150:18;;;9143:30;9209:34;9189:18;;;9182:62;-1:-1:-1;;;9260:18:239;;;9253:33;9303:19;;14630:69:200;8929:399:239;14630:69:200;-1:-1:-1;;;;;14710:19:200;;;;;;;:11;:19;;;;;;;;:28;;;;;;;;;;;;;:36;;;14761:32;;2173:25:239;;;14761:32:200;;2146:18:239;14761:32:200;;;;;;;14427:373;;;:::o;17387:442::-;-1:-1:-1;;;;;7944:19:200;;;17517:24;7944:19;;;:11;:19;;;;;;;;:28;;;;;;;;;;-1:-1:-1;;17583:37:200;;17579:244;;17664:6;17644:16;:26;;17636:69;;;;-1:-1:-1;;;17636:69:200;;9535:2:239;17636:69:200;;;9517:21:239;9574:2;9554:18;;;9547:30;9613:32;9593:18;;;9586:60;9663:18;;17636:69:200;9333:354:239;17636:69:200;17747:51;17756:5;17763:7;17791:6;17772:16;:25;17747:8;:51::i;11898:658::-;-1:-1:-1;;;;;12120:18:200;;12112:69;;;;-1:-1:-1;;;12112:69:200;;9894:2:239;12112:69:200;;;9876:21:239;9933:2;9913:18;;;9906:30;9972:34;9952:18;;;9945:62;-1:-1:-1;;;10023:18:239;;;10016:36;10069:19;;12112:69:200;9692:402:239;12112:69:200;-1:-1:-1;;;;;12199:16:200;;12191:65;;;;-1:-1:-1;;;12191:65:200;;10301:2:239;12191:65:200;;;10283:21:239;10340:2;10320:18;;;10313:30;10379:34;10359:18;;;10352:62;-1:-1:-1;;;10430:18:239;;;10423:34;10474:19;;12191:65:200;10099:400:239;12191:65:200;719:10:210;12309:69:200;719:10:210;12337:4:200;12343:2;12347:6;12355:8;12365:12;12309:17;:69::i;:::-;12389:57;12395:8;12405:4;12411:2;12415:6;12423:8;12433:12;12389:5;:57::i;:::-;12457:92;12477:8;12487:4;12493:2;12497:6;12505:8;12515:12;12529:19;12457;:92::i;:::-;12102:454;11898:658;;;;;;:::o;12861:811::-;-1:-1:-1;;;;;13025:18:200;;13017:65;;;;-1:-1:-1;;;13017:65:200;;10706:2:239;13017:65:200;;;10688:21:239;10745:2;10725:18;;;10718:30;10784:34;10764:18;;;10757:62;-1:-1:-1;;;10835:18:239;;;10828:32;10877:19;;13017:65:200;10504:398:239;13017:65:200;719:10:210;13135:73:200;719:10:210;13163:4:200;13093:16;13181:6;13189:4;13195:12;13135:17;:73::i;:::-;-1:-1:-1;;;;;13342:15:200;;13320:19;13342:15;;;;;;;;;;;13375:21;;;;13367:69;;;;-1:-1:-1;;;13367:69:200;;11109:2:239;13367:69:200;;;11091:21:239;11148:2;11128:18;;;11121:30;11187:34;11167:18;;;11160:62;-1:-1:-1;;;11238:18:239;;;11231:33;11281:19;;13367:69:200;10907:399:239;13367:69:200;-1:-1:-1;;;;;13470:15:200;;:9;:15;;;;;;;;;;13488:20;;;13470:38;;13528:12;:22;;13502:6;;13470:9;13528:22;;13502:6;;13528:22;:::i;:::-;;;;;;;;13583:4;-1:-1:-1;;;;;13566:50:200;13573:8;-1:-1:-1;;;;;13566:50:200;;13589:6;13597:4;13603:12;13566:50;;;;;;;;:::i;:::-;;;;;;;;13631:34;;2173:25:239;;;13654:1:200;;-1:-1:-1;;;;;13631:34:200;;;;;2161:2:239;2146:18;13631:34:200;;;;;;;13007:665;;12861:811;;;;:::o;15273:472::-;15504:78;;-1:-1:-1;;;15504:78:200;;-1:-1:-1;;;;;12220:32:239;;15504:78:200;;;12202:51:239;1491:31:200;12269:18:239;;;12262:34;15482:19:200;;1242:42;;15504:41;;12175:18:239;;15504:78:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15482:100;-1:-1:-1;;;;;;15596:25:200;;;15592:147;;15637:91;;-1:-1:-1;;;15637:91:200;;-1:-1:-1;;;;;15637:39:200;;;;;:91;;15677:8;;15687:4;;15693:2;;15697:6;;15705:8;;15715:12;;15637:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15472:273;15273:472;;;;;;:::o;13678:611::-;-1:-1:-1;;;;;13956:15:200;;13934:19;13956:15;;;;;;;;;;;13989:21;;;;13981:73;;;;-1:-1:-1;;;13981:73:200;;13502:2:239;13981:73:200;;;13484:21:239;13541:2;13521:18;;;13514:30;13580:34;13560:18;;;13553:62;-1:-1:-1;;;13631:18:239;;;13624:37;13678:19;;13981:73:200;13300:403:239;13981:73:200;-1:-1:-1;;;;;14088:15:200;;;:9;:15;;;;;;;;;;;14106:20;;;14088:38;;14146:13;;;;;;;;:23;;14120:6;;14088:9;14146:23;;14120:6;;14146:23;:::i;:::-;;;;;;;;14206:2;-1:-1:-1;;;;;14185:56:200;14200:4;-1:-1:-1;;;;;14185:56:200;14190:8;-1:-1:-1;;;;;14185:56:200;;14210:6;14218:8;14228:12;14185:56;;;;;;;;:::i;:::-;;;;;;;;14271:2;-1:-1:-1;;;;;14256:26:200;14265:4;-1:-1:-1;;;;;14256:26:200;;14275:6;14256:26;;;;2173:25:239;;2161:2;2146:18;;2027:177;14256:26:200;;;;;;;;13865:424;13678:611;;;;;;:::o;16434:676::-;16701:79;;-1:-1:-1;;;16701:79:200;;-1:-1:-1;;;;;12220:32:239;;16701:79:200;;;12202:51:239;1588:34:200;12269:18:239;;;12262:34;16679:19:200;;1242:42;;16701:41;;12175:18:239;;16701:79:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16679:101;-1:-1:-1;;;;;;16794:25:200;;;16790:314;;16835:96;;-1:-1:-1;;;16835:96:200;;-1:-1:-1;;;;;16835:44:200;;;;;:96;;16880:8;;16890:4;;16896:2;;16900:6;;16908:8;;16918:12;;16835:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16790:314;;;16952:19;16948:156;;;-1:-1:-1;;;;;16996:13:200;;1465:19:206;:23;16987:106:200;;;;-1:-1:-1;;;16987:106:200;;14043:2:239;16987:106:200;;;14025:21:239;14082:2;14062:18;;;14055:30;14121:34;14101:18;;;14094:62;14192:34;14172:18;;;14165:62;-1:-1:-1;;;14243:19:239;;;14236:44;14297:19;;16987:106:200;13841:481:239;16987:106:200;16669:441;16434:676;;;;;;;:::o;14:658:239:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:239;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:239;;14:658;-1:-1:-1;;;;;;14:658:239:o;677:472::-;719:3;757:5;751:12;784:6;779:3;772:19;809:1;819:162;833:6;830:1;827:13;819:162;;;895:4;951:13;;;947:22;;941:29;923:11;;;919:20;;912:59;848:12;819:162;;;999:6;996:1;993:13;990:87;;;1065:1;1058:4;1049:6;1044:3;1040:16;1036:27;1029:38;990:87;-1:-1:-1;1131:2:239;1110:15;-1:-1:-1;;1106:29:239;1097:39;;;;1138:4;1093:50;;677:472;-1:-1:-1;;677:472:239:o;1154:220::-;1303:2;1292:9;1285:21;1266:4;1323:45;1364:2;1353:9;1349:18;1341:6;1323:45;:::i;1379:131::-;-1:-1:-1;;;;;1454:31:239;;1444:42;;1434:70;;1500:1;1497;1490:12;1434:70;1379:131;:::o;1515:315::-;1583:6;1591;1644:2;1632:9;1623:7;1619:23;1615:32;1612:52;;;1660:1;1657;1650:12;1612:52;1699:9;1686:23;1718:31;1743:5;1718:31;:::i;:::-;1768:5;1820:2;1805:18;;;;1792:32;;-1:-1:-1;;;1515:315:239:o;2209:456::-;2286:6;2294;2302;2355:2;2343:9;2334:7;2330:23;2326:32;2323:52;;;2371:1;2368;2361:12;2323:52;2410:9;2397:23;2429:31;2454:5;2429:31;:::i;:::-;2479:5;-1:-1:-1;2536:2:239;2521:18;;2508:32;2549:33;2508:32;2549:33;:::i;:::-;2209:456;;2601:7;;-1:-1:-1;;;2655:2:239;2640:18;;;;2627:32;;2209:456::o;2859:127::-;2920:10;2915:3;2911:20;2908:1;2901:31;2951:4;2948:1;2941:15;2975:4;2972:1;2965:15;2991:718;3033:5;3086:3;3079:4;3071:6;3067:17;3063:27;3053:55;;3104:1;3101;3094:12;3053:55;3140:6;3127:20;3166:18;3203:2;3199;3196:10;3193:36;;;3209:18;;:::i;:::-;3284:2;3278:9;3252:2;3338:13;;-1:-1:-1;;3334:22:239;;;3358:2;3330:31;3326:40;3314:53;;;3382:18;;;3402:22;;;3379:46;3376:72;;;3428:18;;:::i;:::-;3468:10;3464:2;3457:22;3503:2;3495:6;3488:18;3549:3;3542:4;3537:2;3529:6;3525:15;3521:26;3518:35;3515:55;;;3566:1;3563;3556:12;3515:55;3630:2;3623:4;3615:6;3611:17;3604:4;3596:6;3592:17;3579:54;3677:1;3670:4;3665:2;3657:6;3653:15;3649:26;3642:37;3697:6;3688:15;;;;;;2991:718;;;;:::o;3714:885::-;3827:6;3835;3843;3851;3859;3912:3;3900:9;3891:7;3887:23;3883:33;3880:53;;;3929:1;3926;3919:12;3880:53;3968:9;3955:23;3987:31;4012:5;3987:31;:::i;:::-;4037:5;-1:-1:-1;4094:2:239;4079:18;;4066:32;4107:33;4066:32;4107:33;:::i;:::-;4159:7;-1:-1:-1;4213:2:239;4198:18;;4185:32;;-1:-1:-1;4268:2:239;4253:18;;4240:32;4291:18;4321:14;;;4318:34;;;4348:1;4345;4338:12;4318:34;4371:49;4412:7;4403:6;4392:9;4388:22;4371:49;:::i;:::-;4361:59;;4473:3;4462:9;4458:19;4445:33;4429:49;;4503:2;4493:8;4490:16;4487:36;;;4519:1;4516;4509:12;4487:36;;4542:51;4585:7;4574:8;4563:9;4559:24;4542:51;:::i;:::-;4532:61;;;3714:885;;;;;;;;:::o;4604:247::-;4663:6;4716:2;4704:9;4695:7;4691:23;4687:32;4684:52;;;4732:1;4729;4722:12;4684:52;4771:9;4758:23;4790:31;4815:5;4790:31;:::i;4856:523::-;4942:6;4950;4958;5011:2;4999:9;4990:7;4986:23;4982:32;4979:52;;;5027:1;5024;5017:12;4979:52;5066:9;5053:23;5085:31;5110:5;5085:31;:::i;:::-;5135:5;-1:-1:-1;5187:2:239;5172:18;;5159:32;;-1:-1:-1;5242:2:239;5227:18;;5214:32;5269:18;5258:30;;5255:50;;;5301:1;5298;5291:12;5255:50;5324:49;5365:7;5356:6;5345:9;5341:22;5324:49;:::i;:::-;5314:59;;;4856:523;;;;;:::o;5384:388::-;5452:6;5460;5513:2;5501:9;5492:7;5488:23;5484:32;5481:52;;;5529:1;5526;5519:12;5481:52;5568:9;5555:23;5587:31;5612:5;5587:31;:::i;:::-;5637:5;-1:-1:-1;5694:2:239;5679:18;;5666:32;5707:33;5666:32;5707:33;:::i;:::-;5759:7;5749:17;;;5384:388;;;;;:::o;5777:743::-;5881:6;5889;5897;5905;5958:3;5946:9;5937:7;5933:23;5929:33;5926:53;;;5975:1;5972;5965:12;5926:53;6014:9;6001:23;6033:31;6058:5;6033:31;:::i;:::-;6083:5;-1:-1:-1;6135:2:239;6120:18;;6107:32;;-1:-1:-1;6190:2:239;6175:18;;6162:32;6213:18;6243:14;;;6240:34;;;6270:1;6267;6260:12;6240:34;6293:49;6334:7;6325:6;6314:9;6310:22;6293:49;:::i;:::-;6283:59;;6395:2;6384:9;6380:18;6367:32;6351:48;;6424:2;6414:8;6411:16;6408:36;;;6440:1;6437;6430:12;6408:36;;6463:51;6506:7;6495:8;6484:9;6480:24;6463:51;:::i;:::-;6453:61;;;5777:743;;;;;;;:::o;6525:388::-;6602:6;6610;6663:2;6651:9;6642:7;6638:23;6634:32;6631:52;;;6679:1;6676;6669:12;6631:52;6715:9;6702:23;6692:33;;6776:2;6765:9;6761:18;6748:32;6803:18;6795:6;6792:30;6789:50;;;6835:1;6832;6825:12;6789:50;6858:49;6899:7;6890:6;6879:9;6875:22;6858:49;:::i;:::-;6848:59;;;6525:388;;;;;:::o;6918:380::-;6997:1;6993:12;;;;7040;;;7061:61;;7115:4;7107:6;7103:17;7093:27;;7061:61;7168:2;7160:6;7157:14;7137:18;7134:38;7131:161;;;7214:10;7209:3;7205:20;7202:1;7195:31;7249:4;7246:1;7239:15;7277:4;7274:1;7267:15;7131:161;;6918:380;;;:::o;7303:408::-;7505:2;7487:21;;;7544:2;7524:18;;;7517:30;7583:34;7578:2;7563:18;;7556:62;-1:-1:-1;;;7649:2:239;7634:18;;7627:42;7701:3;7686:19;;7303:408::o;11311:127::-;11372:10;11367:3;11363:20;11360:1;11353:31;11403:4;11400:1;11393:15;11427:4;11424:1;11417:15;11443:125;11483:4;11511:1;11508;11505:8;11502:34;;;11516:18;;:::i;:::-;-1:-1:-1;11553:9:239;;11443:125::o;11573:450::-;11794:6;11783:9;11776:25;11837:2;11832;11821:9;11817:18;11810:30;11757:4;11863:45;11904:2;11893:9;11889:18;11881:6;11863:45;:::i;:::-;11956:9;11948:6;11944:22;11939:2;11928:9;11924:18;11917:50;11984:33;12010:6;12002;11984:33;:::i;:::-;11976:41;11573:450;-1:-1:-1;;;;;;11573:450:239:o;12307:251::-;12377:6;12430:2;12418:9;12409:7;12405:23;12401:32;12398:52;;;12446:1;12443;12436:12;12398:52;12478:9;12472:16;12497:31;12522:5;12497:31;:::i;12563:732::-;-1:-1:-1;;;;;12906:15:239;;;12888:34;;12958:15;;;12953:2;12938:18;;12931:43;13010:15;;13005:2;12990:18;;12983:43;13057:2;13042:18;;13035:34;;;13106:3;13100;13085:19;;13078:32;;;12831:4;;13133:46;;13159:19;;13151:6;13133:46;:::i;:::-;13228:9;13220:6;13216:22;13210:3;13199:9;13195:19;13188:51;13256:33;13282:6;13274;13256:33;:::i;:::-;13248:41;12563:732;-1:-1:-1;;;;;;;;;12563:732:239:o;13708:128::-;13748:3;13779:1;13775:6;13772:1;13769:13;13766:39;;;13785:18;;:::i;:::-;-1:-1:-1;13821:9:239;;13708:128::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC777} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. Support for ERC20 is included in this contract, as specified by the EIP: both the ERC777 and ERC20 interfaces can be safely used when interacting with it. Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token movements. Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there are no special restrictions in the amount of tokens that created, moved, or destroyed. This makes integration with ERC20 applications seamless.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}. Note that operator and allowance concepts are orthogonal: operators may not have allowance, and accounts with allowance may not be operators themselves."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Note that accounts cannot have allowance issued by their operators."
      },
      "authorizeOperator(address)": {
        "details": "See {IERC777-authorizeOperator}."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by an account (`tokenHolder`)."
      },
      "burn(uint256,bytes)": {
        "details": "See {IERC777-burn}. Also emits a {IERC20-Transfer} event for ERC20 compatibility."
      },
      "constructor": {
        "details": "`defaultOperators` may be an empty array."
      },
      "decimals()": {
        "details": "See {ERC20-decimals}. Always returns 18, as per the [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility)."
      },
      "defaultOperators()": {
        "details": "See {IERC777-defaultOperators}."
      },
      "granularity()": {
        "details": "See {IERC777-granularity}. This implementation always returns `1`."
      },
      "isOperatorFor(address,address)": {
        "details": "See {IERC777-isOperatorFor}."
      },
      "name()": {
        "details": "See {IERC777-name}."
      },
      "operatorBurn(address,uint256,bytes,bytes)": {
        "details": "See {IERC777-operatorBurn}. Emits {Burned} and {IERC20-Transfer} events."
      },
      "operatorSend(address,address,uint256,bytes,bytes)": {
        "details": "See {IERC777-operatorSend}. Emits {Sent} and {IERC20-Transfer} events."
      },
      "revokeOperator(address)": {
        "details": "See {IERC777-revokeOperator}."
      },
      "send(address,uint256,bytes)": {
        "details": "See {IERC777-send}. Also emits a {IERC20-Transfer} event for ERC20 compatibility."
      },
      "symbol()": {
        "details": "See {IERC777-symbol}."
      },
      "totalSupply()": {
        "details": "See {IERC777-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient} interface if it is a contract. Also emits a {Sent} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Note that operator and allowance concepts are orthogonal: operators cannot call `transferFrom` (unless they have allowance), and accounts with allowance cannot call `operatorSend` (unless they are operators). Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events."
      }
    },
    "version": 1
  },
  "offset": [
    1088,
    18606
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x959B8C3F GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD95B6371 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD95B6371 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0xFAD8B32A EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xFC673C4F EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0xFE9D9303 EQ PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x959B8C3F EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x9BD9BBC6 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x218 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x556F0DC7 EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x62AD1B83 EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6E48538 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x171 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x1090 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x312 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x112A JUMP JUMPDEST PUSH2 0x161 PUSH2 0x15C CALLDATASIZE PUSH1 0x4 PUSH2 0x1155 JUMP JUMPDEST PUSH2 0x39B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH1 0x1 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x1181 JUMP JUMPDEST PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x130 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x175 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1BA CALLDATASIZE PUSH1 0x4 PUSH2 0x1265 JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x1CF CALLDATASIZE PUSH1 0x4 PUSH2 0x12F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1F8 CALLDATASIZE PUSH1 0x4 PUSH2 0x12F8 JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST PUSH2 0x141 PUSH2 0x55C JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x213 CALLDATASIZE PUSH1 0x4 PUSH2 0x1315 JUMP JUMPDEST PUSH2 0x56B JUMP JUMPDEST PUSH2 0x161 PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x1155 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH2 0x161 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x136E JUMP JUMPDEST PUSH2 0x5C6 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x136E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x12F8 JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A7 JUMP JUMPDEST PUSH2 0x784 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0x1427 JUMP JUMPDEST PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x308 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2EA JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0x146E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x34D SWAP1 PUSH2 0x146E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x308 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x36F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x308 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x37D JUMPI POP SWAP4 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3A9 DUP2 DUP6 DUP6 PUSH2 0x7DB JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x3C1 DUP6 DUP3 DUP6 PUSH2 0x902 JUMP JUMPDEST PUSH2 0x3EE DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0x98E JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x403 CALLER DUP7 PUSH2 0x5C6 JUMP JUMPDEST PUSH2 0x428 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41F SWAP1 PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x437 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH1 0x1 PUSH2 0x98E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ ISZERO PUSH2 0x4A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617574686F72697A696E672073656C66206173206F706572 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x30BA37B9 PUSH1 0xE1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4F4 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x523 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xF4CAEB2D6CA8932A215A353D0703C326EC2D81FC68170F320EB2AB49E9DF61F9 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x321 SWAP1 PUSH2 0x146E JUMP JUMPDEST PUSH2 0x589 CALLER DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x1 PUSH2 0x98E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5BD CALLER DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0x98E JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x631 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x631 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST DUP1 PUSH2 0x661 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x6CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207265766F6B696E672073656C66206173206F70657261746F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x71F JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x74B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x50546E66E5F44D728365DC3908C63BC5CFEEAB470722C1677E3073A6AC294AA1 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP JUMP JUMPDEST PUSH2 0x78E CALLER DUP6 PUSH2 0x5C6 JUMP JUMPDEST PUSH2 0x7AA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41F SWAP1 PUSH2 0x14A9 JUMP JUMPDEST PUSH2 0x7B6 DUP5 DUP5 DUP5 DUP5 PUSH2 0xA8A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x7D7 CALLER DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xA8A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x83F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F76652066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20617070726F766520746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x7B6 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x981 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20696E73756666696369656E7420616C6C6F77616E63650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x41F JUMP JUMPDEST PUSH2 0x7B6 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x7DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x9F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E736665722066726F6D20746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0xA55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST CALLER PUSH2 0xA64 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xC3E JUMP JUMPDEST PUSH2 0xA72 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xD65 JUMP JUMPDEST PUSH2 0xA81 DUP2 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xECB JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xAEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E2066726F6D20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST CALLER PUSH2 0xAFB DUP2 DUP7 PUSH1 0x0 DUP8 DUP8 DUP8 PUSH2 0xC3E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0xB70 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A206275726E20616D6F756E7420657863656564732062616C61 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E6365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP7 DUP4 SUB SWAP1 SSTORE PUSH1 0x1 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0xB9F SWAP1 DUP5 SWAP1 PUSH2 0x150B JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA78A9BE3A7B862D26933AD85FB11D80EF66B8F972D7CBBA06621D583943A4098 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xBED SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCBF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCE3 SWAP2 SWAP1 PUSH2 0x1557 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xA81 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3AD5CBC1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x75AB9782 SWAP1 PUSH2 0xD2A SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x1574 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD58 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0xDDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A207472616E7366657220616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x62616C616E6365 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x41F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP2 DUP8 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xE15 SWAP1 DUP5 SWAP1 PUSH2 0x15CE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x6B541DDAA720DB2B10A4D0CDAC39B8D360425FC073085FAC19BC82614677987 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xE6D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP7 PUSH1 0x40 MLOAD PUSH2 0xEBA SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x555DDC65 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24 SWAP1 PUSH4 0xAABBB8CA SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF70 SWAP2 SWAP1 PUSH2 0x1557 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO PUSH2 0xFEC JUMPI PUSH1 0x40 MLOAD PUSH3 0x23DE29 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH3 0x23DE29 SWAP1 PUSH2 0xFB5 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x1574 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1086 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1086 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND EXTCODESIZE ISZERO PUSH2 0x1086 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433737373A20746F6B656E20726563697069656E7420636F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20686173206E6F20696D706C656D656E74657220666F7220455243373737546F PUSH1 0x64 DUP3 ADD MSTORE PUSH13 0x1AD95B9CD49958DA5C1A595B9D PUSH1 0x9A SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x41F JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x10D1 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x10AC JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1103 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x10E7 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1115 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x661 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x10DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1152 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1168 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1173 DUP2 PUSH2 0x113D JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x11A1 DUP2 PUSH2 0x113D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x11B1 DUP2 PUSH2 0x113D JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1204 JUMPI PUSH2 0x1204 PUSH2 0x11C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x122C JUMPI PUSH2 0x122C PUSH2 0x11C2 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x127D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x1288 DUP2 PUSH2 0x113D JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x1298 DUP2 PUSH2 0x113D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x12BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12C8 DUP10 DUP4 DUP11 ADD PUSH2 0x11D8 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x12DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12EB DUP9 DUP3 DUP10 ADD PUSH2 0x11D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x130A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x661 DUP2 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x132A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1335 DUP2 PUSH2 0x113D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1358 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1364 DUP7 DUP3 DUP8 ADD PUSH2 0x11D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1381 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x138C DUP2 PUSH2 0x113D JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x139C DUP2 PUSH2 0x113D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x13BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x13C8 DUP2 PUSH2 0x113D JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x13EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13F8 DUP9 DUP4 DUP10 ADD PUSH2 0x11D8 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x140E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x141B DUP8 DUP3 DUP9 ADD PUSH2 0x11D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x143A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1464 DUP6 DUP3 DUP7 ADD PUSH2 0x11D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1482 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x14A3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2C SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F PUSH1 0x40 DUP3 ADD MSTORE PUSH12 0x39103337B9103437B63232B9 PUSH1 0xA1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x151D JUMPI PUSH2 0x151D PUSH2 0x14F5 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x153B PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x10DD JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x154D DUP2 DUP6 PUSH2 0x10DD JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1569 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x661 DUP2 PUSH2 0x113D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE DUP7 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP6 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xC0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x15AF SWAP1 DUP4 ADD DUP6 PUSH2 0x10DD JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x15C1 DUP2 DUP6 PUSH2 0x10DD JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x15E1 JUMPI PUSH2 0x15E1 PUSH2 0x14F5 JUMP JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 DUP8 0xEA NUMBER PUSH19 0x5730049AA37FBB86A141CCB0D1ED2EB9FD74D0 0x28 SAR PUSH7 0xF5CFB9B01F6473 PUSH16 0x6C634300080C00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "5": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "CALLVALUE",
      "path": "200"
    },
    "6": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "7": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "8": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "12": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "REVERT",
      "path": "200"
    },
    "16": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "17": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "POP",
      "path": "200"
    },
    "18": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "CALLDATASIZE",
      "path": "200"
    },
    "21": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "LT",
      "path": "200"
    },
    "22": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x116"
    },
    "25": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "26": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "CALLDATALOAD",
      "path": "200"
    },
    "29": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "SHR",
      "path": "200"
    },
    "32": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "33": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH4",
      "path": "200",
      "value": "0x959B8C3F"
    },
    "38": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "GT",
      "path": "200"
    },
    "39": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "43": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "44": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH4",
      "path": "200",
      "value": "0xD95B6371"
    },
    "49": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "GT",
      "path": "200"
    },
    "50": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "54": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "55": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH4",
      "path": "200",
      "value": "0xD95B6371"
    },
    "60": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "EQ",
      "path": "200"
    },
    "61": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x22B"
    },
    "64": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "65": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "66": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH4",
      "path": "200",
      "value": "0xDD62ED3E"
    },
    "71": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "EQ",
      "path": "200"
    },
    "72": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x23E"
    },
    "75": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "76": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "77": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH4",
      "path": "200",
      "value": "0xFAD8B32A"
    },
    "82": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "EQ",
      "path": "200"
    },
    "83": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x277"
    },
    "86": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "87": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "88": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH4",
      "path": "200",
      "value": "0xFC673C4F"
    },
    "93": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "EQ",
      "path": "200"
    },
    "94": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x28A"
    },
    "97": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "98": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "99": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH4",
      "path": "200",
      "value": "0xFE9D9303"
    },
    "104": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "EQ",
      "path": "200"
    },
    "105": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x29D"
    },
    "108": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "109": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "112": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "REVERT",
      "path": "200"
    },
    "113": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "114": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "115": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH4",
      "path": "200",
      "value": "0x959B8C3F"
    },
    "120": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "EQ",
      "path": "200"
    },
    "121": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1EA"
    },
    "124": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "125": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "126": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH4",
      "path": "200",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "EQ",
      "path": "200"
    },
    "132": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1FD"
    },
    "135": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "136": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "137": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH4",
      "path": "200",
      "value": "0x9BD9BBC6"
    },
    "142": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "EQ",
      "path": "200"
    },
    "143": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x205"
    },
    "146": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "147": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "148": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH4",
      "path": "200",
      "value": "0xA9059CBB"
    },
    "153": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "EQ",
      "path": "200"
    },
    "154": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x218"
    },
    "157": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "158": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "160": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "161": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "REVERT",
      "path": "200"
    },
    "162": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "163": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "164": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH4",
      "path": "200",
      "value": "0x23B872DD"
    },
    "169": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "GT",
      "path": "200"
    },
    "170": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xE9"
    },
    "173": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "174": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "175": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH4",
      "path": "200",
      "value": "0x23B872DD"
    },
    "180": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "EQ",
      "path": "200"
    },
    "181": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x183"
    },
    "184": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "185": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "186": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH4",
      "path": "200",
      "value": "0x313CE567"
    },
    "191": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "EQ",
      "path": "200"
    },
    "192": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x196"
    },
    "195": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "196": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "197": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH4",
      "path": "200",
      "value": "0x556F0DC7"
    },
    "202": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "EQ",
      "path": "200"
    },
    "203": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1A5"
    },
    "206": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "207": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "208": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH4",
      "path": "200",
      "value": "0x62AD1B83"
    },
    "213": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "EQ",
      "path": "200"
    },
    "214": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1AC"
    },
    "217": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "218": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "219": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH4",
      "path": "200",
      "value": "0x70A08231"
    },
    "224": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "EQ",
      "path": "200"
    },
    "225": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1C1"
    },
    "228": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "229": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "231": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "232": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "REVERT",
      "path": "200"
    },
    "233": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "234": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "235": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH4",
      "path": "200",
      "value": "0x6E48538"
    },
    "240": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "EQ",
      "path": "200"
    },
    "241": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x11B"
    },
    "244": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "245": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "246": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH4",
      "path": "200",
      "value": "0x6FDDE03"
    },
    "251": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "EQ",
      "path": "200"
    },
    "252": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x139"
    },
    "255": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "256": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "257": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH4",
      "path": "200",
      "value": "0x95EA7B3"
    },
    "262": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "EQ",
      "path": "200"
    },
    "263": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x14E"
    },
    "266": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "267": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "268": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH4",
      "path": "200",
      "value": "0x18160DDD"
    },
    "273": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "EQ",
      "path": "200"
    },
    "274": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x171"
    },
    "277": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "278": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "279": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "281": {
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "DUP1",
      "path": "200"
    },
    "282": {
      "first_revert": true,
      "fn": null,
      "offset": [
        1088,
        18606
      ],
      "op": "REVERT",
      "path": "200"
    },
    "283": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6528,
        6658
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "284": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6528,
        6658
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x123"
    },
    "287": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6528,
        6658
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x2B0"
    },
    "290": {
      "fn": "ERC777.defaultOperators",
      "jump": "i",
      "offset": [
        6528,
        6658
      ],
      "op": "JUMP",
      "path": "200"
    },
    "291": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6528,
        6658
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "292": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6528,
        6658
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "294": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6528,
        6658
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "295": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6528,
        6658
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x130"
    },
    "298": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6528,
        6658
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "299": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6528,
        6658
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "300": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6528,
        6658
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1090"
    },
    "303": {
      "fn": "ERC777.defaultOperators",
      "jump": "i",
      "offset": [
        6528,
        6658
      ],
      "op": "JUMP",
      "path": "200"
    },
    "304": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6528,
        6658
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "305": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6528,
        6658
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "307": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6528,
        6658
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "308": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6528,
        6658
      ],
      "op": "DUP1",
      "path": "200"
    },
    "309": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6528,
        6658
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "310": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6528,
        6658
      ],
      "op": "SUB",
      "path": "200"
    },
    "311": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6528,
        6658
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "312": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6528,
        6658
      ],
      "op": "RETURN",
      "path": "200"
    },
    "313": {
      "fn": "ERC777.name",
      "offset": [
        2982,
        3080
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "314": {
      "fn": "ERC777.name",
      "offset": [
        2982,
        3080
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x141"
    },
    "317": {
      "fn": "ERC777.name",
      "offset": [
        2982,
        3080
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x312"
    },
    "320": {
      "fn": "ERC777.name",
      "jump": "i",
      "offset": [
        2982,
        3080
      ],
      "op": "JUMP",
      "path": "200"
    },
    "321": {
      "fn": "ERC777.name",
      "offset": [
        2982,
        3080
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "322": {
      "fn": "ERC777.name",
      "offset": [
        2982,
        3080
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "324": {
      "fn": "ERC777.name",
      "offset": [
        2982,
        3080
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "325": {
      "fn": "ERC777.name",
      "offset": [
        2982,
        3080
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x130"
    },
    "328": {
      "fn": "ERC777.name",
      "offset": [
        2982,
        3080
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "329": {
      "fn": "ERC777.name",
      "offset": [
        2982,
        3080
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "330": {
      "fn": "ERC777.name",
      "offset": [
        2982,
        3080
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x112A"
    },
    "333": {
      "fn": "ERC777.name",
      "jump": "i",
      "offset": [
        2982,
        3080
      ],
      "op": "JUMP",
      "path": "200"
    },
    "334": {
      "fn": "ERC777.approve",
      "offset": [
        8286,
        8483
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "335": {
      "fn": "ERC777.approve",
      "offset": [
        8286,
        8483
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x161"
    },
    "338": {
      "fn": "ERC777.approve",
      "offset": [
        8286,
        8483
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x15C"
    },
    "341": {
      "fn": "ERC777.approve",
      "offset": [
        8286,
        8483
      ],
      "op": "CALLDATASIZE",
      "path": "200"
    },
    "342": {
      "fn": "ERC777.approve",
      "offset": [
        8286,
        8483
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "344": {
      "fn": "ERC777.approve",
      "offset": [
        8286,
        8483
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1155"
    },
    "347": {
      "fn": "ERC777.approve",
      "jump": "i",
      "offset": [
        8286,
        8483
      ],
      "op": "JUMP",
      "path": "200"
    },
    "348": {
      "fn": "ERC777.approve",
      "offset": [
        8286,
        8483
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "349": {
      "fn": "ERC777.approve",
      "offset": [
        8286,
        8483
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x39B"
    },
    "352": {
      "fn": "ERC777.approve",
      "jump": "i",
      "offset": [
        8286,
        8483
      ],
      "op": "JUMP",
      "path": "200"
    },
    "353": {
      "fn": "ERC777.approve",
      "offset": [
        8286,
        8483
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "354": {
      "fn": "ERC777.approve",
      "offset": [
        8286,
        8483
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "356": {
      "fn": "ERC777.approve",
      "offset": [
        8286,
        8483
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "357": {
      "op": "SWAP1"
    },
    "358": {
      "op": "ISZERO"
    },
    "359": {
      "op": "ISZERO"
    },
    "360": {
      "op": "DUP2"
    },
    "361": {
      "op": "MSTORE"
    },
    "362": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "364": {
      "op": "ADD"
    },
    "365": {
      "fn": "ERC777.approve",
      "offset": [
        8286,
        8483
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x130"
    },
    "368": {
      "op": "JUMP"
    },
    "369": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3775,
        3898
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "370": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3879,
        3891
      ],
      "op": "PUSH1",
      "path": "200",
      "statement": 0,
      "value": "0x1"
    },
    "372": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3879,
        3891
      ],
      "op": "SLOAD",
      "path": "200"
    },
    "373": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3775,
        3898
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "374": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3775,
        3898
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "376": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3775,
        3898
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "377": {
      "op": "SWAP1"
    },
    "378": {
      "op": "DUP2"
    },
    "379": {
      "op": "MSTORE"
    },
    "380": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "382": {
      "op": "ADD"
    },
    "383": {
      "fn": "ERC777.totalSupply",
      "offset": [
        3775,
        3898
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x130"
    },
    "386": {
      "op": "JUMP"
    },
    "387": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8965,
        9282
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "388": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8965,
        9282
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x161"
    },
    "391": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8965,
        9282
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x191"
    },
    "394": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8965,
        9282
      ],
      "op": "CALLDATASIZE",
      "path": "200"
    },
    "395": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8965,
        9282
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "397": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8965,
        9282
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1181"
    },
    "400": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        8965,
        9282
      ],
      "op": "JUMP",
      "path": "200"
    },
    "401": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8965,
        9282
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "402": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8965,
        9282
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x3B3"
    },
    "405": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        8965,
        9282
      ],
      "op": "JUMP",
      "path": "200"
    },
    "406": {
      "fn": "ERC777.decimals",
      "offset": [
        3422,
        3504
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "407": {
      "fn": "ERC777.decimals",
      "offset": [
        3422,
        3504
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "409": {
      "fn": "ERC777.decimals",
      "offset": [
        3422,
        3504
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "410": {
      "fn": "ERC777.decimals",
      "offset": [
        3495,
        3497
      ],
      "op": "PUSH1",
      "path": "200",
      "statement": 1,
      "value": "0x12"
    },
    "412": {
      "op": "DUP2"
    },
    "413": {
      "op": "MSTORE"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "416": {
      "op": "ADD"
    },
    "417": {
      "fn": "ERC777.decimals",
      "offset": [
        3422,
        3504
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x130"
    },
    "420": {
      "op": "JUMP"
    },
    "421": {
      "fn": "ERC777.granularity",
      "offset": [
        3619,
        3714
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "422": {
      "fn": "ERC777.granularity",
      "offset": [
        3706,
        3707
      ],
      "op": "PUSH1",
      "path": "200",
      "statement": 2,
      "value": "0x1"
    },
    "424": {
      "fn": "ERC777.granularity",
      "offset": [
        3619,
        3714
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x175"
    },
    "427": {
      "fn": "ERC777.granularity",
      "offset": [
        3619,
        3714
      ],
      "op": "JUMP",
      "path": "200"
    },
    "428": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6777,
        7143
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "429": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6777,
        7143
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1BF"
    },
    "432": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6777,
        7143
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1BA"
    },
    "435": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6777,
        7143
      ],
      "op": "CALLDATASIZE",
      "path": "200"
    },
    "436": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6777,
        7143
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "438": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6777,
        7143
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1265"
    },
    "441": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        6777,
        7143
      ],
      "op": "JUMP",
      "path": "200"
    },
    "442": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6777,
        7143
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "443": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6777,
        7143
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x3F9"
    },
    "446": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        6777,
        7143
      ],
      "op": "JUMP",
      "path": "200"
    },
    "447": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6777,
        7143
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "448": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6777,
        7143
      ],
      "op": "STOP",
      "path": "200"
    },
    "449": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3998,
        4148
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "450": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3998,
        4148
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x175"
    },
    "453": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3998,
        4148
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1CF"
    },
    "456": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3998,
        4148
      ],
      "op": "CALLDATASIZE",
      "path": "200"
    },
    "457": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3998,
        4148
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "459": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3998,
        4148
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x12F8"
    },
    "462": {
      "fn": "ERC777.balanceOf",
      "jump": "i",
      "offset": [
        3998,
        4148
      ],
      "op": "JUMP",
      "path": "200"
    },
    "463": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3998,
        4148
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "470": {
      "op": "SHL"
    },
    "471": {
      "op": "SUB"
    },
    "472": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4119,
        4141
      ],
      "op": "AND",
      "path": "200",
      "statement": 3
    },
    "473": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4093,
        4100
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "475": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4119,
        4141
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "476": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4119,
        4141
      ],
      "op": "DUP2",
      "path": "200"
    },
    "477": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4119,
        4141
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "478": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4119,
        4141
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "480": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4119,
        4141
      ],
      "op": "DUP2",
      "path": "200"
    },
    "481": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4119,
        4141
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "482": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4119,
        4141
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "483": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4119,
        4141
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "485": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4119,
        4141
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "486": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4119,
        4141
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "487": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4119,
        4141
      ],
      "op": "SLOAD",
      "path": "200"
    },
    "488": {
      "fn": "ERC777.balanceOf",
      "offset": [
        4119,
        4141
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "489": {
      "fn": "ERC777.balanceOf",
      "offset": [
        3998,
        4148
      ],
      "op": "JUMP",
      "path": "200"
    },
    "490": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5583,
        5995
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "491": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5583,
        5995
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1BF"
    },
    "494": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5583,
        5995
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1F8"
    },
    "497": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5583,
        5995
      ],
      "op": "CALLDATASIZE",
      "path": "200"
    },
    "498": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5583,
        5995
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "500": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5583,
        5995
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x12F8"
    },
    "503": {
      "fn": "ERC777.authorizeOperator",
      "jump": "i",
      "offset": [
        5583,
        5995
      ],
      "op": "JUMP",
      "path": "200"
    },
    "504": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5583,
        5995
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "505": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5583,
        5995
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x43E"
    },
    "508": {
      "fn": "ERC777.authorizeOperator",
      "jump": "i",
      "offset": [
        5583,
        5995
      ],
      "op": "JUMP",
      "path": "200"
    },
    "509": {
      "fn": "ERC777.symbol",
      "offset": [
        3136,
        3238
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "510": {
      "fn": "ERC777.symbol",
      "offset": [
        3136,
        3238
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x141"
    },
    "513": {
      "fn": "ERC777.symbol",
      "offset": [
        3136,
        3238
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x55C"
    },
    "516": {
      "fn": "ERC777.symbol",
      "jump": "i",
      "offset": [
        3136,
        3238
      ],
      "op": "JUMP",
      "path": "200"
    },
    "517": {
      "fn": "ERC777.send",
      "offset": [
        4278,
        4471
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "518": {
      "fn": "ERC777.send",
      "offset": [
        4278,
        4471
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1BF"
    },
    "521": {
      "fn": "ERC777.send",
      "offset": [
        4278,
        4471
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x213"
    },
    "524": {
      "fn": "ERC777.send",
      "offset": [
        4278,
        4471
      ],
      "op": "CALLDATASIZE",
      "path": "200"
    },
    "525": {
      "fn": "ERC777.send",
      "offset": [
        4278,
        4471
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "527": {
      "fn": "ERC777.send",
      "offset": [
        4278,
        4471
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1315"
    },
    "530": {
      "fn": "ERC777.send",
      "jump": "i",
      "offset": [
        4278,
        4471
      ],
      "op": "JUMP",
      "path": "200"
    },
    "531": {
      "fn": "ERC777.send",
      "offset": [
        4278,
        4471
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "532": {
      "fn": "ERC777.send",
      "offset": [
        4278,
        4471
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x56B"
    },
    "535": {
      "fn": "ERC777.send",
      "jump": "i",
      "offset": [
        4278,
        4471
      ],
      "op": "JUMP",
      "path": "200"
    },
    "536": {
      "fn": "ERC777.transfer",
      "offset": [
        4702,
        4885
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "537": {
      "fn": "ERC777.transfer",
      "offset": [
        4702,
        4885
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x161"
    },
    "540": {
      "fn": "ERC777.transfer",
      "offset": [
        4702,
        4885
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x226"
    },
    "543": {
      "fn": "ERC777.transfer",
      "offset": [
        4702,
        4885
      ],
      "op": "CALLDATASIZE",
      "path": "200"
    },
    "544": {
      "fn": "ERC777.transfer",
      "offset": [
        4702,
        4885
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "546": {
      "fn": "ERC777.transfer",
      "offset": [
        4702,
        4885
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1155"
    },
    "549": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4702,
        4885
      ],
      "op": "JUMP",
      "path": "200"
    },
    "550": {
      "fn": "ERC777.transfer",
      "offset": [
        4702,
        4885
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "551": {
      "fn": "ERC777.transfer",
      "offset": [
        4702,
        4885
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x58E"
    },
    "554": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4702,
        4885
      ],
      "op": "JUMP",
      "path": "200"
    },
    "555": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5205,
        5516
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "556": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5205,
        5516
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x161"
    },
    "559": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5205,
        5516
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x239"
    },
    "562": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5205,
        5516
      ],
      "op": "CALLDATASIZE",
      "path": "200"
    },
    "563": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5205,
        5516
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "565": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5205,
        5516
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x136E"
    },
    "568": {
      "fn": "ERC777.isOperatorFor",
      "jump": "i",
      "offset": [
        5205,
        5516
      ],
      "op": "JUMP",
      "path": "200"
    },
    "569": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5205,
        5516
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "570": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5205,
        5516
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x5C6"
    },
    "573": {
      "fn": "ERC777.isOperatorFor",
      "jump": "i",
      "offset": [
        5205,
        5516
      ],
      "op": "JUMP",
      "path": "200"
    },
    "574": {
      "fn": "ERC777.allowance",
      "offset": [
        7828,
        7979
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "575": {
      "fn": "ERC777.allowance",
      "offset": [
        7828,
        7979
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x175"
    },
    "578": {
      "fn": "ERC777.allowance",
      "offset": [
        7828,
        7979
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x24C"
    },
    "581": {
      "fn": "ERC777.allowance",
      "offset": [
        7828,
        7979
      ],
      "op": "CALLDATASIZE",
      "path": "200"
    },
    "582": {
      "fn": "ERC777.allowance",
      "offset": [
        7828,
        7979
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "584": {
      "fn": "ERC777.allowance",
      "offset": [
        7828,
        7979
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x136E"
    },
    "587": {
      "fn": "ERC777.allowance",
      "jump": "i",
      "offset": [
        7828,
        7979
      ],
      "op": "JUMP",
      "path": "200"
    },
    "588": {
      "fn": "ERC777.allowance",
      "offset": [
        7828,
        7979
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "595": {
      "op": "SHL"
    },
    "596": {
      "op": "SUB"
    },
    "597": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "SWAP2",
      "path": "200",
      "statement": 4
    },
    "598": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "DUP3",
      "path": "200"
    },
    "599": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "AND",
      "path": "200"
    },
    "600": {
      "fn": "ERC777.allowance",
      "offset": [
        7918,
        7925
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "602": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "603": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "DUP2",
      "path": "200"
    },
    "604": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "605": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7955
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x8"
    },
    "607": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "609": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "610": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "DUP2",
      "path": "200"
    },
    "611": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "612": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "614": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "DUP1",
      "path": "200"
    },
    "615": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "DUP4",
      "path": "200"
    },
    "616": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "617": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7972
      ],
      "op": "SWAP4",
      "path": "200"
    },
    "618": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7972
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "619": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7972
      ],
      "op": "SWAP5",
      "path": "200"
    },
    "620": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7972
      ],
      "op": "AND",
      "path": "200"
    },
    "621": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7972
      ],
      "op": "DUP3",
      "path": "200"
    },
    "622": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7972
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "623": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7972
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "624": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7972
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "625": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7972
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "626": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7972
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "627": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7972
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "628": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7972
      ],
      "op": "SLOAD",
      "path": "200"
    },
    "629": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7972
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "630": {
      "fn": "ERC777.allowance",
      "offset": [
        7828,
        7979
      ],
      "op": "JUMP",
      "path": "200"
    },
    "631": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6059,
        6462
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "632": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6059,
        6462
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1BF"
    },
    "635": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6059,
        6462
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x285"
    },
    "638": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6059,
        6462
      ],
      "op": "CALLDATASIZE",
      "path": "200"
    },
    "639": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6059,
        6462
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "641": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6059,
        6462
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x12F8"
    },
    "644": {
      "fn": "ERC777.revokeOperator",
      "jump": "i",
      "offset": [
        6059,
        6462
      ],
      "op": "JUMP",
      "path": "200"
    },
    "645": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6059,
        6462
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "646": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6059,
        6462
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x668"
    },
    "649": {
      "fn": "ERC777.revokeOperator",
      "jump": "i",
      "offset": [
        6059,
        6462
      ],
      "op": "JUMP",
      "path": "200"
    },
    "650": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7264,
        7589
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "651": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7264,
        7589
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1BF"
    },
    "654": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7264,
        7589
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x298"
    },
    "657": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7264,
        7589
      ],
      "op": "CALLDATASIZE",
      "path": "200"
    },
    "658": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7264,
        7589
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "660": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7264,
        7589
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x13A7"
    },
    "663": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7264,
        7589
      ],
      "op": "JUMP",
      "path": "200"
    },
    "664": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7264,
        7589
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "665": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7264,
        7589
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x784"
    },
    "668": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7264,
        7589
      ],
      "op": "JUMP",
      "path": "200"
    },
    "669": {
      "fn": "ERC777.burn",
      "offset": [
        5015,
        5142
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "670": {
      "fn": "ERC777.burn",
      "offset": [
        5015,
        5142
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1BF"
    },
    "673": {
      "fn": "ERC777.burn",
      "offset": [
        5015,
        5142
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x2AB"
    },
    "676": {
      "fn": "ERC777.burn",
      "offset": [
        5015,
        5142
      ],
      "op": "CALLDATASIZE",
      "path": "200"
    },
    "677": {
      "fn": "ERC777.burn",
      "offset": [
        5015,
        5142
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "679": {
      "fn": "ERC777.burn",
      "offset": [
        5015,
        5142
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1427"
    },
    "682": {
      "fn": "ERC777.burn",
      "jump": "i",
      "offset": [
        5015,
        5142
      ],
      "op": "JUMP",
      "path": "200"
    },
    "683": {
      "fn": "ERC777.burn",
      "offset": [
        5015,
        5142
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "684": {
      "fn": "ERC777.burn",
      "offset": [
        5015,
        5142
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x7BC"
    },
    "687": {
      "fn": "ERC777.burn",
      "jump": "i",
      "offset": [
        5015,
        5142
      ],
      "op": "JUMP",
      "path": "200"
    },
    "688": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6528,
        6658
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "689": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6594,
        6610
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x60"
    },
    "691": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6629,
        6651
      ],
      "op": "PUSH1",
      "path": "200",
      "statement": 5,
      "value": "0x4"
    },
    "693": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "DUP1",
      "path": "200"
    },
    "694": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "SLOAD",
      "path": "200"
    },
    "695": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "DUP1",
      "path": "200"
    },
    "696": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "698": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "MUL",
      "path": "200"
    },
    "699": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "701": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "ADD",
      "path": "200"
    },
    "702": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "704": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "705": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "706": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "DUP2",
      "path": "200"
    },
    "707": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "ADD",
      "path": "200"
    },
    "708": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "710": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "711": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "DUP1",
      "path": "200"
    },
    "712": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "SWAP3",
      "path": "200"
    },
    "713": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "714": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "715": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "DUP2",
      "path": "200"
    },
    "716": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "DUP2",
      "path": "200"
    },
    "717": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "718": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "720": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "ADD",
      "path": "200"
    },
    "721": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "DUP3",
      "path": "200"
    },
    "722": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "DUP1",
      "path": "200"
    },
    "723": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "SLOAD",
      "path": "200"
    },
    "724": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "DUP1",
      "path": "200"
    },
    "725": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "726": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x308"
    },
    "729": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "730": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "732": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "MUL",
      "path": "200"
    },
    "733": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "DUP3",
      "path": "200"
    },
    "734": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "ADD",
      "path": "200"
    },
    "735": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "736": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "737": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "739": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "740": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "742": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "744": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "745": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "746": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "747": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "DUP2",
      "path": "200"
    },
    "748": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "SLOAD",
      "path": "200"
    },
    "749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "755": {
      "op": "SHL"
    },
    "756": {
      "op": "SUB"
    },
    "757": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "AND",
      "path": "200"
    },
    "758": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "DUP2",
      "path": "200"
    },
    "759": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "760": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x1"
    },
    "762": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "763": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "764": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "ADD",
      "path": "200"
    },
    "765": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "766": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "768": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "ADD",
      "path": "200"
    },
    "769": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "DUP1",
      "path": "200"
    },
    "770": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "DUP4",
      "path": "200"
    },
    "771": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "GT",
      "path": "200"
    },
    "772": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x2EA"
    },
    "775": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "776": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "777": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "POP",
      "path": "200"
    },
    "778": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "POP",
      "path": "200"
    },
    "779": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "POP",
      "path": "200"
    },
    "780": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "POP",
      "path": "200"
    },
    "781": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "POP",
      "path": "200"
    },
    "782": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "783": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6622,
        6651
      ],
      "op": "POP",
      "path": "200"
    },
    "784": {
      "fn": "ERC777.defaultOperators",
      "offset": [
        6528,
        6658
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "785": {
      "fn": "ERC777.defaultOperators",
      "jump": "o",
      "offset": [
        6528,
        6658
      ],
      "op": "JUMP",
      "path": "200"
    },
    "786": {
      "fn": "ERC777.name",
      "offset": [
        2982,
        3080
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "787": {
      "fn": "ERC777.name",
      "offset": [
        3036,
        3049
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x60"
    },
    "789": {
      "fn": "ERC777.name",
      "offset": [
        3068,
        3073
      ],
      "op": "PUSH1",
      "path": "200",
      "statement": 6,
      "value": "0x2"
    },
    "791": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "DUP1",
      "path": "200"
    },
    "792": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "SLOAD",
      "path": "200"
    },
    "793": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x321"
    },
    "796": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "797": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x146E"
    },
    "800": {
      "fn": "ERC777.name",
      "jump": "i",
      "offset": [
        3061,
        3073
      ],
      "op": "JUMP",
      "path": "200"
    },
    "801": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "802": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "DUP1",
      "path": "200"
    },
    "803": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x1F"
    },
    "805": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "ADD",
      "path": "200"
    },
    "806": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "808": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "DUP1",
      "path": "200"
    },
    "809": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "810": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "DIV",
      "path": "200"
    },
    "811": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "MUL",
      "path": "200"
    },
    "812": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "814": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "ADD",
      "path": "200"
    },
    "815": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "817": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "818": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "819": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "DUP2",
      "path": "200"
    },
    "820": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "ADD",
      "path": "200"
    },
    "821": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "823": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "824": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "DUP1",
      "path": "200"
    },
    "825": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "SWAP3",
      "path": "200"
    },
    "826": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "827": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "828": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "DUP2",
      "path": "200"
    },
    "829": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "DUP2",
      "path": "200"
    },
    "830": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "831": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "833": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "ADD",
      "path": "200"
    },
    "834": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "DUP3",
      "path": "200"
    },
    "835": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "DUP1",
      "path": "200"
    },
    "836": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "SLOAD",
      "path": "200"
    },
    "837": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x34D"
    },
    "840": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "841": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x146E"
    },
    "844": {
      "fn": "ERC777.name",
      "jump": "i",
      "offset": [
        3061,
        3073
      ],
      "op": "JUMP",
      "path": "200"
    },
    "845": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "846": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "DUP1",
      "path": "200"
    },
    "847": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "848": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x308"
    },
    "851": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "852": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "DUP1",
      "path": "200"
    },
    "853": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x1F"
    },
    "855": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "LT",
      "path": "200"
    },
    "856": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x36F"
    },
    "859": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "860": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x100"
    },
    "863": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "DUP1",
      "path": "200"
    },
    "864": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "DUP4",
      "path": "200"
    },
    "865": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "SLOAD",
      "path": "200"
    },
    "866": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "DIV",
      "path": "200"
    },
    "867": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "MUL",
      "path": "200"
    },
    "868": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "DUP4",
      "path": "200"
    },
    "869": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "870": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "871": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "873": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "ADD",
      "path": "200"
    },
    "874": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "875": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x308"
    },
    "878": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "JUMP",
      "path": "200"
    },
    "879": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "880": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "DUP3",
      "path": "200"
    },
    "881": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "ADD",
      "path": "200"
    },
    "882": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "883": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "884": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "886": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "887": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "889": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "891": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "892": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "893": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "894": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "DUP2",
      "path": "200"
    },
    "895": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "SLOAD",
      "path": "200"
    },
    "896": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "DUP2",
      "path": "200"
    },
    "897": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "898": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "899": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x1"
    },
    "901": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "ADD",
      "path": "200"
    },
    "902": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "903": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "905": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "ADD",
      "path": "200"
    },
    "906": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "DUP1",
      "path": "200"
    },
    "907": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "DUP4",
      "path": "200"
    },
    "908": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "GT",
      "path": "200"
    },
    "909": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x37D"
    },
    "912": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "913": {
      "op": "POP"
    },
    "914": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "SWAP4",
      "path": "200"
    },
    "915": {
      "fn": "ERC777.name",
      "offset": [
        3061,
        3073
      ],
      "op": "SWAP6",
      "path": "200"
    },
    "916": {
      "fn": "ERC777.name",
      "offset": [
        2982,
        3080
      ],
      "op": "SWAP5",
      "path": "200"
    },
    "917": {
      "op": "POP"
    },
    "918": {
      "op": "POP"
    },
    "919": {
      "op": "POP"
    },
    "920": {
      "op": "POP"
    },
    "921": {
      "op": "POP"
    },
    "922": {
      "fn": "ERC777.name",
      "jump": "o",
      "offset": [
        2982,
        3080
      ],
      "op": "JUMP",
      "path": "200"
    },
    "923": {
      "fn": "ERC777.approve",
      "offset": [
        8286,
        8483
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "924": {
      "fn": "ERC777.approve",
      "offset": [
        8368,
        8372
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "926": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210",
      "statement": 7
    },
    "927": {
      "fn": "ERC777.approve",
      "offset": [
        8423,
        8455
      ],
      "op": "PUSH2",
      "path": "200",
      "statement": 8,
      "value": "0x3A9"
    },
    "930": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "210"
    },
    "931": {
      "fn": "ERC777.approve",
      "offset": [
        8440,
        8447
      ],
      "op": "DUP6",
      "path": "200"
    },
    "932": {
      "fn": "ERC777.approve",
      "offset": [
        8449,
        8454
      ],
      "op": "DUP6",
      "path": "200"
    },
    "933": {
      "fn": "ERC777.approve",
      "offset": [
        8423,
        8431
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x7DB"
    },
    "936": {
      "fn": "ERC777.approve",
      "jump": "i",
      "offset": [
        8423,
        8455
      ],
      "op": "JUMP",
      "path": "200"
    },
    "937": {
      "fn": "ERC777.approve",
      "offset": [
        8423,
        8455
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "938": {
      "op": "POP"
    },
    "939": {
      "fn": "ERC777.approve",
      "offset": [
        8472,
        8476
      ],
      "op": "PUSH1",
      "path": "200",
      "statement": 9,
      "value": "0x1"
    },
    "941": {
      "fn": "ERC777.approve",
      "offset": [
        8472,
        8476
      ],
      "op": "SWAP4",
      "path": "200"
    },
    "942": {
      "fn": "ERC777.approve",
      "offset": [
        8286,
        8483
      ],
      "op": "SWAP3",
      "path": "200"
    },
    "943": {
      "op": "POP"
    },
    "944": {
      "op": "POP"
    },
    "945": {
      "op": "POP"
    },
    "946": {
      "fn": "ERC777.approve",
      "jump": "o",
      "offset": [
        8286,
        8483
      ],
      "op": "JUMP",
      "path": "200"
    },
    "947": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8965,
        9282
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "948": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9101,
        9105
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "950": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "951": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9157,
        9197
      ],
      "op": "PUSH2",
      "path": "200",
      "statement": 10,
      "value": "0x3C1"
    },
    "954": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9173,
        9179
      ],
      "op": "DUP6",
      "path": "200"
    },
    "955": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP3",
      "path": "210"
    },
    "956": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9190,
        9196
      ],
      "op": "DUP6",
      "path": "200"
    },
    "957": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9157,
        9172
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x902"
    },
    "960": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9157,
        9197
      ],
      "op": "JUMP",
      "path": "200"
    },
    "961": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9157,
        9197
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "962": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "PUSH2",
      "path": "200",
      "statement": 11,
      "value": "0x3EE"
    },
    "965": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9213,
        9219
      ],
      "op": "DUP6",
      "path": "200"
    },
    "966": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9221,
        9230
      ],
      "op": "DUP6",
      "path": "200"
    },
    "967": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9232,
        9238
      ],
      "op": "DUP6",
      "path": "200"
    },
    "968": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "970": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "971": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "DUP1",
      "path": "200"
    },
    "972": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "974": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "ADD",
      "path": "200"
    },
    "975": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "977": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "978": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "DUP1",
      "path": "200"
    },
    "979": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "981": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "DUP2",
      "path": "200"
    },
    "982": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "983": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "POP",
      "path": "200"
    },
    "984": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "986": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "987": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "DUP1",
      "path": "200"
    },
    "988": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "990": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "ADD",
      "path": "200"
    },
    "991": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "993": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "994": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "DUP1",
      "path": "200"
    },
    "995": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "997": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "DUP2",
      "path": "200"
    },
    "998": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "999": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "POP",
      "path": "200"
    },
    "1000": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9248,
        9253
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "1002": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9212
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x98E"
    },
    "1005": {
      "fn": "ERC777.transferFrom",
      "jump": "i",
      "offset": [
        9207,
        9254
      ],
      "op": "JUMP",
      "path": "200"
    },
    "1006": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9207,
        9254
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1007": {
      "op": "POP"
    },
    "1008": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9271,
        9275
      ],
      "op": "PUSH1",
      "path": "200",
      "statement": 12,
      "value": "0x1"
    },
    "1010": {
      "fn": "ERC777.transferFrom",
      "offset": [
        9271,
        9275
      ],
      "op": "SWAP5",
      "path": "200"
    },
    "1011": {
      "fn": "ERC777.transferFrom",
      "offset": [
        8965,
        9282
      ],
      "op": "SWAP4",
      "path": "200"
    },
    "1012": {
      "op": "POP"
    },
    "1013": {
      "op": "POP"
    },
    "1014": {
      "op": "POP"
    },
    "1015": {
      "op": "POP"
    },
    "1016": {
      "fn": "ERC777.transferFrom",
      "jump": "o",
      "offset": [
        8965,
        9282
      ],
      "op": "JUMP",
      "path": "200"
    },
    "1017": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6777,
        7143
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1018": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6984,
        7019
      ],
      "op": "PUSH2",
      "path": "200",
      "statement": 13,
      "value": "0x403"
    },
    "1021": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "1022": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7012,
        7018
      ],
      "op": "DUP7",
      "path": "200"
    },
    "1023": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6984,
        6997
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x5C6"
    },
    "1026": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        6984,
        7019
      ],
      "op": "JUMP",
      "path": "200"
    },
    "1027": {
      "branch": 58,
      "fn": "ERC777.operatorSend",
      "offset": [
        6984,
        7019
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1028": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6976,
        7068
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x428"
    },
    "1031": {
      "branch": 58,
      "fn": "ERC777.operatorSend",
      "offset": [
        6976,
        7068
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "1032": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6976,
        7068
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "1034": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6976,
        7068
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "1035": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1039": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1041": {
      "op": "SHL"
    },
    "1042": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6976,
        7068
      ],
      "op": "DUP2",
      "path": "200"
    },
    "1043": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6976,
        7068
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1044": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6976,
        7068
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "1046": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6976,
        7068
      ],
      "op": "ADD",
      "path": "200"
    },
    "1047": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6976,
        7068
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x41F"
    },
    "1050": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6976,
        7068
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1051": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6976,
        7068
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x14A9"
    },
    "1054": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        6976,
        7068
      ],
      "op": "JUMP",
      "path": "200"
    },
    "1055": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6976,
        7068
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1056": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6976,
        7068
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "1058": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6976,
        7068
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "1059": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6976,
        7068
      ],
      "op": "DUP1",
      "path": "200"
    },
    "1060": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6976,
        7068
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "1061": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6976,
        7068
      ],
      "op": "SUB",
      "path": "200"
    },
    "1062": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6976,
        7068
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1063": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6976,
        7068
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "200"
    },
    "1064": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6976,
        7068
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1065": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7078,
        7136
      ],
      "op": "PUSH2",
      "path": "200",
      "statement": 14,
      "value": "0x437"
    },
    "1068": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7084,
        7090
      ],
      "op": "DUP6",
      "path": "200"
    },
    "1069": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7092,
        7101
      ],
      "op": "DUP6",
      "path": "200"
    },
    "1070": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7103,
        7109
      ],
      "op": "DUP6",
      "path": "200"
    },
    "1071": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7111,
        7115
      ],
      "op": "DUP6",
      "path": "200"
    },
    "1072": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7117,
        7129
      ],
      "op": "DUP6",
      "path": "200"
    },
    "1073": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7131,
        7135
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x1"
    },
    "1075": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7078,
        7083
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x98E"
    },
    "1078": {
      "fn": "ERC777.operatorSend",
      "jump": "i",
      "offset": [
        7078,
        7136
      ],
      "op": "JUMP",
      "path": "200"
    },
    "1079": {
      "fn": "ERC777.operatorSend",
      "offset": [
        7078,
        7136
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1080": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6777,
        7143
      ],
      "op": "POP",
      "path": "200"
    },
    "1081": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6777,
        7143
      ],
      "op": "POP",
      "path": "200"
    },
    "1082": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6777,
        7143
      ],
      "op": "POP",
      "path": "200"
    },
    "1083": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6777,
        7143
      ],
      "op": "POP",
      "path": "200"
    },
    "1084": {
      "fn": "ERC777.operatorSend",
      "offset": [
        6777,
        7143
      ],
      "op": "POP",
      "path": "200"
    },
    "1085": {
      "fn": "ERC777.operatorSend",
      "jump": "o",
      "offset": [
        6777,
        7143
      ],
      "op": "JUMP",
      "path": "200"
    },
    "1086": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5583,
        5995
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1087": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "1088": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1090": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1092": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1094": {
      "op": "SHL"
    },
    "1095": {
      "op": "SUB"
    },
    "1096": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5670,
        5694
      ],
      "op": "DUP3",
      "path": "200",
      "statement": 15
    },
    "1097": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5670,
        5694
      ],
      "op": "AND",
      "path": "200"
    },
    "1098": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5670,
        5694
      ],
      "op": "EQ",
      "path": "200"
    },
    "1099": {
      "branch": 59,
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5670,
        5694
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "1100": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5662,
        5735
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x4A3"
    },
    "1103": {
      "branch": 59,
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5662,
        5735
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "1104": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5662,
        5735
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "1106": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5662,
        5735
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "1107": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1111": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1113": {
      "op": "SHL"
    },
    "1114": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5662,
        5735
      ],
      "op": "DUP2",
      "path": "200"
    },
    "1115": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5662,
        5735
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1118": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5662,
        5735
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "1120": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5662,
        5735
      ],
      "op": "DUP3",
      "path": "200"
    },
    "1121": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5662,
        5735
      ],
      "op": "ADD",
      "path": "200"
    },
    "1122": {
      "op": "MSTORE"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1125": {
      "op": "DUP1"
    },
    "1126": {
      "op": "DUP3"
    },
    "1127": {
      "op": "ADD"
    },
    "1128": {
      "op": "MSTORE"
    },
    "1129": {
      "op": "PUSH32",
      "value": "0x4552433737373A20617574686F72697A696E672073656C66206173206F706572"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1164": {
      "op": "DUP3"
    },
    "1165": {
      "op": "ADD"
    },
    "1166": {
      "op": "MSTORE"
    },
    "1167": {
      "op": "PUSH4",
      "value": "0x30BA37B9"
    },
    "1172": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1174": {
      "op": "SHL"
    },
    "1175": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1177": {
      "op": "DUP3"
    },
    "1178": {
      "op": "ADD"
    },
    "1179": {
      "op": "MSTORE"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1182": {
      "op": "ADD"
    },
    "1183": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5662,
        5735
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x41F"
    },
    "1186": {
      "op": "JUMP"
    },
    "1187": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5662,
        5735
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1192": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1194": {
      "op": "SHL"
    },
    "1195": {
      "op": "SUB"
    },
    "1196": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5750,
        5777
      ],
      "op": "DUP2",
      "path": "200"
    },
    "1197": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5750,
        5777
      ],
      "op": "AND",
      "path": "200"
    },
    "1198": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5750,
        5777
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "1200": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5750,
        5777
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1201": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5750,
        5777
      ],
      "op": "DUP2",
      "path": "200"
    },
    "1202": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5750,
        5777
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1203": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5750,
        5767
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x5"
    },
    "1205": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5750,
        5777
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "1207": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5750,
        5777
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1208": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5750,
        5777
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "1210": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5750,
        5777
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1211": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5750,
        5777
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "1212": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5750,
        5777
      ],
      "op": "SLOAD",
      "path": "200"
    },
    "1213": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5750,
        5777
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0xFF"
    },
    "1215": {
      "branch": 60,
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5750,
        5777
      ],
      "op": "AND",
      "path": "200"
    },
    "1216": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5746,
        5931
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "1217": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5746,
        5931
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x4F4"
    },
    "1220": {
      "branch": 60,
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5746,
        5931
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "1221": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "1222": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5800,
        5838
      ],
      "op": "PUSH1",
      "path": "200",
      "statement": 16,
      "value": "0x0"
    },
    "1224": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5800,
        5838
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1225": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5800,
        5838
      ],
      "op": "DUP2",
      "path": "200"
    },
    "1226": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5800,
        5838
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1227": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5800,
        5824
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x7"
    },
    "1229": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5800,
        5838
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "1231": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5800,
        5838
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1232": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5800,
        5838
      ],
      "op": "DUP2",
      "path": "200"
    },
    "1233": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5800,
        5838
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1234": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5800,
        5838
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "1236": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5800,
        5838
      ],
      "op": "DUP1",
      "path": "200"
    },
    "1237": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5800,
        5838
      ],
      "op": "DUP4",
      "path": "200"
    },
    "1238": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5800,
        5838
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "1239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1245": {
      "op": "SHL"
    },
    "1246": {
      "op": "SUB"
    },
    "1247": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5800,
        5848
      ],
      "op": "DUP6",
      "path": "200"
    },
    "1248": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5800,
        5848
      ],
      "op": "AND",
      "path": "200"
    },
    "1249": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5800,
        5848
      ],
      "op": "DUP5",
      "path": "200"
    },
    "1250": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5800,
        5848
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1251": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5800,
        5848
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1252": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5800,
        5848
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "1253": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5800,
        5848
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1254": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5800,
        5848
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1255": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5800,
        5848
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "1256": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5793,
        5848
      ],
      "op": "DUP1",
      "path": "200"
    },
    "1257": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5793,
        5848
      ],
      "op": "SLOAD",
      "path": "200"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1260": {
      "op": "NOT"
    },
    "1261": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5793,
        5848
      ],
      "op": "AND",
      "path": "200"
    },
    "1262": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5793,
        5848
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1263": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5793,
        5848
      ],
      "op": "SSTORE",
      "path": "200"
    },
    "1264": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5746,
        5931
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x523"
    },
    "1267": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5746,
        5931
      ],
      "op": "JUMP",
      "path": "200"
    },
    "1268": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5746,
        5931
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1269": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "1270": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5903
      ],
      "op": "PUSH1",
      "path": "200",
      "statement": 17,
      "value": "0x0"
    },
    "1272": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5903
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1273": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5903
      ],
      "op": "DUP2",
      "path": "200"
    },
    "1274": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5903
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1275": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5889
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x6"
    },
    "1277": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5903
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "1279": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5903
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1280": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5903
      ],
      "op": "DUP2",
      "path": "200"
    },
    "1281": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5903
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1282": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5903
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "1284": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5903
      ],
      "op": "DUP1",
      "path": "200"
    },
    "1285": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5903
      ],
      "op": "DUP4",
      "path": "200"
    },
    "1286": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5903
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "1287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1291": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1293": {
      "op": "SHL"
    },
    "1294": {
      "op": "SUB"
    },
    "1295": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5913
      ],
      "op": "DUP6",
      "path": "200"
    },
    "1296": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5913
      ],
      "op": "AND",
      "path": "200"
    },
    "1297": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5913
      ],
      "op": "DUP5",
      "path": "200"
    },
    "1298": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5913
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1299": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5913
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1300": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5913
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "1301": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5913
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1302": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5913
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1303": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5913
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "1304": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5920
      ],
      "op": "DUP1",
      "path": "200"
    },
    "1305": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5920
      ],
      "op": "SLOAD",
      "path": "200"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1308": {
      "op": "NOT"
    },
    "1309": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5920
      ],
      "op": "AND",
      "path": "200"
    },
    "1310": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5916,
        5920
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x1"
    },
    "1312": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5920
      ],
      "op": "OR",
      "path": "200"
    },
    "1313": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5920
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1314": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5879,
        5920
      ],
      "op": "SSTORE",
      "path": "200"
    },
    "1315": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5746,
        5931
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1316": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5946,
        5988
      ],
      "op": "PUSH1",
      "path": "200",
      "statement": 18,
      "value": "0x40"
    },
    "1318": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5946,
        5988
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "1319": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "1320": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "210"
    },
    "1321": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1327": {
      "op": "SHL"
    },
    "1328": {
      "op": "SUB"
    },
    "1329": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5946,
        5988
      ],
      "op": "DUP4",
      "path": "200"
    },
    "1330": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5946,
        5988
      ],
      "op": "AND",
      "path": "200"
    },
    "1331": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5946,
        5988
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1332": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5946,
        5988
      ],
      "op": "PUSH32",
      "path": "200",
      "value": "0xF4CAEB2D6CA8932A215A353D0703C326EC2D81FC68170F320EB2AB49E9DF61F9"
    },
    "1365": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5946,
        5988
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1366": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5946,
        5988
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "1368": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5946,
        5988
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1369": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5946,
        5988
      ],
      "op": "LOG3",
      "path": "200"
    },
    "1370": {
      "fn": "ERC777.authorizeOperator",
      "offset": [
        5583,
        5995
      ],
      "op": "POP",
      "path": "200"
    },
    "1371": {
      "fn": "ERC777.authorizeOperator",
      "jump": "o",
      "offset": [
        5583,
        5995
      ],
      "op": "JUMP",
      "path": "200"
    },
    "1372": {
      "fn": "ERC777.symbol",
      "offset": [
        3136,
        3238
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1373": {
      "fn": "ERC777.symbol",
      "offset": [
        3192,
        3205
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x60"
    },
    "1375": {
      "fn": "ERC777.symbol",
      "offset": [
        3224,
        3231
      ],
      "op": "PUSH1",
      "path": "200",
      "statement": 19,
      "value": "0x3"
    },
    "1377": {
      "fn": "ERC777.symbol",
      "offset": [
        3217,
        3231
      ],
      "op": "DUP1",
      "path": "200"
    },
    "1378": {
      "fn": "ERC777.symbol",
      "offset": [
        3217,
        3231
      ],
      "op": "SLOAD",
      "path": "200"
    },
    "1379": {
      "fn": "ERC777.symbol",
      "offset": [
        3217,
        3231
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x321"
    },
    "1382": {
      "fn": "ERC777.symbol",
      "offset": [
        3217,
        3231
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1383": {
      "fn": "ERC777.symbol",
      "offset": [
        3217,
        3231
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x146E"
    },
    "1386": {
      "fn": "ERC777.symbol",
      "jump": "i",
      "offset": [
        3217,
        3231
      ],
      "op": "JUMP",
      "path": "200"
    },
    "1387": {
      "fn": "ERC777.send",
      "offset": [
        4278,
        4471
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1388": {
      "fn": "ERC777.send",
      "offset": [
        4410,
        4464
      ],
      "op": "PUSH2",
      "path": "200",
      "statement": 20,
      "value": "0x589"
    },
    "1391": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "1392": {
      "fn": "ERC777.send",
      "offset": [
        4430,
        4439
      ],
      "op": "DUP5",
      "path": "200"
    },
    "1393": {
      "fn": "ERC777.send",
      "offset": [
        4441,
        4447
      ],
      "op": "DUP5",
      "path": "200"
    },
    "1394": {
      "fn": "ERC777.send",
      "offset": [
        4449,
        4453
      ],
      "op": "DUP5",
      "path": "200"
    },
    "1395": {
      "fn": "ERC777.send",
      "offset": [
        4410,
        4464
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "1397": {
      "fn": "ERC777.send",
      "offset": [
        4410,
        4464
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "1398": {
      "fn": "ERC777.send",
      "offset": [
        4410,
        4464
      ],
      "op": "DUP1",
      "path": "200"
    },
    "1399": {
      "fn": "ERC777.send",
      "offset": [
        4410,
        4464
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "1401": {
      "fn": "ERC777.send",
      "offset": [
        4410,
        4464
      ],
      "op": "ADD",
      "path": "200"
    },
    "1402": {
      "fn": "ERC777.send",
      "offset": [
        4410,
        4464
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "1404": {
      "fn": "ERC777.send",
      "offset": [
        4410,
        4464
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1405": {
      "fn": "ERC777.send",
      "offset": [
        4410,
        4464
      ],
      "op": "DUP1",
      "path": "200"
    },
    "1406": {
      "fn": "ERC777.send",
      "offset": [
        4410,
        4464
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "1408": {
      "fn": "ERC777.send",
      "offset": [
        4410,
        4464
      ],
      "op": "DUP2",
      "path": "200"
    },
    "1409": {
      "fn": "ERC777.send",
      "offset": [
        4410,
        4464
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1410": {
      "fn": "ERC777.send",
      "offset": [
        4410,
        4464
      ],
      "op": "POP",
      "path": "200"
    },
    "1411": {
      "fn": "ERC777.send",
      "offset": [
        4459,
        4463
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x1"
    },
    "1413": {
      "fn": "ERC777.send",
      "offset": [
        4410,
        4415
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x98E"
    },
    "1416": {
      "fn": "ERC777.send",
      "jump": "i",
      "offset": [
        4410,
        4464
      ],
      "op": "JUMP",
      "path": "200"
    },
    "1417": {
      "fn": "ERC777.send",
      "offset": [
        4410,
        4464
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1418": {
      "fn": "ERC777.send",
      "offset": [
        4278,
        4471
      ],
      "op": "POP",
      "path": "200"
    },
    "1419": {
      "fn": "ERC777.send",
      "offset": [
        4278,
        4471
      ],
      "op": "POP",
      "path": "200"
    },
    "1420": {
      "fn": "ERC777.send",
      "offset": [
        4278,
        4471
      ],
      "op": "POP",
      "path": "200"
    },
    "1421": {
      "fn": "ERC777.send",
      "jump": "o",
      "offset": [
        4278,
        4471
      ],
      "op": "JUMP",
      "path": "200"
    },
    "1422": {
      "fn": "ERC777.transfer",
      "offset": [
        4702,
        4885
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1423": {
      "fn": "ERC777.transfer",
      "offset": [
        4788,
        4792
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "1425": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "PUSH2",
      "path": "200",
      "statement": 21,
      "value": "0x5BD"
    },
    "1428": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "1429": {
      "fn": "ERC777.transfer",
      "offset": [
        4824,
        4833
      ],
      "op": "DUP5",
      "path": "200"
    },
    "1430": {
      "fn": "ERC777.transfer",
      "offset": [
        4835,
        4841
      ],
      "op": "DUP5",
      "path": "200"
    },
    "1431": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "1433": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "1434": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "DUP1",
      "path": "200"
    },
    "1435": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "1437": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "ADD",
      "path": "200"
    },
    "1438": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "1440": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1441": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "DUP1",
      "path": "200"
    },
    "1442": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "1444": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "DUP2",
      "path": "200"
    },
    "1445": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1446": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "POP",
      "path": "200"
    },
    "1447": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "1449": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "1450": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "DUP1",
      "path": "200"
    },
    "1451": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "1453": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "ADD",
      "path": "200"
    },
    "1454": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "1456": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1457": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "DUP1",
      "path": "200"
    },
    "1458": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "1460": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "DUP2",
      "path": "200"
    },
    "1461": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1462": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "POP",
      "path": "200"
    },
    "1463": {
      "fn": "ERC777.transfer",
      "offset": [
        4851,
        4856
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "1465": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4809
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x98E"
    },
    "1468": {
      "fn": "ERC777.transfer",
      "jump": "i",
      "offset": [
        4804,
        4857
      ],
      "op": "JUMP",
      "path": "200"
    },
    "1469": {
      "fn": "ERC777.transfer",
      "offset": [
        4804,
        4857
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1470": {
      "op": "POP"
    },
    "1471": {
      "fn": "ERC777.transfer",
      "offset": [
        4874,
        4878
      ],
      "op": "PUSH1",
      "path": "200",
      "statement": 22,
      "value": "0x1"
    },
    "1473": {
      "fn": "ERC777.transfer",
      "offset": [
        4702,
        4885
      ],
      "op": "SWAP3",
      "path": "200"
    },
    "1474": {
      "fn": "ERC777.transfer",
      "offset": [
        4702,
        4885
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "1475": {
      "fn": "ERC777.transfer",
      "offset": [
        4702,
        4885
      ],
      "op": "POP",
      "path": "200"
    },
    "1476": {
      "fn": "ERC777.transfer",
      "offset": [
        4702,
        4885
      ],
      "op": "POP",
      "path": "200"
    },
    "1477": {
      "fn": "ERC777.transfer",
      "jump": "o",
      "offset": [
        4702,
        4885
      ],
      "op": "JUMP",
      "path": "200"
    },
    "1478": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5205,
        5516
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1479": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5305,
        5309
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "1481": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5352,
        5363
      ],
      "op": "DUP2",
      "path": "200",
      "statement": 23
    },
    "1482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1488": {
      "op": "SHL"
    },
    "1489": {
      "op": "SUB"
    },
    "1490": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5340,
        5363
      ],
      "op": "AND",
      "path": "200"
    },
    "1491": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5340,
        5348
      ],
      "op": "DUP4",
      "path": "200"
    },
    "1492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1498": {
      "op": "SHL"
    },
    "1499": {
      "op": "SUB"
    },
    "1500": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5340,
        5363
      ],
      "op": "AND",
      "path": "200"
    },
    "1501": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5340,
        5363
      ],
      "op": "EQ",
      "path": "200"
    },
    "1502": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5340,
        5460
      ],
      "op": "DUP1",
      "path": "200"
    },
    "1503": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5340,
        5460
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x631"
    },
    "1506": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5340,
        5460
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "1507": {
      "op": "POP"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1514": {
      "op": "SHL"
    },
    "1515": {
      "op": "SUB"
    },
    "1516": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5380,
        5407
      ],
      "op": "DUP4",
      "path": "200"
    },
    "1517": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5380,
        5407
      ],
      "op": "AND",
      "path": "200"
    },
    "1518": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5380,
        5407
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "1520": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5380,
        5407
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1521": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5380,
        5407
      ],
      "op": "DUP2",
      "path": "200"
    },
    "1522": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5380,
        5407
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1523": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5380,
        5397
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x5"
    },
    "1525": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5380,
        5407
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "1527": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5380,
        5407
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1528": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5380,
        5407
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "1530": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5380,
        5407
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1531": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5380,
        5407
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "1532": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5380,
        5407
      ],
      "op": "SLOAD",
      "path": "200"
    },
    "1533": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5380,
        5407
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0xFF"
    },
    "1535": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5380,
        5407
      ],
      "op": "AND",
      "path": "200"
    },
    "1536": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5380,
        5459
      ],
      "op": "DUP1",
      "path": "200"
    },
    "1537": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5380,
        5459
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "1538": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5380,
        5459
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x631"
    },
    "1541": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5380,
        5459
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "1542": {
      "op": "POP"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1549": {
      "op": "SHL"
    },
    "1550": {
      "op": "SUB"
    },
    "1551": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5449
      ],
      "op": "DUP1",
      "path": "200"
    },
    "1552": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5449
      ],
      "op": "DUP4",
      "path": "200"
    },
    "1553": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5449
      ],
      "op": "AND",
      "path": "200"
    },
    "1554": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5449
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "1556": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5449
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1557": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5449
      ],
      "op": "DUP2",
      "path": "200"
    },
    "1558": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5449
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1559": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5436
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x7"
    },
    "1561": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5449
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "1563": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5449
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1564": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5449
      ],
      "op": "DUP2",
      "path": "200"
    },
    "1565": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5449
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1566": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5449
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "1568": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5449
      ],
      "op": "DUP1",
      "path": "200"
    },
    "1569": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5449
      ],
      "op": "DUP4",
      "path": "200"
    },
    "1570": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5449
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "1571": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5459
      ],
      "op": "SWAP4",
      "path": "200"
    },
    "1572": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5459
      ],
      "op": "DUP8",
      "path": "200"
    },
    "1573": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5459
      ],
      "op": "AND",
      "path": "200"
    },
    "1574": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5459
      ],
      "op": "DUP4",
      "path": "200"
    },
    "1575": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5459
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1576": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5459
      ],
      "op": "SWAP3",
      "path": "200"
    },
    "1577": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5459
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1578": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5459
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1579": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5459
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "1580": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5459
      ],
      "op": "SLOAD",
      "path": "200"
    },
    "1581": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5459
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0xFF"
    },
    "1583": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5412,
        5459
      ],
      "op": "AND",
      "path": "200"
    },
    "1584": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5411,
        5459
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "1585": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5380,
        5459
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1586": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5340,
        5509
      ],
      "op": "DUP1",
      "path": "200"
    },
    "1587": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5340,
        5509
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x661"
    },
    "1590": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5340,
        5509
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "1591": {
      "op": "POP"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1598": {
      "op": "SHL"
    },
    "1599": {
      "op": "SUB"
    },
    "1600": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5499
      ],
      "op": "DUP1",
      "path": "200"
    },
    "1601": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5499
      ],
      "op": "DUP4",
      "path": "200"
    },
    "1602": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5499
      ],
      "op": "AND",
      "path": "200"
    },
    "1603": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5499
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "1605": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5499
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1606": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5499
      ],
      "op": "DUP2",
      "path": "200"
    },
    "1607": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5499
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1608": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5486
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x6"
    },
    "1610": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5499
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "1612": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5499
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1613": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5499
      ],
      "op": "DUP2",
      "path": "200"
    },
    "1614": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5499
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1615": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5499
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "1617": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5499
      ],
      "op": "DUP1",
      "path": "200"
    },
    "1618": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5499
      ],
      "op": "DUP4",
      "path": "200"
    },
    "1619": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5499
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "1620": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5509
      ],
      "op": "SWAP4",
      "path": "200"
    },
    "1621": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5509
      ],
      "op": "DUP8",
      "path": "200"
    },
    "1622": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5509
      ],
      "op": "AND",
      "path": "200"
    },
    "1623": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5509
      ],
      "op": "DUP4",
      "path": "200"
    },
    "1624": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5509
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1625": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5509
      ],
      "op": "SWAP3",
      "path": "200"
    },
    "1626": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5509
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1627": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5509
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1628": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5509
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "1629": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5509
      ],
      "op": "SLOAD",
      "path": "200"
    },
    "1630": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5509
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0xFF"
    },
    "1632": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5476,
        5509
      ],
      "op": "AND",
      "path": "200"
    },
    "1633": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5340,
        5509
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1634": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5321,
        5509
      ],
      "op": "SWAP4",
      "path": "200"
    },
    "1635": {
      "fn": "ERC777.isOperatorFor",
      "offset": [
        5205,
        5516
      ],
      "op": "SWAP3",
      "path": "200"
    },
    "1636": {
      "op": "POP"
    },
    "1637": {
      "op": "POP"
    },
    "1638": {
      "op": "POP"
    },
    "1639": {
      "fn": "ERC777.isOperatorFor",
      "jump": "o",
      "offset": [
        5205,
        5516
      ],
      "op": "JUMP",
      "path": "200"
    },
    "1640": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6059,
        6462
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1647": {
      "op": "SHL"
    },
    "1648": {
      "op": "SUB"
    },
    "1649": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6143,
        6167
      ],
      "op": "DUP2",
      "path": "200",
      "statement": 24
    },
    "1650": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6143,
        6167
      ],
      "op": "AND",
      "path": "200"
    },
    "1651": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "1652": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6143,
        6167
      ],
      "op": "EQ",
      "path": "200"
    },
    "1653": {
      "branch": 61,
      "fn": "ERC777.revokeOperator",
      "offset": [
        6143,
        6167
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "1654": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6135,
        6205
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x6CB"
    },
    "1657": {
      "branch": 61,
      "fn": "ERC777.revokeOperator",
      "offset": [
        6135,
        6205
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "1658": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6135,
        6205
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "1660": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6135,
        6205
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "1661": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1665": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1667": {
      "op": "SHL"
    },
    "1668": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6135,
        6205
      ],
      "op": "DUP2",
      "path": "200"
    },
    "1669": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6135,
        6205
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1672": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6135,
        6205
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "1674": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6135,
        6205
      ],
      "op": "DUP3",
      "path": "200"
    },
    "1675": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6135,
        6205
      ],
      "op": "ADD",
      "path": "200"
    },
    "1676": {
      "op": "MSTORE"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1681": {
      "op": "DUP3"
    },
    "1682": {
      "op": "ADD"
    },
    "1683": {
      "op": "MSTORE"
    },
    "1684": {
      "op": "PUSH32",
      "value": "0x4552433737373A207265766F6B696E672073656C66206173206F70657261746F"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1719": {
      "op": "DUP3"
    },
    "1720": {
      "op": "ADD"
    },
    "1721": {
      "op": "MSTORE"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1724": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1726": {
      "op": "SHL"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1729": {
      "op": "DUP3"
    },
    "1730": {
      "op": "ADD"
    },
    "1731": {
      "op": "MSTORE"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1734": {
      "op": "ADD"
    },
    "1735": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6135,
        6205
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x41F"
    },
    "1738": {
      "op": "JUMP"
    },
    "1739": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6135,
        6205
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1746": {
      "op": "SHL"
    },
    "1747": {
      "op": "SUB"
    },
    "1748": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6220,
        6247
      ],
      "op": "DUP2",
      "path": "200"
    },
    "1749": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6220,
        6247
      ],
      "op": "AND",
      "path": "200"
    },
    "1750": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6220,
        6247
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "1752": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6220,
        6247
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1753": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6220,
        6247
      ],
      "op": "DUP2",
      "path": "200"
    },
    "1754": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6220,
        6247
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1755": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6220,
        6237
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x5"
    },
    "1757": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6220,
        6247
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "1759": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6220,
        6247
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1760": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6220,
        6247
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "1762": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6220,
        6247
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1763": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6220,
        6247
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "1764": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6220,
        6247
      ],
      "op": "SLOAD",
      "path": "200"
    },
    "1765": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6220,
        6247
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0xFF"
    },
    "1767": {
      "branch": 62,
      "fn": "ERC777.revokeOperator",
      "offset": [
        6220,
        6247
      ],
      "op": "AND",
      "path": "200"
    },
    "1768": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6216,
        6401
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "1769": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6216,
        6401
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x71F"
    },
    "1772": {
      "branch": 62,
      "fn": "ERC777.revokeOperator",
      "offset": [
        6216,
        6401
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "1773": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "1774": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6301
      ],
      "op": "PUSH1",
      "path": "200",
      "statement": 25,
      "value": "0x0"
    },
    "1776": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6301
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1777": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6301
      ],
      "op": "DUP2",
      "path": "200"
    },
    "1778": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6301
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1779": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6287
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x7"
    },
    "1781": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6301
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "1783": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6301
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1784": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6301
      ],
      "op": "DUP2",
      "path": "200"
    },
    "1785": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6301
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1786": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6301
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "1788": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6301
      ],
      "op": "DUP1",
      "path": "200"
    },
    "1789": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6301
      ],
      "op": "DUP4",
      "path": "200"
    },
    "1790": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6301
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1795": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1797": {
      "op": "SHL"
    },
    "1798": {
      "op": "SUB"
    },
    "1799": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6311
      ],
      "op": "DUP6",
      "path": "200"
    },
    "1800": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6311
      ],
      "op": "AND",
      "path": "200"
    },
    "1801": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6311
      ],
      "op": "DUP5",
      "path": "200"
    },
    "1802": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6311
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1803": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6311
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1804": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6311
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "1805": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6311
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1806": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6311
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1807": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6311
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "1808": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6318
      ],
      "op": "DUP1",
      "path": "200"
    },
    "1809": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6318
      ],
      "op": "SLOAD",
      "path": "200"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1812": {
      "op": "NOT"
    },
    "1813": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6318
      ],
      "op": "AND",
      "path": "200"
    },
    "1814": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6314,
        6318
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x1"
    },
    "1816": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6318
      ],
      "op": "OR",
      "path": "200"
    },
    "1817": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6318
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1818": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6263,
        6318
      ],
      "op": "SSTORE",
      "path": "200"
    },
    "1819": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6216,
        6401
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x74B"
    },
    "1822": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6216,
        6401
      ],
      "op": "JUMP",
      "path": "200"
    },
    "1823": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6216,
        6401
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1824": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "1825": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6356,
        6380
      ],
      "op": "PUSH1",
      "path": "200",
      "statement": 26,
      "value": "0x0"
    },
    "1827": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6356,
        6380
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1828": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6356,
        6380
      ],
      "op": "DUP2",
      "path": "200"
    },
    "1829": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6356,
        6380
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1830": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6356,
        6366
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x6"
    },
    "1832": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6356,
        6380
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "1834": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6356,
        6380
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1835": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6356,
        6380
      ],
      "op": "DUP2",
      "path": "200"
    },
    "1836": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6356,
        6380
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1837": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6356,
        6380
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "1839": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6356,
        6380
      ],
      "op": "DUP1",
      "path": "200"
    },
    "1840": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6356,
        6380
      ],
      "op": "DUP4",
      "path": "200"
    },
    "1841": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6356,
        6380
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "1842": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1846": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1848": {
      "op": "SHL"
    },
    "1849": {
      "op": "SUB"
    },
    "1850": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6356,
        6390
      ],
      "op": "DUP6",
      "path": "200"
    },
    "1851": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6356,
        6390
      ],
      "op": "AND",
      "path": "200"
    },
    "1852": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6356,
        6390
      ],
      "op": "DUP5",
      "path": "200"
    },
    "1853": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6356,
        6390
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1854": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6356,
        6390
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1855": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6356,
        6390
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "1856": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6356,
        6390
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1857": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6356,
        6390
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1858": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6356,
        6390
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "1859": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6349,
        6390
      ],
      "op": "DUP1",
      "path": "200"
    },
    "1860": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6349,
        6390
      ],
      "op": "SLOAD",
      "path": "200"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1863": {
      "op": "NOT"
    },
    "1864": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6349,
        6390
      ],
      "op": "AND",
      "path": "200"
    },
    "1865": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6349,
        6390
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1866": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6349,
        6390
      ],
      "op": "SSTORE",
      "path": "200"
    },
    "1867": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6216,
        6401
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1868": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6416,
        6455
      ],
      "op": "PUSH1",
      "path": "200",
      "statement": 27,
      "value": "0x40"
    },
    "1870": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6416,
        6455
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "1871": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "1872": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "210"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1879": {
      "op": "SHL"
    },
    "1880": {
      "op": "SUB"
    },
    "1881": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6416,
        6455
      ],
      "op": "DUP4",
      "path": "200"
    },
    "1882": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6416,
        6455
      ],
      "op": "AND",
      "path": "200"
    },
    "1883": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6416,
        6455
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1884": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6416,
        6455
      ],
      "op": "PUSH32",
      "path": "200",
      "value": "0x50546E66E5F44D728365DC3908C63BC5CFEEAB470722C1677E3073A6AC294AA1"
    },
    "1917": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6416,
        6455
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1918": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6416,
        6455
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "1920": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6416,
        6455
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1921": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6416,
        6455
      ],
      "op": "LOG3",
      "path": "200"
    },
    "1922": {
      "fn": "ERC777.revokeOperator",
      "offset": [
        6059,
        6462
      ],
      "op": "POP",
      "path": "200"
    },
    "1923": {
      "fn": "ERC777.revokeOperator",
      "jump": "o",
      "offset": [
        6059,
        6462
      ],
      "op": "JUMP",
      "path": "200"
    },
    "1924": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7264,
        7589
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1925": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7445,
        7481
      ],
      "op": "PUSH2",
      "path": "200",
      "statement": 28,
      "value": "0x78E"
    },
    "1928": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "1929": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7473,
        7480
      ],
      "op": "DUP6",
      "path": "200"
    },
    "1930": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7445,
        7458
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x5C6"
    },
    "1933": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7445,
        7481
      ],
      "op": "JUMP",
      "path": "200"
    },
    "1934": {
      "branch": 63,
      "fn": "ERC777.operatorBurn",
      "offset": [
        7445,
        7481
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1935": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7437,
        7530
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x7AA"
    },
    "1938": {
      "branch": 63,
      "fn": "ERC777.operatorBurn",
      "offset": [
        7437,
        7530
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "1939": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7437,
        7530
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "1941": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7437,
        7530
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "1942": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1948": {
      "op": "SHL"
    },
    "1949": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7437,
        7530
      ],
      "op": "DUP2",
      "path": "200"
    },
    "1950": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7437,
        7530
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1951": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7437,
        7530
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "1953": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7437,
        7530
      ],
      "op": "ADD",
      "path": "200"
    },
    "1954": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7437,
        7530
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x41F"
    },
    "1957": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7437,
        7530
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "1958": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7437,
        7530
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x14A9"
    },
    "1961": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7437,
        7530
      ],
      "op": "JUMP",
      "path": "200"
    },
    "1962": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7437,
        7530
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1963": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7540,
        7582
      ],
      "op": "PUSH2",
      "path": "200",
      "statement": 29,
      "value": "0x7B6"
    },
    "1966": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7546,
        7553
      ],
      "op": "DUP5",
      "path": "200"
    },
    "1967": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7555,
        7561
      ],
      "op": "DUP5",
      "path": "200"
    },
    "1968": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7563,
        7567
      ],
      "op": "DUP5",
      "path": "200"
    },
    "1969": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7569,
        7581
      ],
      "op": "DUP5",
      "path": "200"
    },
    "1970": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7540,
        7545
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xA8A"
    },
    "1973": {
      "fn": "ERC777.operatorBurn",
      "jump": "i",
      "offset": [
        7540,
        7582
      ],
      "op": "JUMP",
      "path": "200"
    },
    "1974": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7540,
        7582
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1975": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7264,
        7589
      ],
      "op": "POP",
      "path": "200"
    },
    "1976": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7264,
        7589
      ],
      "op": "POP",
      "path": "200"
    },
    "1977": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7264,
        7589
      ],
      "op": "POP",
      "path": "200"
    },
    "1978": {
      "fn": "ERC777.operatorBurn",
      "offset": [
        7264,
        7589
      ],
      "op": "POP",
      "path": "200"
    },
    "1979": {
      "fn": "ERC777.operatorBurn",
      "jump": "o",
      "offset": [
        7264,
        7589
      ],
      "op": "JUMP",
      "path": "200"
    },
    "1980": {
      "fn": "ERC777.burn",
      "offset": [
        5015,
        5142
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "1981": {
      "fn": "ERC777.burn",
      "offset": [
        5098,
        5135
      ],
      "op": "PUSH2",
      "path": "200",
      "statement": 30,
      "value": "0x7D7"
    },
    "1984": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "1985": {
      "fn": "ERC777.burn",
      "offset": [
        5118,
        5124
      ],
      "op": "DUP4",
      "path": "200"
    },
    "1986": {
      "fn": "ERC777.burn",
      "offset": [
        5126,
        5130
      ],
      "op": "DUP4",
      "path": "200"
    },
    "1987": {
      "fn": "ERC777.burn",
      "offset": [
        5098,
        5135
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "1989": {
      "fn": "ERC777.burn",
      "offset": [
        5098,
        5135
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "1990": {
      "fn": "ERC777.burn",
      "offset": [
        5098,
        5135
      ],
      "op": "DUP1",
      "path": "200"
    },
    "1991": {
      "fn": "ERC777.burn",
      "offset": [
        5098,
        5135
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "1993": {
      "fn": "ERC777.burn",
      "offset": [
        5098,
        5135
      ],
      "op": "ADD",
      "path": "200"
    },
    "1994": {
      "fn": "ERC777.burn",
      "offset": [
        5098,
        5135
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "1996": {
      "fn": "ERC777.burn",
      "offset": [
        5098,
        5135
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "1997": {
      "fn": "ERC777.burn",
      "offset": [
        5098,
        5135
      ],
      "op": "DUP1",
      "path": "200"
    },
    "1998": {
      "fn": "ERC777.burn",
      "offset": [
        5098,
        5135
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "2000": {
      "fn": "ERC777.burn",
      "offset": [
        5098,
        5135
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2001": {
      "fn": "ERC777.burn",
      "offset": [
        5098,
        5135
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "2002": {
      "fn": "ERC777.burn",
      "offset": [
        5098,
        5135
      ],
      "op": "POP",
      "path": "200"
    },
    "2003": {
      "fn": "ERC777.burn",
      "offset": [
        5098,
        5103
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xA8A"
    },
    "2006": {
      "fn": "ERC777.burn",
      "jump": "i",
      "offset": [
        5098,
        5135
      ],
      "op": "JUMP",
      "path": "200"
    },
    "2007": {
      "fn": "ERC777.burn",
      "offset": [
        5098,
        5135
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "2008": {
      "fn": "ERC777.burn",
      "offset": [
        5015,
        5142
      ],
      "op": "POP",
      "path": "200"
    },
    "2009": {
      "fn": "ERC777.burn",
      "offset": [
        5015,
        5142
      ],
      "op": "POP",
      "path": "200"
    },
    "2010": {
      "fn": "ERC777.burn",
      "jump": "o",
      "offset": [
        5015,
        5142
      ],
      "op": "JUMP",
      "path": "200"
    },
    "2011": {
      "fn": "ERC777._approve",
      "offset": [
        14427,
        14800
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "2012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2018": {
      "op": "SHL"
    },
    "2019": {
      "op": "SUB"
    },
    "2020": {
      "fn": "ERC777._approve",
      "offset": [
        14558,
        14578
      ],
      "op": "DUP4",
      "path": "200",
      "statement": 31
    },
    "2021": {
      "branch": 64,
      "fn": "ERC777._approve",
      "offset": [
        14558,
        14578
      ],
      "op": "AND",
      "path": "200"
    },
    "2022": {
      "fn": "ERC777._approve",
      "offset": [
        14550,
        14620
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x83F"
    },
    "2025": {
      "branch": 64,
      "fn": "ERC777._approve",
      "offset": [
        14550,
        14620
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "2026": {
      "fn": "ERC777._approve",
      "offset": [
        14550,
        14620
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "2028": {
      "fn": "ERC777._approve",
      "offset": [
        14550,
        14620
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "2029": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2033": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2035": {
      "op": "SHL"
    },
    "2036": {
      "fn": "ERC777._approve",
      "offset": [
        14550,
        14620
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2037": {
      "fn": "ERC777._approve",
      "offset": [
        14550,
        14620
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2040": {
      "fn": "ERC777._approve",
      "offset": [
        14550,
        14620
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "2042": {
      "fn": "ERC777._approve",
      "offset": [
        14550,
        14620
      ],
      "op": "DUP3",
      "path": "200"
    },
    "2043": {
      "fn": "ERC777._approve",
      "offset": [
        14550,
        14620
      ],
      "op": "ADD",
      "path": "200"
    },
    "2044": {
      "op": "MSTORE"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2047": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2049": {
      "op": "DUP3"
    },
    "2050": {
      "op": "ADD"
    },
    "2051": {
      "op": "MSTORE"
    },
    "2052": {
      "op": "PUSH32",
      "value": "0x4552433737373A20617070726F76652066726F6D20746865207A65726F206164"
    },
    "2085": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2087": {
      "op": "DUP3"
    },
    "2088": {
      "op": "ADD"
    },
    "2089": {
      "op": "MSTORE"
    },
    "2090": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "2096": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "2098": {
      "op": "SHL"
    },
    "2099": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2101": {
      "op": "DUP3"
    },
    "2102": {
      "op": "ADD"
    },
    "2103": {
      "op": "MSTORE"
    },
    "2104": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2106": {
      "op": "ADD"
    },
    "2107": {
      "fn": "ERC777._approve",
      "offset": [
        14550,
        14620
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x41F"
    },
    "2110": {
      "op": "JUMP"
    },
    "2111": {
      "fn": "ERC777._approve",
      "offset": [
        14550,
        14620
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "2112": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2118": {
      "op": "SHL"
    },
    "2119": {
      "op": "SUB"
    },
    "2120": {
      "fn": "ERC777._approve",
      "offset": [
        14638,
        14659
      ],
      "op": "DUP3",
      "path": "200",
      "statement": 32
    },
    "2121": {
      "branch": 65,
      "fn": "ERC777._approve",
      "offset": [
        14638,
        14659
      ],
      "op": "AND",
      "path": "200"
    },
    "2122": {
      "fn": "ERC777._approve",
      "offset": [
        14630,
        14699
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x8A1"
    },
    "2125": {
      "branch": 65,
      "fn": "ERC777._approve",
      "offset": [
        14630,
        14699
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "2126": {
      "fn": "ERC777._approve",
      "offset": [
        14630,
        14699
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "2128": {
      "fn": "ERC777._approve",
      "offset": [
        14630,
        14699
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "2129": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2133": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2135": {
      "op": "SHL"
    },
    "2136": {
      "fn": "ERC777._approve",
      "offset": [
        14630,
        14699
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2137": {
      "fn": "ERC777._approve",
      "offset": [
        14630,
        14699
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2140": {
      "fn": "ERC777._approve",
      "offset": [
        14630,
        14699
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "2142": {
      "fn": "ERC777._approve",
      "offset": [
        14630,
        14699
      ],
      "op": "DUP3",
      "path": "200"
    },
    "2143": {
      "fn": "ERC777._approve",
      "offset": [
        14630,
        14699
      ],
      "op": "ADD",
      "path": "200"
    },
    "2144": {
      "op": "MSTORE"
    },
    "2145": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2149": {
      "op": "DUP3"
    },
    "2150": {
      "op": "ADD"
    },
    "2151": {
      "op": "MSTORE"
    },
    "2152": {
      "op": "PUSH32",
      "value": "0x4552433737373A20617070726F766520746F20746865207A65726F2061646472"
    },
    "2185": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2187": {
      "op": "DUP3"
    },
    "2188": {
      "op": "ADD"
    },
    "2189": {
      "op": "MSTORE"
    },
    "2190": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "2194": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2196": {
      "op": "SHL"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2199": {
      "op": "DUP3"
    },
    "2200": {
      "op": "ADD"
    },
    "2201": {
      "op": "MSTORE"
    },
    "2202": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2204": {
      "op": "ADD"
    },
    "2205": {
      "fn": "ERC777._approve",
      "offset": [
        14630,
        14699
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x41F"
    },
    "2208": {
      "op": "JUMP"
    },
    "2209": {
      "fn": "ERC777._approve",
      "offset": [
        14630,
        14699
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2216": {
      "op": "SHL"
    },
    "2217": {
      "op": "SUB"
    },
    "2218": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14729
      ],
      "op": "DUP4",
      "path": "200",
      "statement": 33
    },
    "2219": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14729
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2220": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14729
      ],
      "op": "AND",
      "path": "200"
    },
    "2221": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14729
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "2223": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14729
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2224": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14729
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2225": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14729
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "2226": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14721
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x8"
    },
    "2228": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14729
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "2230": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14729
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "2231": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14729
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2232": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14729
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "2233": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14729
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "2235": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14729
      ],
      "op": "DUP1",
      "path": "200"
    },
    "2236": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14729
      ],
      "op": "DUP4",
      "path": "200"
    },
    "2237": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14729
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "2238": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14738
      ],
      "op": "SWAP5",
      "path": "200"
    },
    "2239": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14738
      ],
      "op": "DUP8",
      "path": "200"
    },
    "2240": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14738
      ],
      "op": "AND",
      "path": "200"
    },
    "2241": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14738
      ],
      "op": "DUP1",
      "path": "200"
    },
    "2242": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14738
      ],
      "op": "DUP5",
      "path": "200"
    },
    "2243": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14738
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "2244": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14738
      ],
      "op": "SWAP5",
      "path": "200"
    },
    "2245": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14738
      ],
      "op": "DUP3",
      "path": "200"
    },
    "2246": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14738
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "2247": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14738
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "2248": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14738
      ],
      "op": "DUP3",
      "path": "200"
    },
    "2249": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14738
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "2250": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14738
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "2251": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14746
      ],
      "op": "DUP6",
      "path": "200"
    },
    "2252": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14746
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "2253": {
      "fn": "ERC777._approve",
      "offset": [
        14710,
        14746
      ],
      "op": "SSTORE",
      "path": "200"
    },
    "2254": {
      "fn": "ERC777._approve",
      "offset": [
        14761,
        14793
      ],
      "op": "SWAP1",
      "path": "200",
      "statement": 34
    },
    "2255": {
      "fn": "ERC777._approve",
      "offset": [
        14761,
        14793
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "2256": {
      "op": "DUP5"
    },
    "2257": {
      "op": "DUP2"
    },
    "2258": {
      "op": "MSTORE"
    },
    "2259": {
      "fn": "ERC777._approve",
      "offset": [
        14761,
        14793
      ],
      "op": "PUSH32",
      "path": "200",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "2292": {
      "fn": "ERC777._approve",
      "offset": [
        14761,
        14793
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "2293": {
      "op": "ADD"
    },
    "2294": {
      "fn": "ERC777._approve",
      "offset": [
        14761,
        14793
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "2296": {
      "fn": "ERC777._approve",
      "offset": [
        14761,
        14793
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "2297": {
      "fn": "ERC777._approve",
      "offset": [
        14761,
        14793
      ],
      "op": "DUP1",
      "path": "200"
    },
    "2298": {
      "fn": "ERC777._approve",
      "offset": [
        14761,
        14793
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "2299": {
      "fn": "ERC777._approve",
      "offset": [
        14761,
        14793
      ],
      "op": "SUB",
      "path": "200"
    },
    "2300": {
      "fn": "ERC777._approve",
      "offset": [
        14761,
        14793
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "2301": {
      "fn": "ERC777._approve",
      "offset": [
        14761,
        14793
      ],
      "op": "LOG3",
      "path": "200"
    },
    "2302": {
      "fn": "ERC777._approve",
      "offset": [
        14427,
        14800
      ],
      "op": "POP",
      "path": "200"
    },
    "2303": {
      "fn": "ERC777._approve",
      "offset": [
        14427,
        14800
      ],
      "op": "POP",
      "path": "200"
    },
    "2304": {
      "fn": "ERC777._approve",
      "offset": [
        14427,
        14800
      ],
      "op": "POP",
      "path": "200"
    },
    "2305": {
      "fn": "ERC777._approve",
      "jump": "o",
      "offset": [
        14427,
        14800
      ],
      "op": "JUMP",
      "path": "200"
    },
    "2306": {
      "fn": "ERC777._spendAllowance",
      "offset": [
        17387,
        17829
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2313": {
      "op": "SHL"
    },
    "2314": {
      "op": "SUB"
    },
    "2315": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "DUP4",
      "path": "200"
    },
    "2316": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2317": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "AND",
      "path": "200"
    },
    "2318": {
      "fn": "ERC777._spendAllowance",
      "offset": [
        17517,
        17541
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "2320": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "2321": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2322": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "2323": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7955
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x8"
    },
    "2325": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "2327": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "2328": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2329": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "2330": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "2332": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "DUP1",
      "path": "200"
    },
    "2333": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "DUP4",
      "path": "200"
    },
    "2334": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7963
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "2335": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7972
      ],
      "op": "SWAP4",
      "path": "200"
    },
    "2336": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7972
      ],
      "op": "DUP7",
      "path": "200"
    },
    "2337": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7972
      ],
      "op": "AND",
      "path": "200"
    },
    "2338": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7972
      ],
      "op": "DUP4",
      "path": "200"
    },
    "2339": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7972
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "2340": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7972
      ],
      "op": "SWAP3",
      "path": "200"
    },
    "2341": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7972
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "2342": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7972
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "2343": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7972
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "2344": {
      "fn": "ERC777.allowance",
      "offset": [
        7944,
        7972
      ],
      "op": "SLOAD",
      "path": "200"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2347": {
      "op": "NOT"
    },
    "2348": {
      "fn": "ERC777._spendAllowance",
      "offset": [
        17583,
        17620
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2349": {
      "branch": 66,
      "fn": "ERC777._spendAllowance",
      "offset": [
        17583,
        17620
      ],
      "op": "EQ",
      "path": "200"
    },
    "2350": {
      "fn": "ERC777._spendAllowance",
      "offset": [
        17579,
        17823
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x7B6"
    },
    "2353": {
      "branch": 66,
      "fn": "ERC777._spendAllowance",
      "offset": [
        17579,
        17823
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "2354": {
      "fn": "ERC777._spendAllowance",
      "offset": [
        17664,
        17670
      ],
      "op": "DUP2",
      "path": "200",
      "statement": 35
    },
    "2355": {
      "fn": "ERC777._spendAllowance",
      "offset": [
        17644,
        17660
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2356": {
      "fn": "ERC777._spendAllowance",
      "offset": [
        17644,
        17670
      ],
      "op": "LT",
      "path": "200"
    },
    "2357": {
      "branch": 67,
      "fn": "ERC777._spendAllowance",
      "offset": [
        17644,
        17670
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "2358": {
      "fn": "ERC777._spendAllowance",
      "offset": [
        17636,
        17705
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x981"
    },
    "2361": {
      "branch": 67,
      "fn": "ERC777._spendAllowance",
      "offset": [
        17636,
        17705
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "2362": {
      "fn": "ERC777._spendAllowance",
      "offset": [
        17636,
        17705
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "2364": {
      "fn": "ERC777._spendAllowance",
      "offset": [
        17636,
        17705
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "2365": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2371": {
      "op": "SHL"
    },
    "2372": {
      "fn": "ERC777._spendAllowance",
      "offset": [
        17636,
        17705
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2373": {
      "fn": "ERC777._spendAllowance",
      "offset": [
        17636,
        17705
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2376": {
      "fn": "ERC777._spendAllowance",
      "offset": [
        17636,
        17705
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "2378": {
      "fn": "ERC777._spendAllowance",
      "offset": [
        17636,
        17705
      ],
      "op": "DUP3",
      "path": "200"
    },
    "2379": {
      "fn": "ERC777._spendAllowance",
      "offset": [
        17636,
        17705
      ],
      "op": "ADD",
      "path": "200"
    },
    "2380": {
      "op": "MSTORE"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "2383": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2385": {
      "op": "DUP3"
    },
    "2386": {
      "op": "ADD"
    },
    "2387": {
      "op": "MSTORE"
    },
    "2388": {
      "op": "PUSH32",
      "value": "0x4552433737373A20696E73756666696369656E7420616C6C6F77616E63650000"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2423": {
      "op": "DUP3"
    },
    "2424": {
      "op": "ADD"
    },
    "2425": {
      "op": "MSTORE"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2428": {
      "op": "ADD"
    },
    "2429": {
      "fn": "ERC777._spendAllowance",
      "offset": [
        17636,
        17705
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x41F"
    },
    "2432": {
      "op": "JUMP"
    },
    "2433": {
      "fn": "ERC777._spendAllowance",
      "offset": [
        17636,
        17705
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "2434": {
      "fn": "ERC777._spendAllowance",
      "offset": [
        17747,
        17798
      ],
      "op": "PUSH2",
      "path": "200",
      "statement": 36,
      "value": "0x7B6"
    },
    "2437": {
      "fn": "ERC777._spendAllowance",
      "offset": [
        17756,
        17761
      ],
      "op": "DUP5",
      "path": "200"
    },
    "2438": {
      "fn": "ERC777._spendAllowance",
      "offset": [
        17763,
        17770
      ],
      "op": "DUP5",
      "path": "200"
    },
    "2439": {
      "fn": "ERC777._spendAllowance",
      "offset": [
        17791,
        17797
      ],
      "op": "DUP5",
      "path": "200"
    },
    "2440": {
      "fn": "ERC777._spendAllowance",
      "offset": [
        17772,
        17788
      ],
      "op": "DUP5",
      "path": "200"
    },
    "2441": {
      "fn": "ERC777._spendAllowance",
      "offset": [
        17772,
        17797
      ],
      "op": "SUB",
      "path": "200"
    },
    "2442": {
      "fn": "ERC777._spendAllowance",
      "offset": [
        17747,
        17755
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x7DB"
    },
    "2445": {
      "fn": "ERC777._spendAllowance",
      "jump": "i",
      "offset": [
        17747,
        17798
      ],
      "op": "JUMP",
      "path": "200"
    },
    "2446": {
      "fn": "ERC777._send",
      "offset": [
        11898,
        12556
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2453": {
      "op": "SHL"
    },
    "2454": {
      "op": "SUB"
    },
    "2455": {
      "fn": "ERC777._send",
      "offset": [
        12120,
        12138
      ],
      "op": "DUP7",
      "path": "200",
      "statement": 37
    },
    "2456": {
      "branch": 68,
      "fn": "ERC777._send",
      "offset": [
        12120,
        12138
      ],
      "op": "AND",
      "path": "200"
    },
    "2457": {
      "fn": "ERC777._send",
      "offset": [
        12112,
        12181
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x9F3"
    },
    "2460": {
      "branch": 68,
      "fn": "ERC777._send",
      "offset": [
        12112,
        12181
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "2461": {
      "fn": "ERC777._send",
      "offset": [
        12112,
        12181
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "2463": {
      "fn": "ERC777._send",
      "offset": [
        12112,
        12181
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "2464": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2470": {
      "op": "SHL"
    },
    "2471": {
      "fn": "ERC777._send",
      "offset": [
        12112,
        12181
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2472": {
      "fn": "ERC777._send",
      "offset": [
        12112,
        12181
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2475": {
      "fn": "ERC777._send",
      "offset": [
        12112,
        12181
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "2477": {
      "fn": "ERC777._send",
      "offset": [
        12112,
        12181
      ],
      "op": "DUP3",
      "path": "200"
    },
    "2478": {
      "fn": "ERC777._send",
      "offset": [
        12112,
        12181
      ],
      "op": "ADD",
      "path": "200"
    },
    "2479": {
      "op": "MSTORE"
    },
    "2480": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2484": {
      "op": "DUP3"
    },
    "2485": {
      "op": "ADD"
    },
    "2486": {
      "op": "MSTORE"
    },
    "2487": {
      "op": "PUSH32",
      "value": "0x4552433737373A207472616E736665722066726F6D20746865207A65726F2061"
    },
    "2520": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2522": {
      "op": "DUP3"
    },
    "2523": {
      "op": "ADD"
    },
    "2524": {
      "op": "MSTORE"
    },
    "2525": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2532": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2534": {
      "op": "SHL"
    },
    "2535": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2537": {
      "op": "DUP3"
    },
    "2538": {
      "op": "ADD"
    },
    "2539": {
      "op": "MSTORE"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2542": {
      "op": "ADD"
    },
    "2543": {
      "fn": "ERC777._send",
      "offset": [
        12112,
        12181
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x41F"
    },
    "2546": {
      "op": "JUMP"
    },
    "2547": {
      "fn": "ERC777._send",
      "offset": [
        12112,
        12181
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2554": {
      "op": "SHL"
    },
    "2555": {
      "op": "SUB"
    },
    "2556": {
      "fn": "ERC777._send",
      "offset": [
        12199,
        12215
      ],
      "op": "DUP6",
      "path": "200",
      "statement": 38
    },
    "2557": {
      "branch": 69,
      "fn": "ERC777._send",
      "offset": [
        12199,
        12215
      ],
      "op": "AND",
      "path": "200"
    },
    "2558": {
      "fn": "ERC777._send",
      "offset": [
        12191,
        12256
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xA55"
    },
    "2561": {
      "branch": 69,
      "fn": "ERC777._send",
      "offset": [
        12191,
        12256
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "2562": {
      "fn": "ERC777._send",
      "offset": [
        12191,
        12256
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "2564": {
      "fn": "ERC777._send",
      "offset": [
        12191,
        12256
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "2565": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2571": {
      "op": "SHL"
    },
    "2572": {
      "fn": "ERC777._send",
      "offset": [
        12191,
        12256
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2573": {
      "fn": "ERC777._send",
      "offset": [
        12191,
        12256
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "2574": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2576": {
      "fn": "ERC777._send",
      "offset": [
        12191,
        12256
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "2578": {
      "fn": "ERC777._send",
      "offset": [
        12191,
        12256
      ],
      "op": "DUP3",
      "path": "200"
    },
    "2579": {
      "fn": "ERC777._send",
      "offset": [
        12191,
        12256
      ],
      "op": "ADD",
      "path": "200"
    },
    "2580": {
      "op": "MSTORE"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2583": {
      "op": "DUP1"
    },
    "2584": {
      "op": "DUP3"
    },
    "2585": {
      "op": "ADD"
    },
    "2586": {
      "op": "MSTORE"
    },
    "2587": {
      "op": "PUSH32",
      "value": "0x4552433737373A207472616E7366657220746F20746865207A65726F20616464"
    },
    "2620": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2622": {
      "op": "DUP3"
    },
    "2623": {
      "op": "ADD"
    },
    "2624": {
      "op": "MSTORE"
    },
    "2625": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2630": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2632": {
      "op": "SHL"
    },
    "2633": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2635": {
      "op": "DUP3"
    },
    "2636": {
      "op": "ADD"
    },
    "2637": {
      "op": "MSTORE"
    },
    "2638": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2640": {
      "op": "ADD"
    },
    "2641": {
      "fn": "ERC777._send",
      "offset": [
        12191,
        12256
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x41F"
    },
    "2644": {
      "op": "JUMP"
    },
    "2645": {
      "fn": "ERC777._send",
      "offset": [
        12191,
        12256
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "2646": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "2647": {
      "fn": "ERC777._send",
      "offset": [
        12309,
        12378
      ],
      "op": "PUSH2",
      "path": "200",
      "statement": 39,
      "value": "0xA64"
    },
    "2650": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "210"
    },
    "2651": {
      "fn": "ERC777._send",
      "offset": [
        12337,
        12341
      ],
      "op": "DUP9",
      "path": "200"
    },
    "2652": {
      "fn": "ERC777._send",
      "offset": [
        12343,
        12345
      ],
      "op": "DUP9",
      "path": "200"
    },
    "2653": {
      "fn": "ERC777._send",
      "offset": [
        12347,
        12353
      ],
      "op": "DUP9",
      "path": "200"
    },
    "2654": {
      "fn": "ERC777._send",
      "offset": [
        12355,
        12363
      ],
      "op": "DUP9",
      "path": "200"
    },
    "2655": {
      "fn": "ERC777._send",
      "offset": [
        12365,
        12377
      ],
      "op": "DUP9",
      "path": "200"
    },
    "2656": {
      "fn": "ERC777._send",
      "offset": [
        12309,
        12326
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xC3E"
    },
    "2659": {
      "fn": "ERC777._send",
      "jump": "i",
      "offset": [
        12309,
        12378
      ],
      "op": "JUMP",
      "path": "200"
    },
    "2660": {
      "fn": "ERC777._send",
      "offset": [
        12309,
        12378
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "2661": {
      "fn": "ERC777._send",
      "offset": [
        12389,
        12446
      ],
      "op": "PUSH2",
      "path": "200",
      "statement": 40,
      "value": "0xA72"
    },
    "2664": {
      "fn": "ERC777._send",
      "offset": [
        12395,
        12403
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2665": {
      "fn": "ERC777._send",
      "offset": [
        12405,
        12409
      ],
      "op": "DUP9",
      "path": "200"
    },
    "2666": {
      "fn": "ERC777._send",
      "offset": [
        12411,
        12413
      ],
      "op": "DUP9",
      "path": "200"
    },
    "2667": {
      "fn": "ERC777._send",
      "offset": [
        12415,
        12421
      ],
      "op": "DUP9",
      "path": "200"
    },
    "2668": {
      "fn": "ERC777._send",
      "offset": [
        12423,
        12431
      ],
      "op": "DUP9",
      "path": "200"
    },
    "2669": {
      "fn": "ERC777._send",
      "offset": [
        12433,
        12445
      ],
      "op": "DUP9",
      "path": "200"
    },
    "2670": {
      "fn": "ERC777._send",
      "offset": [
        12389,
        12394
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xD65"
    },
    "2673": {
      "fn": "ERC777._send",
      "jump": "i",
      "offset": [
        12389,
        12446
      ],
      "op": "JUMP",
      "path": "200"
    },
    "2674": {
      "fn": "ERC777._send",
      "offset": [
        12389,
        12446
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "2675": {
      "fn": "ERC777._send",
      "offset": [
        12457,
        12549
      ],
      "op": "PUSH2",
      "path": "200",
      "statement": 41,
      "value": "0xA81"
    },
    "2678": {
      "fn": "ERC777._send",
      "offset": [
        12477,
        12485
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2679": {
      "fn": "ERC777._send",
      "offset": [
        12487,
        12491
      ],
      "op": "DUP9",
      "path": "200"
    },
    "2680": {
      "fn": "ERC777._send",
      "offset": [
        12493,
        12495
      ],
      "op": "DUP9",
      "path": "200"
    },
    "2681": {
      "fn": "ERC777._send",
      "offset": [
        12497,
        12503
      ],
      "op": "DUP9",
      "path": "200"
    },
    "2682": {
      "fn": "ERC777._send",
      "offset": [
        12505,
        12513
      ],
      "op": "DUP9",
      "path": "200"
    },
    "2683": {
      "fn": "ERC777._send",
      "offset": [
        12515,
        12527
      ],
      "op": "DUP9",
      "path": "200"
    },
    "2684": {
      "fn": "ERC777._send",
      "offset": [
        12529,
        12548
      ],
      "op": "DUP9",
      "path": "200"
    },
    "2685": {
      "fn": "ERC777._send",
      "offset": [
        12457,
        12476
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xECB"
    },
    "2688": {
      "fn": "ERC777._send",
      "jump": "i",
      "offset": [
        12457,
        12549
      ],
      "op": "JUMP",
      "path": "200"
    },
    "2689": {
      "fn": "ERC777._send",
      "offset": [
        12457,
        12549
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "2690": {
      "fn": "ERC777._send",
      "offset": [
        12102,
        12556
      ],
      "op": "POP",
      "path": "200"
    },
    "2691": {
      "fn": "ERC777._send",
      "offset": [
        11898,
        12556
      ],
      "op": "POP",
      "path": "200"
    },
    "2692": {
      "fn": "ERC777._send",
      "offset": [
        11898,
        12556
      ],
      "op": "POP",
      "path": "200"
    },
    "2693": {
      "fn": "ERC777._send",
      "offset": [
        11898,
        12556
      ],
      "op": "POP",
      "path": "200"
    },
    "2694": {
      "fn": "ERC777._send",
      "offset": [
        11898,
        12556
      ],
      "op": "POP",
      "path": "200"
    },
    "2695": {
      "fn": "ERC777._send",
      "offset": [
        11898,
        12556
      ],
      "op": "POP",
      "path": "200"
    },
    "2696": {
      "fn": "ERC777._send",
      "offset": [
        11898,
        12556
      ],
      "op": "POP",
      "path": "200"
    },
    "2697": {
      "fn": "ERC777._send",
      "jump": "o",
      "offset": [
        11898,
        12556
      ],
      "op": "JUMP",
      "path": "200"
    },
    "2698": {
      "fn": "ERC777._burn",
      "offset": [
        12861,
        13672
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "2699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2705": {
      "op": "SHL"
    },
    "2706": {
      "op": "SUB"
    },
    "2707": {
      "fn": "ERC777._burn",
      "offset": [
        13025,
        13043
      ],
      "op": "DUP5",
      "path": "200",
      "statement": 42
    },
    "2708": {
      "branch": 70,
      "fn": "ERC777._burn",
      "offset": [
        13025,
        13043
      ],
      "op": "AND",
      "path": "200"
    },
    "2709": {
      "fn": "ERC777._burn",
      "offset": [
        13017,
        13082
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xAEB"
    },
    "2712": {
      "branch": 70,
      "fn": "ERC777._burn",
      "offset": [
        13017,
        13082
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "2713": {
      "fn": "ERC777._burn",
      "offset": [
        13017,
        13082
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "2715": {
      "fn": "ERC777._burn",
      "offset": [
        13017,
        13082
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "2716": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2720": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2722": {
      "op": "SHL"
    },
    "2723": {
      "fn": "ERC777._burn",
      "offset": [
        13017,
        13082
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2724": {
      "fn": "ERC777._burn",
      "offset": [
        13017,
        13082
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2727": {
      "fn": "ERC777._burn",
      "offset": [
        13017,
        13082
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "2729": {
      "fn": "ERC777._burn",
      "offset": [
        13017,
        13082
      ],
      "op": "DUP3",
      "path": "200"
    },
    "2730": {
      "fn": "ERC777._burn",
      "offset": [
        13017,
        13082
      ],
      "op": "ADD",
      "path": "200"
    },
    "2731": {
      "op": "MSTORE"
    },
    "2732": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2736": {
      "op": "DUP3"
    },
    "2737": {
      "op": "ADD"
    },
    "2738": {
      "op": "MSTORE"
    },
    "2739": {
      "op": "PUSH32",
      "value": "0x4552433737373A206275726E2066726F6D20746865207A65726F206164647265"
    },
    "2772": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2774": {
      "op": "DUP3"
    },
    "2775": {
      "op": "ADD"
    },
    "2776": {
      "op": "MSTORE"
    },
    "2777": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2782": {
      "op": "SHL"
    },
    "2783": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2785": {
      "op": "DUP3"
    },
    "2786": {
      "op": "ADD"
    },
    "2787": {
      "op": "MSTORE"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2790": {
      "op": "ADD"
    },
    "2791": {
      "fn": "ERC777._burn",
      "offset": [
        13017,
        13082
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x41F"
    },
    "2794": {
      "op": "JUMP"
    },
    "2795": {
      "fn": "ERC777._burn",
      "offset": [
        13017,
        13082
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "2796": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "2797": {
      "fn": "ERC777._burn",
      "offset": [
        13135,
        13208
      ],
      "op": "PUSH2",
      "path": "200",
      "statement": 43,
      "value": "0xAFB"
    },
    "2800": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "210"
    },
    "2801": {
      "fn": "ERC777._burn",
      "offset": [
        13163,
        13167
      ],
      "op": "DUP7",
      "path": "200"
    },
    "2802": {
      "fn": "ERC777._burn",
      "offset": [
        13093,
        13109
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "2804": {
      "fn": "ERC777._burn",
      "offset": [
        13181,
        13187
      ],
      "op": "DUP8",
      "path": "200"
    },
    "2805": {
      "fn": "ERC777._burn",
      "offset": [
        13189,
        13193
      ],
      "op": "DUP8",
      "path": "200"
    },
    "2806": {
      "fn": "ERC777._burn",
      "offset": [
        13195,
        13207
      ],
      "op": "DUP8",
      "path": "200"
    },
    "2807": {
      "fn": "ERC777._burn",
      "offset": [
        13135,
        13152
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xC3E"
    },
    "2810": {
      "fn": "ERC777._burn",
      "jump": "i",
      "offset": [
        13135,
        13208
      ],
      "op": "JUMP",
      "path": "200"
    },
    "2811": {
      "fn": "ERC777._burn",
      "offset": [
        13135,
        13208
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "2812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2814": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2818": {
      "op": "SHL"
    },
    "2819": {
      "op": "SUB"
    },
    "2820": {
      "fn": "ERC777._burn",
      "offset": [
        13342,
        13357
      ],
      "op": "DUP6",
      "path": "200"
    },
    "2821": {
      "fn": "ERC777._burn",
      "offset": [
        13342,
        13357
      ],
      "op": "AND",
      "path": "200"
    },
    "2822": {
      "fn": "ERC777._burn",
      "offset": [
        13320,
        13339
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "2824": {
      "fn": "ERC777._burn",
      "offset": [
        13342,
        13357
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "2825": {
      "fn": "ERC777._burn",
      "offset": [
        13342,
        13357
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2826": {
      "fn": "ERC777._burn",
      "offset": [
        13342,
        13357
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "2827": {
      "fn": "ERC777._burn",
      "offset": [
        13342,
        13357
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "2829": {
      "fn": "ERC777._burn",
      "offset": [
        13342,
        13357
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2830": {
      "fn": "ERC777._burn",
      "offset": [
        13342,
        13357
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "2831": {
      "fn": "ERC777._burn",
      "offset": [
        13342,
        13357
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "2832": {
      "fn": "ERC777._burn",
      "offset": [
        13342,
        13357
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "2834": {
      "fn": "ERC777._burn",
      "offset": [
        13342,
        13357
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "2835": {
      "fn": "ERC777._burn",
      "offset": [
        13342,
        13357
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "2836": {
      "fn": "ERC777._burn",
      "offset": [
        13342,
        13357
      ],
      "op": "SLOAD",
      "path": "200"
    },
    "2837": {
      "fn": "ERC777._burn",
      "offset": [
        13375,
        13396
      ],
      "op": "DUP5",
      "path": "200",
      "statement": 44
    },
    "2838": {
      "fn": "ERC777._burn",
      "offset": [
        13375,
        13396
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2839": {
      "fn": "ERC777._burn",
      "offset": [
        13375,
        13396
      ],
      "op": "LT",
      "path": "200"
    },
    "2840": {
      "branch": 71,
      "fn": "ERC777._burn",
      "offset": [
        13375,
        13396
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "2841": {
      "fn": "ERC777._burn",
      "offset": [
        13367,
        13436
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xB70"
    },
    "2844": {
      "branch": 71,
      "fn": "ERC777._burn",
      "offset": [
        13367,
        13436
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "2845": {
      "fn": "ERC777._burn",
      "offset": [
        13367,
        13436
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "2847": {
      "fn": "ERC777._burn",
      "offset": [
        13367,
        13436
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "2848": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2854": {
      "op": "SHL"
    },
    "2855": {
      "fn": "ERC777._burn",
      "offset": [
        13367,
        13436
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2856": {
      "fn": "ERC777._burn",
      "offset": [
        13367,
        13436
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2859": {
      "fn": "ERC777._burn",
      "offset": [
        13367,
        13436
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "2861": {
      "fn": "ERC777._burn",
      "offset": [
        13367,
        13436
      ],
      "op": "DUP3",
      "path": "200"
    },
    "2862": {
      "fn": "ERC777._burn",
      "offset": [
        13367,
        13436
      ],
      "op": "ADD",
      "path": "200"
    },
    "2863": {
      "op": "MSTORE"
    },
    "2864": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "2866": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2868": {
      "op": "DUP3"
    },
    "2869": {
      "op": "ADD"
    },
    "2870": {
      "op": "MSTORE"
    },
    "2871": {
      "op": "PUSH32",
      "value": "0x4552433737373A206275726E20616D6F756E7420657863656564732062616C61"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2906": {
      "op": "DUP3"
    },
    "2907": {
      "op": "ADD"
    },
    "2908": {
      "op": "MSTORE"
    },
    "2909": {
      "op": "PUSH3",
      "value": "0x6E6365"
    },
    "2913": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2915": {
      "op": "SHL"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2918": {
      "op": "DUP3"
    },
    "2919": {
      "op": "ADD"
    },
    "2920": {
      "op": "MSTORE"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2923": {
      "op": "ADD"
    },
    "2924": {
      "fn": "ERC777._burn",
      "offset": [
        13367,
        13436
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x41F"
    },
    "2927": {
      "op": "JUMP"
    },
    "2928": {
      "fn": "ERC777._burn",
      "offset": [
        13367,
        13436
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "2929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2935": {
      "op": "SHL"
    },
    "2936": {
      "op": "SUB"
    },
    "2937": {
      "fn": "ERC777._burn",
      "offset": [
        13470,
        13485
      ],
      "op": "DUP7",
      "path": "200",
      "statement": 45
    },
    "2938": {
      "fn": "ERC777._burn",
      "offset": [
        13470,
        13485
      ],
      "op": "AND",
      "path": "200"
    },
    "2939": {
      "fn": "ERC777._burn",
      "offset": [
        13470,
        13479
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "2941": {
      "fn": "ERC777._burn",
      "offset": [
        13470,
        13485
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "2942": {
      "fn": "ERC777._burn",
      "offset": [
        13470,
        13485
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2943": {
      "fn": "ERC777._burn",
      "offset": [
        13470,
        13485
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "2944": {
      "fn": "ERC777._burn",
      "offset": [
        13470,
        13485
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "2946": {
      "fn": "ERC777._burn",
      "offset": [
        13470,
        13485
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2947": {
      "fn": "ERC777._burn",
      "offset": [
        13470,
        13485
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "2948": {
      "fn": "ERC777._burn",
      "offset": [
        13470,
        13485
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "2949": {
      "fn": "ERC777._burn",
      "offset": [
        13470,
        13485
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "2951": {
      "fn": "ERC777._burn",
      "offset": [
        13470,
        13485
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2952": {
      "fn": "ERC777._burn",
      "offset": [
        13470,
        13485
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "2953": {
      "fn": "ERC777._burn",
      "offset": [
        13488,
        13508
      ],
      "op": "DUP7",
      "path": "200"
    },
    "2954": {
      "fn": "ERC777._burn",
      "offset": [
        13488,
        13508
      ],
      "op": "DUP4",
      "path": "200"
    },
    "2955": {
      "fn": "ERC777._burn",
      "offset": [
        13488,
        13508
      ],
      "op": "SUB",
      "path": "200"
    },
    "2956": {
      "fn": "ERC777._burn",
      "offset": [
        13470,
        13508
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "2957": {
      "fn": "ERC777._burn",
      "offset": [
        13470,
        13508
      ],
      "op": "SSTORE",
      "path": "200"
    },
    "2958": {
      "fn": "ERC777._burn",
      "offset": [
        13528,
        13540
      ],
      "op": "PUSH1",
      "path": "200",
      "statement": 46,
      "value": "0x1"
    },
    "2960": {
      "fn": "ERC777._burn",
      "offset": [
        13528,
        13550
      ],
      "op": "DUP1",
      "path": "200"
    },
    "2961": {
      "fn": "ERC777._burn",
      "offset": [
        13528,
        13550
      ],
      "op": "SLOAD",
      "path": "200"
    },
    "2962": {
      "fn": "ERC777._burn",
      "offset": [
        13502,
        13508
      ],
      "op": "DUP8",
      "path": "200"
    },
    "2963": {
      "fn": "ERC777._burn",
      "offset": [
        13502,
        13508
      ],
      "op": "SWAP3",
      "path": "200"
    },
    "2964": {
      "fn": "ERC777._burn",
      "offset": [
        13470,
        13479
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "2965": {
      "fn": "ERC777._burn",
      "offset": [
        13528,
        13550
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xB9F"
    },
    "2968": {
      "fn": "ERC777._burn",
      "offset": [
        13528,
        13550
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "2969": {
      "fn": "ERC777._burn",
      "offset": [
        13502,
        13508
      ],
      "op": "DUP5",
      "path": "200"
    },
    "2970": {
      "fn": "ERC777._burn",
      "offset": [
        13502,
        13508
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "2971": {
      "fn": "ERC777._burn",
      "offset": [
        13528,
        13550
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x150B"
    },
    "2974": {
      "fn": "ERC777._burn",
      "jump": "i",
      "offset": [
        13528,
        13550
      ],
      "op": "JUMP",
      "path": "200"
    },
    "2975": {
      "fn": "ERC777._burn",
      "offset": [
        13528,
        13550
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "2976": {
      "fn": "ERC777._burn",
      "offset": [
        13528,
        13550
      ],
      "op": "SWAP3",
      "path": "200"
    },
    "2977": {
      "fn": "ERC777._burn",
      "offset": [
        13528,
        13550
      ],
      "op": "POP",
      "path": "200"
    },
    "2978": {
      "fn": "ERC777._burn",
      "offset": [
        13528,
        13550
      ],
      "op": "POP",
      "path": "200"
    },
    "2979": {
      "fn": "ERC777._burn",
      "offset": [
        13528,
        13550
      ],
      "op": "DUP2",
      "path": "200"
    },
    "2980": {
      "fn": "ERC777._burn",
      "offset": [
        13528,
        13550
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "2981": {
      "fn": "ERC777._burn",
      "offset": [
        13528,
        13550
      ],
      "op": "SSTORE",
      "path": "200"
    },
    "2982": {
      "fn": "ERC777._burn",
      "offset": [
        13528,
        13550
      ],
      "op": "POP",
      "path": "200"
    },
    "2983": {
      "fn": "ERC777._burn",
      "offset": [
        13583,
        13587
      ],
      "op": "DUP6",
      "path": "200",
      "statement": 47
    },
    "2984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2988": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2990": {
      "op": "SHL"
    },
    "2991": {
      "op": "SUB"
    },
    "2992": {
      "fn": "ERC777._burn",
      "offset": [
        13566,
        13616
      ],
      "op": "AND",
      "path": "200"
    },
    "2993": {
      "fn": "ERC777._burn",
      "offset": [
        13573,
        13581
      ],
      "op": "DUP3",
      "path": "200"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3000": {
      "op": "SHL"
    },
    "3001": {
      "op": "SUB"
    },
    "3002": {
      "fn": "ERC777._burn",
      "offset": [
        13566,
        13616
      ],
      "op": "AND",
      "path": "200"
    },
    "3003": {
      "fn": "ERC777._burn",
      "offset": [
        13566,
        13616
      ],
      "op": "PUSH32",
      "path": "200",
      "value": "0xA78A9BE3A7B862D26933AD85FB11D80EF66B8F972D7CBBA06621D583943A4098"
    },
    "3036": {
      "fn": "ERC777._burn",
      "offset": [
        13589,
        13595
      ],
      "op": "DUP8",
      "path": "200"
    },
    "3037": {
      "fn": "ERC777._burn",
      "offset": [
        13597,
        13601
      ],
      "op": "DUP8",
      "path": "200"
    },
    "3038": {
      "fn": "ERC777._burn",
      "offset": [
        13603,
        13615
      ],
      "op": "DUP8",
      "path": "200"
    },
    "3039": {
      "fn": "ERC777._burn",
      "offset": [
        13566,
        13616
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "3041": {
      "fn": "ERC777._burn",
      "offset": [
        13566,
        13616
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "3042": {
      "fn": "ERC777._burn",
      "offset": [
        13566,
        13616
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xBED"
    },
    "3045": {
      "fn": "ERC777._burn",
      "offset": [
        13566,
        13616
      ],
      "op": "SWAP4",
      "path": "200"
    },
    "3046": {
      "fn": "ERC777._burn",
      "offset": [
        13566,
        13616
      ],
      "op": "SWAP3",
      "path": "200"
    },
    "3047": {
      "fn": "ERC777._burn",
      "offset": [
        13566,
        13616
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "3048": {
      "fn": "ERC777._burn",
      "offset": [
        13566,
        13616
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3049": {
      "fn": "ERC777._burn",
      "offset": [
        13566,
        13616
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1522"
    },
    "3052": {
      "fn": "ERC777._burn",
      "jump": "i",
      "offset": [
        13566,
        13616
      ],
      "op": "JUMP",
      "path": "200"
    },
    "3053": {
      "fn": "ERC777._burn",
      "offset": [
        13566,
        13616
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "3054": {
      "fn": "ERC777._burn",
      "offset": [
        13566,
        13616
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "3056": {
      "fn": "ERC777._burn",
      "offset": [
        13566,
        13616
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "3057": {
      "fn": "ERC777._burn",
      "offset": [
        13566,
        13616
      ],
      "op": "DUP1",
      "path": "200"
    },
    "3058": {
      "fn": "ERC777._burn",
      "offset": [
        13566,
        13616
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "3059": {
      "fn": "ERC777._burn",
      "offset": [
        13566,
        13616
      ],
      "op": "SUB",
      "path": "200"
    },
    "3060": {
      "fn": "ERC777._burn",
      "offset": [
        13566,
        13616
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3061": {
      "fn": "ERC777._burn",
      "offset": [
        13566,
        13616
      ],
      "op": "LOG3",
      "path": "200"
    },
    "3062": {
      "fn": "ERC777._burn",
      "offset": [
        13631,
        13665
      ],
      "op": "PUSH1",
      "path": "200",
      "statement": 48,
      "value": "0x40"
    },
    "3064": {
      "fn": "ERC777._burn",
      "offset": [
        13631,
        13665
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "3065": {
      "op": "DUP6"
    },
    "3066": {
      "op": "DUP2"
    },
    "3067": {
      "op": "MSTORE"
    },
    "3068": {
      "fn": "ERC777._burn",
      "offset": [
        13654,
        13655
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "3070": {
      "fn": "ERC777._burn",
      "offset": [
        13654,
        13655
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3077": {
      "op": "SHL"
    },
    "3078": {
      "op": "SUB"
    },
    "3079": {
      "fn": "ERC777._burn",
      "offset": [
        13631,
        13665
      ],
      "op": "DUP9",
      "path": "200"
    },
    "3080": {
      "fn": "ERC777._burn",
      "offset": [
        13631,
        13665
      ],
      "op": "AND",
      "path": "200"
    },
    "3081": {
      "fn": "ERC777._burn",
      "offset": [
        13631,
        13665
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3082": {
      "fn": "ERC777._burn",
      "offset": [
        13631,
        13665
      ],
      "op": "PUSH32",
      "path": "200",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3115": {
      "fn": "ERC777._burn",
      "offset": [
        13631,
        13665
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3118": {
      "op": "ADD"
    },
    "3119": {
      "fn": "ERC777._burn",
      "offset": [
        13631,
        13665
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "3121": {
      "fn": "ERC777._burn",
      "offset": [
        13631,
        13665
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "3122": {
      "fn": "ERC777._burn",
      "offset": [
        13631,
        13665
      ],
      "op": "DUP1",
      "path": "200"
    },
    "3123": {
      "fn": "ERC777._burn",
      "offset": [
        13631,
        13665
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "3124": {
      "fn": "ERC777._burn",
      "offset": [
        13631,
        13665
      ],
      "op": "SUB",
      "path": "200"
    },
    "3125": {
      "fn": "ERC777._burn",
      "offset": [
        13631,
        13665
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3126": {
      "fn": "ERC777._burn",
      "offset": [
        13631,
        13665
      ],
      "op": "LOG3",
      "path": "200"
    },
    "3127": {
      "fn": "ERC777._burn",
      "offset": [
        13007,
        13672
      ],
      "op": "POP",
      "path": "200"
    },
    "3128": {
      "fn": "ERC777._burn",
      "offset": [
        13007,
        13672
      ],
      "op": "POP",
      "path": "200"
    },
    "3129": {
      "fn": "ERC777._burn",
      "offset": [
        12861,
        13672
      ],
      "op": "POP",
      "path": "200"
    },
    "3130": {
      "fn": "ERC777._burn",
      "offset": [
        12861,
        13672
      ],
      "op": "POP",
      "path": "200"
    },
    "3131": {
      "fn": "ERC777._burn",
      "offset": [
        12861,
        13672
      ],
      "op": "POP",
      "path": "200"
    },
    "3132": {
      "fn": "ERC777._burn",
      "offset": [
        12861,
        13672
      ],
      "op": "POP",
      "path": "200"
    },
    "3133": {
      "fn": "ERC777._burn",
      "jump": "o",
      "offset": [
        12861,
        13672
      ],
      "op": "JUMP",
      "path": "200"
    },
    "3134": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15273,
        15745
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "3135": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "3137": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "3138": {
      "op": "PUSH4",
      "value": "0x555DDC65"
    },
    "3143": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3145": {
      "op": "SHL"
    },
    "3146": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "DUP2",
      "path": "200"
    },
    "3147": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3152": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3154": {
      "op": "SHL"
    },
    "3155": {
      "op": "SUB"
    },
    "3156": {
      "op": "DUP7"
    },
    "3157": {
      "op": "AND"
    },
    "3158": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "3160": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "DUP3",
      "path": "200"
    },
    "3161": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "ADD",
      "path": "200"
    },
    "3162": {
      "op": "MSTORE"
    },
    "3163": {
      "offset": [
        1491,
        1522
      ],
      "op": "PUSH32",
      "path": "200",
      "value": "0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895"
    },
    "3196": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3198": {
      "op": "DUP3"
    },
    "3199": {
      "op": "ADD"
    },
    "3200": {
      "op": "MSTORE"
    },
    "3201": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15482,
        15501
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "3203": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15482,
        15501
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3204": {
      "offset": [
        1242,
        1284
      ],
      "op": "PUSH20",
      "path": "200",
      "value": "0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
    },
    "3225": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        1242,
        1284
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3226": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15545
      ],
      "op": "PUSH4",
      "path": "200",
      "value": "0xAABBB8CA"
    },
    "3231": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15545
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3232": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3234": {
      "op": "ADD"
    },
    "3235": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "3237": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "3239": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "3240": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "DUP1",
      "path": "200"
    },
    "3241": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "DUP4",
      "path": "200"
    },
    "3242": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "SUB",
      "path": "200"
    },
    "3243": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "DUP2",
      "path": "200"
    },
    "3244": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "DUP7",
      "path": "200"
    },
    "3245": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "GAS",
      "path": "200"
    },
    "3246": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "STATICCALL",
      "path": "200"
    },
    "3247": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "3248": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "DUP1",
      "path": "200"
    },
    "3249": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "3250": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xCBF"
    },
    "3253": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "3254": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "RETURNDATASIZE",
      "path": "200"
    },
    "3255": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "3257": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "DUP1",
      "path": "200"
    },
    "3258": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "RETURNDATACOPY",
      "path": "200"
    },
    "3259": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "RETURNDATASIZE",
      "path": "200"
    },
    "3260": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "3262": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "REVERT",
      "path": "200"
    },
    "3263": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "3264": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "POP",
      "path": "200"
    },
    "3265": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "POP",
      "path": "200"
    },
    "3266": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "POP",
      "path": "200"
    },
    "3267": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "POP",
      "path": "200"
    },
    "3268": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "3270": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "3271": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "RETURNDATASIZE",
      "path": "200"
    },
    "3272": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x1F"
    },
    "3274": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "NOT",
      "path": "200"
    },
    "3275": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x1F"
    },
    "3277": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "DUP3",
      "path": "200"
    },
    "3278": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "ADD",
      "path": "200"
    },
    "3279": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "AND",
      "path": "200"
    },
    "3280": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "DUP3",
      "path": "200"
    },
    "3281": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "ADD",
      "path": "200"
    },
    "3282": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "DUP1",
      "path": "200"
    },
    "3283": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "3285": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "3286": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "POP",
      "path": "200"
    },
    "3287": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "DUP2",
      "path": "200"
    },
    "3288": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "ADD",
      "path": "200"
    },
    "3289": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3290": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xCE3"
    },
    "3293": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "3294": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3295": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1557"
    },
    "3298": {
      "fn": "ERC777._callTokensToSend",
      "jump": "i",
      "offset": [
        15504,
        15582
      ],
      "op": "JUMP",
      "path": "200"
    },
    "3299": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15504,
        15582
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "3300": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15482,
        15582
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3301": {
      "op": "POP"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3306": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3308": {
      "op": "SHL"
    },
    "3309": {
      "op": "SUB"
    },
    "3310": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15596,
        15621
      ],
      "op": "DUP2",
      "path": "200"
    },
    "3311": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15596,
        15621
      ],
      "op": "AND",
      "path": "200"
    },
    "3312": {
      "branch": 72,
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15596,
        15621
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "3313": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15592,
        15739
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xA81"
    },
    "3316": {
      "branch": 72,
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15592,
        15739
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "3317": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "PUSH1",
      "path": "200",
      "statement": 49,
      "value": "0x40"
    },
    "3319": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "3320": {
      "op": "PUSH4",
      "value": "0x3AD5CBC1"
    },
    "3325": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3327": {
      "op": "SHL"
    },
    "3328": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "DUP2",
      "path": "200"
    },
    "3329": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3336": {
      "op": "SHL"
    },
    "3337": {
      "op": "SUB"
    },
    "3338": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15676
      ],
      "op": "DUP3",
      "path": "200"
    },
    "3339": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15676
      ],
      "op": "AND",
      "path": "200"
    },
    "3340": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15676
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3341": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15676
      ],
      "op": "PUSH4",
      "path": "200",
      "value": "0x75AB9782"
    },
    "3346": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15676
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3347": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xD2A"
    },
    "3350": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3351": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15677,
        15685
      ],
      "op": "DUP11",
      "path": "200"
    },
    "3352": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15677,
        15685
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3353": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15687,
        15691
      ],
      "op": "DUP11",
      "path": "200"
    },
    "3354": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15687,
        15691
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3355": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15693,
        15695
      ],
      "op": "DUP11",
      "path": "200"
    },
    "3356": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15693,
        15695
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3357": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15697,
        15703
      ],
      "op": "DUP11",
      "path": "200"
    },
    "3358": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15697,
        15703
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3359": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15705,
        15713
      ],
      "op": "DUP11",
      "path": "200"
    },
    "3360": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15705,
        15713
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3361": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15715,
        15727
      ],
      "op": "DUP11",
      "path": "200"
    },
    "3362": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15715,
        15727
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3363": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "3365": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "ADD",
      "path": "200"
    },
    "3366": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1574"
    },
    "3369": {
      "fn": "ERC777._callTokensToSend",
      "jump": "i",
      "offset": [
        15637,
        15728
      ],
      "op": "JUMP",
      "path": "200"
    },
    "3370": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "3371": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "3373": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "3375": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "3376": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "DUP1",
      "path": "200"
    },
    "3377": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "DUP4",
      "path": "200"
    },
    "3378": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "SUB",
      "path": "200"
    },
    "3379": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "DUP2",
      "path": "200"
    },
    "3380": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "3382": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "DUP8",
      "path": "200"
    },
    "3383": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "DUP1",
      "path": "200"
    },
    "3384": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "EXTCODESIZE",
      "path": "200"
    },
    "3385": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "3386": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "DUP1",
      "path": "200"
    },
    "3387": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "3388": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xD44"
    },
    "3391": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "3392": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "3394": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "DUP1",
      "path": "200"
    },
    "3395": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "REVERT",
      "path": "200"
    },
    "3396": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "3397": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "POP",
      "path": "200"
    },
    "3398": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "GAS",
      "path": "200"
    },
    "3399": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "CALL",
      "path": "200"
    },
    "3400": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "3401": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "DUP1",
      "path": "200"
    },
    "3402": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "3403": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xD58"
    },
    "3406": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "3407": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "RETURNDATASIZE",
      "path": "200"
    },
    "3408": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "3410": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "DUP1",
      "path": "200"
    },
    "3411": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "RETURNDATACOPY",
      "path": "200"
    },
    "3412": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "RETURNDATASIZE",
      "path": "200"
    },
    "3413": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "3415": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "REVERT",
      "path": "200"
    },
    "3416": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "3417": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "POP",
      "path": "200"
    },
    "3418": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "POP",
      "path": "200"
    },
    "3419": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "POP",
      "path": "200"
    },
    "3420": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15637,
        15728
      ],
      "op": "POP",
      "path": "200"
    },
    "3421": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15472,
        15745
      ],
      "op": "POP",
      "path": "200"
    },
    "3422": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15273,
        15745
      ],
      "op": "POP",
      "path": "200"
    },
    "3423": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15273,
        15745
      ],
      "op": "POP",
      "path": "200"
    },
    "3424": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15273,
        15745
      ],
      "op": "POP",
      "path": "200"
    },
    "3425": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15273,
        15745
      ],
      "op": "POP",
      "path": "200"
    },
    "3426": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15273,
        15745
      ],
      "op": "POP",
      "path": "200"
    },
    "3427": {
      "fn": "ERC777._callTokensToSend",
      "offset": [
        15273,
        15745
      ],
      "op": "POP",
      "path": "200"
    },
    "3428": {
      "fn": "ERC777._callTokensToSend",
      "jump": "o",
      "offset": [
        15273,
        15745
      ],
      "op": "JUMP",
      "path": "200"
    },
    "3429": {
      "fn": "ERC777._move",
      "offset": [
        13678,
        14289
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "3430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3436": {
      "op": "SHL"
    },
    "3437": {
      "op": "SUB"
    },
    "3438": {
      "fn": "ERC777._move",
      "offset": [
        13956,
        13971
      ],
      "op": "DUP6",
      "path": "200"
    },
    "3439": {
      "fn": "ERC777._move",
      "offset": [
        13956,
        13971
      ],
      "op": "AND",
      "path": "200"
    },
    "3440": {
      "fn": "ERC777._move",
      "offset": [
        13934,
        13953
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "3442": {
      "fn": "ERC777._move",
      "offset": [
        13956,
        13971
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3443": {
      "fn": "ERC777._move",
      "offset": [
        13956,
        13971
      ],
      "op": "DUP2",
      "path": "200"
    },
    "3444": {
      "fn": "ERC777._move",
      "offset": [
        13956,
        13971
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "3445": {
      "fn": "ERC777._move",
      "offset": [
        13956,
        13971
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "3447": {
      "fn": "ERC777._move",
      "offset": [
        13956,
        13971
      ],
      "op": "DUP2",
      "path": "200"
    },
    "3448": {
      "fn": "ERC777._move",
      "offset": [
        13956,
        13971
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3449": {
      "fn": "ERC777._move",
      "offset": [
        13956,
        13971
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "3450": {
      "fn": "ERC777._move",
      "offset": [
        13956,
        13971
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "3452": {
      "fn": "ERC777._move",
      "offset": [
        13956,
        13971
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3453": {
      "fn": "ERC777._move",
      "offset": [
        13956,
        13971
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "3454": {
      "fn": "ERC777._move",
      "offset": [
        13956,
        13971
      ],
      "op": "SLOAD",
      "path": "200"
    },
    "3455": {
      "fn": "ERC777._move",
      "offset": [
        13989,
        14010
      ],
      "op": "DUP4",
      "path": "200",
      "statement": 50
    },
    "3456": {
      "fn": "ERC777._move",
      "offset": [
        13989,
        14010
      ],
      "op": "DUP2",
      "path": "200"
    },
    "3457": {
      "fn": "ERC777._move",
      "offset": [
        13989,
        14010
      ],
      "op": "LT",
      "path": "200"
    },
    "3458": {
      "branch": 73,
      "fn": "ERC777._move",
      "offset": [
        13989,
        14010
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "3459": {
      "fn": "ERC777._move",
      "offset": [
        13981,
        14054
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xDDE"
    },
    "3462": {
      "branch": 73,
      "fn": "ERC777._move",
      "offset": [
        13981,
        14054
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "3463": {
      "fn": "ERC777._move",
      "offset": [
        13981,
        14054
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "3465": {
      "fn": "ERC777._move",
      "offset": [
        13981,
        14054
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "3466": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3472": {
      "op": "SHL"
    },
    "3473": {
      "fn": "ERC777._move",
      "offset": [
        13981,
        14054
      ],
      "op": "DUP2",
      "path": "200"
    },
    "3474": {
      "fn": "ERC777._move",
      "offset": [
        13981,
        14054
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3477": {
      "fn": "ERC777._move",
      "offset": [
        13981,
        14054
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "3479": {
      "fn": "ERC777._move",
      "offset": [
        13981,
        14054
      ],
      "op": "DUP3",
      "path": "200"
    },
    "3480": {
      "fn": "ERC777._move",
      "offset": [
        13981,
        14054
      ],
      "op": "ADD",
      "path": "200"
    },
    "3481": {
      "op": "MSTORE"
    },
    "3482": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "3484": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3486": {
      "op": "DUP3"
    },
    "3487": {
      "op": "ADD"
    },
    "3488": {
      "op": "MSTORE"
    },
    "3489": {
      "op": "PUSH32",
      "value": "0x4552433737373A207472616E7366657220616D6F756E74206578636565647320"
    },
    "3522": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3524": {
      "op": "DUP3"
    },
    "3525": {
      "op": "ADD"
    },
    "3526": {
      "op": "MSTORE"
    },
    "3527": {
      "op": "PUSH7",
      "value": "0x62616C616E6365"
    },
    "3535": {
      "op": "PUSH1",
      "value": "0xC8"
    },
    "3537": {
      "op": "SHL"
    },
    "3538": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3540": {
      "op": "DUP3"
    },
    "3541": {
      "op": "ADD"
    },
    "3542": {
      "op": "MSTORE"
    },
    "3543": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3545": {
      "op": "ADD"
    },
    "3546": {
      "fn": "ERC777._move",
      "offset": [
        13981,
        14054
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x41F"
    },
    "3549": {
      "op": "JUMP"
    },
    "3550": {
      "fn": "ERC777._move",
      "offset": [
        13981,
        14054
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "3551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3557": {
      "op": "SHL"
    },
    "3558": {
      "op": "SUB"
    },
    "3559": {
      "fn": "ERC777._move",
      "offset": [
        14088,
        14103
      ],
      "op": "DUP1",
      "path": "200",
      "statement": 51
    },
    "3560": {
      "fn": "ERC777._move",
      "offset": [
        14088,
        14103
      ],
      "op": "DUP8",
      "path": "200"
    },
    "3561": {
      "fn": "ERC777._move",
      "offset": [
        14088,
        14103
      ],
      "op": "AND",
      "path": "200"
    },
    "3562": {
      "fn": "ERC777._move",
      "offset": [
        14088,
        14097
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "3564": {
      "fn": "ERC777._move",
      "offset": [
        14088,
        14103
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3565": {
      "fn": "ERC777._move",
      "offset": [
        14088,
        14103
      ],
      "op": "DUP2",
      "path": "200"
    },
    "3566": {
      "fn": "ERC777._move",
      "offset": [
        14088,
        14103
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "3567": {
      "fn": "ERC777._move",
      "offset": [
        14088,
        14103
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "3569": {
      "fn": "ERC777._move",
      "offset": [
        14088,
        14103
      ],
      "op": "DUP2",
      "path": "200"
    },
    "3570": {
      "fn": "ERC777._move",
      "offset": [
        14088,
        14103
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3571": {
      "fn": "ERC777._move",
      "offset": [
        14088,
        14103
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "3572": {
      "fn": "ERC777._move",
      "offset": [
        14088,
        14103
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "3574": {
      "fn": "ERC777._move",
      "offset": [
        14088,
        14103
      ],
      "op": "DUP1",
      "path": "200"
    },
    "3575": {
      "fn": "ERC777._move",
      "offset": [
        14088,
        14103
      ],
      "op": "DUP3",
      "path": "200"
    },
    "3576": {
      "fn": "ERC777._move",
      "offset": [
        14088,
        14103
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "3577": {
      "fn": "ERC777._move",
      "offset": [
        14106,
        14126
      ],
      "op": "DUP8",
      "path": "200"
    },
    "3578": {
      "fn": "ERC777._move",
      "offset": [
        14106,
        14126
      ],
      "op": "DUP6",
      "path": "200"
    },
    "3579": {
      "fn": "ERC777._move",
      "offset": [
        14106,
        14126
      ],
      "op": "SUB",
      "path": "200"
    },
    "3580": {
      "fn": "ERC777._move",
      "offset": [
        14088,
        14126
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3581": {
      "fn": "ERC777._move",
      "offset": [
        14088,
        14126
      ],
      "op": "SSTORE",
      "path": "200"
    },
    "3582": {
      "fn": "ERC777._move",
      "offset": [
        14146,
        14159
      ],
      "op": "SWAP2",
      "path": "200",
      "statement": 52
    },
    "3583": {
      "fn": "ERC777._move",
      "offset": [
        14146,
        14159
      ],
      "op": "DUP8",
      "path": "200"
    },
    "3584": {
      "fn": "ERC777._move",
      "offset": [
        14146,
        14159
      ],
      "op": "AND",
      "path": "200"
    },
    "3585": {
      "fn": "ERC777._move",
      "offset": [
        14146,
        14159
      ],
      "op": "DUP2",
      "path": "200"
    },
    "3586": {
      "fn": "ERC777._move",
      "offset": [
        14146,
        14159
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "3587": {
      "fn": "ERC777._move",
      "offset": [
        14146,
        14159
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3588": {
      "fn": "ERC777._move",
      "offset": [
        14146,
        14159
      ],
      "op": "DUP2",
      "path": "200"
    },
    "3589": {
      "fn": "ERC777._move",
      "offset": [
        14146,
        14159
      ],
      "op": "KECCAK256",
      "path": "200"
    },
    "3590": {
      "fn": "ERC777._move",
      "offset": [
        14146,
        14169
      ],
      "op": "DUP1",
      "path": "200"
    },
    "3591": {
      "fn": "ERC777._move",
      "offset": [
        14146,
        14169
      ],
      "op": "SLOAD",
      "path": "200"
    },
    "3592": {
      "fn": "ERC777._move",
      "offset": [
        14120,
        14126
      ],
      "op": "DUP7",
      "path": "200"
    },
    "3593": {
      "fn": "ERC777._move",
      "offset": [
        14120,
        14126
      ],
      "op": "SWAP3",
      "path": "200"
    },
    "3594": {
      "fn": "ERC777._move",
      "offset": [
        14088,
        14097
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3595": {
      "fn": "ERC777._move",
      "offset": [
        14146,
        14169
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xE15"
    },
    "3598": {
      "fn": "ERC777._move",
      "offset": [
        14146,
        14169
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3599": {
      "fn": "ERC777._move",
      "offset": [
        14120,
        14126
      ],
      "op": "DUP5",
      "path": "200"
    },
    "3600": {
      "fn": "ERC777._move",
      "offset": [
        14120,
        14126
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3601": {
      "fn": "ERC777._move",
      "offset": [
        14146,
        14169
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x15CE"
    },
    "3604": {
      "fn": "ERC777._move",
      "jump": "i",
      "offset": [
        14146,
        14169
      ],
      "op": "JUMP",
      "path": "200"
    },
    "3605": {
      "fn": "ERC777._move",
      "offset": [
        14146,
        14169
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "3606": {
      "fn": "ERC777._move",
      "offset": [
        14146,
        14169
      ],
      "op": "SWAP3",
      "path": "200"
    },
    "3607": {
      "fn": "ERC777._move",
      "offset": [
        14146,
        14169
      ],
      "op": "POP",
      "path": "200"
    },
    "3608": {
      "fn": "ERC777._move",
      "offset": [
        14146,
        14169
      ],
      "op": "POP",
      "path": "200"
    },
    "3609": {
      "fn": "ERC777._move",
      "offset": [
        14146,
        14169
      ],
      "op": "DUP2",
      "path": "200"
    },
    "3610": {
      "fn": "ERC777._move",
      "offset": [
        14146,
        14169
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3611": {
      "fn": "ERC777._move",
      "offset": [
        14146,
        14169
      ],
      "op": "SSTORE",
      "path": "200"
    },
    "3612": {
      "fn": "ERC777._move",
      "offset": [
        14146,
        14169
      ],
      "op": "POP",
      "path": "200"
    },
    "3613": {
      "fn": "ERC777._move",
      "offset": [
        14206,
        14208
      ],
      "op": "DUP5",
      "path": "200",
      "statement": 53
    },
    "3614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3620": {
      "op": "SHL"
    },
    "3621": {
      "op": "SUB"
    },
    "3622": {
      "fn": "ERC777._move",
      "offset": [
        14185,
        14241
      ],
      "op": "AND",
      "path": "200"
    },
    "3623": {
      "fn": "ERC777._move",
      "offset": [
        14200,
        14204
      ],
      "op": "DUP7",
      "path": "200"
    },
    "3624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3628": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3630": {
      "op": "SHL"
    },
    "3631": {
      "op": "SUB"
    },
    "3632": {
      "fn": "ERC777._move",
      "offset": [
        14185,
        14241
      ],
      "op": "AND",
      "path": "200"
    },
    "3633": {
      "fn": "ERC777._move",
      "offset": [
        14190,
        14198
      ],
      "op": "DUP9",
      "path": "200"
    },
    "3634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3638": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3640": {
      "op": "SHL"
    },
    "3641": {
      "op": "SUB"
    },
    "3642": {
      "fn": "ERC777._move",
      "offset": [
        14185,
        14241
      ],
      "op": "AND",
      "path": "200"
    },
    "3643": {
      "fn": "ERC777._move",
      "offset": [
        14185,
        14241
      ],
      "op": "PUSH32",
      "path": "200",
      "value": "0x6B541DDAA720DB2B10A4D0CDAC39B8D360425FC073085FAC19BC82614677987"
    },
    "3676": {
      "fn": "ERC777._move",
      "offset": [
        14210,
        14216
      ],
      "op": "DUP8",
      "path": "200"
    },
    "3677": {
      "fn": "ERC777._move",
      "offset": [
        14218,
        14226
      ],
      "op": "DUP8",
      "path": "200"
    },
    "3678": {
      "fn": "ERC777._move",
      "offset": [
        14228,
        14240
      ],
      "op": "DUP8",
      "path": "200"
    },
    "3679": {
      "fn": "ERC777._move",
      "offset": [
        14185,
        14241
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "3681": {
      "fn": "ERC777._move",
      "offset": [
        14185,
        14241
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "3682": {
      "fn": "ERC777._move",
      "offset": [
        14185,
        14241
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xE6D"
    },
    "3685": {
      "fn": "ERC777._move",
      "offset": [
        14185,
        14241
      ],
      "op": "SWAP4",
      "path": "200"
    },
    "3686": {
      "fn": "ERC777._move",
      "offset": [
        14185,
        14241
      ],
      "op": "SWAP3",
      "path": "200"
    },
    "3687": {
      "fn": "ERC777._move",
      "offset": [
        14185,
        14241
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "3688": {
      "fn": "ERC777._move",
      "offset": [
        14185,
        14241
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3689": {
      "fn": "ERC777._move",
      "offset": [
        14185,
        14241
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1522"
    },
    "3692": {
      "fn": "ERC777._move",
      "jump": "i",
      "offset": [
        14185,
        14241
      ],
      "op": "JUMP",
      "path": "200"
    },
    "3693": {
      "fn": "ERC777._move",
      "offset": [
        14185,
        14241
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "3694": {
      "fn": "ERC777._move",
      "offset": [
        14185,
        14241
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "3696": {
      "fn": "ERC777._move",
      "offset": [
        14185,
        14241
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "3697": {
      "fn": "ERC777._move",
      "offset": [
        14185,
        14241
      ],
      "op": "DUP1",
      "path": "200"
    },
    "3698": {
      "fn": "ERC777._move",
      "offset": [
        14185,
        14241
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "3699": {
      "fn": "ERC777._move",
      "offset": [
        14185,
        14241
      ],
      "op": "SUB",
      "path": "200"
    },
    "3700": {
      "fn": "ERC777._move",
      "offset": [
        14185,
        14241
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3701": {
      "fn": "ERC777._move",
      "offset": [
        14185,
        14241
      ],
      "op": "LOG4",
      "path": "200"
    },
    "3702": {
      "fn": "ERC777._move",
      "offset": [
        14271,
        14273
      ],
      "op": "DUP5",
      "path": "200",
      "statement": 54
    },
    "3703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3707": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3709": {
      "op": "SHL"
    },
    "3710": {
      "op": "SUB"
    },
    "3711": {
      "fn": "ERC777._move",
      "offset": [
        14256,
        14282
      ],
      "op": "AND",
      "path": "200"
    },
    "3712": {
      "fn": "ERC777._move",
      "offset": [
        14265,
        14269
      ],
      "op": "DUP7",
      "path": "200"
    },
    "3713": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3715": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3719": {
      "op": "SHL"
    },
    "3720": {
      "op": "SUB"
    },
    "3721": {
      "fn": "ERC777._move",
      "offset": [
        14256,
        14282
      ],
      "op": "AND",
      "path": "200"
    },
    "3722": {
      "fn": "ERC777._move",
      "offset": [
        14256,
        14282
      ],
      "op": "PUSH32",
      "path": "200",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3755": {
      "fn": "ERC777._move",
      "offset": [
        14275,
        14281
      ],
      "op": "DUP7",
      "path": "200"
    },
    "3756": {
      "fn": "ERC777._move",
      "offset": [
        14256,
        14282
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "3758": {
      "fn": "ERC777._move",
      "offset": [
        14256,
        14282
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "3759": {
      "fn": "ERC777._move",
      "offset": [
        14256,
        14282
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xEBA"
    },
    "3762": {
      "fn": "ERC777._move",
      "offset": [
        14256,
        14282
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "3763": {
      "op": "DUP2"
    },
    "3764": {
      "op": "MSTORE"
    },
    "3765": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3767": {
      "op": "ADD"
    },
    "3768": {
      "op": "SWAP1"
    },
    "3769": {
      "op": "JUMP"
    },
    "3770": {
      "fn": "ERC777._move",
      "offset": [
        14256,
        14282
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "3771": {
      "fn": "ERC777._move",
      "offset": [
        14256,
        14282
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "3773": {
      "fn": "ERC777._move",
      "offset": [
        14256,
        14282
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "3774": {
      "fn": "ERC777._move",
      "offset": [
        14256,
        14282
      ],
      "op": "DUP1",
      "path": "200"
    },
    "3775": {
      "fn": "ERC777._move",
      "offset": [
        14256,
        14282
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "3776": {
      "fn": "ERC777._move",
      "offset": [
        14256,
        14282
      ],
      "op": "SUB",
      "path": "200"
    },
    "3777": {
      "fn": "ERC777._move",
      "offset": [
        14256,
        14282
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3778": {
      "fn": "ERC777._move",
      "offset": [
        14256,
        14282
      ],
      "op": "LOG3",
      "path": "200"
    },
    "3779": {
      "fn": "ERC777._move",
      "offset": [
        13865,
        14289
      ],
      "op": "POP",
      "path": "200"
    },
    "3780": {
      "fn": "ERC777._move",
      "offset": [
        13678,
        14289
      ],
      "op": "POP",
      "path": "200"
    },
    "3781": {
      "fn": "ERC777._move",
      "offset": [
        13678,
        14289
      ],
      "op": "POP",
      "path": "200"
    },
    "3782": {
      "fn": "ERC777._move",
      "offset": [
        13678,
        14289
      ],
      "op": "POP",
      "path": "200"
    },
    "3783": {
      "fn": "ERC777._move",
      "offset": [
        13678,
        14289
      ],
      "op": "POP",
      "path": "200"
    },
    "3784": {
      "fn": "ERC777._move",
      "offset": [
        13678,
        14289
      ],
      "op": "POP",
      "path": "200"
    },
    "3785": {
      "fn": "ERC777._move",
      "offset": [
        13678,
        14289
      ],
      "op": "POP",
      "path": "200"
    },
    "3786": {
      "fn": "ERC777._move",
      "jump": "o",
      "offset": [
        13678,
        14289
      ],
      "op": "JUMP",
      "path": "200"
    },
    "3787": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16434,
        17110
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "3788": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "3790": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "3791": {
      "op": "PUSH4",
      "value": "0x555DDC65"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3798": {
      "op": "SHL"
    },
    "3799": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "DUP2",
      "path": "200"
    },
    "3800": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3807": {
      "op": "SHL"
    },
    "3808": {
      "op": "SUB"
    },
    "3809": {
      "op": "DUP7"
    },
    "3810": {
      "op": "AND"
    },
    "3811": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "3813": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "DUP3",
      "path": "200"
    },
    "3814": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "ADD",
      "path": "200"
    },
    "3815": {
      "op": "MSTORE"
    },
    "3816": {
      "offset": [
        1588,
        1622
      ],
      "op": "PUSH32",
      "path": "200",
      "value": "0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B"
    },
    "3849": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3851": {
      "op": "DUP3"
    },
    "3852": {
      "op": "ADD"
    },
    "3853": {
      "op": "MSTORE"
    },
    "3854": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16679,
        16698
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "3856": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16679,
        16698
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3857": {
      "offset": [
        1242,
        1284
      ],
      "op": "PUSH20",
      "path": "200",
      "value": "0x1820A4B7618BDE71DCE8CDC73AAB6C95905FAD24"
    },
    "3878": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        1242,
        1284
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3879": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16742
      ],
      "op": "PUSH4",
      "path": "200",
      "value": "0xAABBB8CA"
    },
    "3884": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16742
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3885": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3887": {
      "op": "ADD"
    },
    "3888": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x20"
    },
    "3890": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "3892": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "3893": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "DUP1",
      "path": "200"
    },
    "3894": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "DUP4",
      "path": "200"
    },
    "3895": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "SUB",
      "path": "200"
    },
    "3896": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "DUP2",
      "path": "200"
    },
    "3897": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "DUP7",
      "path": "200"
    },
    "3898": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "GAS",
      "path": "200"
    },
    "3899": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "STATICCALL",
      "path": "200"
    },
    "3900": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "3901": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "DUP1",
      "path": "200"
    },
    "3902": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "3903": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xF4C"
    },
    "3906": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "3907": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "RETURNDATASIZE",
      "path": "200"
    },
    "3908": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "3910": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "DUP1",
      "path": "200"
    },
    "3911": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "RETURNDATACOPY",
      "path": "200"
    },
    "3912": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "RETURNDATASIZE",
      "path": "200"
    },
    "3913": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "3915": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "REVERT",
      "path": "200"
    },
    "3916": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "3917": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "POP",
      "path": "200"
    },
    "3918": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "POP",
      "path": "200"
    },
    "3919": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "POP",
      "path": "200"
    },
    "3920": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "POP",
      "path": "200"
    },
    "3921": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "3923": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "3924": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "RETURNDATASIZE",
      "path": "200"
    },
    "3925": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x1F"
    },
    "3927": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "NOT",
      "path": "200"
    },
    "3928": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x1F"
    },
    "3930": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "DUP3",
      "path": "200"
    },
    "3931": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "ADD",
      "path": "200"
    },
    "3932": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "AND",
      "path": "200"
    },
    "3933": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "DUP3",
      "path": "200"
    },
    "3934": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "ADD",
      "path": "200"
    },
    "3935": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "DUP1",
      "path": "200"
    },
    "3936": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "3938": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "3939": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "POP",
      "path": "200"
    },
    "3940": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "DUP2",
      "path": "200"
    },
    "3941": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "ADD",
      "path": "200"
    },
    "3942": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3943": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xF70"
    },
    "3946": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "SWAP2",
      "path": "200"
    },
    "3947": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3948": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1557"
    },
    "3951": {
      "fn": "ERC777._callTokensReceived",
      "jump": "i",
      "offset": [
        16701,
        16780
      ],
      "op": "JUMP",
      "path": "200"
    },
    "3952": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16701,
        16780
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "3953": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16679,
        16780
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3954": {
      "op": "POP"
    },
    "3955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3959": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3961": {
      "op": "SHL"
    },
    "3962": {
      "op": "SUB"
    },
    "3963": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16794,
        16819
      ],
      "op": "DUP2",
      "path": "200"
    },
    "3964": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16794,
        16819
      ],
      "op": "AND",
      "path": "200"
    },
    "3965": {
      "branch": 74,
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16794,
        16819
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "3966": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16790,
        17104
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xFEC"
    },
    "3969": {
      "branch": 74,
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16790,
        17104
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "3970": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "PUSH1",
      "path": "200",
      "statement": 55,
      "value": "0x40"
    },
    "3972": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "3973": {
      "op": "PUSH3",
      "value": "0x23DE29"
    },
    "3977": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3979": {
      "op": "SHL"
    },
    "3980": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "DUP2",
      "path": "200"
    },
    "3981": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "3982": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3986": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3988": {
      "op": "SHL"
    },
    "3989": {
      "op": "SUB"
    },
    "3990": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16879
      ],
      "op": "DUP3",
      "path": "200"
    },
    "3991": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16879
      ],
      "op": "AND",
      "path": "200"
    },
    "3992": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16879
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3993": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16879
      ],
      "op": "PUSH3",
      "path": "200",
      "value": "0x23DE29"
    },
    "3997": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16879
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "3998": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xFB5"
    },
    "4001": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "4002": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16880,
        16888
      ],
      "op": "DUP12",
      "path": "200"
    },
    "4003": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16880,
        16888
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "4004": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16890,
        16894
      ],
      "op": "DUP12",
      "path": "200"
    },
    "4005": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16890,
        16894
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "4006": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16896,
        16898
      ],
      "op": "DUP12",
      "path": "200"
    },
    "4007": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16896,
        16898
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "4008": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16900,
        16906
      ],
      "op": "DUP12",
      "path": "200"
    },
    "4009": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16900,
        16906
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "4010": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16908,
        16916
      ],
      "op": "DUP12",
      "path": "200"
    },
    "4011": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16908,
        16916
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "4012": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16918,
        16930
      ],
      "op": "DUP12",
      "path": "200"
    },
    "4013": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16918,
        16930
      ],
      "op": "SWAP1",
      "path": "200"
    },
    "4014": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "4016": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "ADD",
      "path": "200"
    },
    "4017": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1574"
    },
    "4020": {
      "fn": "ERC777._callTokensReceived",
      "jump": "i",
      "offset": [
        16835,
        16931
      ],
      "op": "JUMP",
      "path": "200"
    },
    "4021": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "4022": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "4024": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "4026": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "4027": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "DUP1",
      "path": "200"
    },
    "4028": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "DUP4",
      "path": "200"
    },
    "4029": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "SUB",
      "path": "200"
    },
    "4030": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "DUP2",
      "path": "200"
    },
    "4031": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "4033": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "DUP8",
      "path": "200"
    },
    "4034": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "DUP1",
      "path": "200"
    },
    "4035": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "EXTCODESIZE",
      "path": "200"
    },
    "4036": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "4037": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "DUP1",
      "path": "200"
    },
    "4038": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "4039": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xFCF"
    },
    "4042": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "4043": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "4045": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "DUP1",
      "path": "200"
    },
    "4046": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "REVERT",
      "path": "200"
    },
    "4047": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "4048": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "POP",
      "path": "200"
    },
    "4049": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "GAS",
      "path": "200"
    },
    "4050": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "CALL",
      "path": "200"
    },
    "4051": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "4052": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "DUP1",
      "path": "200"
    },
    "4053": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "4054": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0xFE3"
    },
    "4057": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "4058": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "RETURNDATASIZE",
      "path": "200"
    },
    "4059": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "4061": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "DUP1",
      "path": "200"
    },
    "4062": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "RETURNDATACOPY",
      "path": "200"
    },
    "4063": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "RETURNDATASIZE",
      "path": "200"
    },
    "4064": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x0"
    },
    "4066": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "REVERT",
      "path": "200"
    },
    "4067": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "4068": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "POP",
      "path": "200"
    },
    "4069": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "POP",
      "path": "200"
    },
    "4070": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "POP",
      "path": "200"
    },
    "4071": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16835,
        16931
      ],
      "op": "POP",
      "path": "200"
    },
    "4072": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16790,
        17104
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1086"
    },
    "4075": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16790,
        17104
      ],
      "op": "JUMP",
      "path": "200"
    },
    "4076": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16790,
        17104
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "4077": {
      "branch": 75,
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16952,
        16971
      ],
      "op": "DUP2",
      "path": "200"
    },
    "4078": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16948,
        17104
      ],
      "op": "ISZERO",
      "path": "200"
    },
    "4079": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16948,
        17104
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1086"
    },
    "4082": {
      "branch": 75,
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16948,
        17104
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "4083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4089": {
      "op": "SHL"
    },
    "4090": {
      "op": "SUB"
    },
    "4091": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16996,
        17009
      ],
      "op": "DUP7",
      "path": "200",
      "statement": 56
    },
    "4092": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16996,
        17009
      ],
      "op": "AND",
      "path": "200"
    },
    "4093": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "206",
      "statement": 57
    },
    "4094": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1488
      ],
      "op": "ISZERO",
      "path": "206"
    },
    "4095": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16987,
        17093
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x1086"
    },
    "4098": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16987,
        17093
      ],
      "op": "JUMPI",
      "path": "200"
    },
    "4099": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16987,
        17093
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x40"
    },
    "4101": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16987,
        17093
      ],
      "op": "MLOAD",
      "path": "200"
    },
    "4102": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4106": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4108": {
      "op": "SHL"
    },
    "4109": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16987,
        17093
      ],
      "op": "DUP2",
      "path": "200"
    },
    "4110": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16987,
        17093
      ],
      "op": "MSTORE",
      "path": "200"
    },
    "4111": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4113": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16987,
        17093
      ],
      "op": "PUSH1",
      "path": "200",
      "value": "0x4"
    },
    "4115": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16987,
        17093
      ],
      "op": "DUP3",
      "path": "200"
    },
    "4116": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16987,
        17093
      ],
      "op": "ADD",
      "path": "200"
    },
    "4117": {
      "op": "MSTORE"
    },
    "4118": {
      "op": "PUSH1",
      "value": "0x4D"
    },
    "4120": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4122": {
      "op": "DUP3"
    },
    "4123": {
      "op": "ADD"
    },
    "4124": {
      "op": "MSTORE"
    },
    "4125": {
      "op": "PUSH32",
      "value": "0x4552433737373A20746F6B656E20726563697069656E7420636F6E7472616374"
    },
    "4158": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4160": {
      "op": "DUP3"
    },
    "4161": {
      "op": "ADD"
    },
    "4162": {
      "op": "MSTORE"
    },
    "4163": {
      "op": "PUSH32",
      "value": "0x20686173206E6F20696D706C656D656E74657220666F7220455243373737546F"
    },
    "4196": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4198": {
      "op": "DUP3"
    },
    "4199": {
      "op": "ADD"
    },
    "4200": {
      "op": "MSTORE"
    },
    "4201": {
      "op": "PUSH13",
      "value": "0x1AD95B9CD49958DA5C1A595B9D"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "4217": {
      "op": "SHL"
    },
    "4218": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4220": {
      "op": "DUP3"
    },
    "4221": {
      "op": "ADD"
    },
    "4222": {
      "op": "MSTORE"
    },
    "4223": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "4225": {
      "op": "ADD"
    },
    "4226": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16987,
        17093
      ],
      "op": "PUSH2",
      "path": "200",
      "value": "0x41F"
    },
    "4229": {
      "op": "JUMP"
    },
    "4230": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16987,
        17093
      ],
      "op": "JUMPDEST",
      "path": "200"
    },
    "4231": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16669,
        17110
      ],
      "op": "POP",
      "path": "200"
    },
    "4232": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16434,
        17110
      ],
      "op": "POP",
      "path": "200"
    },
    "4233": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16434,
        17110
      ],
      "op": "POP",
      "path": "200"
    },
    "4234": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16434,
        17110
      ],
      "op": "POP",
      "path": "200"
    },
    "4235": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16434,
        17110
      ],
      "op": "POP",
      "path": "200"
    },
    "4236": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16434,
        17110
      ],
      "op": "POP",
      "path": "200"
    },
    "4237": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16434,
        17110
      ],
      "op": "POP",
      "path": "200"
    },
    "4238": {
      "fn": "ERC777._callTokensReceived",
      "offset": [
        16434,
        17110
      ],
      "op": "POP",
      "path": "200"
    },
    "4239": {
      "fn": "ERC777._callTokensReceived",
      "jump": "o",
      "offset": [
        16434,
        17110
      ],
      "op": "JUMP",
      "path": "200"
    },
    "4240": {
      "op": "JUMPDEST"
    },
    "4241": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4243": {
      "op": "DUP1"
    },
    "4244": {
      "op": "DUP3"
    },
    "4245": {
      "op": "MSTORE"
    },
    "4246": {
      "op": "DUP3"
    },
    "4247": {
      "op": "MLOAD"
    },
    "4248": {
      "op": "DUP3"
    },
    "4249": {
      "op": "DUP3"
    },
    "4250": {
      "op": "ADD"
    },
    "4251": {
      "op": "DUP2"
    },
    "4252": {
      "op": "SWAP1"
    },
    "4253": {
      "op": "MSTORE"
    },
    "4254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4256": {
      "op": "SWAP2"
    },
    "4257": {
      "op": "SWAP1"
    },
    "4258": {
      "op": "DUP5"
    },
    "4259": {
      "op": "DUP3"
    },
    "4260": {
      "op": "ADD"
    },
    "4261": {
      "op": "SWAP1"
    },
    "4262": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4264": {
      "op": "DUP6"
    },
    "4265": {
      "op": "ADD"
    },
    "4266": {
      "op": "SWAP1"
    },
    "4267": {
      "op": "DUP5"
    },
    "4268": {
      "op": "JUMPDEST"
    },
    "4269": {
      "op": "DUP2"
    },
    "4270": {
      "op": "DUP2"
    },
    "4271": {
      "op": "LT"
    },
    "4272": {
      "op": "ISZERO"
    },
    "4273": {
      "op": "PUSH2",
      "value": "0x10D1"
    },
    "4276": {
      "op": "JUMPI"
    },
    "4277": {
      "op": "DUP4"
    },
    "4278": {
      "op": "MLOAD"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4285": {
      "op": "SHL"
    },
    "4286": {
      "op": "SUB"
    },
    "4287": {
      "op": "AND"
    },
    "4288": {
      "op": "DUP4"
    },
    "4289": {
      "op": "MSTORE"
    },
    "4290": {
      "op": "SWAP3"
    },
    "4291": {
      "op": "DUP5"
    },
    "4292": {
      "op": "ADD"
    },
    "4293": {
      "op": "SWAP3"
    },
    "4294": {
      "op": "SWAP2"
    },
    "4295": {
      "op": "DUP5"
    },
    "4296": {
      "op": "ADD"
    },
    "4297": {
      "op": "SWAP2"
    },
    "4298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4300": {
      "op": "ADD"
    },
    "4301": {
      "op": "PUSH2",
      "value": "0x10AC"
    },
    "4304": {
      "op": "JUMP"
    },
    "4305": {
      "op": "JUMPDEST"
    },
    "4306": {
      "op": "POP"
    },
    "4307": {
      "op": "SWAP1"
    },
    "4308": {
      "op": "SWAP7"
    },
    "4309": {
      "op": "SWAP6"
    },
    "4310": {
      "op": "POP"
    },
    "4311": {
      "op": "POP"
    },
    "4312": {
      "op": "POP"
    },
    "4313": {
      "op": "POP"
    },
    "4314": {
      "op": "POP"
    },
    "4315": {
      "op": "POP"
    },
    "4316": {
      "jump": "o",
      "op": "JUMP"
    },
    "4317": {
      "op": "JUMPDEST"
    },
    "4318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4320": {
      "op": "DUP2"
    },
    "4321": {
      "op": "MLOAD"
    },
    "4322": {
      "op": "DUP1"
    },
    "4323": {
      "op": "DUP5"
    },
    "4324": {
      "op": "MSTORE"
    },
    "4325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4327": {
      "op": "JUMPDEST"
    },
    "4328": {
      "op": "DUP2"
    },
    "4329": {
      "op": "DUP2"
    },
    "4330": {
      "op": "LT"
    },
    "4331": {
      "op": "ISZERO"
    },
    "4332": {
      "op": "PUSH2",
      "value": "0x1103"
    },
    "4335": {
      "op": "JUMPI"
    },
    "4336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4338": {
      "op": "DUP2"
    },
    "4339": {
      "op": "DUP6"
    },
    "4340": {
      "op": "ADD"
    },
    "4341": {
      "op": "DUP2"
    },
    "4342": {
      "op": "ADD"
    },
    "4343": {
      "op": "MLOAD"
    },
    "4344": {
      "op": "DUP7"
    },
    "4345": {
      "op": "DUP4"
    },
    "4346": {
      "op": "ADD"
    },
    "4347": {
      "op": "DUP3"
    },
    "4348": {
      "op": "ADD"
    },
    "4349": {
      "op": "MSTORE"
    },
    "4350": {
      "op": "ADD"
    },
    "4351": {
      "op": "PUSH2",
      "value": "0x10E7"
    },
    "4354": {
      "op": "JUMP"
    },
    "4355": {
      "op": "JUMPDEST"
    },
    "4356": {
      "op": "DUP2"
    },
    "4357": {
      "op": "DUP2"
    },
    "4358": {
      "op": "GT"
    },
    "4359": {
      "op": "ISZERO"
    },
    "4360": {
      "op": "PUSH2",
      "value": "0x1115"
    },
    "4363": {
      "op": "JUMPI"
    },
    "4364": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4366": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4368": {
      "op": "DUP4"
    },
    "4369": {
      "op": "DUP8"
    },
    "4370": {
      "op": "ADD"
    },
    "4371": {
      "op": "ADD"
    },
    "4372": {
      "op": "MSTORE"
    },
    "4373": {
      "op": "JUMPDEST"
    },
    "4374": {
      "op": "POP"
    },
    "4375": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4377": {
      "op": "ADD"
    },
    "4378": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4380": {
      "op": "NOT"
    },
    "4381": {
      "op": "AND"
    },
    "4382": {
      "op": "SWAP3"
    },
    "4383": {
      "op": "SWAP1"
    },
    "4384": {
      "op": "SWAP3"
    },
    "4385": {
      "op": "ADD"
    },
    "4386": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4388": {
      "op": "ADD"
    },
    "4389": {
      "op": "SWAP3"
    },
    "4390": {
      "op": "SWAP2"
    },
    "4391": {
      "op": "POP"
    },
    "4392": {
      "op": "POP"
    },
    "4393": {
      "jump": "o",
      "op": "JUMP"
    },
    "4394": {
      "op": "JUMPDEST"
    },
    "4395": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4397": {
      "op": "DUP2"
    },
    "4398": {
      "op": "MSTORE"
    },
    "4399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4401": {
      "op": "PUSH2",
      "value": "0x661"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4406": {
      "op": "DUP4"
    },
    "4407": {
      "op": "ADD"
    },
    "4408": {
      "op": "DUP5"
    },
    "4409": {
      "op": "PUSH2",
      "value": "0x10DD"
    },
    "4412": {
      "jump": "i",
      "op": "JUMP"
    },
    "4413": {
      "op": "JUMPDEST"
    },
    "4414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4418": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4420": {
      "op": "SHL"
    },
    "4421": {
      "op": "SUB"
    },
    "4422": {
      "op": "DUP2"
    },
    "4423": {
      "op": "AND"
    },
    "4424": {
      "op": "DUP2"
    },
    "4425": {
      "op": "EQ"
    },
    "4426": {
      "op": "PUSH2",
      "value": "0x1152"
    },
    "4429": {
      "op": "JUMPI"
    },
    "4430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4432": {
      "op": "DUP1"
    },
    "4433": {
      "op": "REVERT"
    },
    "4434": {
      "op": "JUMPDEST"
    },
    "4435": {
      "op": "POP"
    },
    "4436": {
      "jump": "o",
      "op": "JUMP"
    },
    "4437": {
      "op": "JUMPDEST"
    },
    "4438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4440": {
      "op": "DUP1"
    },
    "4441": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4443": {
      "op": "DUP4"
    },
    "4444": {
      "op": "DUP6"
    },
    "4445": {
      "op": "SUB"
    },
    "4446": {
      "op": "SLT"
    },
    "4447": {
      "op": "ISZERO"
    },
    "4448": {
      "op": "PUSH2",
      "value": "0x1168"
    },
    "4451": {
      "op": "JUMPI"
    },
    "4452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4454": {
      "op": "DUP1"
    },
    "4455": {
      "op": "REVERT"
    },
    "4456": {
      "op": "JUMPDEST"
    },
    "4457": {
      "op": "DUP3"
    },
    "4458": {
      "op": "CALLDATALOAD"
    },
    "4459": {
      "op": "PUSH2",
      "value": "0x1173"
    },
    "4462": {
      "op": "DUP2"
    },
    "4463": {
      "op": "PUSH2",
      "value": "0x113D"
    },
    "4466": {
      "jump": "i",
      "op": "JUMP"
    },
    "4467": {
      "op": "JUMPDEST"
    },
    "4468": {
      "op": "SWAP5"
    },
    "4469": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4471": {
      "op": "SWAP4"
    },
    "4472": {
      "op": "SWAP1"
    },
    "4473": {
      "op": "SWAP4"
    },
    "4474": {
      "op": "ADD"
    },
    "4475": {
      "op": "CALLDATALOAD"
    },
    "4476": {
      "op": "SWAP4"
    },
    "4477": {
      "op": "POP"
    },
    "4478": {
      "op": "POP"
    },
    "4479": {
      "op": "POP"
    },
    "4480": {
      "jump": "o",
      "op": "JUMP"
    },
    "4481": {
      "op": "JUMPDEST"
    },
    "4482": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4484": {
      "op": "DUP1"
    },
    "4485": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4487": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4489": {
      "op": "DUP5"
    },
    "4490": {
      "op": "DUP7"
    },
    "4491": {
      "op": "SUB"
    },
    "4492": {
      "op": "SLT"
    },
    "4493": {
      "op": "ISZERO"
    },
    "4494": {
      "op": "PUSH2",
      "value": "0x1196"
    },
    "4497": {
      "op": "JUMPI"
    },
    "4498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4500": {
      "op": "DUP1"
    },
    "4501": {
      "op": "REVERT"
    },
    "4502": {
      "op": "JUMPDEST"
    },
    "4503": {
      "op": "DUP4"
    },
    "4504": {
      "op": "CALLDATALOAD"
    },
    "4505": {
      "op": "PUSH2",
      "value": "0x11A1"
    },
    "4508": {
      "op": "DUP2"
    },
    "4509": {
      "op": "PUSH2",
      "value": "0x113D"
    },
    "4512": {
      "jump": "i",
      "op": "JUMP"
    },
    "4513": {
      "op": "JUMPDEST"
    },
    "4514": {
      "op": "SWAP3"
    },
    "4515": {
      "op": "POP"
    },
    "4516": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4518": {
      "op": "DUP5"
    },
    "4519": {
      "op": "ADD"
    },
    "4520": {
      "op": "CALLDATALOAD"
    },
    "4521": {
      "op": "PUSH2",
      "value": "0x11B1"
    },
    "4524": {
      "op": "DUP2"
    },
    "4525": {
      "op": "PUSH2",
      "value": "0x113D"
    },
    "4528": {
      "jump": "i",
      "op": "JUMP"
    },
    "4529": {
      "op": "JUMPDEST"
    },
    "4530": {
      "op": "SWAP3"
    },
    "4531": {
      "op": "SWAP6"
    },
    "4532": {
      "op": "SWAP3"
    },
    "4533": {
      "op": "SWAP5"
    },
    "4534": {
      "op": "POP"
    },
    "4535": {
      "op": "POP"
    },
    "4536": {
      "op": "POP"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4539": {
      "op": "SWAP2"
    },
    "4540": {
      "op": "SWAP1"
    },
    "4541": {
      "op": "SWAP2"
    },
    "4542": {
      "op": "ADD"
    },
    "4543": {
      "op": "CALLDATALOAD"
    },
    "4544": {
      "op": "SWAP1"
    },
    "4545": {
      "jump": "o",
      "op": "JUMP"
    },
    "4546": {
      "op": "JUMPDEST"
    },
    "4547": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4552": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4554": {
      "op": "SHL"
    },
    "4555": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4557": {
      "op": "MSTORE"
    },
    "4558": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "4560": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4562": {
      "op": "MSTORE"
    },
    "4563": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4565": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4567": {
      "op": "REVERT"
    },
    "4568": {
      "op": "JUMPDEST"
    },
    "4569": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4571": {
      "op": "DUP3"
    },
    "4572": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4574": {
      "op": "DUP4"
    },
    "4575": {
      "op": "ADD"
    },
    "4576": {
      "op": "SLT"
    },
    "4577": {
      "op": "PUSH2",
      "value": "0x11E9"
    },
    "4580": {
      "op": "JUMPI"
    },
    "4581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4583": {
      "op": "DUP1"
    },
    "4584": {
      "op": "REVERT"
    },
    "4585": {
      "op": "JUMPDEST"
    },
    "4586": {
      "op": "DUP2"
    },
    "4587": {
      "op": "CALLDATALOAD"
    },
    "4588": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4597": {
      "op": "DUP1"
    },
    "4598": {
      "op": "DUP3"
    },
    "4599": {
      "op": "GT"
    },
    "4600": {
      "op": "ISZERO"
    },
    "4601": {
      "op": "PUSH2",
      "value": "0x1204"
    },
    "4604": {
      "op": "JUMPI"
    },
    "4605": {
      "op": "PUSH2",
      "value": "0x1204"
    },
    "4608": {
      "op": "PUSH2",
      "value": "0x11C2"
    },
    "4611": {
      "jump": "i",
      "op": "JUMP"
    },
    "4612": {
      "op": "JUMPDEST"
    },
    "4613": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4615": {
      "op": "MLOAD"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4618": {
      "op": "DUP4"
    },
    "4619": {
      "op": "ADD"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4622": {
      "op": "NOT"
    },
    "4623": {
      "op": "SWAP1"
    },
    "4624": {
      "op": "DUP2"
    },
    "4625": {
      "op": "AND"
    },
    "4626": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "4628": {
      "op": "ADD"
    },
    "4629": {
      "op": "AND"
    },
    "4630": {
      "op": "DUP2"
    },
    "4631": {
      "op": "ADD"
    },
    "4632": {
      "op": "SWAP1"
    },
    "4633": {
      "op": "DUP3"
    },
    "4634": {
      "op": "DUP3"
    },
    "4635": {
      "op": "GT"
    },
    "4636": {
      "op": "DUP2"
    },
    "4637": {
      "op": "DUP4"
    },
    "4638": {
      "op": "LT"
    },
    "4639": {
      "op": "OR"
    },
    "4640": {
      "op": "ISZERO"
    },
    "4641": {
      "op": "PUSH2",
      "value": "0x122C"
    },
    "4644": {
      "op": "JUMPI"
    },
    "4645": {
      "op": "PUSH2",
      "value": "0x122C"
    },
    "4648": {
      "op": "PUSH2",
      "value": "0x11C2"
    },
    "4651": {
      "jump": "i",
      "op": "JUMP"
    },
    "4652": {
      "op": "JUMPDEST"
    },
    "4653": {
      "op": "DUP2"
    },
    "4654": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4656": {
      "op": "MSTORE"
    },
    "4657": {
      "op": "DUP4"
    },
    "4658": {
      "op": "DUP2"
    },
    "4659": {
      "op": "MSTORE"
    },
    "4660": {
      "op": "DUP7"
    },
    "4661": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4663": {
      "op": "DUP6"
    },
    "4664": {
      "op": "DUP9"
    },
    "4665": {
      "op": "ADD"
    },
    "4666": {
      "op": "ADD"
    },
    "4667": {
      "op": "GT"
    },
    "4668": {
      "op": "ISZERO"
    },
    "4669": {
      "op": "PUSH2",
      "value": "0x1245"
    },
    "4672": {
      "op": "JUMPI"
    },
    "4673": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4675": {
      "op": "DUP1"
    },
    "4676": {
      "op": "REVERT"
    },
    "4677": {
      "op": "JUMPDEST"
    },
    "4678": {
      "op": "DUP4"
    },
    "4679": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4681": {
      "op": "DUP8"
    },
    "4682": {
      "op": "ADD"
    },
    "4683": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4685": {
      "op": "DUP4"
    },
    "4686": {
      "op": "ADD"
    },
    "4687": {
      "op": "CALLDATACOPY"
    },
    "4688": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4692": {
      "op": "DUP6"
    },
    "4693": {
      "op": "DUP4"
    },
    "4694": {
      "op": "ADD"
    },
    "4695": {
      "op": "ADD"
    },
    "4696": {
      "op": "MSTORE"
    },
    "4697": {
      "op": "DUP1"
    },
    "4698": {
      "op": "SWAP5"
    },
    "4699": {
      "op": "POP"
    },
    "4700": {
      "op": "POP"
    },
    "4701": {
      "op": "POP"
    },
    "4702": {
      "op": "POP"
    },
    "4703": {
      "op": "POP"
    },
    "4704": {
      "op": "SWAP3"
    },
    "4705": {
      "op": "SWAP2"
    },
    "4706": {
      "op": "POP"
    },
    "4707": {
      "op": "POP"
    },
    "4708": {
      "jump": "o",
      "op": "JUMP"
    },
    "4709": {
      "op": "JUMPDEST"
    },
    "4710": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4712": {
      "op": "DUP1"
    },
    "4713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4715": {
      "op": "DUP1"
    },
    "4716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4718": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4720": {
      "op": "DUP7"
    },
    "4721": {
      "op": "DUP9"
    },
    "4722": {
      "op": "SUB"
    },
    "4723": {
      "op": "SLT"
    },
    "4724": {
      "op": "ISZERO"
    },
    "4725": {
      "op": "PUSH2",
      "value": "0x127D"
    },
    "4728": {
      "op": "JUMPI"
    },
    "4729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4731": {
      "op": "DUP1"
    },
    "4732": {
      "op": "REVERT"
    },
    "4733": {
      "op": "JUMPDEST"
    },
    "4734": {
      "op": "DUP6"
    },
    "4735": {
      "op": "CALLDATALOAD"
    },
    "4736": {
      "op": "PUSH2",
      "value": "0x1288"
    },
    "4739": {
      "op": "DUP2"
    },
    "4740": {
      "op": "PUSH2",
      "value": "0x113D"
    },
    "4743": {
      "jump": "i",
      "op": "JUMP"
    },
    "4744": {
      "op": "JUMPDEST"
    },
    "4745": {
      "op": "SWAP5"
    },
    "4746": {
      "op": "POP"
    },
    "4747": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4749": {
      "op": "DUP7"
    },
    "4750": {
      "op": "ADD"
    },
    "4751": {
      "op": "CALLDATALOAD"
    },
    "4752": {
      "op": "PUSH2",
      "value": "0x1298"
    },
    "4755": {
      "op": "DUP2"
    },
    "4756": {
      "op": "PUSH2",
      "value": "0x113D"
    },
    "4759": {
      "jump": "i",
      "op": "JUMP"
    },
    "4760": {
      "op": "JUMPDEST"
    },
    "4761": {
      "op": "SWAP4"
    },
    "4762": {
      "op": "POP"
    },
    "4763": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4765": {
      "op": "DUP7"
    },
    "4766": {
      "op": "ADD"
    },
    "4767": {
      "op": "CALLDATALOAD"
    },
    "4768": {
      "op": "SWAP3"
    },
    "4769": {
      "op": "POP"
    },
    "4770": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4772": {
      "op": "DUP7"
    },
    "4773": {
      "op": "ADD"
    },
    "4774": {
      "op": "CALLDATALOAD"
    },
    "4775": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4784": {
      "op": "DUP1"
    },
    "4785": {
      "op": "DUP3"
    },
    "4786": {
      "op": "GT"
    },
    "4787": {
      "op": "ISZERO"
    },
    "4788": {
      "op": "PUSH2",
      "value": "0x12BC"
    },
    "4791": {
      "op": "JUMPI"
    },
    "4792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4794": {
      "op": "DUP1"
    },
    "4795": {
      "op": "REVERT"
    },
    "4796": {
      "op": "JUMPDEST"
    },
    "4797": {
      "op": "PUSH2",
      "value": "0x12C8"
    },
    "4800": {
      "op": "DUP10"
    },
    "4801": {
      "op": "DUP4"
    },
    "4802": {
      "op": "DUP11"
    },
    "4803": {
      "op": "ADD"
    },
    "4804": {
      "op": "PUSH2",
      "value": "0x11D8"
    },
    "4807": {
      "jump": "i",
      "op": "JUMP"
    },
    "4808": {
      "op": "JUMPDEST"
    },
    "4809": {
      "op": "SWAP4"
    },
    "4810": {
      "op": "POP"
    },
    "4811": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4813": {
      "op": "DUP9"
    },
    "4814": {
      "op": "ADD"
    },
    "4815": {
      "op": "CALLDATALOAD"
    },
    "4816": {
      "op": "SWAP2"
    },
    "4817": {
      "op": "POP"
    },
    "4818": {
      "op": "DUP1"
    },
    "4819": {
      "op": "DUP3"
    },
    "4820": {
      "op": "GT"
    },
    "4821": {
      "op": "ISZERO"
    },
    "4822": {
      "op": "PUSH2",
      "value": "0x12DE"
    },
    "4825": {
      "op": "JUMPI"
    },
    "4826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4828": {
      "op": "DUP1"
    },
    "4829": {
      "op": "REVERT"
    },
    "4830": {
      "op": "JUMPDEST"
    },
    "4831": {
      "op": "POP"
    },
    "4832": {
      "op": "PUSH2",
      "value": "0x12EB"
    },
    "4835": {
      "op": "DUP9"
    },
    "4836": {
      "op": "DUP3"
    },
    "4837": {
      "op": "DUP10"
    },
    "4838": {
      "op": "ADD"
    },
    "4839": {
      "op": "PUSH2",
      "value": "0x11D8"
    },
    "4842": {
      "jump": "i",
      "op": "JUMP"
    },
    "4843": {
      "op": "JUMPDEST"
    },
    "4844": {
      "op": "SWAP2"
    },
    "4845": {
      "op": "POP"
    },
    "4846": {
      "op": "POP"
    },
    "4847": {
      "op": "SWAP3"
    },
    "4848": {
      "op": "SWAP6"
    },
    "4849": {
      "op": "POP"
    },
    "4850": {
      "op": "SWAP3"
    },
    "4851": {
      "op": "SWAP6"
    },
    "4852": {
      "op": "SWAP1"
    },
    "4853": {
      "op": "SWAP4"
    },
    "4854": {
      "op": "POP"
    },
    "4855": {
      "jump": "o",
      "op": "JUMP"
    },
    "4856": {
      "op": "JUMPDEST"
    },
    "4857": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4859": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4861": {
      "op": "DUP3"
    },
    "4862": {
      "op": "DUP5"
    },
    "4863": {
      "op": "SUB"
    },
    "4864": {
      "op": "SLT"
    },
    "4865": {
      "op": "ISZERO"
    },
    "4866": {
      "op": "PUSH2",
      "value": "0x130A"
    },
    "4869": {
      "op": "JUMPI"
    },
    "4870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4872": {
      "op": "DUP1"
    },
    "4873": {
      "op": "REVERT"
    },
    "4874": {
      "op": "JUMPDEST"
    },
    "4875": {
      "op": "DUP2"
    },
    "4876": {
      "op": "CALLDATALOAD"
    },
    "4877": {
      "op": "PUSH2",
      "value": "0x661"
    },
    "4880": {
      "op": "DUP2"
    },
    "4881": {
      "op": "PUSH2",
      "value": "0x113D"
    },
    "4884": {
      "jump": "i",
      "op": "JUMP"
    },
    "4885": {
      "op": "JUMPDEST"
    },
    "4886": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4888": {
      "op": "DUP1"
    },
    "4889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4891": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4893": {
      "op": "DUP5"
    },
    "4894": {
      "op": "DUP7"
    },
    "4895": {
      "op": "SUB"
    },
    "4896": {
      "op": "SLT"
    },
    "4897": {
      "op": "ISZERO"
    },
    "4898": {
      "op": "PUSH2",
      "value": "0x132A"
    },
    "4901": {
      "op": "JUMPI"
    },
    "4902": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4904": {
      "op": "DUP1"
    },
    "4905": {
      "op": "REVERT"
    },
    "4906": {
      "op": "JUMPDEST"
    },
    "4907": {
      "op": "DUP4"
    },
    "4908": {
      "op": "CALLDATALOAD"
    },
    "4909": {
      "op": "PUSH2",
      "value": "0x1335"
    },
    "4912": {
      "op": "DUP2"
    },
    "4913": {
      "op": "PUSH2",
      "value": "0x113D"
    },
    "4916": {
      "jump": "i",
      "op": "JUMP"
    },
    "4917": {
      "op": "JUMPDEST"
    },
    "4918": {
      "op": "SWAP3"
    },
    "4919": {
      "op": "POP"
    },
    "4920": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4922": {
      "op": "DUP5"
    },
    "4923": {
      "op": "ADD"
    },
    "4924": {
      "op": "CALLDATALOAD"
    },
    "4925": {
      "op": "SWAP2"
    },
    "4926": {
      "op": "POP"
    },
    "4927": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4929": {
      "op": "DUP5"
    },
    "4930": {
      "op": "ADD"
    },
    "4931": {
      "op": "CALLDATALOAD"
    },
    "4932": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4941": {
      "op": "DUP2"
    },
    "4942": {
      "op": "GT"
    },
    "4943": {
      "op": "ISZERO"
    },
    "4944": {
      "op": "PUSH2",
      "value": "0x1358"
    },
    "4947": {
      "op": "JUMPI"
    },
    "4948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4950": {
      "op": "DUP1"
    },
    "4951": {
      "op": "REVERT"
    },
    "4952": {
      "op": "JUMPDEST"
    },
    "4953": {
      "op": "PUSH2",
      "value": "0x1364"
    },
    "4956": {
      "op": "DUP7"
    },
    "4957": {
      "op": "DUP3"
    },
    "4958": {
      "op": "DUP8"
    },
    "4959": {
      "op": "ADD"
    },
    "4960": {
      "op": "PUSH2",
      "value": "0x11D8"
    },
    "4963": {
      "jump": "i",
      "op": "JUMP"
    },
    "4964": {
      "op": "JUMPDEST"
    },
    "4965": {
      "op": "SWAP2"
    },
    "4966": {
      "op": "POP"
    },
    "4967": {
      "op": "POP"
    },
    "4968": {
      "op": "SWAP3"
    },
    "4969": {
      "op": "POP"
    },
    "4970": {
      "op": "SWAP3"
    },
    "4971": {
      "op": "POP"
    },
    "4972": {
      "op": "SWAP3"
    },
    "4973": {
      "jump": "o",
      "op": "JUMP"
    },
    "4974": {
      "op": "JUMPDEST"
    },
    "4975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4977": {
      "op": "DUP1"
    },
    "4978": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4980": {
      "op": "DUP4"
    },
    "4981": {
      "op": "DUP6"
    },
    "4982": {
      "op": "SUB"
    },
    "4983": {
      "op": "SLT"
    },
    "4984": {
      "op": "ISZERO"
    },
    "4985": {
      "op": "PUSH2",
      "value": "0x1381"
    },
    "4988": {
      "op": "JUMPI"
    },
    "4989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4991": {
      "op": "DUP1"
    },
    "4992": {
      "op": "REVERT"
    },
    "4993": {
      "op": "JUMPDEST"
    },
    "4994": {
      "op": "DUP3"
    },
    "4995": {
      "op": "CALLDATALOAD"
    },
    "4996": {
      "op": "PUSH2",
      "value": "0x138C"
    },
    "4999": {
      "op": "DUP2"
    },
    "5000": {
      "op": "PUSH2",
      "value": "0x113D"
    },
    "5003": {
      "jump": "i",
      "op": "JUMP"
    },
    "5004": {
      "op": "JUMPDEST"
    },
    "5005": {
      "op": "SWAP2"
    },
    "5006": {
      "op": "POP"
    },
    "5007": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5009": {
      "op": "DUP4"
    },
    "5010": {
      "op": "ADD"
    },
    "5011": {
      "op": "CALLDATALOAD"
    },
    "5012": {
      "op": "PUSH2",
      "value": "0x139C"
    },
    "5015": {
      "op": "DUP2"
    },
    "5016": {
      "op": "PUSH2",
      "value": "0x113D"
    },
    "5019": {
      "jump": "i",
      "op": "JUMP"
    },
    "5020": {
      "op": "JUMPDEST"
    },
    "5021": {
      "op": "DUP1"
    },
    "5022": {
      "op": "SWAP2"
    },
    "5023": {
      "op": "POP"
    },
    "5024": {
      "op": "POP"
    },
    "5025": {
      "op": "SWAP3"
    },
    "5026": {
      "op": "POP"
    },
    "5027": {
      "op": "SWAP3"
    },
    "5028": {
      "op": "SWAP1"
    },
    "5029": {
      "op": "POP"
    },
    "5030": {
      "jump": "o",
      "op": "JUMP"
    },
    "5031": {
      "op": "JUMPDEST"
    },
    "5032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5034": {
      "op": "DUP1"
    },
    "5035": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5037": {
      "op": "DUP1"
    },
    "5038": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5040": {
      "op": "DUP6"
    },
    "5041": {
      "op": "DUP8"
    },
    "5042": {
      "op": "SUB"
    },
    "5043": {
      "op": "SLT"
    },
    "5044": {
      "op": "ISZERO"
    },
    "5045": {
      "op": "PUSH2",
      "value": "0x13BD"
    },
    "5048": {
      "op": "JUMPI"
    },
    "5049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5051": {
      "op": "DUP1"
    },
    "5052": {
      "op": "REVERT"
    },
    "5053": {
      "op": "JUMPDEST"
    },
    "5054": {
      "op": "DUP5"
    },
    "5055": {
      "op": "CALLDATALOAD"
    },
    "5056": {
      "op": "PUSH2",
      "value": "0x13C8"
    },
    "5059": {
      "op": "DUP2"
    },
    "5060": {
      "op": "PUSH2",
      "value": "0x113D"
    },
    "5063": {
      "jump": "i",
      "op": "JUMP"
    },
    "5064": {
      "op": "JUMPDEST"
    },
    "5065": {
      "op": "SWAP4"
    },
    "5066": {
      "op": "POP"
    },
    "5067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5069": {
      "op": "DUP6"
    },
    "5070": {
      "op": "ADD"
    },
    "5071": {
      "op": "CALLDATALOAD"
    },
    "5072": {
      "op": "SWAP3"
    },
    "5073": {
      "op": "POP"
    },
    "5074": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5076": {
      "op": "DUP6"
    },
    "5077": {
      "op": "ADD"
    },
    "5078": {
      "op": "CALLDATALOAD"
    },
    "5079": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5088": {
      "op": "DUP1"
    },
    "5089": {
      "op": "DUP3"
    },
    "5090": {
      "op": "GT"
    },
    "5091": {
      "op": "ISZERO"
    },
    "5092": {
      "op": "PUSH2",
      "value": "0x13EC"
    },
    "5095": {
      "op": "JUMPI"
    },
    "5096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5098": {
      "op": "DUP1"
    },
    "5099": {
      "op": "REVERT"
    },
    "5100": {
      "op": "JUMPDEST"
    },
    "5101": {
      "op": "PUSH2",
      "value": "0x13F8"
    },
    "5104": {
      "op": "DUP9"
    },
    "5105": {
      "op": "DUP4"
    },
    "5106": {
      "op": "DUP10"
    },
    "5107": {
      "op": "ADD"
    },
    "5108": {
      "op": "PUSH2",
      "value": "0x11D8"
    },
    "5111": {
      "jump": "i",
      "op": "JUMP"
    },
    "5112": {
      "op": "JUMPDEST"
    },
    "5113": {
      "op": "SWAP4"
    },
    "5114": {
      "op": "POP"
    },
    "5115": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5117": {
      "op": "DUP8"
    },
    "5118": {
      "op": "ADD"
    },
    "5119": {
      "op": "CALLDATALOAD"
    },
    "5120": {
      "op": "SWAP2"
    },
    "5121": {
      "op": "POP"
    },
    "5122": {
      "op": "DUP1"
    },
    "5123": {
      "op": "DUP3"
    },
    "5124": {
      "op": "GT"
    },
    "5125": {
      "op": "ISZERO"
    },
    "5126": {
      "op": "PUSH2",
      "value": "0x140E"
    },
    "5129": {
      "op": "JUMPI"
    },
    "5130": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5132": {
      "op": "DUP1"
    },
    "5133": {
      "op": "REVERT"
    },
    "5134": {
      "op": "JUMPDEST"
    },
    "5135": {
      "op": "POP"
    },
    "5136": {
      "op": "PUSH2",
      "value": "0x141B"
    },
    "5139": {
      "op": "DUP8"
    },
    "5140": {
      "op": "DUP3"
    },
    "5141": {
      "op": "DUP9"
    },
    "5142": {
      "op": "ADD"
    },
    "5143": {
      "op": "PUSH2",
      "value": "0x11D8"
    },
    "5146": {
      "jump": "i",
      "op": "JUMP"
    },
    "5147": {
      "op": "JUMPDEST"
    },
    "5148": {
      "op": "SWAP2"
    },
    "5149": {
      "op": "POP"
    },
    "5150": {
      "op": "POP"
    },
    "5151": {
      "op": "SWAP3"
    },
    "5152": {
      "op": "SWAP6"
    },
    "5153": {
      "op": "SWAP2"
    },
    "5154": {
      "op": "SWAP5"
    },
    "5155": {
      "op": "POP"
    },
    "5156": {
      "op": "SWAP3"
    },
    "5157": {
      "op": "POP"
    },
    "5158": {
      "jump": "o",
      "op": "JUMP"
    },
    "5159": {
      "op": "JUMPDEST"
    },
    "5160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5162": {
      "op": "DUP1"
    },
    "5163": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5165": {
      "op": "DUP4"
    },
    "5166": {
      "op": "DUP6"
    },
    "5167": {
      "op": "SUB"
    },
    "5168": {
      "op": "SLT"
    },
    "5169": {
      "op": "ISZERO"
    },
    "5170": {
      "op": "PUSH2",
      "value": "0x143A"
    },
    "5173": {
      "op": "JUMPI"
    },
    "5174": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5176": {
      "op": "DUP1"
    },
    "5177": {
      "op": "REVERT"
    },
    "5178": {
      "op": "JUMPDEST"
    },
    "5179": {
      "op": "DUP3"
    },
    "5180": {
      "op": "CALLDATALOAD"
    },
    "5181": {
      "op": "SWAP2"
    },
    "5182": {
      "op": "POP"
    },
    "5183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5185": {
      "op": "DUP4"
    },
    "5186": {
      "op": "ADD"
    },
    "5187": {
      "op": "CALLDATALOAD"
    },
    "5188": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5197": {
      "op": "DUP2"
    },
    "5198": {
      "op": "GT"
    },
    "5199": {
      "op": "ISZERO"
    },
    "5200": {
      "op": "PUSH2",
      "value": "0x1458"
    },
    "5203": {
      "op": "JUMPI"
    },
    "5204": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5206": {
      "op": "DUP1"
    },
    "5207": {
      "op": "REVERT"
    },
    "5208": {
      "op": "JUMPDEST"
    },
    "5209": {
      "op": "PUSH2",
      "value": "0x1464"
    },
    "5212": {
      "op": "DUP6"
    },
    "5213": {
      "op": "DUP3"
    },
    "5214": {
      "op": "DUP7"
    },
    "5215": {
      "op": "ADD"
    },
    "5216": {
      "op": "PUSH2",
      "value": "0x11D8"
    },
    "5219": {
      "jump": "i",
      "op": "JUMP"
    },
    "5220": {
      "op": "JUMPDEST"
    },
    "5221": {
      "op": "SWAP2"
    },
    "5222": {
      "op": "POP"
    },
    "5223": {
      "op": "POP"
    },
    "5224": {
      "op": "SWAP3"
    },
    "5225": {
      "op": "POP"
    },
    "5226": {
      "op": "SWAP3"
    },
    "5227": {
      "op": "SWAP1"
    },
    "5228": {
      "op": "POP"
    },
    "5229": {
      "jump": "o",
      "op": "JUMP"
    },
    "5230": {
      "op": "JUMPDEST"
    },
    "5231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5233": {
      "op": "DUP2"
    },
    "5234": {
      "op": "DUP2"
    },
    "5235": {
      "op": "SHR"
    },
    "5236": {
      "op": "SWAP1"
    },
    "5237": {
      "op": "DUP3"
    },
    "5238": {
      "op": "AND"
    },
    "5239": {
      "op": "DUP1"
    },
    "5240": {
      "op": "PUSH2",
      "value": "0x1482"
    },
    "5243": {
      "op": "JUMPI"
    },
    "5244": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "5246": {
      "op": "DUP3"
    },
    "5247": {
      "op": "AND"
    },
    "5248": {
      "op": "SWAP2"
    },
    "5249": {
      "op": "POP"
    },
    "5250": {
      "op": "JUMPDEST"
    },
    "5251": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5253": {
      "op": "DUP3"
    },
    "5254": {
      "op": "LT"
    },
    "5255": {
      "op": "DUP2"
    },
    "5256": {
      "op": "EQ"
    },
    "5257": {
      "op": "ISZERO"
    },
    "5258": {
      "op": "PUSH2",
      "value": "0x14A3"
    },
    "5261": {
      "op": "JUMPI"
    },
    "5262": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5267": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5269": {
      "op": "SHL"
    },
    "5270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5272": {
      "op": "MSTORE"
    },
    "5273": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "5275": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5277": {
      "op": "MSTORE"
    },
    "5278": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5282": {
      "op": "REVERT"
    },
    "5283": {
      "op": "JUMPDEST"
    },
    "5284": {
      "op": "POP"
    },
    "5285": {
      "op": "SWAP2"
    },
    "5286": {
      "op": "SWAP1"
    },
    "5287": {
      "op": "POP"
    },
    "5288": {
      "jump": "o",
      "op": "JUMP"
    },
    "5289": {
      "op": "JUMPDEST"
    },
    "5290": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5292": {
      "op": "DUP1"
    },
    "5293": {
      "op": "DUP3"
    },
    "5294": {
      "op": "MSTORE"
    },
    "5295": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "5297": {
      "op": "SWAP1"
    },
    "5298": {
      "op": "DUP3"
    },
    "5299": {
      "op": "ADD"
    },
    "5300": {
      "op": "MSTORE"
    },
    "5301": {
      "op": "PUSH32",
      "value": "0x4552433737373A2063616C6C6572206973206E6F7420616E206F70657261746F"
    },
    "5334": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5336": {
      "op": "DUP3"
    },
    "5337": {
      "op": "ADD"
    },
    "5338": {
      "op": "MSTORE"
    },
    "5339": {
      "op": "PUSH12",
      "value": "0x39103337B9103437B63232B9"
    },
    "5352": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "5354": {
      "op": "SHL"
    },
    "5355": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5357": {
      "op": "DUP3"
    },
    "5358": {
      "op": "ADD"
    },
    "5359": {
      "op": "MSTORE"
    },
    "5360": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5362": {
      "op": "ADD"
    },
    "5363": {
      "op": "SWAP1"
    },
    "5364": {
      "jump": "o",
      "op": "JUMP"
    },
    "5365": {
      "op": "JUMPDEST"
    },
    "5366": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5371": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5373": {
      "op": "SHL"
    },
    "5374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5376": {
      "op": "MSTORE"
    },
    "5377": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "5379": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5381": {
      "op": "MSTORE"
    },
    "5382": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5386": {
      "op": "REVERT"
    },
    "5387": {
      "op": "JUMPDEST"
    },
    "5388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5390": {
      "op": "DUP3"
    },
    "5391": {
      "op": "DUP3"
    },
    "5392": {
      "op": "LT"
    },
    "5393": {
      "op": "ISZERO"
    },
    "5394": {
      "op": "PUSH2",
      "value": "0x151D"
    },
    "5397": {
      "op": "JUMPI"
    },
    "5398": {
      "op": "PUSH2",
      "value": "0x151D"
    },
    "5401": {
      "op": "PUSH2",
      "value": "0x14F5"
    },
    "5404": {
      "jump": "i",
      "op": "JUMP"
    },
    "5405": {
      "op": "JUMPDEST"
    },
    "5406": {
      "op": "POP"
    },
    "5407": {
      "op": "SUB"
    },
    "5408": {
      "op": "SWAP1"
    },
    "5409": {
      "jump": "o",
      "op": "JUMP"
    },
    "5410": {
      "op": "JUMPDEST"
    },
    "5411": {
      "op": "DUP4"
    },
    "5412": {
      "op": "DUP2"
    },
    "5413": {
      "op": "MSTORE"
    },
    "5414": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5416": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5418": {
      "op": "DUP3"
    },
    "5419": {
      "op": "ADD"
    },
    "5420": {
      "op": "MSTORE"
    },
    "5421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5423": {
      "op": "PUSH2",
      "value": "0x153B"
    },
    "5426": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5428": {
      "op": "DUP4"
    },
    "5429": {
      "op": "ADD"
    },
    "5430": {
      "op": "DUP6"
    },
    "5431": {
      "op": "PUSH2",
      "value": "0x10DD"
    },
    "5434": {
      "jump": "i",
      "op": "JUMP"
    },
    "5435": {
      "op": "JUMPDEST"
    },
    "5436": {
      "op": "DUP3"
    },
    "5437": {
      "op": "DUP2"
    },
    "5438": {
      "op": "SUB"
    },
    "5439": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5441": {
      "op": "DUP5"
    },
    "5442": {
      "op": "ADD"
    },
    "5443": {
      "op": "MSTORE"
    },
    "5444": {
      "op": "PUSH2",
      "value": "0x154D"
    },
    "5447": {
      "op": "DUP2"
    },
    "5448": {
      "op": "DUP6"
    },
    "5449": {
      "op": "PUSH2",
      "value": "0x10DD"
    },
    "5452": {
      "jump": "i",
      "op": "JUMP"
    },
    "5453": {
      "op": "JUMPDEST"
    },
    "5454": {
      "op": "SWAP7"
    },
    "5455": {
      "op": "SWAP6"
    },
    "5456": {
      "op": "POP"
    },
    "5457": {
      "op": "POP"
    },
    "5458": {
      "op": "POP"
    },
    "5459": {
      "op": "POP"
    },
    "5460": {
      "op": "POP"
    },
    "5461": {
      "op": "POP"
    },
    "5462": {
      "jump": "o",
      "op": "JUMP"
    },
    "5463": {
      "op": "JUMPDEST"
    },
    "5464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5466": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5468": {
      "op": "DUP3"
    },
    "5469": {
      "op": "DUP5"
    },
    "5470": {
      "op": "SUB"
    },
    "5471": {
      "op": "SLT"
    },
    "5472": {
      "op": "ISZERO"
    },
    "5473": {
      "op": "PUSH2",
      "value": "0x1569"
    },
    "5476": {
      "op": "JUMPI"
    },
    "5477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5479": {
      "op": "DUP1"
    },
    "5480": {
      "op": "REVERT"
    },
    "5481": {
      "op": "JUMPDEST"
    },
    "5482": {
      "op": "DUP2"
    },
    "5483": {
      "op": "MLOAD"
    },
    "5484": {
      "op": "PUSH2",
      "value": "0x661"
    },
    "5487": {
      "op": "DUP2"
    },
    "5488": {
      "op": "PUSH2",
      "value": "0x113D"
    },
    "5491": {
      "jump": "i",
      "op": "JUMP"
    },
    "5492": {
      "op": "JUMPDEST"
    },
    "5493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5497": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5499": {
      "op": "SHL"
    },
    "5500": {
      "op": "SUB"
    },
    "5501": {
      "op": "DUP8"
    },
    "5502": {
      "op": "DUP2"
    },
    "5503": {
      "op": "AND"
    },
    "5504": {
      "op": "DUP3"
    },
    "5505": {
      "op": "MSTORE"
    },
    "5506": {
      "op": "DUP7"
    },
    "5507": {
      "op": "DUP2"
    },
    "5508": {
      "op": "AND"
    },
    "5509": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5511": {
      "op": "DUP4"
    },
    "5512": {
      "op": "ADD"
    },
    "5513": {
      "op": "MSTORE"
    },
    "5514": {
      "op": "DUP6"
    },
    "5515": {
      "op": "AND"
    },
    "5516": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5518": {
      "op": "DUP3"
    },
    "5519": {
      "op": "ADD"
    },
    "5520": {
      "op": "MSTORE"
    },
    "5521": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5523": {
      "op": "DUP2"
    },
    "5524": {
      "op": "ADD"
    },
    "5525": {
      "op": "DUP5"
    },
    "5526": {
      "op": "SWAP1"
    },
    "5527": {
      "op": "MSTORE"
    },
    "5528": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5530": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5532": {
      "op": "DUP3"
    },
    "5533": {
      "op": "ADD"
    },
    "5534": {
      "op": "DUP2"
    },
    "5535": {
      "op": "SWAP1"
    },
    "5536": {
      "op": "MSTORE"
    },
    "5537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5539": {
      "op": "SWAP1"
    },
    "5540": {
      "op": "PUSH2",
      "value": "0x15AF"
    },
    "5543": {
      "op": "SWAP1"
    },
    "5544": {
      "op": "DUP4"
    },
    "5545": {
      "op": "ADD"
    },
    "5546": {
      "op": "DUP6"
    },
    "5547": {
      "op": "PUSH2",
      "value": "0x10DD"
    },
    "5550": {
      "jump": "i",
      "op": "JUMP"
    },
    "5551": {
      "op": "JUMPDEST"
    },
    "5552": {
      "op": "DUP3"
    },
    "5553": {
      "op": "DUP2"
    },
    "5554": {
      "op": "SUB"
    },
    "5555": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5557": {
      "op": "DUP5"
    },
    "5558": {
      "op": "ADD"
    },
    "5559": {
      "op": "MSTORE"
    },
    "5560": {
      "op": "PUSH2",
      "value": "0x15C1"
    },
    "5563": {
      "op": "DUP2"
    },
    "5564": {
      "op": "DUP6"
    },
    "5565": {
      "op": "PUSH2",
      "value": "0x10DD"
    },
    "5568": {
      "jump": "i",
      "op": "JUMP"
    },
    "5569": {
      "op": "JUMPDEST"
    },
    "5570": {
      "op": "SWAP10"
    },
    "5571": {
      "op": "SWAP9"
    },
    "5572": {
      "op": "POP"
    },
    "5573": {
      "op": "POP"
    },
    "5574": {
      "op": "POP"
    },
    "5575": {
      "op": "POP"
    },
    "5576": {
      "op": "POP"
    },
    "5577": {
      "op": "POP"
    },
    "5578": {
      "op": "POP"
    },
    "5579": {
      "op": "POP"
    },
    "5580": {
      "op": "POP"
    },
    "5581": {
      "jump": "o",
      "op": "JUMP"
    },
    "5582": {
      "op": "JUMPDEST"
    },
    "5583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5585": {
      "op": "DUP3"
    },
    "5586": {
      "op": "NOT"
    },
    "5587": {
      "op": "DUP3"
    },
    "5588": {
      "op": "GT"
    },
    "5589": {
      "op": "ISZERO"
    },
    "5590": {
      "op": "PUSH2",
      "value": "0x15E1"
    },
    "5593": {
      "op": "JUMPI"
    },
    "5594": {
      "op": "PUSH2",
      "value": "0x15E1"
    },
    "5597": {
      "op": "PUSH2",
      "value": "0x14F5"
    },
    "5600": {
      "jump": "i",
      "op": "JUMP"
    },
    "5601": {
      "op": "JUMPDEST"
    },
    "5602": {
      "op": "POP"
    },
    "5603": {
      "op": "ADD"
    },
    "5604": {
      "op": "SWAP1"
    },
    "5605": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "2c4fecb72a0096d910c2b846e5ab51fb019a07f6",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC777/ERC777.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC777.sol\";\nimport \"./IERC777Recipient.sol\";\nimport \"./IERC777Sender.sol\";\nimport \"../ERC20/IERC20.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/IERC1820Registry.sol\";\n\n/**\n * @dev Implementation of the {IERC777} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * Support for ERC20 is included in this contract, as specified by the EIP: both\n * the ERC777 and ERC20 interfaces can be safely used when interacting with it.\n * Both {IERC777-Sent} and {IERC20-Transfer} events are emitted on token\n * movements.\n *\n * Additionally, the {IERC777-granularity} value is hard-coded to `1`, meaning that there\n * are no special restrictions in the amount of tokens that created, moved, or\n * destroyed. This makes integration with ERC20 applications seamless.\n */\ncontract ERC777 is Context, IERC777, IERC20 {\n    using Address for address;\n\n    IERC1820Registry internal constant _ERC1820_REGISTRY = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24);\n\n    mapping(address => uint256) private _balances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    bytes32 private constant _TOKENS_SENDER_INTERFACE_HASH = keccak256(\"ERC777TokensSender\");\n    bytes32 private constant _TOKENS_RECIPIENT_INTERFACE_HASH = keccak256(\"ERC777TokensRecipient\");\n\n    // This isn't ever read from - it's only used to respond to the defaultOperators query.\n    address[] private _defaultOperatorsArray;\n\n    // Immutable, but accounts may revoke them (tracked in __revokedDefaultOperators).\n    mapping(address => bool) private _defaultOperators;\n\n    // For each account, a mapping of its operators and revoked default operators.\n    mapping(address => mapping(address => bool)) private _operators;\n    mapping(address => mapping(address => bool)) private _revokedDefaultOperators;\n\n    // ERC20-allowances\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    /**\n     * @dev `defaultOperators` may be an empty array.\n     */\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        address[] memory defaultOperators_\n    ) {\n        _name = name_;\n        _symbol = symbol_;\n\n        _defaultOperatorsArray = defaultOperators_;\n        for (uint256 i = 0; i < defaultOperators_.length; i++) {\n            _defaultOperators[defaultOperators_[i]] = true;\n        }\n\n        // register interfaces\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC777Token\"), address(this));\n        _ERC1820_REGISTRY.setInterfaceImplementer(address(this), keccak256(\"ERC20Token\"), address(this));\n    }\n\n    /**\n     * @dev See {IERC777-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC777-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {ERC20-decimals}.\n     *\n     * Always returns 18, as per the\n     * [ERC777 EIP](https://eips.ethereum.org/EIPS/eip-777#backward-compatibility).\n     */\n    function decimals() public pure virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC777-granularity}.\n     *\n     * This implementation always returns `1`.\n     */\n    function granularity() public view virtual override returns (uint256) {\n        return 1;\n    }\n\n    /**\n     * @dev See {IERC777-totalSupply}.\n     */\n    function totalSupply() public view virtual override(IERC20, IERC777) returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev Returns the amount of tokens owned by an account (`tokenHolder`).\n     */\n    function balanceOf(address tokenHolder) public view virtual override(IERC20, IERC777) returns (uint256) {\n        return _balances[tokenHolder];\n    }\n\n    /**\n     * @dev See {IERC777-send}.\n     *\n     * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\n     */\n    function send(\n        address recipient,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        _send(_msgSender(), recipient, amount, data, \"\", true);\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Unlike `send`, `recipient` is _not_ required to implement the {IERC777Recipient}\n     * interface if it is a contract.\n     *\n     * Also emits a {Sent} event.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _send(_msgSender(), recipient, amount, \"\", \"\", false);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC777-burn}.\n     *\n     * Also emits a {IERC20-Transfer} event for ERC20 compatibility.\n     */\n    function burn(uint256 amount, bytes memory data) public virtual override {\n        _burn(_msgSender(), amount, data, \"\");\n    }\n\n    /**\n     * @dev See {IERC777-isOperatorFor}.\n     */\n    function isOperatorFor(address operator, address tokenHolder) public view virtual override returns (bool) {\n        return\n            operator == tokenHolder ||\n            (_defaultOperators[operator] && !_revokedDefaultOperators[tokenHolder][operator]) ||\n            _operators[tokenHolder][operator];\n    }\n\n    /**\n     * @dev See {IERC777-authorizeOperator}.\n     */\n    function authorizeOperator(address operator) public virtual override {\n        require(_msgSender() != operator, \"ERC777: authorizing self as operator\");\n\n        if (_defaultOperators[operator]) {\n            delete _revokedDefaultOperators[_msgSender()][operator];\n        } else {\n            _operators[_msgSender()][operator] = true;\n        }\n\n        emit AuthorizedOperator(operator, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC777-revokeOperator}.\n     */\n    function revokeOperator(address operator) public virtual override {\n        require(operator != _msgSender(), \"ERC777: revoking self as operator\");\n\n        if (_defaultOperators[operator]) {\n            _revokedDefaultOperators[_msgSender()][operator] = true;\n        } else {\n            delete _operators[_msgSender()][operator];\n        }\n\n        emit RevokedOperator(operator, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC777-defaultOperators}.\n     */\n    function defaultOperators() public view virtual override returns (address[] memory) {\n        return _defaultOperatorsArray;\n    }\n\n    /**\n     * @dev See {IERC777-operatorSend}.\n     *\n     * Emits {Sent} and {IERC20-Transfer} events.\n     */\n    function operatorSend(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes memory data,\n        bytes memory operatorData\n    ) public virtual override {\n        require(isOperatorFor(_msgSender(), sender), \"ERC777: caller is not an operator for holder\");\n        _send(sender, recipient, amount, data, operatorData, true);\n    }\n\n    /**\n     * @dev See {IERC777-operatorBurn}.\n     *\n     * Emits {Burned} and {IERC20-Transfer} events.\n     */\n    function operatorBurn(\n        address account,\n        uint256 amount,\n        bytes memory data,\n        bytes memory operatorData\n    ) public virtual override {\n        require(isOperatorFor(_msgSender(), account), \"ERC777: caller is not an operator for holder\");\n        _burn(account, amount, data, operatorData);\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     *\n     * Note that operator and allowance concepts are orthogonal: operators may\n     * not have allowance, and accounts with allowance may not be operators\n     * themselves.\n     */\n    function allowance(address holder, address spender) public view virtual override returns (uint256) {\n        return _allowances[holder][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Note that accounts cannot have allowance issued by their operators.\n     */\n    function approve(address spender, uint256 value) public virtual override returns (bool) {\n        address holder = _msgSender();\n        _approve(holder, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Note that operator and allowance concepts are orthogonal: operators cannot\n     * call `transferFrom` (unless they have allowance), and accounts with\n     * allowance cannot call `operatorSend` (unless they are operators).\n     *\n     * Emits {Sent}, {IERC20-Transfer} and {IERC20-Approval} events.\n     */\n    function transferFrom(\n        address holder,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(holder, spender, amount);\n        _send(holder, recipient, amount, \"\", \"\", false);\n        return true;\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * If a send hook is registered for `account`, the corresponding function\n     * will be called with `operator`, `data` and `operatorData`.\n     *\n     * See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits {Minted} and {IERC20-Transfer} events.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - if `account` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function _mint(\n        address account,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    ) internal virtual {\n        _mint(account, amount, userData, operatorData, true);\n    }\n\n    /**\n     * @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * If `requireReceptionAck` is set to true, and if a send hook is\n     * registered for `account`, the corresponding function will be called with\n     * `operator`, `data` and `operatorData`.\n     *\n     * See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits {Minted} and {IERC20-Transfer} events.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - if `account` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function _mint(\n        address account,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    ) internal virtual {\n        require(account != address(0), \"ERC777: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), account, amount);\n\n        // Update state variables\n        _totalSupply += amount;\n        _balances[account] += amount;\n\n        _callTokensReceived(operator, address(0), account, amount, userData, operatorData, requireReceptionAck);\n\n        emit Minted(operator, account, amount, userData, operatorData);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Send tokens\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     * @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient\n     */\n    function _send(\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    ) internal virtual {\n        require(from != address(0), \"ERC777: transfer from the zero address\");\n        require(to != address(0), \"ERC777: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _callTokensToSend(operator, from, to, amount, userData, operatorData);\n\n        _move(operator, from, to, amount, userData, operatorData);\n\n        _callTokensReceived(operator, from, to, amount, userData, operatorData, requireReceptionAck);\n    }\n\n    /**\n     * @dev Burn tokens\n     * @param from address token holder address\n     * @param amount uint256 amount of tokens to burn\n     * @param data bytes extra information provided by the token holder\n     * @param operatorData bytes extra information provided by the operator (if any)\n     */\n    function _burn(\n        address from,\n        uint256 amount,\n        bytes memory data,\n        bytes memory operatorData\n    ) internal virtual {\n        require(from != address(0), \"ERC777: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _callTokensToSend(operator, from, address(0), amount, data, operatorData);\n\n        _beforeTokenTransfer(operator, from, address(0), amount);\n\n        // Update state variables\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC777: burn amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Burned(operator, from, amount, data, operatorData);\n        emit Transfer(from, address(0), amount);\n    }\n\n    function _move(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    ) private {\n        _beforeTokenTransfer(operator, from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC777: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Sent(operator, from, to, amount, userData, operatorData);\n        emit Transfer(from, to, amount);\n    }\n\n    /**\n     * @dev See {ERC20-_approve}.\n     *\n     * Note that accounts cannot have allowance issued by their operators.\n     */\n    function _approve(\n        address holder,\n        address spender,\n        uint256 value\n    ) internal virtual {\n        require(holder != address(0), \"ERC777: approve from the zero address\");\n        require(spender != address(0), \"ERC777: approve to the zero address\");\n\n        _allowances[holder][spender] = value;\n        emit Approval(holder, spender, value);\n    }\n\n    /**\n     * @dev Call from.tokensToSend() if the interface is registered\n     * @param operator address operator requesting the transfer\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     */\n    function _callTokensToSend(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData\n    ) private {\n        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(from, _TOKENS_SENDER_INTERFACE_HASH);\n        if (implementer != address(0)) {\n            IERC777Sender(implementer).tokensToSend(operator, from, to, amount, userData, operatorData);\n        }\n    }\n\n    /**\n     * @dev Call to.tokensReceived() if the interface is registered. Reverts if the recipient is a contract but\n     * tokensReceived() was not registered for the recipient\n     * @param operator address operator requesting the transfer\n     * @param from address token holder address\n     * @param to address recipient address\n     * @param amount uint256 amount of tokens to transfer\n     * @param userData bytes extra information provided by the token holder (if any)\n     * @param operatorData bytes extra information provided by the operator (if any)\n     * @param requireReceptionAck if true, contract recipients are required to implement ERC777TokensRecipient\n     */\n    function _callTokensReceived(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory userData,\n        bytes memory operatorData,\n        bool requireReceptionAck\n    ) private {\n        address implementer = _ERC1820_REGISTRY.getInterfaceImplementer(to, _TOKENS_RECIPIENT_INTERFACE_HASH);\n        if (implementer != address(0)) {\n            IERC777Recipient(implementer).tokensReceived(operator, from, to, amount, userData, operatorData);\n        } else if (requireReceptionAck) {\n            require(!to.isContract(), \"ERC777: token recipient contract has no implementer for ERC777TokensRecipient\");\n        }\n    }\n\n    /**\n     * @dev Spend `amount` form the allowance of `owner` toward `spender`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC777: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes\n     * calls to {send}, {transfer}, {operatorSend}, minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n",
  "sourceMap": "1088:17518:200:-:0;;;2316:612;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2448:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2471:17:200;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;2499:42:200;;;;:22;;:42;;;;;:::i;:::-;;2556:9;2551:126;2575:17;:24;2571:1;:28;2551:126;;;2662:4;2620:17;:39;2638:17;2656:1;2638:20;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2620:39:200;;;;;;;;;;;-1:-1:-1;2620:39:200;:46;;-1:-1:-1;;2620:46:200;;;;;;;;;;2601:3;;;;:::i;:::-;;;;2551:126;;;-1:-1:-1;2718:97:200;;-1:-1:-1;;;2718:97:200;;2768:4;2718:97;;;3268:34:239;;;2775:24:200;3318:18:239;;;3311:34;3361:18;;;3354:43;1242:42:200;;2718:41;;3203:18:239;;2718:97:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2825:96:200;;-1:-1:-1;;;2825:96:200;;2875:4;2825:96;;;3268:34:239;;;2882:23:200;3318:18:239;;;3311:34;3361:18;;;3354:43;1242:42:200;;-1:-1:-1;2825:41:200;;-1:-1:-1;3203:18:239;;2825:96:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2316:612;;;1088:17518;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1088:17518:200;;;-1:-1:-1;1088:17518:200;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1088:17518:200;-1:-1:-1;;;;;1088:17518:200;;;;;;;;;;;-1:-1:-1;1088:17518:200;;;;;;;;;;;;;;;;;;;;;14:127:239;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:239;247:40;;-1:-1:-1;;;;;302:34:239;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:239:o;426:695::-;480:5;533:3;526:4;518:6;514:17;510:27;500:55;;551:1;548;541:12;500:55;574:13;;-1:-1:-1;;;;;599:26:239;;596:52;;;628:18;;:::i;:::-;667:4;695:53;738:2;719:13;;-1:-1:-1;;715:27:239;711:36;;695:53;:::i;:::-;773:2;764:7;757:19;817:3;812:2;807;799:6;795:15;791:24;788:33;785:53;;;834:1;831;824:12;785:53;856:1;866:134;880:2;877:1;874:9;866:134;;;969:14;;;965:23;;959:30;937:15;;;933:24;;926:64;891:10;;866:134;;;1018:2;1015:1;1012:9;1009:81;;;1078:1;1073:2;1068;1059:7;1055:16;1051:25;1044:36;1009:81;-1:-1:-1;1108:7:239;426:695;-1:-1:-1;;;;;426:695:239:o;1126:1528::-;1259:6;1267;1275;1328:2;1316:9;1307:7;1303:23;1299:32;1296:52;;;1344:1;1341;1334:12;1296:52;1371:16;;-1:-1:-1;;;;;1436:14:239;;;1433:34;;;1463:1;1460;1453:12;1433:34;1486:61;1539:7;1530:6;1519:9;1515:22;1486:61;:::i;:::-;1476:71;;1566:2;1556:12;;1614:2;1603:9;1599:18;1593:25;1643:2;1633:8;1630:16;1627:36;;;1659:1;1656;1649:12;1627:36;1682:63;1737:7;1726:8;1715:9;1711:24;1682:63;:::i;:::-;1672:73;;;1791:2;1780:9;1776:18;1770:25;1820:2;1810:8;1807:16;1804:36;;;1836:1;1833;1826:12;1804:36;1859:24;;1914:4;1906:13;;1902:27;-1:-1:-1;1892:55:239;;1943:1;1940;1933:12;1892:55;1972:2;1966:9;1994:2;1990;1987:10;1984:36;;;2000:18;;:::i;:::-;2046:2;2043:1;2039:10;2029:20;;2069:28;2093:2;2089;2085:11;2069:28;:::i;:::-;2131:15;;;2201:11;;;2197:20;;;2162:12;;;;2229:19;;;2226:39;;;2261:1;2258;2251:12;2226:39;2285:11;;;;2305:319;2321:6;2316:3;2313:15;2305:319;;;2388:10;;;-1:-1:-1;;;;;;2431:31:239;;2421:42;;2411:140;;2505:1;2534:2;2530;2523:14;2411:140;2564:18;;;2338:12;;;;2602;;;;2305:319;;;2643:5;2633:15;;;;;;;;1126:1528;;;;;:::o;2659:127::-;2720:10;2715:3;2711:20;2708:1;2701:31;2751:4;2748:1;2741:15;2775:4;2772:1;2765:15;2791:232;2830:3;-1:-1:-1;;2851:17:239;;2848:140;;;2910:10;2905:3;2901:20;2898:1;2891:31;2945:4;2942:1;2935:15;2973:4;2970:1;2963:15;2848:140;-1:-1:-1;3015:1:239;3004:13;;2791:232::o;3408:380::-;3487:1;3483:12;;;;3530;;;3551:61;;3605:4;3597:6;3593:17;3583:27;;3551:61;3658:2;3650:6;3647:14;3627:18;3624:38;3621:161;;;3704:10;3699:3;3695:20;3692:1;3685:31;3739:4;3736:1;3729:15;3767:4;3764:1;3757:15;3621:161;;3408:380;;;:::o;:::-;1088:17518:200;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/token/ERC777/ERC777.sol",
  "type": "contract"
}