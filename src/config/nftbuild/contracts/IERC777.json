{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "AuthorizedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Burned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "RevokedOperator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "Sent",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "authorizeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "defaultOperators",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "granularity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenHolder",
          "type": "address"
        }
      ],
      "name": "isOperatorFor",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "operatorSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "revokeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "201": "contracts/openzeppelin/contracts/token/ERC777/IERC777.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/token/ERC777/IERC777.sol",
    "exportedSymbols": {
      "IERC777": [
        25759
      ]
    },
    "id": 25760,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 25602,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "93:23:201"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IERC777",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 25603,
          "nodeType": "StructuredDocumentation",
          "src": "118:372:201",
          "text": " @dev Interface of the ERC777Token standard as defined in the EIP.\n This contract uses the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n token holders and recipients react to token movements by using setting implementers\n for the associated interfaces in said registry. See {IERC1820Registry} and\n {ERC1820Implementer}."
        },
        "fullyImplemented": false,
        "id": 25759,
        "linearizedBaseContracts": [
          25759
        ],
        "name": "IERC777",
        "nameLocation": "501:7:201",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 25604,
              "nodeType": "StructuredDocumentation",
              "src": "515:54:201",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 25609,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "583:4:201",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "587:2:201"
            },
            "returnParameters": {
              "id": 25608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25607,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25609,
                  "src": "613:13:201",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 25606,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:6:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "612:15:201"
            },
            "scope": 25759,
            "src": "574:54:201",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 25610,
              "nodeType": "StructuredDocumentation",
              "src": "634:102:201",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 25615,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "750:6:201",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "756:2:201"
            },
            "returnParameters": {
              "id": 25614,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25613,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25615,
                  "src": "782:13:201",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 25612,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "782:6:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "781:15:201"
            },
            "scope": 25759,
            "src": "741:56:201",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 25616,
              "nodeType": "StructuredDocumentation",
              "src": "803:287:201",
              "text": " @dev Returns the smallest part of the token that is not divisible. This\n means all token operations (creation, movement and destruction) must have\n amounts that are a multiple of this number.\n For most token contracts, this value will equal 1."
            },
            "functionSelector": "556f0dc7",
            "id": 25621,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "granularity",
            "nameLocation": "1104:11:201",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25617,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1115:2:201"
            },
            "returnParameters": {
              "id": 25620,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25619,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25621,
                  "src": "1141:7:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1141:7:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1140:9:201"
            },
            "scope": 25759,
            "src": "1095:55:201",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 25622,
              "nodeType": "StructuredDocumentation",
              "src": "1156:66:201",
              "text": " @dev Returns the amount of tokens in existence."
            },
            "functionSelector": "18160ddd",
            "id": 25627,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "1236:11:201",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1247:2:201"
            },
            "returnParameters": {
              "id": 25626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25625,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25627,
                  "src": "1273:7:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25624,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1273:7:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1272:9:201"
            },
            "scope": 25759,
            "src": "1227:55:201",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 25628,
              "nodeType": "StructuredDocumentation",
              "src": "1288:83:201",
              "text": " @dev Returns the amount of tokens owned by an account (`owner`)."
            },
            "functionSelector": "70a08231",
            "id": 25635,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1385:9:201",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25630,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1403:5:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25635,
                  "src": "1395:13:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25629,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1395:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1394:15:201"
            },
            "returnParameters": {
              "id": 25634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25633,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25635,
                  "src": "1433:7:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1433:7:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1432:9:201"
            },
            "scope": 25759,
            "src": "1376:66:201",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 25636,
              "nodeType": "StructuredDocumentation",
              "src": "1448:585:201",
              "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n If send or receive hooks are registered for the caller and `recipient`,\n the corresponding functions will be called with `data` and empty\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - the caller must have at least `amount` tokens.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
            },
            "functionSelector": "9bd9bbc6",
            "id": 25645,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "send",
            "nameLocation": "2047:4:201",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25638,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2069:9:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25645,
                  "src": "2061:17:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25637,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2061:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25640,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2096:6:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25645,
                  "src": "2088:14:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2088:7:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25642,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2127:4:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25645,
                  "src": "2112:19:201",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25641,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2112:5:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2051:86:201"
            },
            "returnParameters": {
              "id": 25644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2146:0:201"
            },
            "scope": 25759,
            "src": "2038:109:201",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 25646,
              "nodeType": "StructuredDocumentation",
              "src": "2153:404:201",
              "text": " @dev Destroys `amount` tokens from the caller's account, reducing the\n total supply.\n If a send hook is registered for the caller, the corresponding function\n will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - the caller must have at least `amount` tokens."
            },
            "functionSelector": "fe9d9303",
            "id": 25653,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "2571:4:201",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25648,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2584:6:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25653,
                  "src": "2576:14:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25647,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2576:7:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25650,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2607:4:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25653,
                  "src": "2592:19:201",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25649,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2592:5:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2575:37:201"
            },
            "returnParameters": {
              "id": 25652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2621:0:201"
            },
            "scope": 25759,
            "src": "2562:60:201",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 25654,
              "nodeType": "StructuredDocumentation",
              "src": "2628:249:201",
              "text": " @dev Returns true if an account is an operator of `tokenHolder`.\n Operators can send and burn tokens on behalf of their owners. All\n accounts are their own operator.\n See {operatorSend} and {operatorBurn}."
            },
            "functionSelector": "d95b6371",
            "id": 25663,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isOperatorFor",
            "nameLocation": "2891:13:201",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25656,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "2913:8:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25663,
                  "src": "2905:16:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2905:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25658,
                  "mutability": "mutable",
                  "name": "tokenHolder",
                  "nameLocation": "2931:11:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25663,
                  "src": "2923:19:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2923:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2904:39:201"
            },
            "returnParameters": {
              "id": 25662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25661,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25663,
                  "src": "2967:4:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25660,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2967:4:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2966:6:201"
            },
            "scope": 25759,
            "src": "2882:91:201",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 25664,
              "nodeType": "StructuredDocumentation",
              "src": "2979:233:201",
              "text": " @dev Make an account an operator of the caller.\n See {isOperatorFor}.\n Emits an {AuthorizedOperator} event.\n Requirements\n - `operator` cannot be calling address."
            },
            "functionSelector": "959b8c3f",
            "id": 25669,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "authorizeOperator",
            "nameLocation": "3226:17:201",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25666,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3252:8:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25669,
                  "src": "3244:16:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25665,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3244:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3243:18:201"
            },
            "returnParameters": {
              "id": 25668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3270:0:201"
            },
            "scope": 25759,
            "src": "3217:54:201",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 25670,
              "nodeType": "StructuredDocumentation",
              "src": "3277:261:201",
              "text": " @dev Revoke an account's operator status for the caller.\n See {isOperatorFor} and {defaultOperators}.\n Emits a {RevokedOperator} event.\n Requirements\n - `operator` cannot be calling address."
            },
            "functionSelector": "fad8b32a",
            "id": 25675,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "revokeOperator",
            "nameLocation": "3552:14:201",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25672,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3575:8:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25675,
                  "src": "3567:16:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25671,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3567:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3566:18:201"
            },
            "returnParameters": {
              "id": 25674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3593:0:201"
            },
            "scope": 25759,
            "src": "3543:51:201",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 25676,
              "nodeType": "StructuredDocumentation",
              "src": "3600:338:201",
              "text": " @dev Returns the list of default operators. These accounts are operators\n for all token holders, even if {authorizeOperator} was never called on\n them.\n This list is immutable, but individual holders may revoke these via\n {revokeOperator}, in which case {isOperatorFor} will return false."
            },
            "functionSelector": "06e48538",
            "id": 25682,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "defaultOperators",
            "nameLocation": "3952:16:201",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25677,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3968:2:201"
            },
            "returnParameters": {
              "id": 25681,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25680,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25682,
                  "src": "3994:16:201",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 25678,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3994:7:201",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 25679,
                    "nodeType": "ArrayTypeName",
                    "src": "3994:9:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3993:18:201"
            },
            "scope": 25759,
            "src": "3943:69:201",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 25683,
              "nodeType": "StructuredDocumentation",
              "src": "4018:714:201",
              "text": " @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n be an operator of `sender`.\n If send or receive hooks are registered for `sender` and `recipient`,\n the corresponding functions will be called with `data` and\n `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n Emits a {Sent} event.\n Requirements\n - `sender` cannot be the zero address.\n - `sender` must have at least `amount` tokens.\n - the caller must be an operator for `sender`.\n - `recipient` cannot be the zero address.\n - if `recipient` is a contract, it must implement the {IERC777Recipient}\n interface."
            },
            "functionSelector": "62ad1b83",
            "id": 25696,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operatorSend",
            "nameLocation": "4746:12:201",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25685,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "4776:6:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25696,
                  "src": "4768:14:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25684,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4768:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25687,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4800:9:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25696,
                  "src": "4792:17:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25686,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4792:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25689,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4827:6:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25696,
                  "src": "4819:14:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25688,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4819:7:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25691,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4858:4:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25696,
                  "src": "4843:19:201",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25690,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4843:5:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25693,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "4887:12:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25696,
                  "src": "4872:27:201",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25692,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4872:5:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4758:147:201"
            },
            "returnParameters": {
              "id": 25695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4914:0:201"
            },
            "scope": 25759,
            "src": "4737:178:201",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 25697,
              "nodeType": "StructuredDocumentation",
              "src": "4921:532:201",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the total supply.\n The caller must be an operator of `account`.\n If a send hook is registered for `account`, the corresponding function\n will be called with `data` and `operatorData`. See {IERC777Sender}.\n Emits a {Burned} event.\n Requirements\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens.\n - the caller must be an operator for `account`."
            },
            "functionSelector": "fc673c4f",
            "id": 25708,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "operatorBurn",
            "nameLocation": "5467:12:201",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25699,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5497:7:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25708,
                  "src": "5489:15:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25698,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5489:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25701,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5522:6:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25708,
                  "src": "5514:14:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25700,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5514:7:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25703,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5553:4:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25708,
                  "src": "5538:19:201",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25702,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5538:5:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25705,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "5582:12:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25708,
                  "src": "5567:27:201",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25704,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5567:5:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5479:121:201"
            },
            "returnParameters": {
              "id": 25707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5609:0:201"
            },
            "scope": 25759,
            "src": "5458:152:201",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "id": 25722,
            "name": "Sent",
            "nameLocation": "5622:4:201",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 25721,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25710,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5652:8:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25722,
                  "src": "5636:24:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25709,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5636:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25712,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5686:4:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25722,
                  "src": "5670:20:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25711,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5670:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25714,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5716:2:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25722,
                  "src": "5700:18:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5700:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25716,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5736:6:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25722,
                  "src": "5728:14:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25715,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5728:7:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25718,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5758:4:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25722,
                  "src": "5752:10:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25717,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5752:5:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25720,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "5778:12:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25722,
                  "src": "5772:18:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25719,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5772:5:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5626:170:201"
            },
            "src": "5616:181:201"
          },
          {
            "anonymous": false,
            "id": 25734,
            "name": "Minted",
            "nameLocation": "5809:6:201",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 25733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25724,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5832:8:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25734,
                  "src": "5816:24:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5816:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25726,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5858:2:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25734,
                  "src": "5842:18:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25725,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5842:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25728,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5870:6:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25734,
                  "src": "5862:14:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25727,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5862:7:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25730,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5884:4:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25734,
                  "src": "5878:10:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25729,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5878:5:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25732,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "5896:12:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25734,
                  "src": "5890:18:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25731,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5890:5:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5815:94:201"
            },
            "src": "5803:107:201"
          },
          {
            "anonymous": false,
            "id": 25746,
            "name": "Burned",
            "nameLocation": "5922:6:201",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 25745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25736,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "5945:8:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25746,
                  "src": "5929:24:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25735,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5929:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25738,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5971:4:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25746,
                  "src": "5955:20:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25737,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5955:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25740,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5985:6:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25746,
                  "src": "5977:14:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25739,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5977:7:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25742,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5999:4:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25746,
                  "src": "5993:10:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25741,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5993:5:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25744,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nameLocation": "6011:12:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25746,
                  "src": "6005:18:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25743,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6005:5:201",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5928:96:201"
            },
            "src": "5916:109:201"
          },
          {
            "anonymous": false,
            "id": 25752,
            "name": "AuthorizedOperator",
            "nameLocation": "6037:18:201",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 25751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25748,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6072:8:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25752,
                  "src": "6056:24:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6056:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25750,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenHolder",
                  "nameLocation": "6098:11:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25752,
                  "src": "6082:27:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6082:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6055:55:201"
            },
            "src": "6031:80:201"
          },
          {
            "anonymous": false,
            "id": 25758,
            "name": "RevokedOperator",
            "nameLocation": "6123:15:201",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 25757,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25754,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "6155:8:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25758,
                  "src": "6139:24:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25753,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6139:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25756,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenHolder",
                  "nameLocation": "6181:11:201",
                  "nodeType": "VariableDeclaration",
                  "scope": 25758,
                  "src": "6165:27:201",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6165:7:201",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6138:55:201"
            },
            "src": "6117:77:201"
          }
        ],
        "scope": 25760,
        "src": "491:5705:201",
        "usedErrors": []
      }
    ],
    "src": "93:6104:201"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "IERC777",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "details": "Interface of the ERC777Token standard as defined in the EIP. This contract uses the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let token holders and recipients react to token movements by using setting implementers for the associated interfaces in said registry. See {IERC1820Registry} and {ERC1820Implementer}.",
    "kind": "dev",
    "methods": {
      "authorizeOperator(address)": {
        "details": "Make an account an operator of the caller. See {isOperatorFor}. Emits an {AuthorizedOperator} event. Requirements - `operator` cannot be calling address."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by an account (`owner`)."
      },
      "burn(uint256,bytes)": {
        "details": "Destroys `amount` tokens from the caller's account, reducing the total supply. If a send hook is registered for the caller, the corresponding function will be called with `data` and empty `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - the caller must have at least `amount` tokens."
      },
      "defaultOperators()": {
        "details": "Returns the list of default operators. These accounts are operators for all token holders, even if {authorizeOperator} was never called on them. This list is immutable, but individual holders may revoke these via {revokeOperator}, in which case {isOperatorFor} will return false."
      },
      "granularity()": {
        "details": "Returns the smallest part of the token that is not divisible. This means all token operations (creation, movement and destruction) must have amounts that are a multiple of this number. For most token contracts, this value will equal 1."
      },
      "isOperatorFor(address,address)": {
        "details": "Returns true if an account is an operator of `tokenHolder`. Operators can send and burn tokens on behalf of their owners. All accounts are their own operator. See {operatorSend} and {operatorBurn}."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "operatorBurn(address,uint256,bytes,bytes)": {
        "details": "Destroys `amount` tokens from `account`, reducing the total supply. The caller must be an operator of `account`. If a send hook is registered for `account`, the corresponding function will be called with `data` and `operatorData`. See {IERC777Sender}. Emits a {Burned} event. Requirements - `account` cannot be the zero address. - `account` must have at least `amount` tokens. - the caller must be an operator for `account`."
      },
      "operatorSend(address,address,uint256,bytes,bytes)": {
        "details": "Moves `amount` tokens from `sender` to `recipient`. The caller must be an operator of `sender`. If send or receive hooks are registered for `sender` and `recipient`, the corresponding functions will be called with `data` and `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - `sender` cannot be the zero address. - `sender` must have at least `amount` tokens. - the caller must be an operator for `sender`. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."
      },
      "revokeOperator(address)": {
        "details": "Revoke an account's operator status for the caller. See {isOperatorFor} and {defaultOperators}. Emits a {RevokedOperator} event. Requirements - `operator` cannot be calling address."
      },
      "send(address,uint256,bytes)": {
        "details": "Moves `amount` tokens from the caller's account to `recipient`. If send or receive hooks are registered for the caller and `recipient`, the corresponding functions will be called with `data` and empty `operatorData`. See {IERC777Sender} and {IERC777Recipient}. Emits a {Sent} event. Requirements - the caller must have at least `amount` tokens. - `recipient` cannot be the zero address. - if `recipient` is a contract, it must implement the {IERC777Recipient} interface."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "Returns the amount of tokens in existence."
      }
    },
    "version": 1
  },
  "offset": [
    491,
    6196
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "82bdf15658de1412b403711b2cbe0d69a8d690d1",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/IERC777.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC777Token standard as defined in the EIP.\n *\n * This contract uses the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 registry standard] to let\n * token holders and recipients react to token movements by using setting implementers\n * for the associated interfaces in said registry. See {IERC1820Registry} and\n * {ERC1820Implementer}.\n */\ninterface IERC777 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the smallest part of the token that is not divisible. This\n     * means all token operations (creation, movement and destruction) must have\n     * amounts that are a multiple of this number.\n     *\n     * For most token contracts, this value will equal 1.\n     */\n    function granularity() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by an account (`owner`).\n     */\n    function balanceOf(address owner) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * If send or receive hooks are registered for the caller and `recipient`,\n     * the corresponding functions will be called with `data` and empty\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function send(\n        address recipient,\n        uint256 amount,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Destroys `amount` tokens from the caller's account, reducing the\n     * total supply.\n     *\n     * If a send hook is registered for the caller, the corresponding function\n     * will be called with `data` and empty `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - the caller must have at least `amount` tokens.\n     */\n    function burn(uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev Returns true if an account is an operator of `tokenHolder`.\n     * Operators can send and burn tokens on behalf of their owners. All\n     * accounts are their own operator.\n     *\n     * See {operatorSend} and {operatorBurn}.\n     */\n    function isOperatorFor(address operator, address tokenHolder) external view returns (bool);\n\n    /**\n     * @dev Make an account an operator of the caller.\n     *\n     * See {isOperatorFor}.\n     *\n     * Emits an {AuthorizedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function authorizeOperator(address operator) external;\n\n    /**\n     * @dev Revoke an account's operator status for the caller.\n     *\n     * See {isOperatorFor} and {defaultOperators}.\n     *\n     * Emits a {RevokedOperator} event.\n     *\n     * Requirements\n     *\n     * - `operator` cannot be calling address.\n     */\n    function revokeOperator(address operator) external;\n\n    /**\n     * @dev Returns the list of default operators. These accounts are operators\n     * for all token holders, even if {authorizeOperator} was never called on\n     * them.\n     *\n     * This list is immutable, but individual holders may revoke these via\n     * {revokeOperator}, in which case {isOperatorFor} will return false.\n     */\n    function defaultOperators() external view returns (address[] memory);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient`. The caller must\n     * be an operator of `sender`.\n     *\n     * If send or receive hooks are registered for `sender` and `recipient`,\n     * the corresponding functions will be called with `data` and\n     * `operatorData`. See {IERC777Sender} and {IERC777Recipient}.\n     *\n     * Emits a {Sent} event.\n     *\n     * Requirements\n     *\n     * - `sender` cannot be the zero address.\n     * - `sender` must have at least `amount` tokens.\n     * - the caller must be an operator for `sender`.\n     * - `recipient` cannot be the zero address.\n     * - if `recipient` is a contract, it must implement the {IERC777Recipient}\n     * interface.\n     */\n    function operatorSend(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the total supply.\n     * The caller must be an operator of `account`.\n     *\n     * If a send hook is registered for `account`, the corresponding function\n     * will be called with `data` and `operatorData`. See {IERC777Sender}.\n     *\n     * Emits a {Burned} event.\n     *\n     * Requirements\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     * - the caller must be an operator for `account`.\n     */\n    function operatorBurn(\n        address account,\n        uint256 amount,\n        bytes calldata data,\n        bytes calldata operatorData\n    ) external;\n\n    event Sent(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256 amount,\n        bytes data,\n        bytes operatorData\n    );\n\n    event Minted(address indexed operator, address indexed to, uint256 amount, bytes data, bytes operatorData);\n\n    event Burned(address indexed operator, address indexed from, uint256 amount, bytes data, bytes operatorData);\n\n    event AuthorizedOperator(address indexed operator, address indexed tokenHolder);\n\n    event RevokedOperator(address indexed operator, address indexed tokenHolder);\n}\n",
  "sourceMap": "",
  "sourcePath": "contracts/openzeppelin/contracts/token/ERC777/IERC777.sol",
  "type": "interface"
}