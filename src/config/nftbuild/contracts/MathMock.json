{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "average",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "ceilDiv",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "max",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "min",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "117": "contracts/openzeppelin/contracts/mocks/MathMock.sol",
    "231": "contracts/openzeppelin/contracts/utils/math/Math.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/mocks/MathMock.sol",
    "exportedSymbols": {
      "Math": [
        29016
      ],
      "MathMock": [
        12812
      ]
    },
    "id": 12813,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12746,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:117"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/math/Math.sol",
        "file": "../utils/math/Math.sol",
        "id": 12747,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12813,
        "sourceUnit": 29017,
        "src": "58:32:117",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MathMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 12812,
        "linearizedBaseContracts": [
          12812
        ],
        "name": "MathMock",
        "nameLocation": "101:8:117",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 12762,
              "nodeType": "Block",
              "src": "181:38:117",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12758,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12749,
                        "src": "207:1:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 12759,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12751,
                        "src": "210:1:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12756,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29016,
                        "src": "198:4:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$29016_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 12757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28949,
                      "src": "198:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 12760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "198:14:117",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12755,
                  "id": 12761,
                  "nodeType": "Return",
                  "src": "191:21:117"
                }
              ]
            },
            "functionSelector": "6d5433e6",
            "id": 12763,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "max",
            "nameLocation": "125:3:117",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12749,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "137:1:117",
                  "nodeType": "VariableDeclaration",
                  "scope": 12763,
                  "src": "129:9:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "129:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12751,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "148:1:117",
                  "nodeType": "VariableDeclaration",
                  "scope": 12763,
                  "src": "140:9:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12750,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "140:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "128:22:117"
            },
            "returnParameters": {
              "id": 12755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12754,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12763,
                  "src": "172:7:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12753,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "172:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "171:9:117"
            },
            "scope": 12812,
            "src": "116:103:117",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12778,
              "nodeType": "Block",
              "src": "290:38:117",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12774,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12765,
                        "src": "316:1:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 12775,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12767,
                        "src": "319:1:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12772,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29016,
                        "src": "307:4:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$29016_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 12773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "min",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28967,
                      "src": "307:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 12776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "307:14:117",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12771,
                  "id": 12777,
                  "nodeType": "Return",
                  "src": "300:21:117"
                }
              ]
            },
            "functionSelector": "7ae2b5c7",
            "id": 12779,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "min",
            "nameLocation": "234:3:117",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12765,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "246:1:117",
                  "nodeType": "VariableDeclaration",
                  "scope": 12779,
                  "src": "238:9:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12764,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "238:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12767,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "257:1:117",
                  "nodeType": "VariableDeclaration",
                  "scope": 12779,
                  "src": "249:9:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12766,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "249:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "237:22:117"
            },
            "returnParameters": {
              "id": 12771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12770,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12779,
                  "src": "281:7:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12769,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "281:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "280:9:117"
            },
            "scope": 12812,
            "src": "225:103:117",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12794,
              "nodeType": "Block",
              "src": "403:42:117",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12790,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12781,
                        "src": "433:1:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 12791,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12783,
                        "src": "436:1:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12788,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29016,
                        "src": "420:4:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$29016_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 12789,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "average",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 28990,
                      "src": "420:12:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 12792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "420:18:117",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12787,
                  "id": 12793,
                  "nodeType": "Return",
                  "src": "413:25:117"
                }
              ]
            },
            "functionSelector": "2b7423ab",
            "id": 12795,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "average",
            "nameLocation": "343:7:117",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12781,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "359:1:117",
                  "nodeType": "VariableDeclaration",
                  "scope": 12795,
                  "src": "351:9:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12783,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "370:1:117",
                  "nodeType": "VariableDeclaration",
                  "scope": 12795,
                  "src": "362:9:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12782,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "362:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "350:22:117"
            },
            "returnParameters": {
              "id": 12787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12786,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12795,
                  "src": "394:7:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12785,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "394:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "393:9:117"
            },
            "scope": 12812,
            "src": "334:111:117",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12810,
              "nodeType": "Block",
              "src": "520:42:117",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12806,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12797,
                        "src": "550:1:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 12807,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12799,
                        "src": "553:1:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 12804,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29016,
                        "src": "537:4:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$29016_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 12805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ceilDiv",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29015,
                      "src": "537:12:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 12808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "537:18:117",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 12803,
                  "id": 12809,
                  "nodeType": "Return",
                  "src": "530:25:117"
                }
              ]
            },
            "functionSelector": "9cb35327",
            "id": 12811,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ceilDiv",
            "nameLocation": "460:7:117",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12797,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "476:1:117",
                  "nodeType": "VariableDeclaration",
                  "scope": 12811,
                  "src": "468:9:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12796,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "468:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12799,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "487:1:117",
                  "nodeType": "VariableDeclaration",
                  "scope": 12811,
                  "src": "479:9:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12798,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "467:22:117"
            },
            "returnParameters": {
              "id": 12803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12802,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12811,
                  "src": "511:7:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12801,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "511:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "510:9:117"
            },
            "scope": 12812,
            "src": "451:111:117",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 12813,
        "src": "92:472:117",
        "usedErrors": []
      }
    ],
    "src": "33:532:117"
  },
  "bytecode": "608060405234801561001057600080fd5b50610215806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632b7423ab146100515780636d5433e6146100765780637ae2b5c7146100895780639cb353271461009c575b600080fd5b61006461005f366004610159565b6100af565b60405190815260200160405180910390f35b610064610084366004610159565b6100c2565b610064610097366004610159565b6100ce565b6100646100aa366004610159565b6100da565b60006100bb83836100e6565b9392505050565b60006100bb8383610101565b60006100bb8383610118565b60006100bb8383610127565b60006100f56002848418610191565b6100bb908484166101a5565b60008183101561011157816100bb565b5090919050565b600081831061011157816100bb565b600061013382846101cb565b1561013f576001610142565b60005b60ff1661014f8385610191565b6100bb91906101a5565b6000806040838503121561016c57600080fd5b50508035926020909101359150565b634e487b7160e01b600052601260045260246000fd5b6000826101a0576101a061017b565b500490565b600082198211156101c657634e487b7160e01b600052601160045260246000fd5b500190565b6000826101da576101da61017b565b50069056fea2646970667358221220a6c8eb2ba97e4f0c0a03f38e8352f827933a16d2cfbed3088d661a91f1d7488164736f6c634300080c0033",
  "bytecodeSha1": "33e9bb3f9b0a14f5c4ec5b1fecf32dc286eac40e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "MathMock",
  "coverageMap": {
    "branches": {
      "117": {},
      "231": {
        "Math.ceilDiv": {
          "10": [
            1198,
            1208,
            true
          ]
        },
        "Math.max": {
          "8": [
            369,
            375,
            true
          ]
        },
        "Math.min": {
          "9": [
            545,
            550,
            true
          ]
        }
      }
    },
    "statements": {
      "117": {
        "MathMock.average": {
          "0": [
            413,
            438
          ]
        },
        "MathMock.ceilDiv": {
          "3": [
            530,
            555
          ]
        },
        "MathMock.max": {
          "1": [
            191,
            212
          ]
        },
        "MathMock.min": {
          "2": [
            300,
            321
          ]
        }
      },
      "231": {
        "Math.average": {
          "4": [
            796,
            824
          ]
        },
        "Math.ceilDiv": {
          "7": [
            1182,
            1217
          ]
        },
        "Math.max": {
          "5": [
            362,
            383
          ]
        },
        "Math.min": {
          "6": [
            538,
            558
          ]
        }
      }
    }
  },
  "dependencies": [
    "Math"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80632b7423ab146100515780636d5433e6146100765780637ae2b5c7146100895780639cb353271461009c575b600080fd5b61006461005f366004610159565b6100af565b60405190815260200160405180910390f35b610064610084366004610159565b6100c2565b610064610097366004610159565b6100ce565b6100646100aa366004610159565b6100da565b60006100bb83836100e6565b9392505050565b60006100bb8383610101565b60006100bb8383610118565b60006100bb8383610127565b60006100f56002848418610191565b6100bb908484166101a5565b60008183101561011157816100bb565b5090919050565b600081831061011157816100bb565b600061013382846101cb565b1561013f576001610142565b60005b60ff1661014f8385610191565b6100bb91906101a5565b6000806040838503121561016c57600080fd5b50508035926020909101359150565b634e487b7160e01b600052601260045260246000fd5b6000826101a0576101a061017b565b500490565b600082198211156101c657634e487b7160e01b600052601160045260246000fd5b500190565b6000826101da576101da61017b565b50069056fea2646970667358221220a6c8eb2ba97e4f0c0a03f38e8352f827933a16d2cfbed3088d661a91f1d7488164736f6c634300080c0033",
  "deployedSourceMap": "92:472:117:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;334:111;;;;;;:::i;:::-;;:::i;:::-;;;413:25:239;;;401:2;386:18;334:111:117;;;;;;;116:103;;;;;;:::i;:::-;;:::i;225:::-;;;;;;:::i;:::-;;:::i;451:111::-;;;;;;:::i;:::-;;:::i;334:::-;394:7;420:18;433:1;436;420:12;:18::i;:::-;413:25;334:111;-1:-1:-1;;;334:111:117:o;116:103::-;172:7;198:14;207:1;210;198:8;:14::i;225:103::-;281:7;307:14;316:1;319;307:8;:14::i;451:111::-;511:7;537:18;550:1;553;537:12;:18::i;678:153:231:-;740:7;813:11;823:1;814:5;;;813:11;:::i;:::-;803:21;;804:5;;;803:21;:::i;285:105::-;343:7;374:1;369;:6;;:14;;382:1;369:14;;;-1:-1:-1;378:1:231;;285:105;-1:-1:-1;285:105:231:o;461:104::-;519:7;549:1;545;:5;:13;;557:1;545:13;;1030:194;1092:7;1198:5;1202:1;1198;:5;:::i;:::-;:10;:18;;1215:1;1198:18;;;1211:1;1198:18;1189:28;;:5;1193:1;1189;:5;:::i;:::-;:28;;;;:::i;14:248:239:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;182:23:239;;;252:2;237:18;;;224:32;;-1:-1:-1;14:248:239:o;449:127::-;510:10;505:3;501:20;498:1;491:31;541:4;538:1;531:15;565:4;562:1;555:15;581:120;621:1;647;637:35;;652:18;;:::i;:::-;-1:-1:-1;686:9:239;;581:120::o;706:225::-;746:3;777:1;773:6;770:1;767:13;764:136;;;822:10;817:3;813:20;810:1;803:31;857:4;854:1;847:15;885:4;882:1;875:15;764:136;-1:-1:-1;916:9:239;;706:225::o;936:112::-;968:1;994;984:35;;999:18;;:::i;:::-;-1:-1:-1;1033:9:239;;936:112::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    92,
    564
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2B7423AB EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x6D5433E6 EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x7AE2B5C7 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x9CB35327 EQ PUSH2 0x9C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x159 JUMP JUMPDEST PUSH2 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH2 0x84 CALLDATASIZE PUSH1 0x4 PUSH2 0x159 JUMP JUMPDEST PUSH2 0xC2 JUMP JUMPDEST PUSH2 0x64 PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x159 JUMP JUMPDEST PUSH2 0xCE JUMP JUMPDEST PUSH2 0x64 PUSH2 0xAA CALLDATASIZE PUSH1 0x4 PUSH2 0x159 JUMP JUMPDEST PUSH2 0xDA JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB DUP4 DUP4 PUSH2 0xE6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB DUP4 DUP4 PUSH2 0x101 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB DUP4 DUP4 PUSH2 0x118 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB DUP4 DUP4 PUSH2 0x127 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF5 PUSH1 0x2 DUP5 DUP5 XOR PUSH2 0x191 JUMP JUMPDEST PUSH2 0xBB SWAP1 DUP5 DUP5 AND PUSH2 0x1A5 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT ISZERO PUSH2 0x111 JUMPI DUP2 PUSH2 0xBB JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x111 JUMPI DUP2 PUSH2 0xBB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x133 DUP3 DUP5 PUSH2 0x1CB JUMP JUMPDEST ISZERO PUSH2 0x13F JUMPI PUSH1 0x1 PUSH2 0x142 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH2 0x14F DUP4 DUP6 PUSH2 0x191 JUMP JUMPDEST PUSH2 0xBB SWAP2 SWAP1 PUSH2 0x1A5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1A0 JUMPI PUSH2 0x1A0 PUSH2 0x17B JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1C6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1DA JUMPI PUSH2 0x1DA PUSH2 0x17B JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xC8 0xEB 0x2B 0xA9 PUSH31 0x4F0C0A03F38E8352F827933A16D2CFBED3088D661A91F1D7488164736F6C63 NUMBER STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        92,
        564
      ],
      "op": "PUSH1",
      "path": "117",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH1",
      "path": "117",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "MSTORE",
      "path": "117"
    },
    "5": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "CALLVALUE",
      "path": "117"
    },
    "6": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "DUP1",
      "path": "117"
    },
    "7": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "ISZERO",
      "path": "117"
    },
    "8": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "JUMPI",
      "path": "117"
    },
    "12": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH1",
      "path": "117",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "DUP1",
      "path": "117"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "REVERT",
      "path": "117"
    },
    "16": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "JUMPDEST",
      "path": "117"
    },
    "17": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "POP",
      "path": "117"
    },
    "18": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH1",
      "path": "117",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "CALLDATASIZE",
      "path": "117"
    },
    "21": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "LT",
      "path": "117"
    },
    "22": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "JUMPI",
      "path": "117"
    },
    "26": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH1",
      "path": "117",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "CALLDATALOAD",
      "path": "117"
    },
    "29": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH1",
      "path": "117",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "SHR",
      "path": "117"
    },
    "32": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "DUP1",
      "path": "117"
    },
    "33": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH4",
      "path": "117",
      "value": "0x2B7423AB"
    },
    "38": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "EQ",
      "path": "117"
    },
    "39": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "JUMPI",
      "path": "117"
    },
    "43": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "DUP1",
      "path": "117"
    },
    "44": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH4",
      "path": "117",
      "value": "0x6D5433E6"
    },
    "49": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "EQ",
      "path": "117"
    },
    "50": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0x76"
    },
    "53": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "JUMPI",
      "path": "117"
    },
    "54": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "DUP1",
      "path": "117"
    },
    "55": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH4",
      "path": "117",
      "value": "0x7AE2B5C7"
    },
    "60": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "EQ",
      "path": "117"
    },
    "61": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0x89"
    },
    "64": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "JUMPI",
      "path": "117"
    },
    "65": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "DUP1",
      "path": "117"
    },
    "66": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH4",
      "path": "117",
      "value": "0x9CB35327"
    },
    "71": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "EQ",
      "path": "117"
    },
    "72": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0x9C"
    },
    "75": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "JUMPI",
      "path": "117"
    },
    "76": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "JUMPDEST",
      "path": "117"
    },
    "77": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "PUSH1",
      "path": "117",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "DUP1",
      "path": "117"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        92,
        564
      ],
      "op": "REVERT",
      "path": "117"
    },
    "81": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "JUMPDEST",
      "path": "117"
    },
    "82": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0x64"
    },
    "85": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0x5F"
    },
    "88": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "CALLDATASIZE",
      "path": "117"
    },
    "89": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "PUSH1",
      "path": "117",
      "value": "0x4"
    },
    "91": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0x159"
    },
    "94": {
      "fn": "MathMock.average",
      "jump": "i",
      "offset": [
        334,
        445
      ],
      "op": "JUMP",
      "path": "117"
    },
    "95": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "JUMPDEST",
      "path": "117"
    },
    "96": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0xAF"
    },
    "99": {
      "fn": "MathMock.average",
      "jump": "i",
      "offset": [
        334,
        445
      ],
      "op": "JUMP",
      "path": "117"
    },
    "100": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "JUMPDEST",
      "path": "117"
    },
    "101": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "PUSH1",
      "path": "117",
      "value": "0x40"
    },
    "103": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "MLOAD",
      "path": "117"
    },
    "104": {
      "op": "SWAP1"
    },
    "105": {
      "op": "DUP2"
    },
    "106": {
      "op": "MSTORE"
    },
    "107": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "109": {
      "op": "ADD"
    },
    "110": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "PUSH1",
      "path": "117",
      "value": "0x40"
    },
    "112": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "MLOAD",
      "path": "117"
    },
    "113": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "DUP1",
      "path": "117"
    },
    "114": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "SWAP2",
      "path": "117"
    },
    "115": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "SUB",
      "path": "117"
    },
    "116": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "SWAP1",
      "path": "117"
    },
    "117": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "RETURN",
      "path": "117"
    },
    "118": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "JUMPDEST",
      "path": "117"
    },
    "119": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0x64"
    },
    "122": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0x84"
    },
    "125": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "CALLDATASIZE",
      "path": "117"
    },
    "126": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "PUSH1",
      "path": "117",
      "value": "0x4"
    },
    "128": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0x159"
    },
    "131": {
      "fn": "MathMock.max",
      "jump": "i",
      "offset": [
        116,
        219
      ],
      "op": "JUMP",
      "path": "117"
    },
    "132": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "JUMPDEST",
      "path": "117"
    },
    "133": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0xC2"
    },
    "136": {
      "fn": "MathMock.max",
      "jump": "i",
      "offset": [
        116,
        219
      ],
      "op": "JUMP",
      "path": "117"
    },
    "137": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "JUMPDEST",
      "path": "117"
    },
    "138": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0x64"
    },
    "141": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0x97"
    },
    "144": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "CALLDATASIZE",
      "path": "117"
    },
    "145": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "PUSH1",
      "path": "117",
      "value": "0x4"
    },
    "147": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0x159"
    },
    "150": {
      "fn": "MathMock.min",
      "jump": "i",
      "offset": [
        225,
        328
      ],
      "op": "JUMP",
      "path": "117"
    },
    "151": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "JUMPDEST",
      "path": "117"
    },
    "152": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0xCE"
    },
    "155": {
      "fn": "MathMock.min",
      "jump": "i",
      "offset": [
        225,
        328
      ],
      "op": "JUMP",
      "path": "117"
    },
    "156": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "JUMPDEST",
      "path": "117"
    },
    "157": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0x64"
    },
    "160": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0xAA"
    },
    "163": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "CALLDATASIZE",
      "path": "117"
    },
    "164": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "PUSH1",
      "path": "117",
      "value": "0x4"
    },
    "166": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0x159"
    },
    "169": {
      "fn": "MathMock.ceilDiv",
      "jump": "i",
      "offset": [
        451,
        562
      ],
      "op": "JUMP",
      "path": "117"
    },
    "170": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "JUMPDEST",
      "path": "117"
    },
    "171": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0xDA"
    },
    "174": {
      "fn": "MathMock.ceilDiv",
      "jump": "i",
      "offset": [
        451,
        562
      ],
      "op": "JUMP",
      "path": "117"
    },
    "175": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "JUMPDEST",
      "path": "117"
    },
    "176": {
      "fn": "MathMock.average",
      "offset": [
        394,
        401
      ],
      "op": "PUSH1",
      "path": "117",
      "value": "0x0"
    },
    "178": {
      "fn": "MathMock.average",
      "offset": [
        420,
        438
      ],
      "op": "PUSH2",
      "path": "117",
      "statement": 0,
      "value": "0xBB"
    },
    "181": {
      "fn": "MathMock.average",
      "offset": [
        433,
        434
      ],
      "op": "DUP4",
      "path": "117"
    },
    "182": {
      "fn": "MathMock.average",
      "offset": [
        436,
        437
      ],
      "op": "DUP4",
      "path": "117"
    },
    "183": {
      "fn": "MathMock.average",
      "offset": [
        420,
        432
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0xE6"
    },
    "186": {
      "fn": "MathMock.average",
      "jump": "i",
      "offset": [
        420,
        438
      ],
      "op": "JUMP",
      "path": "117"
    },
    "187": {
      "fn": "MathMock.average",
      "offset": [
        420,
        438
      ],
      "op": "JUMPDEST",
      "path": "117"
    },
    "188": {
      "fn": "MathMock.average",
      "offset": [
        413,
        438
      ],
      "op": "SWAP4",
      "path": "117"
    },
    "189": {
      "fn": "MathMock.average",
      "offset": [
        334,
        445
      ],
      "op": "SWAP3",
      "path": "117"
    },
    "190": {
      "op": "POP"
    },
    "191": {
      "op": "POP"
    },
    "192": {
      "op": "POP"
    },
    "193": {
      "fn": "MathMock.average",
      "jump": "o",
      "offset": [
        334,
        445
      ],
      "op": "JUMP",
      "path": "117"
    },
    "194": {
      "fn": "MathMock.max",
      "offset": [
        116,
        219
      ],
      "op": "JUMPDEST",
      "path": "117"
    },
    "195": {
      "fn": "MathMock.max",
      "offset": [
        172,
        179
      ],
      "op": "PUSH1",
      "path": "117",
      "value": "0x0"
    },
    "197": {
      "fn": "MathMock.max",
      "offset": [
        198,
        212
      ],
      "op": "PUSH2",
      "path": "117",
      "statement": 1,
      "value": "0xBB"
    },
    "200": {
      "fn": "MathMock.max",
      "offset": [
        207,
        208
      ],
      "op": "DUP4",
      "path": "117"
    },
    "201": {
      "fn": "MathMock.max",
      "offset": [
        210,
        211
      ],
      "op": "DUP4",
      "path": "117"
    },
    "202": {
      "fn": "MathMock.max",
      "offset": [
        198,
        206
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0x101"
    },
    "205": {
      "fn": "MathMock.max",
      "jump": "i",
      "offset": [
        198,
        212
      ],
      "op": "JUMP",
      "path": "117"
    },
    "206": {
      "fn": "MathMock.min",
      "offset": [
        225,
        328
      ],
      "op": "JUMPDEST",
      "path": "117"
    },
    "207": {
      "fn": "MathMock.min",
      "offset": [
        281,
        288
      ],
      "op": "PUSH1",
      "path": "117",
      "value": "0x0"
    },
    "209": {
      "fn": "MathMock.min",
      "offset": [
        307,
        321
      ],
      "op": "PUSH2",
      "path": "117",
      "statement": 2,
      "value": "0xBB"
    },
    "212": {
      "fn": "MathMock.min",
      "offset": [
        316,
        317
      ],
      "op": "DUP4",
      "path": "117"
    },
    "213": {
      "fn": "MathMock.min",
      "offset": [
        319,
        320
      ],
      "op": "DUP4",
      "path": "117"
    },
    "214": {
      "fn": "MathMock.min",
      "offset": [
        307,
        315
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0x118"
    },
    "217": {
      "fn": "MathMock.min",
      "jump": "i",
      "offset": [
        307,
        321
      ],
      "op": "JUMP",
      "path": "117"
    },
    "218": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        451,
        562
      ],
      "op": "JUMPDEST",
      "path": "117"
    },
    "219": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        511,
        518
      ],
      "op": "PUSH1",
      "path": "117",
      "value": "0x0"
    },
    "221": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        537,
        555
      ],
      "op": "PUSH2",
      "path": "117",
      "statement": 3,
      "value": "0xBB"
    },
    "224": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        550,
        551
      ],
      "op": "DUP4",
      "path": "117"
    },
    "225": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        553,
        554
      ],
      "op": "DUP4",
      "path": "117"
    },
    "226": {
      "fn": "MathMock.ceilDiv",
      "offset": [
        537,
        549
      ],
      "op": "PUSH2",
      "path": "117",
      "value": "0x127"
    },
    "229": {
      "fn": "MathMock.ceilDiv",
      "jump": "i",
      "offset": [
        537,
        555
      ],
      "op": "JUMP",
      "path": "117"
    },
    "230": {
      "fn": "Math.average",
      "offset": [
        678,
        831
      ],
      "op": "JUMPDEST",
      "path": "231"
    },
    "231": {
      "fn": "Math.average",
      "offset": [
        740,
        747
      ],
      "op": "PUSH1",
      "path": "231",
      "value": "0x0"
    },
    "233": {
      "fn": "Math.average",
      "offset": [
        813,
        824
      ],
      "op": "PUSH2",
      "path": "231",
      "statement": 4,
      "value": "0xF5"
    },
    "236": {
      "fn": "Math.average",
      "offset": [
        823,
        824
      ],
      "op": "PUSH1",
      "path": "231",
      "value": "0x2"
    },
    "238": {
      "fn": "Math.average",
      "offset": [
        814,
        819
      ],
      "op": "DUP5",
      "path": "231"
    },
    "239": {
      "fn": "Math.average",
      "offset": [
        814,
        819
      ],
      "op": "DUP5",
      "path": "231"
    },
    "240": {
      "fn": "Math.average",
      "offset": [
        814,
        819
      ],
      "op": "XOR",
      "path": "231"
    },
    "241": {
      "fn": "Math.average",
      "offset": [
        813,
        824
      ],
      "op": "PUSH2",
      "path": "231",
      "value": "0x191"
    },
    "244": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        813,
        824
      ],
      "op": "JUMP",
      "path": "231"
    },
    "245": {
      "fn": "Math.average",
      "offset": [
        813,
        824
      ],
      "op": "JUMPDEST",
      "path": "231"
    },
    "246": {
      "fn": "Math.average",
      "offset": [
        803,
        824
      ],
      "op": "PUSH2",
      "path": "231",
      "value": "0xBB"
    },
    "249": {
      "fn": "Math.average",
      "offset": [
        803,
        824
      ],
      "op": "SWAP1",
      "path": "231"
    },
    "250": {
      "fn": "Math.average",
      "offset": [
        804,
        809
      ],
      "op": "DUP5",
      "path": "231"
    },
    "251": {
      "fn": "Math.average",
      "offset": [
        804,
        809
      ],
      "op": "DUP5",
      "path": "231"
    },
    "252": {
      "fn": "Math.average",
      "offset": [
        804,
        809
      ],
      "op": "AND",
      "path": "231"
    },
    "253": {
      "fn": "Math.average",
      "offset": [
        803,
        824
      ],
      "op": "PUSH2",
      "path": "231",
      "value": "0x1A5"
    },
    "256": {
      "fn": "Math.average",
      "jump": "i",
      "offset": [
        803,
        824
      ],
      "op": "JUMP",
      "path": "231"
    },
    "257": {
      "fn": "Math.max",
      "offset": [
        285,
        390
      ],
      "op": "JUMPDEST",
      "path": "231"
    },
    "258": {
      "fn": "Math.max",
      "offset": [
        343,
        350
      ],
      "op": "PUSH1",
      "path": "231",
      "value": "0x0"
    },
    "260": {
      "fn": "Math.max",
      "offset": [
        374,
        375
      ],
      "op": "DUP2",
      "path": "231",
      "statement": 5
    },
    "261": {
      "fn": "Math.max",
      "offset": [
        369,
        370
      ],
      "op": "DUP4",
      "path": "231"
    },
    "262": {
      "fn": "Math.max",
      "offset": [
        369,
        375
      ],
      "op": "LT",
      "path": "231"
    },
    "263": {
      "branch": 8,
      "fn": "Math.max",
      "offset": [
        369,
        375
      ],
      "op": "ISZERO",
      "path": "231"
    },
    "264": {
      "fn": "Math.max",
      "offset": [
        369,
        383
      ],
      "op": "PUSH2",
      "path": "231",
      "value": "0x111"
    },
    "267": {
      "branch": 8,
      "fn": "Math.max",
      "offset": [
        369,
        383
      ],
      "op": "JUMPI",
      "path": "231"
    },
    "268": {
      "fn": "Math.max",
      "offset": [
        382,
        383
      ],
      "op": "DUP2",
      "path": "231"
    },
    "269": {
      "fn": "Math.max",
      "offset": [
        369,
        383
      ],
      "op": "PUSH2",
      "path": "231",
      "value": "0xBB"
    },
    "272": {
      "fn": "Math.max",
      "offset": [
        369,
        383
      ],
      "op": "JUMP",
      "path": "231"
    },
    "273": {
      "fn": "Math.max",
      "offset": [
        369,
        383
      ],
      "op": "JUMPDEST",
      "path": "231"
    },
    "274": {
      "op": "POP"
    },
    "275": {
      "fn": "Math.max",
      "offset": [
        378,
        379
      ],
      "op": "SWAP1",
      "path": "231"
    },
    "276": {
      "fn": "Math.max",
      "offset": [
        378,
        379
      ],
      "op": "SWAP2",
      "path": "231"
    },
    "277": {
      "fn": "Math.max",
      "offset": [
        285,
        390
      ],
      "op": "SWAP1",
      "path": "231"
    },
    "278": {
      "op": "POP"
    },
    "279": {
      "fn": "Math.max",
      "jump": "o",
      "offset": [
        285,
        390
      ],
      "op": "JUMP",
      "path": "231"
    },
    "280": {
      "fn": "Math.min",
      "offset": [
        461,
        565
      ],
      "op": "JUMPDEST",
      "path": "231"
    },
    "281": {
      "fn": "Math.min",
      "offset": [
        519,
        526
      ],
      "op": "PUSH1",
      "path": "231",
      "value": "0x0"
    },
    "283": {
      "fn": "Math.min",
      "offset": [
        549,
        550
      ],
      "op": "DUP2",
      "path": "231",
      "statement": 6
    },
    "284": {
      "fn": "Math.min",
      "offset": [
        545,
        546
      ],
      "op": "DUP4",
      "path": "231"
    },
    "285": {
      "branch": 9,
      "fn": "Math.min",
      "offset": [
        545,
        550
      ],
      "op": "LT",
      "path": "231"
    },
    "286": {
      "fn": "Math.min",
      "offset": [
        545,
        558
      ],
      "op": "PUSH2",
      "path": "231",
      "value": "0x111"
    },
    "289": {
      "branch": 9,
      "fn": "Math.min",
      "offset": [
        545,
        558
      ],
      "op": "JUMPI",
      "path": "231"
    },
    "290": {
      "fn": "Math.min",
      "offset": [
        557,
        558
      ],
      "op": "DUP2",
      "path": "231"
    },
    "291": {
      "fn": "Math.min",
      "offset": [
        545,
        558
      ],
      "op": "PUSH2",
      "path": "231",
      "value": "0xBB"
    },
    "294": {
      "fn": "Math.min",
      "offset": [
        545,
        558
      ],
      "op": "JUMP",
      "path": "231"
    },
    "295": {
      "fn": "Math.ceilDiv",
      "offset": [
        1030,
        1224
      ],
      "op": "JUMPDEST",
      "path": "231"
    },
    "296": {
      "fn": "Math.ceilDiv",
      "offset": [
        1092,
        1099
      ],
      "op": "PUSH1",
      "path": "231",
      "value": "0x0"
    },
    "298": {
      "fn": "Math.ceilDiv",
      "offset": [
        1198,
        1203
      ],
      "op": "PUSH2",
      "path": "231",
      "statement": 7,
      "value": "0x133"
    },
    "301": {
      "fn": "Math.ceilDiv",
      "offset": [
        1202,
        1203
      ],
      "op": "DUP3",
      "path": "231"
    },
    "302": {
      "fn": "Math.ceilDiv",
      "offset": [
        1198,
        1199
      ],
      "op": "DUP5",
      "path": "231"
    },
    "303": {
      "fn": "Math.ceilDiv",
      "offset": [
        1198,
        1203
      ],
      "op": "PUSH2",
      "path": "231",
      "value": "0x1CB"
    },
    "306": {
      "fn": "Math.ceilDiv",
      "jump": "i",
      "offset": [
        1198,
        1203
      ],
      "op": "JUMP",
      "path": "231"
    },
    "307": {
      "fn": "Math.ceilDiv",
      "offset": [
        1198,
        1203
      ],
      "op": "JUMPDEST",
      "path": "231"
    },
    "308": {
      "branch": 10,
      "fn": "Math.ceilDiv",
      "offset": [
        1198,
        1208
      ],
      "op": "ISZERO",
      "path": "231"
    },
    "309": {
      "fn": "Math.ceilDiv",
      "offset": [
        1198,
        1216
      ],
      "op": "PUSH2",
      "path": "231",
      "value": "0x13F"
    },
    "312": {
      "branch": 10,
      "fn": "Math.ceilDiv",
      "offset": [
        1198,
        1216
      ],
      "op": "JUMPI",
      "path": "231"
    },
    "313": {
      "fn": "Math.ceilDiv",
      "offset": [
        1215,
        1216
      ],
      "op": "PUSH1",
      "path": "231",
      "value": "0x1"
    },
    "315": {
      "fn": "Math.ceilDiv",
      "offset": [
        1198,
        1216
      ],
      "op": "PUSH2",
      "path": "231",
      "value": "0x142"
    },
    "318": {
      "fn": "Math.ceilDiv",
      "offset": [
        1198,
        1216
      ],
      "op": "JUMP",
      "path": "231"
    },
    "319": {
      "fn": "Math.ceilDiv",
      "offset": [
        1198,
        1216
      ],
      "op": "JUMPDEST",
      "path": "231"
    },
    "320": {
      "fn": "Math.ceilDiv",
      "offset": [
        1211,
        1212
      ],
      "op": "PUSH1",
      "path": "231",
      "value": "0x0"
    },
    "322": {
      "fn": "Math.ceilDiv",
      "offset": [
        1198,
        1216
      ],
      "op": "JUMPDEST",
      "path": "231"
    },
    "323": {
      "fn": "Math.ceilDiv",
      "offset": [
        1189,
        1217
      ],
      "op": "PUSH1",
      "path": "231",
      "value": "0xFF"
    },
    "325": {
      "fn": "Math.ceilDiv",
      "offset": [
        1189,
        1217
      ],
      "op": "AND",
      "path": "231"
    },
    "326": {
      "fn": "Math.ceilDiv",
      "offset": [
        1189,
        1194
      ],
      "op": "PUSH2",
      "path": "231",
      "value": "0x14F"
    },
    "329": {
      "fn": "Math.ceilDiv",
      "offset": [
        1193,
        1194
      ],
      "op": "DUP4",
      "path": "231"
    },
    "330": {
      "fn": "Math.ceilDiv",
      "offset": [
        1189,
        1190
      ],
      "op": "DUP6",
      "path": "231"
    },
    "331": {
      "fn": "Math.ceilDiv",
      "offset": [
        1189,
        1194
      ],
      "op": "PUSH2",
      "path": "231",
      "value": "0x191"
    },
    "334": {
      "fn": "Math.ceilDiv",
      "jump": "i",
      "offset": [
        1189,
        1194
      ],
      "op": "JUMP",
      "path": "231"
    },
    "335": {
      "fn": "Math.ceilDiv",
      "offset": [
        1189,
        1194
      ],
      "op": "JUMPDEST",
      "path": "231"
    },
    "336": {
      "fn": "Math.ceilDiv",
      "offset": [
        1189,
        1217
      ],
      "op": "PUSH2",
      "path": "231",
      "value": "0xBB"
    },
    "339": {
      "fn": "Math.ceilDiv",
      "offset": [
        1189,
        1217
      ],
      "op": "SWAP2",
      "path": "231"
    },
    "340": {
      "fn": "Math.ceilDiv",
      "offset": [
        1189,
        1217
      ],
      "op": "SWAP1",
      "path": "231"
    },
    "341": {
      "fn": "Math.ceilDiv",
      "offset": [
        1189,
        1217
      ],
      "op": "PUSH2",
      "path": "231",
      "value": "0x1A5"
    },
    "344": {
      "fn": "Math.ceilDiv",
      "jump": "i",
      "offset": [
        1189,
        1217
      ],
      "op": "JUMP",
      "path": "231"
    },
    "345": {
      "op": "JUMPDEST"
    },
    "346": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "348": {
      "op": "DUP1"
    },
    "349": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "351": {
      "op": "DUP4"
    },
    "352": {
      "op": "DUP6"
    },
    "353": {
      "op": "SUB"
    },
    "354": {
      "op": "SLT"
    },
    "355": {
      "op": "ISZERO"
    },
    "356": {
      "op": "PUSH2",
      "value": "0x16C"
    },
    "359": {
      "op": "JUMPI"
    },
    "360": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "362": {
      "op": "DUP1"
    },
    "363": {
      "op": "REVERT"
    },
    "364": {
      "op": "JUMPDEST"
    },
    "365": {
      "op": "POP"
    },
    "366": {
      "op": "POP"
    },
    "367": {
      "op": "DUP1"
    },
    "368": {
      "op": "CALLDATALOAD"
    },
    "369": {
      "op": "SWAP3"
    },
    "370": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "372": {
      "op": "SWAP1"
    },
    "373": {
      "op": "SWAP2"
    },
    "374": {
      "op": "ADD"
    },
    "375": {
      "op": "CALLDATALOAD"
    },
    "376": {
      "op": "SWAP2"
    },
    "377": {
      "op": "POP"
    },
    "378": {
      "jump": "o",
      "op": "JUMP"
    },
    "379": {
      "op": "JUMPDEST"
    },
    "380": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "385": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "387": {
      "op": "SHL"
    },
    "388": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "390": {
      "op": "MSTORE"
    },
    "391": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "395": {
      "op": "MSTORE"
    },
    "396": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "400": {
      "op": "REVERT"
    },
    "401": {
      "op": "JUMPDEST"
    },
    "402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "404": {
      "op": "DUP3"
    },
    "405": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "408": {
      "op": "JUMPI"
    },
    "409": {
      "op": "PUSH2",
      "value": "0x1A0"
    },
    "412": {
      "op": "PUSH2",
      "value": "0x17B"
    },
    "415": {
      "jump": "i",
      "op": "JUMP"
    },
    "416": {
      "op": "JUMPDEST"
    },
    "417": {
      "op": "POP"
    },
    "418": {
      "op": "DIV"
    },
    "419": {
      "op": "SWAP1"
    },
    "420": {
      "jump": "o",
      "op": "JUMP"
    },
    "421": {
      "op": "JUMPDEST"
    },
    "422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "424": {
      "op": "DUP3"
    },
    "425": {
      "op": "NOT"
    },
    "426": {
      "op": "DUP3"
    },
    "427": {
      "op": "GT"
    },
    "428": {
      "op": "ISZERO"
    },
    "429": {
      "op": "PUSH2",
      "value": "0x1C6"
    },
    "432": {
      "op": "JUMPI"
    },
    "433": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "438": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "440": {
      "op": "SHL"
    },
    "441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "443": {
      "op": "MSTORE"
    },
    "444": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "446": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "448": {
      "op": "MSTORE"
    },
    "449": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "453": {
      "op": "REVERT"
    },
    "454": {
      "op": "JUMPDEST"
    },
    "455": {
      "op": "POP"
    },
    "456": {
      "op": "ADD"
    },
    "457": {
      "op": "SWAP1"
    },
    "458": {
      "jump": "o",
      "op": "JUMP"
    },
    "459": {
      "op": "JUMPDEST"
    },
    "460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "462": {
      "op": "DUP3"
    },
    "463": {
      "op": "PUSH2",
      "value": "0x1DA"
    },
    "466": {
      "op": "JUMPI"
    },
    "467": {
      "op": "PUSH2",
      "value": "0x1DA"
    },
    "470": {
      "op": "PUSH2",
      "value": "0x17B"
    },
    "473": {
      "jump": "i",
      "op": "JUMP"
    },
    "474": {
      "op": "JUMPDEST"
    },
    "475": {
      "op": "POP"
    },
    "476": {
      "op": "MOD"
    },
    "477": {
      "op": "SWAP1"
    },
    "478": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "3f32babf12eca3aa789c016a8b2893198904fc6a",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/math/Math.sol\";\n\ncontract MathMock {\n    function max(uint256 a, uint256 b) public pure returns (uint256) {\n        return Math.max(a, b);\n    }\n\n    function min(uint256 a, uint256 b) public pure returns (uint256) {\n        return Math.min(a, b);\n    }\n\n    function average(uint256 a, uint256 b) public pure returns (uint256) {\n        return Math.average(a, b);\n    }\n\n    function ceilDiv(uint256 a, uint256 b) public pure returns (uint256) {\n        return Math.ceilDiv(a, b);\n    }\n}\n",
  "sourceMap": "92:472:117:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/mocks/MathMock.sol",
  "type": "contract"
}