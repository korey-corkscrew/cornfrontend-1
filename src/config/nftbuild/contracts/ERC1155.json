{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "uri_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "160": "contracts/openzeppelin/contracts/token/ERC1155/ERC1155.sol",
    "161": "contracts/openzeppelin/contracts/token/ERC1155/IERC1155.sol",
    "162": "contracts/openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
    "166": "contracts/openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
    "206": "contracts/openzeppelin/contracts/utils/Address.sol",
    "210": "contracts/openzeppelin/contracts/utils/Context.sol",
    "224": "contracts/openzeppelin/contracts/utils/introspection/ERC165.sol",
    "228": "contracts/openzeppelin/contracts/utils/introspection/IERC165.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/token/ERC1155/ERC1155.sol",
    "exportedSymbols": {
      "Address": [
        26327
      ],
      "Context": [
        26715
      ],
      "ERC1155": [
        19020
      ],
      "ERC165": [
        28500
      ],
      "IERC1155": [
        19142
      ],
      "IERC1155MetadataURI": [
        19472
      ],
      "IERC1155Receiver": [
        19183
      ],
      "IERC165": [
        28824
      ]
    },
    "id": 19021,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 17926,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "94:23:160"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC1155/IERC1155.sol",
        "file": "./IERC1155.sol",
        "id": 17927,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19021,
        "sourceUnit": 19143,
        "src": "119:24:160",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
        "file": "./IERC1155Receiver.sol",
        "id": 17928,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19021,
        "sourceUnit": 19184,
        "src": "144:32:160",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
        "file": "./extensions/IERC1155MetadataURI.sol",
        "id": 17929,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19021,
        "sourceUnit": 19473,
        "src": "177:46:160",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 17930,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19021,
        "sourceUnit": 26328,
        "src": "224:33:160",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 17931,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19021,
        "sourceUnit": 26716,
        "src": "258:33:160",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/introspection/ERC165.sol",
        "file": "../../utils/introspection/ERC165.sol",
        "id": 17932,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19021,
        "sourceUnit": 28501,
        "src": "292:46:160",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 17934,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26715,
              "src": "575:7:160"
            },
            "id": 17935,
            "nodeType": "InheritanceSpecifier",
            "src": "575:7:160"
          },
          {
            "baseName": {
              "id": 17936,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28500,
              "src": "584:6:160"
            },
            "id": 17937,
            "nodeType": "InheritanceSpecifier",
            "src": "584:6:160"
          },
          {
            "baseName": {
              "id": 17938,
              "name": "IERC1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19142,
              "src": "592:8:160"
            },
            "id": 17939,
            "nodeType": "InheritanceSpecifier",
            "src": "592:8:160"
          },
          {
            "baseName": {
              "id": 17940,
              "name": "IERC1155MetadataURI",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19472,
              "src": "602:19:160"
            },
            "id": 17941,
            "nodeType": "InheritanceSpecifier",
            "src": "602:19:160"
          }
        ],
        "canonicalName": "ERC1155",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 17933,
          "nodeType": "StructuredDocumentation",
          "src": "340:214:160",
          "text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
        },
        "fullyImplemented": true,
        "id": 19020,
        "linearizedBaseContracts": [
          19020,
          19472,
          19142,
          28500,
          28824,
          26715
        ],
        "name": "ERC1155",
        "nameLocation": "564:7:160",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 17944,
            "libraryName": {
              "id": 17942,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26327,
              "src": "634:7:160"
            },
            "nodeType": "UsingForDirective",
            "src": "628:26:160",
            "typeName": {
              "id": 17943,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "646:7:160",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "id": 17950,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "765:9:160",
            "nodeType": "VariableDeclaration",
            "scope": 19020,
            "src": "709:65:160",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(address => uint256))"
            },
            "typeName": {
              "id": 17949,
              "keyType": {
                "id": 17945,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "717:7:160",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "709:47:160",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(address => uint256))"
              },
              "valueType": {
                "id": 17948,
                "keyType": {
                  "id": 17946,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "736:7:160",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "728:27:160",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 17947,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "747:7:160",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 17956,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "884:18:160",
            "nodeType": "VariableDeclaration",
            "scope": 19020,
            "src": "831:71:160",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 17955,
              "keyType": {
                "id": 17951,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "839:7:160",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "831:44:160",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 17954,
                "keyType": {
                  "id": 17952,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "858:7:160",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "850:24:160",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 17953,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "869:4:160",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 17958,
            "mutability": "mutable",
            "name": "_uri",
            "nameLocation": "1038:4:160",
            "nodeType": "VariableDeclaration",
            "scope": 19020,
            "src": "1023:19:160",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 17957,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1023:6:160",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 17968,
              "nodeType": "Block",
              "src": "1124:30:160",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17965,
                        "name": "uri_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17961,
                        "src": "1142:4:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 17964,
                      "name": "_setURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18448,
                      "src": "1134:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 17966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1134:13:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17967,
                  "nodeType": "ExpressionStatement",
                  "src": "1134:13:160"
                }
              ]
            },
            "documentation": {
              "id": 17959,
              "nodeType": "StructuredDocumentation",
              "src": "1049:38:160",
              "text": " @dev See {_setURI}."
            },
            "id": 17969,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17961,
                  "mutability": "mutable",
                  "name": "uri_",
                  "nameLocation": "1118:4:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 17969,
                  "src": "1104:18:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 17960,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1104:6:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1103:20:160"
            },
            "returnParameters": {
              "id": 17963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1124:0:160"
            },
            "scope": 19020,
            "src": "1092:62:160",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              28499,
              28823
            ],
            "body": {
              "id": 17999,
              "nodeType": "Block",
              "src": "1329:197:160",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 17997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 17992,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 17985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 17980,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17972,
                          "src": "1358:11:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 17982,
                                "name": "IERC1155",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19142,
                                "src": "1378:8:160",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$19142_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155_$19142_$",
                                  "typeString": "type(contract IERC1155)"
                                }
                              ],
                              "id": 17981,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1373:4:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 17983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1373:14:160",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$19142",
                              "typeString": "type(contract IERC1155)"
                            }
                          },
                          "id": 17984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1373:26:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1358:41:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 17991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 17986,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17972,
                          "src": "1415:11:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 17988,
                                "name": "IERC1155MetadataURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19472,
                                "src": "1435:19:160",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$19472_$",
                                  "typeString": "type(contract IERC1155MetadataURI)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$19472_$",
                                  "typeString": "type(contract IERC1155MetadataURI)"
                                }
                              ],
                              "id": 17987,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1430:4:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 17989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1430:25:160",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$19472",
                              "typeString": "type(contract IERC1155MetadataURI)"
                            }
                          },
                          "id": 17990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1430:37:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1415:52:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1358:109:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 17995,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17972,
                          "src": "1507:11:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 17993,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1483:5:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC1155_$19020_$",
                            "typeString": "type(contract super ERC1155)"
                          }
                        },
                        "id": 17994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28499,
                        "src": "1483:23:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 17996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1483:36:160",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1358:161:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 17979,
                  "id": 17998,
                  "nodeType": "Return",
                  "src": "1339:180:160"
                }
              ]
            },
            "documentation": {
              "id": 17970,
              "nodeType": "StructuredDocumentation",
              "src": "1160:56:160",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 18000,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1230:17:160",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 17976,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 17974,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28500,
                  "src": "1297:6:160"
                },
                {
                  "id": 17975,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28824,
                  "src": "1305:7:160"
                }
              ],
              "src": "1288:25:160"
            },
            "parameters": {
              "id": 17973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17972,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1255:11:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18000,
                  "src": "1248:18:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 17971,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1248:6:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1247:20:160"
            },
            "returnParameters": {
              "id": 17979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17978,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18000,
                  "src": "1323:4:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 17977,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1323:4:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1322:6:160"
            },
            "scope": 19020,
            "src": "1221:305:160",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              19471
            ],
            "body": {
              "id": 18011,
              "nodeType": "Block",
              "src": "2000:28:160",
              "statements": [
                {
                  "expression": {
                    "id": 18009,
                    "name": "_uri",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 17958,
                    "src": "2017:4:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 18008,
                  "id": 18010,
                  "nodeType": "Return",
                  "src": "2010:11:160"
                }
              ]
            },
            "documentation": {
              "id": 18001,
              "nodeType": "StructuredDocumentation",
              "src": "1532:388:160",
              "text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
            },
            "functionSelector": "0e89341c",
            "id": 18012,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uri",
            "nameLocation": "1934:3:160",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 18005,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1967:8:160"
            },
            "parameters": {
              "id": 18004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18003,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18012,
                  "src": "1938:7:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18002,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1938:7:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1937:9:160"
            },
            "returnParameters": {
              "id": 18008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18007,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18012,
                  "src": "1985:13:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 18006,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1985:6:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1984:15:160"
            },
            "scope": 19020,
            "src": "1925:103:160",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              19080
            ],
            "body": {
              "id": 18039,
              "nodeType": "Block",
              "src": "2265:133:160",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 18029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 18024,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18015,
                          "src": "2283:7:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 18027,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2302:1:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 18026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2294:7:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18025,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2294:7:160",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2294:10:160",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2283:21:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 18030,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2306:45:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        },
                        "value": "ERC1155: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1f4de6a436172e7f7b1540476031cb037fc18ede9cc346a56da1697cbd352aa9",
                          "typeString": "literal_string \"ERC1155: balance query for the zero address\""
                        }
                      ],
                      "id": 18023,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2275:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2275:77:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18032,
                  "nodeType": "ExpressionStatement",
                  "src": "2275:77:160"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 18033,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17950,
                        "src": "2369:9:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 18035,
                      "indexExpression": {
                        "id": 18034,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18017,
                        "src": "2379:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2369:13:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 18037,
                    "indexExpression": {
                      "id": 18036,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18015,
                      "src": "2383:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2369:22:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 18022,
                  "id": 18038,
                  "nodeType": "Return",
                  "src": "2362:29:160"
                }
              ]
            },
            "documentation": {
              "id": 18013,
              "nodeType": "StructuredDocumentation",
              "src": "2034:131:160",
              "text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
            },
            "functionSelector": "00fdd58e",
            "id": 18040,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "2179:9:160",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 18019,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2238:8:160"
            },
            "parameters": {
              "id": 18018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18015,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2197:7:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18040,
                  "src": "2189:15:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18014,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2189:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18017,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "2214:2:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18040,
                  "src": "2206:10:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18016,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2206:7:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2188:29:160"
            },
            "returnParameters": {
              "id": 18022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18021,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18040,
                  "src": "2256:7:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18020,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2256:7:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2255:9:160"
            },
            "scope": 19020,
            "src": "2170:228:160",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              19093
            ],
            "body": {
              "id": 18103,
              "nodeType": "Block",
              "src": "2728:335:160",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 18059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 18055,
                            "name": "accounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18044,
                            "src": "2746:8:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 18056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2746:15:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 18057,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18047,
                            "src": "2765:3:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 18058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2765:10:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2746:29:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
                        "id": 18060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2777:43:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
                          "typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
                        },
                        "value": "ERC1155: accounts and ids length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
                          "typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
                        }
                      ],
                      "id": 18054,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2738:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2738:83:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18062,
                  "nodeType": "ExpressionStatement",
                  "src": "2738:83:160"
                },
                {
                  "assignments": [
                    18067
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18067,
                      "mutability": "mutable",
                      "name": "batchBalances",
                      "nameLocation": "2849:13:160",
                      "nodeType": "VariableDeclaration",
                      "scope": 18103,
                      "src": "2832:30:160",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 18065,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2832:7:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 18066,
                        "nodeType": "ArrayTypeName",
                        "src": "2832:9:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 18074,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 18071,
                          "name": "accounts",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18044,
                          "src": "2879:8:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 18072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2879:15:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 18070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2865:13:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 18068,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2869:7:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 18069,
                        "nodeType": "ArrayTypeName",
                        "src": "2869:9:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 18073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2865:30:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2832:63:160"
                },
                {
                  "body": {
                    "id": 18099,
                    "nodeType": "Block",
                    "src": "2952:74:160",
                    "statements": [
                      {
                        "expression": {
                          "id": 18097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 18086,
                              "name": "batchBalances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18067,
                              "src": "2966:13:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 18088,
                            "indexExpression": {
                              "id": 18087,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18076,
                              "src": "2980:1:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2966:16:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 18090,
                                  "name": "accounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18044,
                                  "src": "2995:8:160",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 18092,
                                "indexExpression": {
                                  "id": 18091,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18076,
                                  "src": "3004:1:160",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2995:11:160",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 18093,
                                  "name": "ids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18047,
                                  "src": "3008:3:160",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 18095,
                                "indexExpression": {
                                  "id": 18094,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18076,
                                  "src": "3012:1:160",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3008:6:160",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 18089,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18040,
                              "src": "2985:9:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (address,uint256) view returns (uint256)"
                              }
                            },
                            "id": 18096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2985:30:160",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2966:49:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 18098,
                        "nodeType": "ExpressionStatement",
                        "src": "2966:49:160"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 18082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 18079,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18076,
                      "src": "2926:1:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 18080,
                        "name": "accounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18044,
                        "src": "2930:8:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 18081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2930:15:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2926:19:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18100,
                  "initializationExpression": {
                    "assignments": [
                      18076
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 18076,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2919:1:160",
                        "nodeType": "VariableDeclaration",
                        "scope": 18100,
                        "src": "2911:9:160",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 18075,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2911:7:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 18078,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 18077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2923:1:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2911:13:160"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 18084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2947:3:160",
                      "subExpression": {
                        "id": 18083,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18076,
                        "src": "2949:1:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 18085,
                    "nodeType": "ExpressionStatement",
                    "src": "2947:3:160"
                  },
                  "nodeType": "ForStatement",
                  "src": "2906:120:160"
                },
                {
                  "expression": {
                    "id": 18101,
                    "name": "batchBalances",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 18067,
                    "src": "3043:13:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 18053,
                  "id": 18102,
                  "nodeType": "Return",
                  "src": "3036:20:160"
                }
              ]
            },
            "documentation": {
              "id": 18041,
              "nodeType": "StructuredDocumentation",
              "src": "2404:146:160",
              "text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
            },
            "functionSelector": "4e1273f4",
            "id": 18104,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfBatch",
            "nameLocation": "2564:14:160",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 18049,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2680:8:160"
            },
            "parameters": {
              "id": 18048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18044,
                  "mutability": "mutable",
                  "name": "accounts",
                  "nameLocation": "2596:8:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18104,
                  "src": "2579:25:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 18042,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2579:7:160",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 18043,
                    "nodeType": "ArrayTypeName",
                    "src": "2579:9:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18047,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "2623:3:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18104,
                  "src": "2606:20:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 18045,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2606:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 18046,
                    "nodeType": "ArrayTypeName",
                    "src": "2606:9:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2578:49:160"
            },
            "returnParameters": {
              "id": 18053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18052,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18104,
                  "src": "2706:16:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 18050,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2706:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 18051,
                    "nodeType": "ArrayTypeName",
                    "src": "2706:9:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2705:18:160"
            },
            "scope": 19020,
            "src": "2555:508:160",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              19101
            ],
            "body": {
              "id": 18120,
              "nodeType": "Block",
              "src": "3215:69:160",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 18114,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26705,
                          "src": "3244:10:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 18115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3244:12:160",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18116,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18107,
                        "src": "3258:8:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18117,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18109,
                        "src": "3268:8:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 18113,
                      "name": "_setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18844,
                      "src": "3225:18:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 18118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3225:52:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18119,
                  "nodeType": "ExpressionStatement",
                  "src": "3225:52:160"
                }
              ]
            },
            "documentation": {
              "id": 18105,
              "nodeType": "StructuredDocumentation",
              "src": "3069:57:160",
              "text": " @dev See {IERC1155-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 18121,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "3140:17:160",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 18111,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3206:8:160"
            },
            "parameters": {
              "id": 18110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18107,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3166:8:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18121,
                  "src": "3158:16:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3158:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18109,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "3181:8:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18121,
                  "src": "3176:13:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18108,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3176:4:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3157:33:160"
            },
            "returnParameters": {
              "id": 18112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3215:0:160"
            },
            "scope": 19020,
            "src": "3131:153:160",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              19111
            ],
            "body": {
              "id": 18138,
              "nodeType": "Block",
              "src": "3456:61:160",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 18132,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17956,
                        "src": "3473:18:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 18134,
                      "indexExpression": {
                        "id": 18133,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18124,
                        "src": "3492:7:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3473:27:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 18136,
                    "indexExpression": {
                      "id": 18135,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18126,
                      "src": "3501:8:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3473:37:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 18131,
                  "id": 18137,
                  "nodeType": "Return",
                  "src": "3466:44:160"
                }
              ]
            },
            "documentation": {
              "id": 18122,
              "nodeType": "StructuredDocumentation",
              "src": "3290:56:160",
              "text": " @dev See {IERC1155-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 18139,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "3360:16:160",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 18128,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3432:8:160"
            },
            "parameters": {
              "id": 18127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18124,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3385:7:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18139,
                  "src": "3377:15:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3377:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18126,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3402:8:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18139,
                  "src": "3394:16:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3394:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3376:35:160"
            },
            "returnParameters": {
              "id": 18131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18130,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 18139,
                  "src": "3450:4:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18129,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3450:4:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3449:6:160"
            },
            "scope": 19020,
            "src": "3351:166:160",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              19125
            ],
            "body": {
              "id": 18176,
              "nodeType": "Block",
              "src": "3753:220:160",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 18164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 18158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 18155,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18142,
                            "src": "3784:4:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 18156,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26705,
                              "src": "3792:10:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 18157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3792:12:160",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3784:20:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 18160,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18142,
                              "src": "3825:4:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 18161,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26705,
                                "src": "3831:10:160",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 18162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3831:12:160",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 18159,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18139,
                            "src": "3808:16:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 18163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3808:36:160",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3784:60:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 18165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3858:43:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
                          "typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
                        },
                        "value": "ERC1155: caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_394ac917f53b95ee25db2a5da5874c5b1f0af95a4fdf34992ff8b19c458f239a",
                          "typeString": "literal_string \"ERC1155: caller is not owner nor approved\""
                        }
                      ],
                      "id": 18154,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3763:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3763:148:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18167,
                  "nodeType": "ExpressionStatement",
                  "src": "3763:148:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18169,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18142,
                        "src": "3939:4:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18170,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18144,
                        "src": "3945:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18171,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18146,
                        "src": "3949:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 18172,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18148,
                        "src": "3953:6:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 18173,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18150,
                        "src": "3961:4:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 18168,
                      "name": "_safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18311,
                      "src": "3921:17:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 18174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3921:45:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18175,
                  "nodeType": "ExpressionStatement",
                  "src": "3921:45:160"
                }
              ]
            },
            "documentation": {
              "id": 18140,
              "nodeType": "StructuredDocumentation",
              "src": "3523:56:160",
              "text": " @dev See {IERC1155-safeTransferFrom}."
            },
            "functionSelector": "f242432a",
            "id": 18177,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "3593:16:160",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 18152,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3744:8:160"
            },
            "parameters": {
              "id": 18151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18142,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3627:4:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18177,
                  "src": "3619:12:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3619:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18144,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3649:2:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18177,
                  "src": "3641:10:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18143,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3641:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18146,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "3669:2:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18177,
                  "src": "3661:10:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3661:7:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18148,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3689:6:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18177,
                  "src": "3681:14:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3681:7:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18150,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3718:4:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18177,
                  "src": "3705:17:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 18149,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3705:5:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3609:119:160"
            },
            "returnParameters": {
              "id": 18153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3753:0:160"
            },
            "scope": 19020,
            "src": "3584:389:160",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              19141
            ],
            "body": {
              "id": 18216,
              "nodeType": "Block",
              "src": "4239:236:160",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 18204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 18198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 18195,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18180,
                            "src": "4270:4:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 18196,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26705,
                              "src": "4278:10:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 18197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4278:12:160",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4270:20:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 18200,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18180,
                              "src": "4311:4:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 18201,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26705,
                                "src": "4317:10:160",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 18202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4317:12:160",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 18199,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18139,
                            "src": "4294:16:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 18203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4294:36:160",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4270:60:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 18205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4344:52:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
                          "typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC1155: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70a41c66829f5508884cda9ef3d2f72551b34f23e4035be97941681123d2d686",
                          "typeString": "literal_string \"ERC1155: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 18194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4249:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4249:157:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18207,
                  "nodeType": "ExpressionStatement",
                  "src": "4249:157:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18209,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18180,
                        "src": "4439:4:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18210,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18182,
                        "src": "4445:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18211,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18185,
                        "src": "4449:3:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 18212,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18188,
                        "src": "4454:7:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 18213,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18190,
                        "src": "4463:4:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 18208,
                      "name": "_safeBatchTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18437,
                      "src": "4416:22:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 18214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4416:52:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18215,
                  "nodeType": "ExpressionStatement",
                  "src": "4416:52:160"
                }
              ]
            },
            "documentation": {
              "id": 18178,
              "nodeType": "StructuredDocumentation",
              "src": "3979:61:160",
              "text": " @dev See {IERC1155-safeBatchTransferFrom}."
            },
            "functionSelector": "2eb2c2d6",
            "id": 18217,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeBatchTransferFrom",
            "nameLocation": "4054:21:160",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 18192,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4230:8:160"
            },
            "parameters": {
              "id": 18191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18180,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4093:4:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18217,
                  "src": "4085:12:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4085:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18182,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4115:2:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18217,
                  "src": "4107:10:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18181,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4107:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18185,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "4144:3:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18217,
                  "src": "4127:20:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 18183,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4127:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 18184,
                    "nodeType": "ArrayTypeName",
                    "src": "4127:9:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18188,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "4174:7:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18217,
                  "src": "4157:24:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 18186,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "4157:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 18187,
                    "nodeType": "ArrayTypeName",
                    "src": "4157:9:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18190,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4204:4:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18217,
                  "src": "4191:17:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 18189,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4191:5:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4075:139:160"
            },
            "returnParameters": {
              "id": 18193,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4239:0:160"
            },
            "scope": 19020,
            "src": "4045:430:160",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 18310,
              "nodeType": "Block",
              "src": "5088:634:160",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 18237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 18232,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18222,
                          "src": "5106:2:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 18235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5120:1:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 18234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5112:7:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18233,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5112:7:160",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5112:10:160",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5106:16:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 18238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5124:39:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        },
                        "value": "ERC1155: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        }
                      ],
                      "id": 18231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5098:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5098:66:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18240,
                  "nodeType": "ExpressionStatement",
                  "src": "5098:66:160"
                },
                {
                  "assignments": [
                    18242
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18242,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "5183:8:160",
                      "nodeType": "VariableDeclaration",
                      "scope": 18310,
                      "src": "5175:16:160",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 18241,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5175:7:160",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 18245,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 18243,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26705,
                      "src": "5194:10:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 18244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5194:12:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5175:31:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18247,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18242,
                        "src": "5238:8:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18248,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18220,
                        "src": "5248:4:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18249,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18222,
                        "src": "5254:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 18251,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18224,
                            "src": "5276:2:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 18250,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19019,
                          "src": "5258:17:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 18252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5258:21:160",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 18254,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18226,
                            "src": "5299:6:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 18253,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19019,
                          "src": "5281:17:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 18255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5281:25:160",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 18256,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18228,
                        "src": "5308:4:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 18246,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18863,
                      "src": "5217:20:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 18257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5217:96:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18258,
                  "nodeType": "ExpressionStatement",
                  "src": "5217:96:160"
                },
                {
                  "assignments": [
                    18260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18260,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "5332:11:160",
                      "nodeType": "VariableDeclaration",
                      "scope": 18310,
                      "src": "5324:19:160",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 18259,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5324:7:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 18266,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 18261,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17950,
                        "src": "5346:9:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 18263,
                      "indexExpression": {
                        "id": 18262,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18224,
                        "src": "5356:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5346:13:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 18265,
                    "indexExpression": {
                      "id": 18264,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18220,
                      "src": "5360:4:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5346:19:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5324:41:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 18270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 18268,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18260,
                          "src": "5383:11:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 18269,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18226,
                          "src": "5398:6:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5383:21:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
                        "id": 18271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5406:44:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                          "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                        },
                        "value": "ERC1155: insufficient balance for transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                          "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                        }
                      ],
                      "id": 18267,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5375:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5375:76:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18273,
                  "nodeType": "ExpressionStatement",
                  "src": "5375:76:160"
                },
                {
                  "id": 18284,
                  "nodeType": "UncheckedBlock",
                  "src": "5461:77:160",
                  "statements": [
                    {
                      "expression": {
                        "id": 18282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 18274,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17950,
                              "src": "5485:9:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 18277,
                            "indexExpression": {
                              "id": 18275,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18224,
                              "src": "5495:2:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5485:13:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 18278,
                          "indexExpression": {
                            "id": 18276,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18220,
                            "src": "5499:4:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "5485:19:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 18281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 18279,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18260,
                            "src": "5507:11:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 18280,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18226,
                            "src": "5521:6:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5507:20:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5485:42:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 18283,
                      "nodeType": "ExpressionStatement",
                      "src": "5485:42:160"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 18291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 18285,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17950,
                          "src": "5547:9:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 18288,
                        "indexExpression": {
                          "id": 18286,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18224,
                          "src": "5557:2:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5547:13:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 18289,
                      "indexExpression": {
                        "id": 18287,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18222,
                        "src": "5561:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5547:17:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 18290,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18226,
                      "src": "5568:6:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5547:27:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 18292,
                  "nodeType": "ExpressionStatement",
                  "src": "5547:27:160"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 18294,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18242,
                        "src": "5605:8:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18295,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18220,
                        "src": "5615:4:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18296,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18222,
                        "src": "5621:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18297,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18224,
                        "src": "5625:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 18298,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18226,
                        "src": "5629:6:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 18293,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19039,
                      "src": "5590:14:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 18299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5590:46:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18300,
                  "nodeType": "EmitStatement",
                  "src": "5585:51:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18302,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18242,
                        "src": "5678:8:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18303,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18220,
                        "src": "5688:4:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18304,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18222,
                        "src": "5694:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18305,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18224,
                        "src": "5698:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 18306,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18226,
                        "src": "5702:6:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 18307,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18228,
                        "src": "5710:4:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 18301,
                      "name": "_doSafeTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18926,
                      "src": "5647:30:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 18308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5647:68:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18309,
                  "nodeType": "ExpressionStatement",
                  "src": "5647:68:160"
                }
              ]
            },
            "documentation": {
              "id": 18218,
              "nodeType": "StructuredDocumentation",
              "src": "4481:439:160",
              "text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
            },
            "id": 18311,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransferFrom",
            "nameLocation": "4934:17:160",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18229,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18220,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4969:4:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18311,
                  "src": "4961:12:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18219,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4961:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18222,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4991:2:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18311,
                  "src": "4983:10:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4983:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18224,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5011:2:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18311,
                  "src": "5003:10:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18223,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5003:7:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18226,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5031:6:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18311,
                  "src": "5023:14:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18225,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5023:7:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18228,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5060:4:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18311,
                  "src": "5047:17:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 18227,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5047:5:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4951:119:160"
            },
            "returnParameters": {
              "id": 18230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5088:0:160"
            },
            "scope": 19020,
            "src": "4925:797:160",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18436,
              "nodeType": "Block",
              "src": "6256:857:160",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 18332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 18328,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18319,
                            "src": "6274:3:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 18329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6274:10:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 18330,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18322,
                            "src": "6288:7:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 18331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6288:14:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6274:28:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
                        "id": 18333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6304:42:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        },
                        "value": "ERC1155: ids and amounts length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        }
                      ],
                      "id": 18327,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6266:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6266:81:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18335,
                  "nodeType": "ExpressionStatement",
                  "src": "6266:81:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 18342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 18337,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18316,
                          "src": "6365:2:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 18340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6379:1:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 18339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6371:7:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18338,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6371:7:160",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6371:10:160",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6365:16:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 18343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6383:39:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        },
                        "value": "ERC1155: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
                          "typeString": "literal_string \"ERC1155: transfer to the zero address\""
                        }
                      ],
                      "id": 18336,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6357:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6357:66:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18345,
                  "nodeType": "ExpressionStatement",
                  "src": "6357:66:160"
                },
                {
                  "assignments": [
                    18347
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18347,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "6442:8:160",
                      "nodeType": "VariableDeclaration",
                      "scope": 18436,
                      "src": "6434:16:160",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 18346,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6434:7:160",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 18350,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 18348,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26705,
                      "src": "6453:10:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 18349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6453:12:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6434:31:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18352,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18347,
                        "src": "6497:8:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18353,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18314,
                        "src": "6507:4:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18354,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18316,
                        "src": "6513:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18355,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18319,
                        "src": "6517:3:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 18356,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18322,
                        "src": "6522:7:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 18357,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18324,
                        "src": "6531:4:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 18351,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18863,
                      "src": "6476:20:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 18358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6476:60:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18359,
                  "nodeType": "ExpressionStatement",
                  "src": "6476:60:160"
                },
                {
                  "body": {
                    "id": 18417,
                    "nodeType": "Block",
                    "src": "6588:370:160",
                    "statements": [
                      {
                        "assignments": [
                          18372
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 18372,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "6610:2:160",
                            "nodeType": "VariableDeclaration",
                            "scope": 18417,
                            "src": "6602:10:160",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 18371,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6602:7:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 18376,
                        "initialValue": {
                          "baseExpression": {
                            "id": 18373,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18319,
                            "src": "6615:3:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 18375,
                          "indexExpression": {
                            "id": 18374,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18361,
                            "src": "6619:1:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6615:6:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6602:19:160"
                      },
                      {
                        "assignments": [
                          18378
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 18378,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "6643:6:160",
                            "nodeType": "VariableDeclaration",
                            "scope": 18417,
                            "src": "6635:14:160",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 18377,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6635:7:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 18382,
                        "initialValue": {
                          "baseExpression": {
                            "id": 18379,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18322,
                            "src": "6652:7:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 18381,
                          "indexExpression": {
                            "id": 18380,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18361,
                            "src": "6660:1:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6652:10:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6635:27:160"
                      },
                      {
                        "assignments": [
                          18384
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 18384,
                            "mutability": "mutable",
                            "name": "fromBalance",
                            "nameLocation": "6685:11:160",
                            "nodeType": "VariableDeclaration",
                            "scope": 18417,
                            "src": "6677:19:160",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 18383,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6677:7:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 18390,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 18385,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17950,
                              "src": "6699:9:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 18387,
                            "indexExpression": {
                              "id": 18386,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18372,
                              "src": "6709:2:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6699:13:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 18389,
                          "indexExpression": {
                            "id": 18388,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18314,
                            "src": "6713:4:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6699:19:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6677:41:160"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 18394,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 18392,
                                "name": "fromBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18384,
                                "src": "6740:11:160",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 18393,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18378,
                                "src": "6755:6:160",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6740:21:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
                              "id": 18395,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6763:44:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                                "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                              },
                              "value": "ERC1155: insufficient balance for transfer"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
                                "typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
                              }
                            ],
                            "id": 18391,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6732:7:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 18396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6732:76:160",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 18397,
                        "nodeType": "ExpressionStatement",
                        "src": "6732:76:160"
                      },
                      {
                        "id": 18408,
                        "nodeType": "UncheckedBlock",
                        "src": "6822:85:160",
                        "statements": [
                          {
                            "expression": {
                              "id": 18406,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 18398,
                                    "name": "_balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 17950,
                                    "src": "6850:9:160",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(uint256 => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 18401,
                                  "indexExpression": {
                                    "id": 18399,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 18372,
                                    "src": "6860:2:160",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "6850:13:160",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 18402,
                                "indexExpression": {
                                  "id": 18400,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18314,
                                  "src": "6864:4:160",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "6850:19:160",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 18405,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 18403,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18384,
                                  "src": "6872:11:160",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 18404,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18378,
                                  "src": "6886:6:160",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6872:20:160",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6850:42:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 18407,
                            "nodeType": "ExpressionStatement",
                            "src": "6850:42:160"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 18415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 18409,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17950,
                                "src": "6920:9:160",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                }
                              },
                              "id": 18412,
                              "indexExpression": {
                                "id": 18410,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18372,
                                "src": "6930:2:160",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6920:13:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 18413,
                            "indexExpression": {
                              "id": 18411,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18316,
                              "src": "6934:2:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6920:17:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 18414,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18378,
                            "src": "6941:6:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6920:27:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 18416,
                        "nodeType": "ExpressionStatement",
                        "src": "6920:27:160"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 18367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 18364,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18361,
                      "src": "6567:1:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 18365,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18319,
                        "src": "6571:3:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 18366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6571:10:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6567:14:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18418,
                  "initializationExpression": {
                    "assignments": [
                      18361
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 18361,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6560:1:160",
                        "nodeType": "VariableDeclaration",
                        "scope": 18418,
                        "src": "6552:9:160",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 18360,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6552:7:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 18363,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 18362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6564:1:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6552:13:160"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 18369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "6583:3:160",
                      "subExpression": {
                        "id": 18368,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18361,
                        "src": "6585:1:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 18370,
                    "nodeType": "ExpressionStatement",
                    "src": "6583:3:160"
                  },
                  "nodeType": "ForStatement",
                  "src": "6547:411:160"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 18420,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18347,
                        "src": "6987:8:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18421,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18314,
                        "src": "6997:4:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18422,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18316,
                        "src": "7003:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18423,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18319,
                        "src": "7007:3:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 18424,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18322,
                        "src": "7012:7:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 18419,
                      "name": "TransferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19054,
                      "src": "6973:13:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 18425,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6973:47:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18426,
                  "nodeType": "EmitStatement",
                  "src": "6968:52:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18428,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18347,
                        "src": "7067:8:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18429,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18314,
                        "src": "7077:4:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18430,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18316,
                        "src": "7083:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18431,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18319,
                        "src": "7087:3:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 18432,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18322,
                        "src": "7092:7:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 18433,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18324,
                        "src": "7101:4:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 18427,
                      "name": "_doSafeBatchTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18991,
                      "src": "7031:35:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 18434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7031:75:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18435,
                  "nodeType": "ExpressionStatement",
                  "src": "7031:75:160"
                }
              ]
            },
            "documentation": {
              "id": 18312,
              "nodeType": "StructuredDocumentation",
              "src": "5728:335:160",
              "text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
            },
            "id": 18437,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeBatchTransferFrom",
            "nameLocation": "6077:22:160",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18325,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18314,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6117:4:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18437,
                  "src": "6109:12:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6109:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18316,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6139:2:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18437,
                  "src": "6131:10:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6131:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18319,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "6168:3:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18437,
                  "src": "6151:20:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 18317,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6151:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 18318,
                    "nodeType": "ArrayTypeName",
                    "src": "6151:9:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18322,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "6198:7:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18437,
                  "src": "6181:24:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 18320,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "6181:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 18321,
                    "nodeType": "ArrayTypeName",
                    "src": "6181:9:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18324,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "6228:4:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18437,
                  "src": "6215:17:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 18323,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6215:5:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6099:139:160"
            },
            "returnParameters": {
              "id": 18326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6256:0:160"
            },
            "scope": 19020,
            "src": "6068:1045:160",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18447,
              "nodeType": "Block",
              "src": "7992:30:160",
              "statements": [
                {
                  "expression": {
                    "id": 18445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 18443,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17958,
                      "src": "8002:4:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 18444,
                      "name": "newuri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18440,
                      "src": "8009:6:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "8002:13:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 18446,
                  "nodeType": "ExpressionStatement",
                  "src": "8002:13:160"
                }
              ]
            },
            "documentation": {
              "id": 18438,
              "nodeType": "StructuredDocumentation",
              "src": "7119:812:160",
              "text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
            },
            "id": 18448,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setURI",
            "nameLocation": "7945:7:160",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18440,
                  "mutability": "mutable",
                  "name": "newuri",
                  "nameLocation": "7967:6:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18448,
                  "src": "7953:20:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 18439,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7953:6:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7952:22:160"
            },
            "returnParameters": {
              "id": 18442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7992:0:160"
            },
            "scope": 19020,
            "src": "7936:86:160",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18522,
              "nodeType": "Block",
              "src": "8524:424:160",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 18466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 18461,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18451,
                          "src": "8542:2:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 18464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8556:1:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 18463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8548:7:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18462,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8548:7:160",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8548:10:160",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8542:16:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 18467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8560:35:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        },
                        "value": "ERC1155: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        }
                      ],
                      "id": 18460,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8534:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8534:62:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18469,
                  "nodeType": "ExpressionStatement",
                  "src": "8534:62:160"
                },
                {
                  "assignments": [
                    18471
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18471,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "8615:8:160",
                      "nodeType": "VariableDeclaration",
                      "scope": 18522,
                      "src": "8607:16:160",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 18470,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8607:7:160",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 18474,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 18472,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26705,
                      "src": "8626:10:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 18473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8626:12:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8607:31:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18476,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18471,
                        "src": "8670:8:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 18479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8688:1:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 18478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8680:7:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18477,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8680:7:160",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8680:10:160",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18481,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18451,
                        "src": "8692:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 18483,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18453,
                            "src": "8714:2:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 18482,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19019,
                          "src": "8696:17:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 18484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8696:21:160",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 18486,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18455,
                            "src": "8737:6:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 18485,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19019,
                          "src": "8719:17:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 18487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8719:25:160",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 18488,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18457,
                        "src": "8746:4:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 18475,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18863,
                      "src": "8649:20:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 18489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8649:102:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18490,
                  "nodeType": "ExpressionStatement",
                  "src": "8649:102:160"
                },
                {
                  "expression": {
                    "id": 18497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 18491,
                          "name": "_balances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17950,
                          "src": "8762:9:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 18494,
                        "indexExpression": {
                          "id": 18492,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18453,
                          "src": "8772:2:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8762:13:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 18495,
                      "indexExpression": {
                        "id": 18493,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18451,
                        "src": "8776:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8762:17:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 18496,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18455,
                      "src": "8783:6:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8762:27:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 18498,
                  "nodeType": "ExpressionStatement",
                  "src": "8762:27:160"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 18500,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18471,
                        "src": "8819:8:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 18503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8837:1:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 18502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8829:7:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18501,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8829:7:160",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8829:10:160",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18505,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18451,
                        "src": "8841:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18506,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18453,
                        "src": "8845:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 18507,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18455,
                        "src": "8849:6:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 18499,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19039,
                      "src": "8804:14:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 18508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8804:52:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18509,
                  "nodeType": "EmitStatement",
                  "src": "8799:57:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18511,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18471,
                        "src": "8898:8:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 18514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8916:1:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 18513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8908:7:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18512,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8908:7:160",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8908:10:160",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18516,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18451,
                        "src": "8920:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18517,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18453,
                        "src": "8924:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 18518,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18455,
                        "src": "8928:6:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 18519,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18457,
                        "src": "8936:4:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 18510,
                      "name": "_doSafeTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18926,
                      "src": "8867:30:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 18520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8867:74:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18521,
                  "nodeType": "ExpressionStatement",
                  "src": "8867:74:160"
                }
              ]
            },
            "documentation": {
              "id": 18449,
              "nodeType": "StructuredDocumentation",
              "src": "8028:362:160",
              "text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
            },
            "id": 18523,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "8404:5:160",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18451,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8427:2:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18523,
                  "src": "8419:10:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18450,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8419:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18453,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "8447:2:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18523,
                  "src": "8439:10:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18452,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8439:7:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18455,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8467:6:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18523,
                  "src": "8459:14:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18454,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8459:7:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18457,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "8496:4:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18523,
                  "src": "8483:17:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 18456,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8483:5:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8409:97:160"
            },
            "returnParameters": {
              "id": 18459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8524:0:160"
            },
            "scope": 19020,
            "src": "8395:553:160",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18621,
              "nodeType": "Block",
              "src": "9447:561:160",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 18543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 18538,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18526,
                          "src": "9465:2:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 18541,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9479:1:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 18540,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9471:7:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18539,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9471:7:160",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9471:10:160",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9465:16:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 18544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9483:35:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        },
                        "value": "ERC1155: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
                          "typeString": "literal_string \"ERC1155: mint to the zero address\""
                        }
                      ],
                      "id": 18537,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9457:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9457:62:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18546,
                  "nodeType": "ExpressionStatement",
                  "src": "9457:62:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 18552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 18548,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18529,
                            "src": "9537:3:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 18549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9537:10:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 18550,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18532,
                            "src": "9551:7:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 18551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "9551:14:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9537:28:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
                        "id": 18553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9567:42:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        },
                        "value": "ERC1155: ids and amounts length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        }
                      ],
                      "id": 18547,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9529:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9529:81:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18555,
                  "nodeType": "ExpressionStatement",
                  "src": "9529:81:160"
                },
                {
                  "assignments": [
                    18557
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18557,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "9629:8:160",
                      "nodeType": "VariableDeclaration",
                      "scope": 18621,
                      "src": "9621:16:160",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 18556,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9621:7:160",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 18560,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 18558,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26705,
                      "src": "9640:10:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 18559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9640:12:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9621:31:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18562,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18557,
                        "src": "9684:8:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 18565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9702:1:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 18564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9694:7:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18563,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9694:7:160",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9694:10:160",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18567,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18526,
                        "src": "9706:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18568,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18529,
                        "src": "9710:3:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 18569,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18532,
                        "src": "9715:7:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 18570,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18534,
                        "src": "9724:4:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 18561,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18863,
                      "src": "9663:20:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 18571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9663:66:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18572,
                  "nodeType": "ExpressionStatement",
                  "src": "9663:66:160"
                },
                {
                  "body": {
                    "id": 18596,
                    "nodeType": "Block",
                    "src": "9781:60:160",
                    "statements": [
                      {
                        "expression": {
                          "id": 18594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 18584,
                                "name": "_balances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17950,
                                "src": "9795:9:160",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(uint256 => mapping(address => uint256))"
                                }
                              },
                              "id": 18589,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 18585,
                                  "name": "ids",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18529,
                                  "src": "9805:3:160",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 18587,
                                "indexExpression": {
                                  "id": 18586,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18574,
                                  "src": "9809:1:160",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9805:6:160",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9795:17:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 18590,
                            "indexExpression": {
                              "id": 18588,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18526,
                              "src": "9813:2:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9795:21:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 18591,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18532,
                              "src": "9820:7:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 18593,
                            "indexExpression": {
                              "id": 18592,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18574,
                              "src": "9828:1:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9820:10:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9795:35:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 18595,
                        "nodeType": "ExpressionStatement",
                        "src": "9795:35:160"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 18580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 18577,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18574,
                      "src": "9760:1:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 18578,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18529,
                        "src": "9764:3:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 18579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9764:10:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9760:14:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18597,
                  "initializationExpression": {
                    "assignments": [
                      18574
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 18574,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "9753:1:160",
                        "nodeType": "VariableDeclaration",
                        "scope": 18597,
                        "src": "9745:9:160",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 18573,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9745:7:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 18576,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 18575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9757:1:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "9745:13:160"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 18582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "9776:3:160",
                      "subExpression": {
                        "id": 18581,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18574,
                        "src": "9776:1:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 18583,
                    "nodeType": "ExpressionStatement",
                    "src": "9776:3:160"
                  },
                  "nodeType": "ForStatement",
                  "src": "9740:101:160"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 18599,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18557,
                        "src": "9870:8:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 18602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9888:1:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 18601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9880:7:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18600,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9880:7:160",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9880:10:160",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18604,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18526,
                        "src": "9892:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18605,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18529,
                        "src": "9896:3:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 18606,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18532,
                        "src": "9901:7:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 18598,
                      "name": "TransferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19054,
                      "src": "9856:13:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 18607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9856:53:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18608,
                  "nodeType": "EmitStatement",
                  "src": "9851:58:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18610,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18557,
                        "src": "9956:8:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 18613,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9974:1:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 18612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9966:7:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18611,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9966:7:160",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9966:10:160",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18615,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18526,
                        "src": "9978:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18616,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18529,
                        "src": "9982:3:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 18617,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18532,
                        "src": "9987:7:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 18618,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18534,
                        "src": "9996:4:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 18609,
                      "name": "_doSafeBatchTransferAcceptanceCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18991,
                      "src": "9920:35:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 18619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9920:81:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18620,
                  "nodeType": "ExpressionStatement",
                  "src": "9920:81:160"
                }
              ]
            },
            "documentation": {
              "id": 18524,
              "nodeType": "StructuredDocumentation",
              "src": "8954:334:160",
              "text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
            },
            "id": 18622,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintBatch",
            "nameLocation": "9302:10:160",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18526,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9330:2:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18622,
                  "src": "9322:10:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18525,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9322:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18529,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "9359:3:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18622,
                  "src": "9342:20:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 18527,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9342:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 18528,
                    "nodeType": "ArrayTypeName",
                    "src": "9342:9:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18532,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "9389:7:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18622,
                  "src": "9372:24:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 18530,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9372:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 18531,
                    "nodeType": "ArrayTypeName",
                    "src": "9372:9:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18534,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "9419:4:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18622,
                  "src": "9406:17:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 18533,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9406:5:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9312:117:160"
            },
            "returnParameters": {
              "id": 18536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9447:0:160"
            },
            "scope": 19020,
            "src": "9293:715:160",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18700,
              "nodeType": "Block",
              "src": "10352:526:160",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 18638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 18633,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18625,
                          "src": "10370:4:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 18636,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10386:1:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 18635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10378:7:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18634,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10378:7:160",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10378:10:160",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10370:18:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 18639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10390:37:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
                          "typeString": "literal_string \"ERC1155: burn from the zero address\""
                        },
                        "value": "ERC1155: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
                          "typeString": "literal_string \"ERC1155: burn from the zero address\""
                        }
                      ],
                      "id": 18632,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10362:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10362:66:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18641,
                  "nodeType": "ExpressionStatement",
                  "src": "10362:66:160"
                },
                {
                  "assignments": [
                    18643
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18643,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "10447:8:160",
                      "nodeType": "VariableDeclaration",
                      "scope": 18700,
                      "src": "10439:16:160",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 18642,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10439:7:160",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 18646,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 18644,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26705,
                      "src": "10458:10:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 18645,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10458:12:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10439:31:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18648,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18643,
                        "src": "10502:8:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18649,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18625,
                        "src": "10512:4:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 18652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10526:1:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 18651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10518:7:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18650,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10518:7:160",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10518:10:160",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 18655,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18627,
                            "src": "10548:2:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 18654,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19019,
                          "src": "10530:17:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 18656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10530:21:160",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 18658,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18629,
                            "src": "10571:6:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 18657,
                          "name": "_asSingletonArray",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19019,
                          "src": "10553:17:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (uint256[] memory)"
                          }
                        },
                        "id": 18659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10553:25:160",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 18660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10580:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 18647,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18863,
                      "src": "10481:20:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 18661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10481:102:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18662,
                  "nodeType": "ExpressionStatement",
                  "src": "10481:102:160"
                },
                {
                  "assignments": [
                    18664
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18664,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nameLocation": "10602:11:160",
                      "nodeType": "VariableDeclaration",
                      "scope": 18700,
                      "src": "10594:19:160",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 18663,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10594:7:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 18670,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 18665,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17950,
                        "src": "10616:9:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 18667,
                      "indexExpression": {
                        "id": 18666,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18627,
                        "src": "10626:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10616:13:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 18669,
                    "indexExpression": {
                      "id": 18668,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18625,
                      "src": "10630:4:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10616:19:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10594:41:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 18674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 18672,
                          "name": "fromBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18664,
                          "src": "10653:11:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 18673,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18629,
                          "src": "10668:6:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10653:21:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 18675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10676:38:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
                          "typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
                        },
                        "value": "ERC1155: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
                          "typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
                        }
                      ],
                      "id": 18671,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10645:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10645:70:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18677,
                  "nodeType": "ExpressionStatement",
                  "src": "10645:70:160"
                },
                {
                  "id": 18688,
                  "nodeType": "UncheckedBlock",
                  "src": "10725:77:160",
                  "statements": [
                    {
                      "expression": {
                        "id": 18686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 18678,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17950,
                              "src": "10749:9:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 18681,
                            "indexExpression": {
                              "id": 18679,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18627,
                              "src": "10759:2:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10749:13:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 18682,
                          "indexExpression": {
                            "id": 18680,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18625,
                            "src": "10763:4:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "10749:19:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 18685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 18683,
                            "name": "fromBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18664,
                            "src": "10771:11:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 18684,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18629,
                            "src": "10785:6:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10771:20:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10749:42:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 18687,
                      "nodeType": "ExpressionStatement",
                      "src": "10749:42:160"
                    }
                  ]
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 18690,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18643,
                        "src": "10832:8:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18691,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18625,
                        "src": "10842:4:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 18694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10856:1:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 18693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10848:7:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18692,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10848:7:160",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10848:10:160",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18696,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18627,
                        "src": "10860:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 18697,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18629,
                        "src": "10864:6:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 18689,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19039,
                      "src": "10817:14:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 18698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10817:54:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18699,
                  "nodeType": "EmitStatement",
                  "src": "10812:59:160"
                }
              ]
            },
            "documentation": {
              "id": 18623,
              "nodeType": "StructuredDocumentation",
              "src": "10014:229:160",
              "text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
            },
            "id": 18701,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "10257:5:160",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18630,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18625,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10280:4:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18701,
                  "src": "10272:12:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10272:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18627,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "10302:2:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18701,
                  "src": "10294:10:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18626,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10294:7:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18629,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10322:6:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18701,
                  "src": "10314:14:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18628,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10314:7:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10262:72:160"
            },
            "returnParameters": {
              "id": 18631,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10352:0:160"
            },
            "scope": 19020,
            "src": "10248:630:160",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18811,
              "nodeType": "Block",
              "src": "11201:738:160",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 18719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 18714,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18704,
                          "src": "11219:4:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 18717,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11235:1:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 18716,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11227:7:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 18715,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11227:7:160",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 18718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11227:10:160",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11219:18:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 18720,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11239:37:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
                          "typeString": "literal_string \"ERC1155: burn from the zero address\""
                        },
                        "value": "ERC1155: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
                          "typeString": "literal_string \"ERC1155: burn from the zero address\""
                        }
                      ],
                      "id": 18713,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11211:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11211:66:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18722,
                  "nodeType": "ExpressionStatement",
                  "src": "11211:66:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 18728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 18724,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18707,
                            "src": "11295:3:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 18725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "11295:10:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 18726,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18710,
                            "src": "11309:7:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 18727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "11309:14:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11295:28:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
                        "id": 18729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11325:42:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        },
                        "value": "ERC1155: ids and amounts length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
                          "typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
                        }
                      ],
                      "id": 18723,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11287:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11287:81:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18731,
                  "nodeType": "ExpressionStatement",
                  "src": "11287:81:160"
                },
                {
                  "assignments": [
                    18733
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 18733,
                      "mutability": "mutable",
                      "name": "operator",
                      "nameLocation": "11387:8:160",
                      "nodeType": "VariableDeclaration",
                      "scope": 18811,
                      "src": "11379:16:160",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 18732,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "11379:7:160",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 18736,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 18734,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26705,
                      "src": "11398:10:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 18735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11398:12:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11379:31:160"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 18738,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18733,
                        "src": "11442:8:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18739,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18704,
                        "src": "11452:4:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 18742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11466:1:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 18741,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11458:7:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18740,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11458:7:160",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11458:10:160",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18744,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18707,
                        "src": "11470:3:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 18745,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18710,
                        "src": "11475:7:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 18746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11484:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 18737,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18863,
                      "src": "11421:20:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
                      }
                    },
                    "id": 18747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11421:66:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18748,
                  "nodeType": "ExpressionStatement",
                  "src": "11421:66:160"
                },
                {
                  "body": {
                    "id": 18798,
                    "nodeType": "Block",
                    "src": "11539:323:160",
                    "statements": [
                      {
                        "assignments": [
                          18761
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 18761,
                            "mutability": "mutable",
                            "name": "id",
                            "nameLocation": "11561:2:160",
                            "nodeType": "VariableDeclaration",
                            "scope": 18798,
                            "src": "11553:10:160",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 18760,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11553:7:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 18765,
                        "initialValue": {
                          "baseExpression": {
                            "id": 18762,
                            "name": "ids",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18707,
                            "src": "11566:3:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 18764,
                          "indexExpression": {
                            "id": 18763,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18750,
                            "src": "11570:1:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11566:6:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11553:19:160"
                      },
                      {
                        "assignments": [
                          18767
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 18767,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "11594:6:160",
                            "nodeType": "VariableDeclaration",
                            "scope": 18798,
                            "src": "11586:14:160",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 18766,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11586:7:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 18771,
                        "initialValue": {
                          "baseExpression": {
                            "id": 18768,
                            "name": "amounts",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18710,
                            "src": "11603:7:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 18770,
                          "indexExpression": {
                            "id": 18769,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18750,
                            "src": "11611:1:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11603:10:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11586:27:160"
                      },
                      {
                        "assignments": [
                          18773
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 18773,
                            "mutability": "mutable",
                            "name": "fromBalance",
                            "nameLocation": "11636:11:160",
                            "nodeType": "VariableDeclaration",
                            "scope": 18798,
                            "src": "11628:19:160",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 18772,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11628:7:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 18779,
                        "initialValue": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 18774,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17950,
                              "src": "11650:9:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(uint256 => mapping(address => uint256))"
                              }
                            },
                            "id": 18776,
                            "indexExpression": {
                              "id": 18775,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18761,
                              "src": "11660:2:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11650:13:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 18778,
                          "indexExpression": {
                            "id": 18777,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18704,
                            "src": "11664:4:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11650:19:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11628:41:160"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 18783,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 18781,
                                "name": "fromBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18773,
                                "src": "11691:11:160",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 18782,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 18767,
                                "src": "11706:6:160",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11691:21:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
                              "id": 18784,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11714:38:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
                                "typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
                              },
                              "value": "ERC1155: burn amount exceeds balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
                                "typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
                              }
                            ],
                            "id": 18780,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11683:7:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 18785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11683:70:160",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 18786,
                        "nodeType": "ExpressionStatement",
                        "src": "11683:70:160"
                      },
                      {
                        "id": 18797,
                        "nodeType": "UncheckedBlock",
                        "src": "11767:85:160",
                        "statements": [
                          {
                            "expression": {
                              "id": 18795,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 18787,
                                    "name": "_balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 17950,
                                    "src": "11795:9:160",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                      "typeString": "mapping(uint256 => mapping(address => uint256))"
                                    }
                                  },
                                  "id": 18790,
                                  "indexExpression": {
                                    "id": 18788,
                                    "name": "id",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 18761,
                                    "src": "11805:2:160",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11795:13:160",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 18791,
                                "indexExpression": {
                                  "id": 18789,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18704,
                                  "src": "11809:4:160",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "11795:19:160",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 18794,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 18792,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18773,
                                  "src": "11817:11:160",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 18793,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18767,
                                  "src": "11831:6:160",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11817:20:160",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11795:42:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 18796,
                            "nodeType": "ExpressionStatement",
                            "src": "11795:42:160"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 18756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 18753,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18750,
                      "src": "11518:1:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 18754,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18707,
                        "src": "11522:3:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 18755,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "11522:10:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11518:14:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18799,
                  "initializationExpression": {
                    "assignments": [
                      18750
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 18750,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11511:1:160",
                        "nodeType": "VariableDeclaration",
                        "scope": 18799,
                        "src": "11503:9:160",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 18749,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11503:7:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 18752,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 18751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11515:1:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11503:13:160"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 18758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11534:3:160",
                      "subExpression": {
                        "id": 18757,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18750,
                        "src": "11534:1:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 18759,
                    "nodeType": "ExpressionStatement",
                    "src": "11534:3:160"
                  },
                  "nodeType": "ForStatement",
                  "src": "11498:364:160"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 18801,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18733,
                        "src": "11891:8:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18802,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18704,
                        "src": "11901:4:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 18805,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11915:1:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 18804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11907:7:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 18803,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11907:7:160",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 18806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11907:10:160",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18807,
                        "name": "ids",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18707,
                        "src": "11919:3:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 18808,
                        "name": "amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18710,
                        "src": "11924:7:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "id": 18800,
                      "name": "TransferBatch",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19054,
                      "src": "11877:13:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
                      }
                    },
                    "id": 18809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11877:55:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18810,
                  "nodeType": "EmitStatement",
                  "src": "11872:60:160"
                }
              ]
            },
            "documentation": {
              "id": 18702,
              "nodeType": "StructuredDocumentation",
              "src": "10884:183:160",
              "text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Requirements:\n - `ids` and `amounts` must have the same length."
            },
            "id": 18812,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burnBatch",
            "nameLocation": "11081:10:160",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18704,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11109:4:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18812,
                  "src": "11101:12:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11101:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18707,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "11140:3:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18812,
                  "src": "11123:20:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 18705,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11123:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 18706,
                    "nodeType": "ArrayTypeName",
                    "src": "11123:9:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18710,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "11170:7:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18812,
                  "src": "11153:24:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 18708,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11153:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 18709,
                    "nodeType": "ArrayTypeName",
                    "src": "11153:9:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11091:92:160"
            },
            "returnParameters": {
              "id": 18712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11201:0:160"
            },
            "scope": 19020,
            "src": "11072:867:160",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18843,
              "nodeType": "Block",
              "src": "12197:200:160",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 18825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 18823,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18815,
                          "src": "12215:5:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 18824,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18817,
                          "src": "12224:8:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12215:17:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
                        "id": 18826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12234:43:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
                          "typeString": "literal_string \"ERC1155: setting approval status for self\""
                        },
                        "value": "ERC1155: setting approval status for self"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
                          "typeString": "literal_string \"ERC1155: setting approval status for self\""
                        }
                      ],
                      "id": 18822,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12207:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 18827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12207:71:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18828,
                  "nodeType": "ExpressionStatement",
                  "src": "12207:71:160"
                },
                {
                  "expression": {
                    "id": 18835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 18829,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17956,
                          "src": "12288:18:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 18832,
                        "indexExpression": {
                          "id": 18830,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18815,
                          "src": "12307:5:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12288:25:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 18833,
                      "indexExpression": {
                        "id": 18831,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18817,
                        "src": "12314:8:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12288:35:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 18834,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18819,
                      "src": "12326:8:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "12288:46:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18836,
                  "nodeType": "ExpressionStatement",
                  "src": "12288:46:160"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 18838,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18815,
                        "src": "12364:5:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18839,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18817,
                        "src": "12371:8:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 18840,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18819,
                        "src": "12381:8:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 18837,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19063,
                      "src": "12349:14:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 18841,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12349:41:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 18842,
                  "nodeType": "EmitStatement",
                  "src": "12344:46:160"
                }
              ]
            },
            "documentation": {
              "id": 18813,
              "nodeType": "StructuredDocumentation",
              "src": "11945:124:160",
              "text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
            },
            "id": 18844,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setApprovalForAll",
            "nameLocation": "12083:18:160",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18815,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "12119:5:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18844,
                  "src": "12111:13:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18814,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12111:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18817,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "12142:8:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18844,
                  "src": "12134:16:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12134:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18819,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "12165:8:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18844,
                  "src": "12160:13:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 18818,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12160:4:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12101:78:160"
            },
            "returnParameters": {
              "id": 18821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12197:0:160"
            },
            "scope": 19020,
            "src": "12074:323:160",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18862,
              "nodeType": "Block",
              "src": "13543:2:160",
              "statements": []
            },
            "documentation": {
              "id": 18845,
              "nodeType": "StructuredDocumentation",
              "src": "12403:923:160",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 18863,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "13340:20:160",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18847,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "13378:8:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18863,
                  "src": "13370:16:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18846,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13370:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18849,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13404:4:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18863,
                  "src": "13396:12:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18848,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13396:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18851,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13426:2:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18863,
                  "src": "13418:10:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13418:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18854,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "13455:3:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18863,
                  "src": "13438:20:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 18852,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13438:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 18853,
                    "nodeType": "ArrayTypeName",
                    "src": "13438:9:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18857,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "13485:7:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18863,
                  "src": "13468:24:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 18855,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13468:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 18856,
                    "nodeType": "ArrayTypeName",
                    "src": "13468:9:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18859,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13515:4:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18863,
                  "src": "13502:17:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 18858,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13502:5:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13360:165:160"
            },
            "returnParameters": {
              "id": 18861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13543:0:160"
            },
            "scope": 19020,
            "src": "13331:214:160",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18925,
              "nodeType": "Block",
              "src": "13744:532:160",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 18878,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18869,
                        "src": "13758:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 18879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26050,
                      "src": "13758:13:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 18880,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13758:15:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18924,
                  "nodeType": "IfStatement",
                  "src": "13754:516:160",
                  "trueBody": {
                    "id": 18923,
                    "nodeType": "Block",
                    "src": "13775:495:160",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 18905,
                              "nodeType": "Block",
                              "src": "13892:184:160",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 18898,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 18894,
                                      "name": "response",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 18892,
                                      "src": "13914:8:160",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 18895,
                                          "name": "IERC1155Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 19183,
                                          "src": "13926:16:160",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$19183_$",
                                            "typeString": "type(contract IERC1155Receiver)"
                                          }
                                        },
                                        "id": 18896,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC1155Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 19164,
                                        "src": "13926:34:160",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 18897,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "13926:43:160",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "13914:55:160",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 18904,
                                  "nodeType": "IfStatement",
                                  "src": "13910:152:160",
                                  "trueBody": {
                                    "id": 18903,
                                    "nodeType": "Block",
                                    "src": "13971:91:160",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
                                              "id": 18900,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "14000:42:160",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              },
                                              "value": "ERC1155: ERC1155Receiver rejected tokens"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              }
                                            ],
                                            "id": 18899,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "13993:6:160",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 18901,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "13993:50:160",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 18902,
                                        "nodeType": "ExpressionStatement",
                                        "src": "13993:50:160"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 18906,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 18893,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 18892,
                                  "mutability": "mutable",
                                  "name": "response",
                                  "nameLocation": "13882:8:160",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 18906,
                                  "src": "13875:15:160",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 18891,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13875:6:160",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "13874:17:160"
                            },
                            "src": "13866:210:160"
                          },
                          {
                            "block": {
                              "id": 18914,
                              "nodeType": "Block",
                              "src": "14111:47:160",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 18911,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 18908,
                                        "src": "14136:6:160",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 18910,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "14129:6:160",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 18912,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14129:14:160",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 18913,
                                  "nodeType": "ExpressionStatement",
                                  "src": "14129:14:160"
                                }
                              ]
                            },
                            "errorName": "Error",
                            "id": 18915,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 18909,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 18908,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "14103:6:160",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 18915,
                                  "src": "14089:20:160",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 18907,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14089:6:160",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "14088:22:160"
                            },
                            "src": "14077:81:160"
                          },
                          {
                            "block": {
                              "id": 18920,
                              "nodeType": "Block",
                              "src": "14165:95:160",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
                                        "id": 18917,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "14190:54:160",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        },
                                        "value": "ERC1155: transfer to non ERC1155Receiver implementer"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        }
                                      ],
                                      "id": 18916,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "14183:6:160",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 18918,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14183:62:160",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 18919,
                                  "nodeType": "ExpressionStatement",
                                  "src": "14183:62:160"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 18921,
                            "nodeType": "TryCatchClause",
                            "src": "14159:101:160"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 18885,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18865,
                              "src": "13832:8:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 18886,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18867,
                              "src": "13842:4:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 18887,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18871,
                              "src": "13848:2:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 18888,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18873,
                              "src": "13852:6:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 18889,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18875,
                              "src": "13860:4:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 18882,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18869,
                                  "src": "13810:2:160",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 18881,
                                "name": "IERC1155Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19183,
                                "src": "13793:16:160",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$19183_$",
                                  "typeString": "type(contract IERC1155Receiver)"
                                }
                              },
                              "id": 18883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13793:20:160",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155Receiver_$19183",
                                "typeString": "contract IERC1155Receiver"
                              }
                            },
                            "id": 18884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC1155Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19164,
                            "src": "13793:38:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 18890,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13793:72:160",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 18922,
                        "nodeType": "TryStatement",
                        "src": "13789:471:160"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 18926,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_doSafeTransferAcceptanceCheck",
            "nameLocation": "13560:30:160",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18865,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "13608:8:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18926,
                  "src": "13600:16:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18864,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13600:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18867,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13634:4:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18926,
                  "src": "13626:12:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18866,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13626:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18869,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13656:2:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18926,
                  "src": "13648:10:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18868,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13648:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18871,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "13676:2:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18926,
                  "src": "13668:10:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18870,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13668:7:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18873,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13696:6:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18926,
                  "src": "13688:14:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18872,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13688:7:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18875,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "13725:4:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18926,
                  "src": "13712:17:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 18874,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13712:5:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13590:145:160"
            },
            "returnParameters": {
              "id": 18877,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13744:0:160"
            },
            "scope": 19020,
            "src": "13551:725:160",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 18990,
              "nodeType": "Block",
              "src": "14500:574:160",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 18943,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 18932,
                        "src": "14514:2:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 18944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26050,
                      "src": "14514:13:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 18945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14514:15:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 18989,
                  "nodeType": "IfStatement",
                  "src": "14510:558:160",
                  "trueBody": {
                    "id": 18988,
                    "nodeType": "Block",
                    "src": "14531:537:160",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 18970,
                              "nodeType": "Block",
                              "src": "14685:189:160",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 18963,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 18959,
                                      "name": "response",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 18957,
                                      "src": "14707:8:160",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 18960,
                                          "name": "IERC1155Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 19183,
                                          "src": "14719:16:160",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$19183_$",
                                            "typeString": "type(contract IERC1155Receiver)"
                                          }
                                        },
                                        "id": 18961,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC1155BatchReceived",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 19182,
                                        "src": "14719:39:160",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 18962,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "14719:48:160",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "14707:60:160",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "id": 18969,
                                  "nodeType": "IfStatement",
                                  "src": "14703:157:160",
                                  "trueBody": {
                                    "id": 18968,
                                    "nodeType": "Block",
                                    "src": "14769:91:160",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
                                              "id": 18965,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "14798:42:160",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              },
                                              "value": "ERC1155: ERC1155Receiver rejected tokens"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
                                                "typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
                                              }
                                            ],
                                            "id": 18964,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "14791:6:160",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 18966,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "14791:50:160",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 18967,
                                        "nodeType": "ExpressionStatement",
                                        "src": "14791:50:160"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 18971,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 18958,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 18957,
                                  "mutability": "mutable",
                                  "name": "response",
                                  "nameLocation": "14662:8:160",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 18971,
                                  "src": "14655:15:160",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 18956,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14655:6:160",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "14637:47:160"
                            },
                            "src": "14629:245:160"
                          },
                          {
                            "block": {
                              "id": 18979,
                              "nodeType": "Block",
                              "src": "14909:47:160",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 18976,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 18973,
                                        "src": "14934:6:160",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "id": 18975,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "14927:6:160",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 18977,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14927:14:160",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 18978,
                                  "nodeType": "ExpressionStatement",
                                  "src": "14927:14:160"
                                }
                              ]
                            },
                            "errorName": "Error",
                            "id": 18980,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 18974,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 18973,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "14901:6:160",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 18980,
                                  "src": "14887:20:160",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 18972,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14887:6:160",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "14886:22:160"
                            },
                            "src": "14875:81:160"
                          },
                          {
                            "block": {
                              "id": 18985,
                              "nodeType": "Block",
                              "src": "14963:95:160",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "hexValue": "455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572",
                                        "id": 18982,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "14988:54:160",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        },
                                        "value": "ERC1155: transfer to non ERC1155Receiver implementer"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_00aa752fb1526000e5241602affc3d70ef506da48a27ea57140102b439e655ed",
                                          "typeString": "literal_string \"ERC1155: transfer to non ERC1155Receiver implementer\""
                                        }
                                      ],
                                      "id": 18981,
                                      "name": "revert",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        -19,
                                        -19
                                      ],
                                      "referencedDeclaration": -19,
                                      "src": "14981:6:160",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                        "typeString": "function (string memory) pure"
                                      }
                                    },
                                    "id": 18983,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14981:62:160",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 18984,
                                  "nodeType": "ExpressionStatement",
                                  "src": "14981:62:160"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 18986,
                            "nodeType": "TryCatchClause",
                            "src": "14957:101:160"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 18950,
                              "name": "operator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18928,
                              "src": "14593:8:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 18951,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18930,
                              "src": "14603:4:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 18952,
                              "name": "ids",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18935,
                              "src": "14609:3:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 18953,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18938,
                              "src": "14614:7:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            {
                              "id": 18954,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18940,
                              "src": "14623:4:160",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 18947,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18932,
                                  "src": "14566:2:160",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 18946,
                                "name": "IERC1155Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 19183,
                                "src": "14549:16:160",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$19183_$",
                                  "typeString": "type(contract IERC1155Receiver)"
                                }
                              },
                              "id": 18948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14549:20:160",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1155Receiver_$19183",
                                "typeString": "contract IERC1155Receiver"
                              }
                            },
                            "id": 18949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC1155BatchReceived",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19182,
                            "src": "14549:43:160",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 18955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14549:79:160",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 18987,
                        "nodeType": "TryStatement",
                        "src": "14545:513:160"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 18991,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_doSafeBatchTransferAcceptanceCheck",
            "nameLocation": "14291:35:160",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18928,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "14344:8:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18991,
                  "src": "14336:16:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18927,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14336:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18930,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14370:4:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18991,
                  "src": "14362:12:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18929,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14362:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18932,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14392:2:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18991,
                  "src": "14384:10:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14384:7:160",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18935,
                  "mutability": "mutable",
                  "name": "ids",
                  "nameLocation": "14421:3:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18991,
                  "src": "14404:20:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 18933,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "14404:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 18934,
                    "nodeType": "ArrayTypeName",
                    "src": "14404:9:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18938,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "14451:7:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18991,
                  "src": "14434:24:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 18936,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "14434:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 18937,
                    "nodeType": "ArrayTypeName",
                    "src": "14434:9:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18940,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "14481:4:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 18991,
                  "src": "14468:17:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 18939,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14468:5:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14326:165:160"
            },
            "returnParameters": {
              "id": 18942,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14500:0:160"
            },
            "scope": 19020,
            "src": "14282:792:160",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 19018,
              "nodeType": "Block",
              "src": "15164:109:160",
              "statements": [
                {
                  "assignments": [
                    19003
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19003,
                      "mutability": "mutable",
                      "name": "array",
                      "nameLocation": "15191:5:160",
                      "nodeType": "VariableDeclaration",
                      "scope": 19018,
                      "src": "15174:22:160",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 19001,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15174:7:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 19002,
                        "nodeType": "ArrayTypeName",
                        "src": "15174:9:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 19009,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 19007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15213:1:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 19006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "15199:13:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 19004,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "15203:7:160",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 19005,
                        "nodeType": "ArrayTypeName",
                        "src": "15203:9:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 19008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15199:16:160",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15174:41:160"
                },
                {
                  "expression": {
                    "id": 19014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 19010,
                        "name": "array",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19003,
                        "src": "15225:5:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 19012,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 19011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15231:1:160",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "15225:8:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 19013,
                      "name": "element",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18993,
                      "src": "15236:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15225:18:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 19015,
                  "nodeType": "ExpressionStatement",
                  "src": "15225:18:160"
                },
                {
                  "expression": {
                    "id": 19016,
                    "name": "array",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19003,
                    "src": "15261:5:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 18998,
                  "id": 19017,
                  "nodeType": "Return",
                  "src": "15254:12:160"
                }
              ]
            },
            "id": 19019,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_asSingletonArray",
            "nameLocation": "15089:17:160",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 18994,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18993,
                  "mutability": "mutable",
                  "name": "element",
                  "nameLocation": "15115:7:160",
                  "nodeType": "VariableDeclaration",
                  "scope": 19019,
                  "src": "15107:15:160",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 18992,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15107:7:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15106:17:160"
            },
            "returnParameters": {
              "id": 18998,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 18997,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19019,
                  "src": "15146:16:160",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 18995,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "15146:7:160",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 18996,
                    "nodeType": "ArrayTypeName",
                    "src": "15146:9:160",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15145:18:160"
            },
            "scope": 19020,
            "src": "15080:193:160",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 19021,
        "src": "555:14720:160",
        "usedErrors": []
      }
    ],
    "src": "94:15182:160"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620016043803806200160483398101604081905262000034916200011b565b6200003f8162000046565b5062000234565b80516200005b9060029060208401906200005f565b5050565b8280546200006d90620001f7565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200012f57600080fd5b82516001600160401b03808211156200014757600080fd5b818501915085601f8301126200015c57600080fd5b81518181111562000171576200017162000105565b604051601f8201601f19908116603f011681019083821181831017156200019c576200019c62000105565b816040528281528886848701011115620001b557600080fd5b600093505b82841015620001d95784840186015181850187015292850192620001ba565b82841115620001eb5760008684830101525b98975050505050505050565b600181811c908216806200020c57607f821691505b602082108114156200022e57634e487b7160e01b600052602260045260246000fd5b50919050565b6113c080620002446000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610bc2565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610c05565b610223565b60405190151581526020016100a9565b6100e86100e3366004610c29565b610275565b6040516100a99190610c8f565b610108610103366004610dee565b610309565b005b61011d610118366004610e98565b6103a0565b6040516100a99190610f9e565b610108610138366004610fb1565b6104ca565b6100c561014b366004610fed565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004611020565b6104d9565b60006001600160a01b0383166101fd5760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061025457506001600160e01b031982166303a24d0760e21b145b8061026f57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606002805461028490611085565b80601f01602080910402602001604051908101604052809291908181526020018280546102b090611085565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103255750610325853361014b565b61038c5760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016101f4565b6103998585858585610560565b5050505050565b606081518351146104055760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f4565b6000835167ffffffffffffffff81111561042157610421610ca2565b60405190808252806020026020018201604052801561044a578160200160208202803683370190505b50905060005b84518110156104c25761049585828151811061046e5761046e6110c0565b6020026020010151858381518110610488576104886110c0565b602002602001015161018c565b8282815181106104a7576104a76110c0565b60209081029190910101526104bb816110ec565b9050610450565b509392505050565b6104d533838361073d565b5050565b6001600160a01b0385163314806104f557506104f5853361014b565b6105535760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016101f4565b610399858585858561081e565b81518351146105c25760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f4565b6001600160a01b0384166105e85760405162461bcd60e51b81526004016101f490611107565b3360005b84518110156106cf576000858281518110610609576106096110c0565b602002602001015190506000858381518110610627576106276110c0565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156106775760405162461bcd60e51b81526004016101f49061114c565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906106b4908490611196565b92505081905550505050806106c8906110ec565b90506105ec565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161071f9291906111ae565b60405180910390a4610735818787878787610944565b505050505050565b816001600160a01b0316836001600160a01b031614156107b15760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f4565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166108445760405162461bcd60e51b81526004016101f490611107565b3361085d81878761085488610aa0565b61039988610aa0565b6000848152602081815260408083206001600160a01b038a1684529091529020548381101561089e5760405162461bcd60e51b81526004016101f49061114c565b6000858152602081815260408083206001600160a01b038b81168552925280832087850390559088168252812080548692906108db908490611196565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a461093b828888888888610aeb565b50505050505050565b6001600160a01b0384163b156107355760405163bc197c8160e01b81526001600160a01b0385169063bc197c819061098890899089908890889088906004016111dc565b6020604051808303816000875af19250505080156109c3575060408051601f3d908101601f191682019092526109c09181019061123a565b60015b610a70576109cf611257565b806308c379a01415610a0957506109e4611273565b806109ef5750610a0b565b8060405162461bcd60e51b81526004016101f49190610c8f565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f4565b6001600160e01b0319811663bc197c8160e01b1461093b5760405162461bcd60e51b81526004016101f4906112fd565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610ada57610ada6110c0565b602090810291909101015292915050565b6001600160a01b0384163b156107355760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610b2f9089908990889088908890600401611345565b6020604051808303816000875af1925050508015610b6a575060408051601f3d908101601f19168201909252610b679181019061123a565b60015b610b76576109cf611257565b6001600160e01b0319811663f23a6e6160e01b1461093b5760405162461bcd60e51b81526004016101f4906112fd565b80356001600160a01b0381168114610bbd57600080fd5b919050565b60008060408385031215610bd557600080fd5b610bde83610ba6565b946020939093013593505050565b6001600160e01b031981168114610c0257600080fd5b50565b600060208284031215610c1757600080fd5b8135610c2281610bec565b9392505050565b600060208284031215610c3b57600080fd5b5035919050565b6000815180845260005b81811015610c6857602081850181015186830182015201610c4c565b81811115610c7a576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610c226020830184610c42565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610cde57610cde610ca2565b6040525050565b600067ffffffffffffffff821115610cff57610cff610ca2565b5060051b60200190565b600082601f830112610d1a57600080fd5b81356020610d2782610ce5565b604051610d348282610cb8565b83815260059390931b8501820192828101915086841115610d5457600080fd5b8286015b84811015610d6f5780358352918301918301610d58565b509695505050505050565b600082601f830112610d8b57600080fd5b813567ffffffffffffffff811115610da557610da5610ca2565b604051610dbc601f8301601f191660200182610cb8565b818152846020838601011115610dd157600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610e0657600080fd5b610e0f86610ba6565b9450610e1d60208701610ba6565b9350604086013567ffffffffffffffff80821115610e3a57600080fd5b610e4689838a01610d09565b94506060880135915080821115610e5c57600080fd5b610e6889838a01610d09565b93506080880135915080821115610e7e57600080fd5b50610e8b88828901610d7a565b9150509295509295909350565b60008060408385031215610eab57600080fd5b823567ffffffffffffffff80821115610ec357600080fd5b818501915085601f830112610ed757600080fd5b81356020610ee482610ce5565b604051610ef18282610cb8565b83815260059390931b8501820192828101915089841115610f1157600080fd5b948201945b83861015610f3657610f2786610ba6565b82529482019490820190610f16565b96505086013592505080821115610f4c57600080fd5b50610f5985828601610d09565b9150509250929050565b600081518084526020808501945080840160005b83811015610f9357815187529582019590820190600101610f77565b509495945050505050565b602081526000610c226020830184610f63565b60008060408385031215610fc457600080fd5b610fcd83610ba6565b915060208301358015158114610fe257600080fd5b809150509250929050565b6000806040838503121561100057600080fd5b61100983610ba6565b915061101760208401610ba6565b90509250929050565b600080600080600060a0868803121561103857600080fd5b61104186610ba6565b945061104f60208701610ba6565b93506040860135925060608601359150608086013567ffffffffffffffff81111561107957600080fd5b610e8b88828901610d7a565b600181811c9082168061109957607f821691505b602082108114156110ba57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611100576111006110d6565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b600082198211156111a9576111a96110d6565b500190565b6040815260006111c16040830185610f63565b82810360208401526111d38185610f63565b95945050505050565b6001600160a01b0386811682528516602082015260a06040820181905260009061120890830186610f63565b828103606084015261121a8186610f63565b9050828103608084015261122e8185610c42565b98975050505050505050565b60006020828403121561124c57600080fd5b8151610c2281610bec565b600060033d11156112705760046000803e5060005160e01c5b90565b600060443d10156112815790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156112b157505050505090565b82850191508151818111156112c95750505050505090565b843d87010160208285010111156112e35750505050505090565b6112f260208286010187610cb8565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061137f90830184610c42565b97965050505050505056fea264697066735822122080eaecb2f09e55f269945f2e263755cd1894f0a8ddf2b558318e26cd7d4b858c64736f6c634300080c0033",
  "bytecodeSha1": "92433770588be068d92115cc5c03076063623682",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "ERC1155",
  "coverageMap": {
    "branches": {
      "160": {
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "53": [
            14707,
            14767,
            false
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "54": [
            13914,
            13969,
            false
          ]
        },
        "ERC1155._safeBatchTransferFrom": {
          "47": [
            6274,
            6302,
            true
          ],
          "48": [
            6365,
            6381,
            true
          ],
          "49": [
            6740,
            6761,
            true
          ]
        },
        "ERC1155._safeTransferFrom": {
          "51": [
            5106,
            5122,
            true
          ],
          "52": [
            5383,
            5404,
            true
          ]
        },
        "ERC1155._setApprovalForAll": {
          "50": [
            12215,
            12232,
            true
          ]
        },
        "ERC1155.balanceOf": {
          "41": [
            2283,
            2304,
            true
          ]
        },
        "ERC1155.balanceOfBatch": {
          "44": [
            2746,
            2775,
            true
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "42": [
            4270,
            4290,
            true
          ],
          "43": [
            4294,
            4330,
            true
          ]
        },
        "ERC1155.safeTransferFrom": {
          "45": [
            3784,
            3804,
            true
          ],
          "46": [
            3808,
            3844,
            true
          ]
        }
      },
      "161": {},
      "162": {},
      "166": {},
      "206": {},
      "210": {},
      "224": {},
      "228": {}
    },
    "statements": {
      "160": {
        "ERC1155._asSingletonArray": {
          "38": [
            15225,
            15243
          ],
          "39": [
            15254,
            15266
          ]
        },
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "35": [
            14927,
            14941
          ],
          "36": [
            14981,
            15043
          ],
          "37": [
            14791,
            14841
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "40": [
            13993,
            14043
          ]
        },
        "ERC1155._safeBatchTransferFrom": {
          "16": [
            6266,
            6347
          ],
          "17": [
            6357,
            6423
          ],
          "18": [
            6732,
            6808
          ],
          "19": [
            6850,
            6892
          ],
          "20": [
            6920,
            6947
          ],
          "21": [
            6583,
            6586
          ],
          "22": [
            6968,
            7020
          ],
          "23": [
            7031,
            7106
          ]
        },
        "ERC1155._safeTransferFrom": {
          "27": [
            5098,
            5164
          ],
          "28": [
            5217,
            5313
          ],
          "29": [
            5375,
            5451
          ],
          "30": [
            5485,
            5527
          ],
          "31": [
            5547,
            5574
          ],
          "32": [
            5585,
            5636
          ],
          "33": [
            5647,
            5715
          ]
        },
        "ERC1155._setApprovalForAll": {
          "24": [
            12207,
            12278
          ],
          "25": [
            12288,
            12334
          ],
          "26": [
            12344,
            12390
          ]
        },
        "ERC1155.balanceOf": {
          "1": [
            2275,
            2352
          ],
          "2": [
            2362,
            2391
          ]
        },
        "ERC1155.balanceOfBatch": {
          "9": [
            2738,
            2821
          ],
          "10": [
            2966,
            3015
          ],
          "11": [
            2947,
            2950
          ],
          "12": [
            3036,
            3056
          ]
        },
        "ERC1155.isApprovedForAll": {
          "0": [
            3466,
            3510
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "6": [
            4249,
            4406
          ],
          "8": [
            4416,
            4468
          ]
        },
        "ERC1155.safeTransferFrom": {
          "14": [
            3763,
            3911
          ],
          "15": [
            3921,
            3966
          ]
        },
        "ERC1155.setApprovalForAll": {
          "13": [
            3225,
            3277
          ]
        },
        "ERC1155.supportsInterface": {
          "3": [
            1339,
            1519
          ]
        },
        "ERC1155.uri": {
          "5": [
            2010,
            2021
          ]
        }
      },
      "161": {},
      "162": {},
      "166": {},
      "206": {
        "Address.isContract": {
          "34": [
            1458,
            1488
          ]
        }
      },
      "210": {
        "Context._msgSender": {
          "7": [
            712,
            729
          ]
        }
      },
      "224": {
        "ERC165.supportsInterface": {
          "4": [
            930,
            977
          ]
        }
      },
      "228": {}
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "ERC165",
    "IERC1155",
    "IERC1155MetadataURI",
    "IERC1155Receiver",
    "IERC165"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "555:14720:160:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2170:228;;;;;;:::i;:::-;;:::i;:::-;;;597:25:239;;;585:2;570:18;2170:228:160;;;;;;;;1221:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:239;;1177:22;1159:41;;1147:2;1132:18;1221:305:160;1019:187:239;1925:103:160;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4045:430::-;;;;;;:::i;:::-;;:::i;:::-;;2555:508;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3131:153::-;;;;;;:::i;:::-;;:::i;3351:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3473:27:160;;;3450:4;3473:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3351:166;3584:389;;;;;;:::i;:::-;;:::i;2170:228::-;2256:7;-1:-1:-1;;;;;2283:21:160;;2275:77;;;;-1:-1:-1;;;2275:77:160;;8258:2:239;2275:77:160;;;8240:21:239;8297:2;8277:18;;;8270:30;8336:34;8316:18;;;8309:62;-1:-1:-1;;;8387:18:239;;;8380:41;8438:19;;2275:77:160;;;;;;;;;-1:-1:-1;2369:9:160;:13;;;;;;;;;;;-1:-1:-1;;;;;2369:22:160;;;;;;;;;;;;2170:228::o;1221:305::-;1323:4;-1:-1:-1;;;;;;1358:41:160;;-1:-1:-1;;;1358:41:160;;:109;;-1:-1:-1;;;;;;;1415:52:160;;-1:-1:-1;;;1415:52:160;1358:109;:161;;;-1:-1:-1;;;;;;;;;;937:40:224;;;1483:36:160;1339:180;1221:305;-1:-1:-1;;1221:305:160:o;1925:103::-;1985:13;2017:4;2010:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1925:103;;;:::o;4045:430::-;-1:-1:-1;;;;;4270:20:160;;719:10:210;4270:20:160;;:60;;-1:-1:-1;4294:36:160;4311:4;719:10:210;3351:166:160;:::i;4294:36::-;4249:157;;;;-1:-1:-1;;;4249:157:160;;9055:2:239;4249:157:160;;;9037:21:239;9094:2;9074:18;;;9067:30;9133:34;9113:18;;;9106:62;-1:-1:-1;;;9184:18:239;;;9177:48;9242:19;;4249:157:160;8853:414:239;4249:157:160;4416:52;4439:4;4445:2;4449:3;4454:7;4463:4;4416:22;:52::i;:::-;4045:430;;;;;:::o;2555:508::-;2706:16;2765:3;:10;2746:8;:15;:29;2738:83;;;;-1:-1:-1;;;2738:83:160;;9474:2:239;2738:83:160;;;9456:21:239;9513:2;9493:18;;;9486:30;9552:34;9532:18;;;9525:62;-1:-1:-1;;;9603:18:239;;;9596:39;9652:19;;2738:83:160;9272:405:239;2738:83:160;2832:30;2879:8;:15;2865:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2865:30:160;;2832:63;;2911:9;2906:120;2930:8;:15;2926:1;:19;2906:120;;;2985:30;2995:8;3004:1;2995:11;;;;;;;;:::i;:::-;;;;;;;3008:3;3012:1;3008:6;;;;;;;;:::i;:::-;;;;;;;2985:9;:30::i;:::-;2966:13;2980:1;2966:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2947:3;;;:::i;:::-;;;2906:120;;;-1:-1:-1;3043:13:160;2555:508;-1:-1:-1;;;2555:508:160:o;3131:153::-;3225:52;719:10:210;3258:8:160;3268;3225:18;:52::i;:::-;3131:153;;:::o;3584:389::-;-1:-1:-1;;;;;3784:20:160;;719:10:210;3784:20:160;;:60;;-1:-1:-1;3808:36:160;3825:4;719:10:210;3351:166:160;:::i;3808:36::-;3763:148;;;;-1:-1:-1;;;3763:148:160;;10288:2:239;3763:148:160;;;10270:21:239;10327:2;10307:18;;;10300:30;10366:34;10346:18;;;10339:62;-1:-1:-1;;;10417:18:239;;;10410:39;10466:19;;3763:148:160;10086:405:239;3763:148:160;3921:45;3939:4;3945:2;3949;3953:6;3961:4;3921:17;:45::i;6068:1045::-;6288:7;:14;6274:3;:10;:28;6266:81;;;;-1:-1:-1;;;6266:81:160;;10698:2:239;6266:81:160;;;10680:21:239;10737:2;10717:18;;;10710:30;10776:34;10756:18;;;10749:62;-1:-1:-1;;;10827:18:239;;;10820:38;10875:19;;6266:81:160;10496:404:239;6266:81:160;-1:-1:-1;;;;;6365:16:160;;6357:66;;;;-1:-1:-1;;;6357:66:160;;;;;;;:::i;:::-;719:10:210;6434:16:160;6547:411;6571:3;:10;6567:1;:14;6547:411;;;6602:10;6615:3;6619:1;6615:6;;;;;;;;:::i;:::-;;;;;;;6602:19;;6635:14;6652:7;6660:1;6652:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6677:19;6699:13;;;;;;;;;;-1:-1:-1;;;;;6699:19:160;;;;;;;;;;;;6652:10;;-1:-1:-1;6740:21:160;;;;6732:76;;;;-1:-1:-1;;;6732:76:160;;;;;;;:::i;:::-;6850:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6850:19:160;;;;;;;;;;6872:20;;;6850:42;;6920:17;;;;;;;:27;;6872:20;;6850:9;6920:27;;6872:20;;6920:27;:::i;:::-;;;;;;;;6588:370;;;6583:3;;;;:::i;:::-;;;6547:411;;;;7003:2;-1:-1:-1;;;;;6973:47:160;6997:4;-1:-1:-1;;;;;6973:47:160;6987:8;-1:-1:-1;;;;;6973:47:160;;7007:3;7012:7;6973:47;;;;;;;:::i;:::-;;;;;;;;7031:75;7067:8;7077:4;7083:2;7087:3;7092:7;7101:4;7031:35;:75::i;:::-;6256:857;6068:1045;;;;;:::o;12074:323::-;12224:8;-1:-1:-1;;;;;12215:17:160;:5;-1:-1:-1;;;;;12215:17:160;;;12207:71;;;;-1:-1:-1;;;12207:71:160;;12527:2:239;12207:71:160;;;12509:21:239;12566:2;12546:18;;;12539:30;12605:34;12585:18;;;12578:62;-1:-1:-1;;;12656:18:239;;;12649:39;12705:19;;12207:71:160;12325:405:239;12207:71:160;-1:-1:-1;;;;;12288:25:160;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;12288:46:160;;;;;;;;;;12349:41;;1159::239;;;12349::160;;1132:18:239;12349:41:160;;;;;;;12074:323;;;:::o;4925:797::-;-1:-1:-1;;;;;5106:16:160;;5098:66;;;;-1:-1:-1;;;5098:66:160;;;;;;;:::i;:::-;719:10:210;5217:96:160;719:10:210;5248:4:160;5254:2;5258:21;5276:2;5258:17;:21::i;:::-;5281:25;5299:6;5281:17;:25::i;5217:96::-;5324:19;5346:13;;;;;;;;;;;-1:-1:-1;;;;;5346:19:160;;;;;;;;;;5383:21;;;;5375:76;;;;-1:-1:-1;;;5375:76:160;;;;;;;:::i;:::-;5485:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5485:19:160;;;;;;;;;;5507:20;;;5485:42;;5547:17;;;;;;;:27;;5507:20;;5485:9;5547:27;;5507:20;;5547:27;:::i;:::-;;;;-1:-1:-1;;5590:46:160;;;12909:25:239;;;12965:2;12950:18;;12943:34;;;-1:-1:-1;;;;;5590:46:160;;;;;;;;;;;;;;12882:18:239;5590:46:160;;;;;;;5647:68;5678:8;5688:4;5694:2;5698;5702:6;5710:4;5647:30;:68::i;:::-;5088:634;;4925:797;;;;;:::o;14282:792::-;-1:-1:-1;;;;;14514:13:160;;1465:19:206;:23;14510:558:160;;14549:79;;-1:-1:-1;;;14549:79:160;;-1:-1:-1;;;;;14549:43:160;;;;;:79;;14593:8;;14603:4;;14609:3;;14614:7;;14623:4;;14549:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14549:79:160;;;;;;;;-1:-1:-1;;14549:79:160;;;;;;;;;;;;:::i;:::-;;;14545:513;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;14934:6;14927:14;;-1:-1:-1;;;14927:14:160;;;;;;;;:::i;14545:513::-;;;14981:62;;-1:-1:-1;;;14981:62:160;;15136:2:239;14981:62:160;;;15118:21:239;15175:2;15155:18;;;15148:30;15214:34;15194:18;;;15187:62;-1:-1:-1;;;15265:18:239;;;15258:50;15325:19;;14981:62:160;14934:416:239;14545:513:160;-1:-1:-1;;;;;;14707:60:160;;-1:-1:-1;;;14707:60:160;14703:157;;14791:50;;-1:-1:-1;;;14791:50:160;;;;;;;:::i;15080:193::-;15199:16;;;15213:1;15199:16;;;;;;;;;15146;;15174:22;;15199:16;;;;;;;;;;;;-1:-1:-1;15199:16:160;15174:41;;15236:7;15225:5;15231:1;15225:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;15261:5;15080:193;-1:-1:-1;;15080:193:160:o;13551:725::-;-1:-1:-1;;;;;13758:13:160;;1465:19:206;:23;13754:516:160;;13793:72;;-1:-1:-1;;;13793:72:160;;-1:-1:-1;;;;;13793:38:160;;;;;:72;;13832:8;;13842:4;;13848:2;;13852:6;;13860:4;;13793:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13793:72:160;;;;;;;;-1:-1:-1;;13793:72:160;;;;;;;;;;;;:::i;:::-;;;13789:471;;;;:::i;:::-;-1:-1:-1;;;;;;13914:55:160;;-1:-1:-1;;;13914:55:160;13910:152;;13993:50;;-1:-1:-1;;;13993:50:160;;;;;;;:::i;14:173:239:-;82:20;;-1:-1:-1;;;;;131:31:239;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:239:o;633:131::-;-1:-1:-1;;;;;;707:32:239;;697:43;;687:71;;754:1;751;744:12;687:71;633:131;:::o;769:245::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:239:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:239;;1211:180;-1:-1:-1;1211:180:239:o;1396:472::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1718:6;1715:1;1712:13;1709:87;;;1784:1;1777:4;1768:6;1763:3;1759:16;1755:27;1748:38;1709:87;-1:-1:-1;1850:2:239;1829:15;-1:-1:-1;;1825:29:239;1816:39;;;;1857:4;1812:50;;1396:472;-1:-1:-1;;1396:472:239:o;1873:220::-;2022:2;2011:9;2004:21;1985:4;2042:45;2083:2;2072:9;2068:18;2060:6;2042:45;:::i;2098:127::-;2159:10;2154:3;2150:20;2147:1;2140:31;2190:4;2187:1;2180:15;2214:4;2211:1;2204:15;2230:249;2340:2;2321:13;;-1:-1:-1;;2317:27:239;2305:40;;2375:18;2360:34;;2396:22;;;2357:62;2354:88;;;2422:18;;:::i;:::-;2458:2;2451:22;-1:-1:-1;;2230:249:239:o;2484:183::-;2544:4;2577:18;2569:6;2566:30;2563:56;;;2599:18;;:::i;:::-;-1:-1:-1;2644:1:239;2640:14;2656:4;2636:25;;2484:183::o;2672:724::-;2726:5;2779:3;2772:4;2764:6;2760:17;2756:27;2746:55;;2797:1;2794;2787:12;2746:55;2833:6;2820:20;2859:4;2882:43;2922:2;2882:43;:::i;:::-;2954:2;2948:9;2966:31;2994:2;2986:6;2966:31;:::i;:::-;3032:18;;;3124:1;3120:10;;;;3108:23;;3104:32;;;3066:15;;;;-1:-1:-1;3148:15:239;;;3145:35;;;3176:1;3173;3166:12;3145:35;3212:2;3204:6;3200:15;3224:142;3240:6;3235:3;3232:15;3224:142;;;3306:17;;3294:30;;3344:12;;;;3257;;3224:142;;;-1:-1:-1;3384:6:239;2672:724;-1:-1:-1;;;;;;2672:724:239:o;3401:555::-;3443:5;3496:3;3489:4;3481:6;3477:17;3473:27;3463:55;;3514:1;3511;3504:12;3463:55;3550:6;3537:20;3576:18;3572:2;3569:26;3566:52;;;3598:18;;:::i;:::-;3647:2;3641:9;3659:67;3714:2;3695:13;;-1:-1:-1;;3691:27:239;3720:4;3687:38;3641:9;3659:67;:::i;:::-;3750:2;3742:6;3735:18;3796:3;3789:4;3784:2;3776:6;3772:15;3768:26;3765:35;3762:55;;;3813:1;3810;3803:12;3762:55;3877:2;3870:4;3862:6;3858:17;3851:4;3843:6;3839:17;3826:54;3924:1;3900:15;;;3917:4;3896:26;3889:37;;;;3904:6;3401:555;-1:-1:-1;;;3401:555:239:o;3961:943::-;4115:6;4123;4131;4139;4147;4200:3;4188:9;4179:7;4175:23;4171:33;4168:53;;;4217:1;4214;4207:12;4168:53;4240:29;4259:9;4240:29;:::i;:::-;4230:39;;4288:38;4322:2;4311:9;4307:18;4288:38;:::i;:::-;4278:48;;4377:2;4366:9;4362:18;4349:32;4400:18;4441:2;4433:6;4430:14;4427:34;;;4457:1;4454;4447:12;4427:34;4480:61;4533:7;4524:6;4513:9;4509:22;4480:61;:::i;:::-;4470:71;;4594:2;4583:9;4579:18;4566:32;4550:48;;4623:2;4613:8;4610:16;4607:36;;;4639:1;4636;4629:12;4607:36;4662:63;4717:7;4706:8;4695:9;4691:24;4662:63;:::i;:::-;4652:73;;4778:3;4767:9;4763:19;4750:33;4734:49;;4808:2;4798:8;4795:16;4792:36;;;4824:1;4821;4814:12;4792:36;;4847:51;4890:7;4879:8;4868:9;4864:24;4847:51;:::i;:::-;4837:61;;;3961:943;;;;;;;;:::o;4909:1208::-;5027:6;5035;5088:2;5076:9;5067:7;5063:23;5059:32;5056:52;;;5104:1;5101;5094:12;5056:52;5144:9;5131:23;5173:18;5214:2;5206:6;5203:14;5200:34;;;5230:1;5227;5220:12;5200:34;5268:6;5257:9;5253:22;5243:32;;5313:7;5306:4;5302:2;5298:13;5294:27;5284:55;;5335:1;5332;5325:12;5284:55;5371:2;5358:16;5393:4;5416:43;5456:2;5416:43;:::i;:::-;5488:2;5482:9;5500:31;5528:2;5520:6;5500:31;:::i;:::-;5566:18;;;5654:1;5650:10;;;;5642:19;;5638:28;;;5600:15;;;;-1:-1:-1;5678:19:239;;;5675:39;;;5710:1;5707;5700:12;5675:39;5734:11;;;;5754:148;5770:6;5765:3;5762:15;5754:148;;;5836:23;5855:3;5836:23;:::i;:::-;5824:36;;5787:12;;;;5880;;;;5754:148;;;5921:6;-1:-1:-1;;5965:18:239;;5952:32;;-1:-1:-1;;5996:16:239;;;5993:36;;;6025:1;6022;6015:12;5993:36;;6048:63;6103:7;6092:8;6081:9;6077:24;6048:63;:::i;:::-;6038:73;;;4909:1208;;;;;:::o;6122:435::-;6175:3;6213:5;6207:12;6240:6;6235:3;6228:19;6266:4;6295:2;6290:3;6286:12;6279:19;;6332:2;6325:5;6321:14;6353:1;6363:169;6377:6;6374:1;6371:13;6363:169;;;6438:13;;6426:26;;6472:12;;;;6507:15;;;;6399:1;6392:9;6363:169;;;-1:-1:-1;6548:3:239;;6122:435;-1:-1:-1;;;;;6122:435:239:o;6562:261::-;6741:2;6730:9;6723:21;6704:4;6761:56;6813:2;6802:9;6798:18;6790:6;6761:56;:::i;6828:347::-;6893:6;6901;6954:2;6942:9;6933:7;6929:23;6925:32;6922:52;;;6970:1;6967;6960:12;6922:52;6993:29;7012:9;6993:29;:::i;:::-;6983:39;;7072:2;7061:9;7057:18;7044:32;7119:5;7112:13;7105:21;7098:5;7095:32;7085:60;;7141:1;7138;7131:12;7085:60;7164:5;7154:15;;;6828:347;;;;;:::o;7180:260::-;7248:6;7256;7309:2;7297:9;7288:7;7284:23;7280:32;7277:52;;;7325:1;7322;7315:12;7277:52;7348:29;7367:9;7348:29;:::i;:::-;7338:39;;7396:38;7430:2;7419:9;7415:18;7396:38;:::i;:::-;7386:48;;7180:260;;;;;:::o;7445:606::-;7549:6;7557;7565;7573;7581;7634:3;7622:9;7613:7;7609:23;7605:33;7602:53;;;7651:1;7648;7641:12;7602:53;7674:29;7693:9;7674:29;:::i;:::-;7664:39;;7722:38;7756:2;7745:9;7741:18;7722:38;:::i;:::-;7712:48;;7807:2;7796:9;7792:18;7779:32;7769:42;;7858:2;7847:9;7843:18;7830:32;7820:42;;7913:3;7902:9;7898:19;7885:33;7941:18;7933:6;7930:30;7927:50;;;7973:1;7970;7963:12;7927:50;7996:49;8037:7;8028:6;8017:9;8013:22;7996:49;:::i;8468:380::-;8547:1;8543:12;;;;8590;;;8611:61;;8665:4;8657:6;8653:17;8643:27;;8611:61;8718:2;8710:6;8707:14;8687:18;8684:38;8681:161;;;8764:10;8759:3;8755:20;8752:1;8745:31;8799:4;8796:1;8789:15;8827:4;8824:1;8817:15;8681:161;;8468:380;;;:::o;9682:127::-;9743:10;9738:3;9734:20;9731:1;9724:31;9774:4;9771:1;9764:15;9798:4;9795:1;9788:15;9814:127;9875:10;9870:3;9866:20;9863:1;9856:31;9906:4;9903:1;9896:15;9930:4;9927:1;9920:15;9946:135;9985:3;-1:-1:-1;;10006:17:239;;10003:43;;;10026:18;;:::i;:::-;-1:-1:-1;10073:1:239;10062:13;;9946:135::o;10905:401::-;11107:2;11089:21;;;11146:2;11126:18;;;11119:30;11185:34;11180:2;11165:18;;11158:62;-1:-1:-1;;;11251:2:239;11236:18;;11229:35;11296:3;11281:19;;10905:401::o;11311:406::-;11513:2;11495:21;;;11552:2;11532:18;;;11525:30;11591:34;11586:2;11571:18;;11564:62;-1:-1:-1;;;11657:2:239;11642:18;;11635:40;11707:3;11692:19;;11311:406::o;11722:128::-;11762:3;11793:1;11789:6;11786:1;11783:13;11780:39;;;11799:18;;:::i;:::-;-1:-1:-1;11835:9:239;;11722:128::o;11855:465::-;12112:2;12101:9;12094:21;12075:4;12138:56;12190:2;12179:9;12175:18;12167:6;12138:56;:::i;:::-;12242:9;12234:6;12230:22;12225:2;12214:9;12210:18;12203:50;12270:44;12307:6;12299;12270:44;:::i;:::-;12262:52;11855:465;-1:-1:-1;;;;;11855:465:239:o;12988:827::-;-1:-1:-1;;;;;13385:15:239;;;13367:34;;13437:15;;13432:2;13417:18;;13410:43;13347:3;13484:2;13469:18;;13462:31;;;13310:4;;13516:57;;13553:19;;13545:6;13516:57;:::i;:::-;13621:9;13613:6;13609:22;13604:2;13593:9;13589:18;13582:50;13655:44;13692:6;13684;13655:44;:::i;:::-;13641:58;;13748:9;13740:6;13736:22;13730:3;13719:9;13715:19;13708:51;13776:33;13802:6;13794;13776:33;:::i;:::-;13768:41;12988:827;-1:-1:-1;;;;;;;;12988:827:239:o;13820:249::-;13889:6;13942:2;13930:9;13921:7;13917:23;13913:32;13910:52;;;13958:1;13955;13948:12;13910:52;13990:9;13984:16;14009:30;14033:5;14009:30;:::i;14074:179::-;14109:3;14151:1;14133:16;14130:23;14127:120;;;14197:1;14194;14191;14176:23;-1:-1:-1;14234:1:239;14228:8;14223:3;14219:18;14127:120;14074:179;:::o;14258:671::-;14297:3;14339:4;14321:16;14318:26;14315:39;;;14258:671;:::o;14315:39::-;14381:2;14375:9;-1:-1:-1;;14446:16:239;14442:25;;14439:1;14375:9;14418:50;14497:4;14491:11;14521:16;14556:18;14627:2;14620:4;14612:6;14608:17;14605:25;14600:2;14592:6;14589:14;14586:45;14583:58;;;14634:5;;;;;14258:671;:::o;14583:58::-;14671:6;14665:4;14661:17;14650:28;;14707:3;14701:10;14734:2;14726:6;14723:14;14720:27;;;14740:5;;;;;;14258:671;:::o;14720:27::-;14824:2;14805:16;14799:4;14795:27;14791:36;14784:4;14775:6;14770:3;14766:16;14762:27;14759:69;14756:82;;;14831:5;;;;;;14258:671;:::o;14756:82::-;14847:57;14898:4;14889:6;14881;14877:19;14873:30;14867:4;14847:57;:::i;:::-;-1:-1:-1;14920:3:239;;14258:671;-1:-1:-1;;;;;14258:671:239:o;15355:404::-;15557:2;15539:21;;;15596:2;15576:18;;;15569:30;15635:34;15630:2;15615:18;;15608:62;-1:-1:-1;;;15701:2:239;15686:18;;15679:38;15749:3;15734:19;;15355:404::o;15764:561::-;-1:-1:-1;;;;;16061:15:239;;;16043:34;;16113:15;;16108:2;16093:18;;16086:43;16160:2;16145:18;;16138:34;;;16203:2;16188:18;;16181:34;;;16023:3;16246;16231:19;;16224:32;;;15986:4;;16273:46;;16299:19;;16291:6;16273:46;:::i;:::-;16265:54;15764:561;-1:-1:-1;;;;;;;15764:561:239:o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
    "kind": "dev",
    "methods": {
      "balanceOf(address,uint256)": {
        "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
      },
      "constructor": {
        "details": "See {_setURI}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1155-isApprovedForAll}."
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155-safeBatchTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1155-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "uri(uint256)": {
        "details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
      }
    },
    "version": 1
  },
  "offset": [
    555,
    15275
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xC05 JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xC29 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xDEE JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE98 JUMP JUMPDEST PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xF9E JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xFB1 JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xFED JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0x1020 JUMP JUMPDEST PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x254 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x26F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0x1085 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0x1085 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x38C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x560 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x405 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x421 JUMPI PUSH2 0x421 PUSH2 0xCA2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x44A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x4C2 JUMPI PUSH2 0x495 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x46E JUMPI PUSH2 0x46E PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x488 JUMPI PUSH2 0x488 PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4A7 JUMPI PUSH2 0x4A7 PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x4BB DUP2 PUSH2 0x10EC JUMP JUMPDEST SWAP1 POP PUSH2 0x450 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x4D5 CALLER DUP4 DUP4 PUSH2 0x73D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4F5 JUMPI POP PUSH2 0x4F5 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x553 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x399 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x81E JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x5C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x5E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1107 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6CF JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x609 JUMPI PUSH2 0x609 PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x627 JUMPI PUSH2 0x627 PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x114C JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6B4 SWAP1 DUP5 SWAP1 PUSH2 0x1196 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x6C8 SWAP1 PUSH2 0x10EC JUMP JUMPDEST SWAP1 POP PUSH2 0x5EC JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x71F SWAP3 SWAP2 SWAP1 PUSH2 0x11AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x735 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x944 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x1107 JUMP JUMPDEST CALLER PUSH2 0x85D DUP2 DUP8 DUP8 PUSH2 0x854 DUP9 PUSH2 0xAA0 JUMP JUMPDEST PUSH2 0x399 DUP9 PUSH2 0xAA0 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x89E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x114C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x8DB SWAP1 DUP5 SWAP1 PUSH2 0x1196 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x93B DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0xAEB JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x988 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11DC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x9C3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x9C0 SWAP2 DUP2 ADD SWAP1 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xA70 JUMPI PUSH2 0x9CF PUSH2 0x1257 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0xA09 JUMPI POP PUSH2 0x9E4 PUSH2 0x1273 JUMP JUMPDEST DUP1 PUSH2 0x9EF JUMPI POP PUSH2 0xA0B JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0xC8F JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x12FD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xADA JUMPI PUSH2 0xADA PUSH2 0x10C0 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xB2F SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1345 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xB6A JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xB67 SWAP2 DUP2 ADD SWAP1 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xB76 JUMPI PUSH2 0x9CF PUSH2 0x1257 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x93B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F4 SWAP1 PUSH2 0x12FD JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBDE DUP4 PUSH2 0xBA6 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC22 DUP2 PUSH2 0xBEC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC68 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC4C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC7A JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC22 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xC42 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCDE JUMPI PUSH2 0xCDE PUSH2 0xCA2 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xCFF JUMPI PUSH2 0xCFF PUSH2 0xCA2 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xD27 DUP3 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD34 DUP3 DUP3 PUSH2 0xCB8 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xD54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xD6F JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xD58 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDA5 JUMPI PUSH2 0xDA5 PUSH2 0xCA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDBC PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xCB8 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xDD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xE06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE0F DUP7 PUSH2 0xBA6 JUMP JUMPDEST SWAP5 POP PUSH2 0xE1D PUSH1 0x20 DUP8 ADD PUSH2 0xBA6 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE46 DUP10 DUP4 DUP11 ADD PUSH2 0xD09 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE68 DUP10 DUP4 DUP11 ADD PUSH2 0xD09 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xE7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE8B DUP9 DUP3 DUP10 ADD PUSH2 0xD7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xED7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xEE4 DUP3 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEF1 DUP3 DUP3 PUSH2 0xCB8 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xF11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xF36 JUMPI PUSH2 0xF27 DUP7 PUSH2 0xBA6 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xF16 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xF4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF59 DUP6 DUP3 DUP7 ADD PUSH2 0xD09 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF93 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xF77 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xC22 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF63 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFCD DUP4 PUSH2 0xBA6 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xFE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1000 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1009 DUP4 PUSH2 0xBA6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1017 PUSH1 0x20 DUP5 ADD PUSH2 0xBA6 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1038 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1041 DUP7 PUSH2 0xBA6 JUMP JUMPDEST SWAP5 POP PUSH2 0x104F PUSH1 0x20 DUP8 ADD PUSH2 0xBA6 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1079 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE8B DUP9 DUP3 DUP10 ADD PUSH2 0xD7A JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1099 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x10BA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1100 JUMPI PUSH2 0x1100 PUSH2 0x10D6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x11A9 JUMPI PUSH2 0x11A9 PUSH2 0x10D6 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x11C1 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xF63 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x11D3 DUP2 DUP6 PUSH2 0xF63 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1208 SWAP1 DUP4 ADD DUP7 PUSH2 0xF63 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x121A DUP2 DUP7 PUSH2 0xF63 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x122E DUP2 DUP6 PUSH2 0xC42 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x124C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC22 DUP2 PUSH2 0xBEC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1270 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1281 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x12B1 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x12C9 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12E3 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12F2 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xCB8 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x137F SWAP1 DUP4 ADD DUP5 PUSH2 0xC42 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0xEA 0xEC 0xB2 CREATE SWAP15 SSTORE CALLCODE PUSH10 0x945F2E263755CD1894F0 0xA8 0xDD CALLCODE 0xB5 PC BALANCE DUP15 0x26 0xCD PUSH30 0x4B858C64736F6C634300080C003300000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        555,
        15275
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "5": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "CALLVALUE",
      "path": "160"
    },
    "6": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "160"
    },
    "7": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "ISZERO",
      "path": "160"
    },
    "8": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "12": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "160"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "REVERT",
      "path": "160"
    },
    "16": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "17": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "POP",
      "path": "160"
    },
    "18": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "CALLDATASIZE",
      "path": "160"
    },
    "21": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "LT",
      "path": "160"
    },
    "22": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x87"
    },
    "25": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "26": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "CALLDATALOAD",
      "path": "160"
    },
    "29": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "SHR",
      "path": "160"
    },
    "32": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "160"
    },
    "33": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH4",
      "path": "160",
      "value": "0x4E1273F4"
    },
    "38": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "GT",
      "path": "160"
    },
    "39": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "43": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "160"
    },
    "44": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH4",
      "path": "160",
      "value": "0x4E1273F4"
    },
    "49": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "EQ",
      "path": "160"
    },
    "50": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x10A"
    },
    "53": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "54": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "160"
    },
    "55": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH4",
      "path": "160",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "EQ",
      "path": "160"
    },
    "61": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x12A"
    },
    "64": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "65": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "160"
    },
    "66": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH4",
      "path": "160",
      "value": "0xE985E9C5"
    },
    "71": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "EQ",
      "path": "160"
    },
    "72": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x13D"
    },
    "75": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "76": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "160"
    },
    "77": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH4",
      "path": "160",
      "value": "0xF242432A"
    },
    "82": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "EQ",
      "path": "160"
    },
    "83": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x179"
    },
    "86": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "87": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "160"
    },
    "90": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "REVERT",
      "path": "160"
    },
    "91": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "92": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "160"
    },
    "93": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH3",
      "path": "160",
      "value": "0xFDD58E"
    },
    "97": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "EQ",
      "path": "160"
    },
    "98": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x8C"
    },
    "101": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "102": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "160"
    },
    "103": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH4",
      "path": "160",
      "value": "0x1FFC9A7"
    },
    "108": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "EQ",
      "path": "160"
    },
    "109": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xB2"
    },
    "112": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "113": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "160"
    },
    "114": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH4",
      "path": "160",
      "value": "0xE89341C"
    },
    "119": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "EQ",
      "path": "160"
    },
    "120": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xD5"
    },
    "123": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "124": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "160"
    },
    "125": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH4",
      "path": "160",
      "value": "0x2EB2C2D6"
    },
    "130": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "EQ",
      "path": "160"
    },
    "131": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xF5"
    },
    "134": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "135": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "136": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "DUP1",
      "path": "160"
    },
    "139": {
      "first_revert": true,
      "fn": null,
      "offset": [
        555,
        15275
      ],
      "op": "REVERT",
      "path": "160"
    },
    "140": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "141": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x9F"
    },
    "144": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x9A"
    },
    "147": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "CALLDATASIZE",
      "path": "160"
    },
    "148": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "150": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xBC2"
    },
    "153": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMP",
      "path": "160"
    },
    "154": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "155": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x18C"
    },
    "158": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMP",
      "path": "160"
    },
    "159": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "160": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "162": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "163": {
      "op": "SWAP1"
    },
    "164": {
      "op": "DUP2"
    },
    "165": {
      "op": "MSTORE"
    },
    "166": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "168": {
      "op": "ADD"
    },
    "169": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "170": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "172": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "173": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "DUP1",
      "path": "160"
    },
    "174": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "175": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "SUB",
      "path": "160"
    },
    "176": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "177": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "RETURN",
      "path": "160"
    },
    "178": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "179": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xC5"
    },
    "182": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xC0"
    },
    "185": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "CALLDATASIZE",
      "path": "160"
    },
    "186": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "188": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xC05"
    },
    "191": {
      "fn": "ERC1155.supportsInterface",
      "jump": "i",
      "offset": [
        1221,
        1526
      ],
      "op": "JUMP",
      "path": "160"
    },
    "192": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "193": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x223"
    },
    "196": {
      "fn": "ERC1155.supportsInterface",
      "jump": "i",
      "offset": [
        1221,
        1526
      ],
      "op": "JUMP",
      "path": "160"
    },
    "197": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "198": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "200": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "201": {
      "op": "SWAP1"
    },
    "202": {
      "op": "ISZERO"
    },
    "203": {
      "op": "ISZERO"
    },
    "204": {
      "op": "DUP2"
    },
    "205": {
      "op": "MSTORE"
    },
    "206": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "208": {
      "op": "ADD"
    },
    "209": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xA9"
    },
    "212": {
      "op": "JUMP"
    },
    "213": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "214": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xE8"
    },
    "217": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xE3"
    },
    "220": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "CALLDATASIZE",
      "path": "160"
    },
    "221": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "223": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xC29"
    },
    "226": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1925,
        2028
      ],
      "op": "JUMP",
      "path": "160"
    },
    "227": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "228": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x275"
    },
    "231": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1925,
        2028
      ],
      "op": "JUMP",
      "path": "160"
    },
    "232": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "233": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "235": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "236": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xA9"
    },
    "239": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "240": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "241": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xC8F"
    },
    "244": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        1925,
        2028
      ],
      "op": "JUMP",
      "path": "160"
    },
    "245": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "246": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x108"
    },
    "249": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x103"
    },
    "252": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "CALLDATASIZE",
      "path": "160"
    },
    "253": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "255": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xDEE"
    },
    "258": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4045,
        4475
      ],
      "op": "JUMP",
      "path": "160"
    },
    "259": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "260": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x309"
    },
    "263": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4045,
        4475
      ],
      "op": "JUMP",
      "path": "160"
    },
    "264": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "265": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "STOP",
      "path": "160"
    },
    "266": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "267": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x11D"
    },
    "270": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x118"
    },
    "273": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "CALLDATASIZE",
      "path": "160"
    },
    "274": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "276": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xE98"
    },
    "279": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2555,
        3063
      ],
      "op": "JUMP",
      "path": "160"
    },
    "280": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "281": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x3A0"
    },
    "284": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2555,
        3063
      ],
      "op": "JUMP",
      "path": "160"
    },
    "285": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "286": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "288": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "289": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xA9"
    },
    "292": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "293": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "294": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xF9E"
    },
    "297": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2555,
        3063
      ],
      "op": "JUMP",
      "path": "160"
    },
    "298": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "299": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x108"
    },
    "302": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x138"
    },
    "305": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "CALLDATASIZE",
      "path": "160"
    },
    "306": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "308": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xFB1"
    },
    "311": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3131,
        3284
      ],
      "op": "JUMP",
      "path": "160"
    },
    "312": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "313": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x4CA"
    },
    "316": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3131,
        3284
      ],
      "op": "JUMP",
      "path": "160"
    },
    "317": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "318": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xC5"
    },
    "321": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x14B"
    },
    "324": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "CALLDATASIZE",
      "path": "160"
    },
    "325": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "327": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xFED"
    },
    "330": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3351,
        3517
      ],
      "op": "JUMP",
      "path": "160"
    },
    "331": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "334": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "336": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "338": {
      "op": "SHL"
    },
    "339": {
      "op": "SUB"
    },
    "340": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "SWAP2",
      "path": "160",
      "statement": 0
    },
    "341": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "DUP3",
      "path": "160"
    },
    "342": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "AND",
      "path": "160"
    },
    "343": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3450,
        3454
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x0"
    },
    "345": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "346": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "DUP2",
      "path": "160"
    },
    "347": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "348": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3491
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x1"
    },
    "350": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "352": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "353": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "DUP2",
      "path": "160"
    },
    "354": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "355": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "357": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "DUP1",
      "path": "160"
    },
    "358": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "DUP4",
      "path": "160"
    },
    "359": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3500
      ],
      "op": "KECCAK256",
      "path": "160"
    },
    "360": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "SWAP4",
      "path": "160"
    },
    "361": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "362": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "SWAP5",
      "path": "160"
    },
    "363": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "AND",
      "path": "160"
    },
    "364": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "DUP3",
      "path": "160"
    },
    "365": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "366": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "367": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "368": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "369": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "370": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "KECCAK256",
      "path": "160"
    },
    "371": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "SLOAD",
      "path": "160"
    },
    "372": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0xFF"
    },
    "374": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "AND",
      "path": "160"
    },
    "375": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3473,
        3510
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "376": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "JUMP",
      "path": "160"
    },
    "377": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "378": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x108"
    },
    "381": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x187"
    },
    "384": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "CALLDATASIZE",
      "path": "160"
    },
    "385": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "387": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x1020"
    },
    "390": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        3584,
        3973
      ],
      "op": "JUMP",
      "path": "160"
    },
    "391": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "392": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x4D9"
    },
    "395": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        3584,
        3973
      ],
      "op": "JUMP",
      "path": "160"
    },
    "396": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "397": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2256,
        2263
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x0"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "403": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "405": {
      "op": "SHL"
    },
    "406": {
      "op": "SUB"
    },
    "407": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2283,
        2304
      ],
      "op": "DUP4",
      "path": "160",
      "statement": 1
    },
    "408": {
      "branch": 41,
      "fn": "ERC1155.balanceOf",
      "offset": [
        2283,
        2304
      ],
      "op": "AND",
      "path": "160"
    },
    "409": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x1FD"
    },
    "412": {
      "branch": 41,
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "413": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "415": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "416": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "420": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "422": {
      "op": "SHL"
    },
    "423": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "DUP2",
      "path": "160"
    },
    "424": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "425": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "427": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "429": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "DUP3",
      "path": "160"
    },
    "430": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "ADD",
      "path": "160"
    },
    "431": {
      "op": "MSTORE"
    },
    "432": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "434": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "436": {
      "op": "DUP3"
    },
    "437": {
      "op": "ADD"
    },
    "438": {
      "op": "MSTORE"
    },
    "439": {
      "op": "PUSH32",
      "value": "0x455243313135353A2062616C616E636520717565727920666F7220746865207A"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "474": {
      "op": "DUP3"
    },
    "475": {
      "op": "ADD"
    },
    "476": {
      "op": "MSTORE"
    },
    "477": {
      "op": "PUSH11",
      "value": "0x65726F2061646472657373"
    },
    "489": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "491": {
      "op": "SHL"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "494": {
      "op": "DUP3"
    },
    "495": {
      "op": "ADD"
    },
    "496": {
      "op": "MSTORE"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "499": {
      "op": "ADD"
    },
    "500": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "501": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "503": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "504": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "DUP1",
      "path": "160"
    },
    "505": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "506": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "SUB",
      "path": "160"
    },
    "507": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "508": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "160"
    },
    "509": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2275,
        2352
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "510": {
      "op": "POP"
    },
    "511": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2378
      ],
      "op": "PUSH1",
      "path": "160",
      "statement": 2,
      "value": "0x0"
    },
    "513": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "514": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "DUP2",
      "path": "160"
    },
    "515": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "516": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "518": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "DUP2",
      "path": "160"
    },
    "519": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "DUP2",
      "path": "160"
    },
    "520": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "521": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "523": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "DUP1",
      "path": "160"
    },
    "524": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "DUP4",
      "path": "160"
    },
    "525": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2382
      ],
      "op": "KECCAK256",
      "path": "160"
    },
    "526": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "530": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "532": {
      "op": "SHL"
    },
    "533": {
      "op": "SUB"
    },
    "534": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "SWAP5",
      "path": "160"
    },
    "535": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "536": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "SWAP5",
      "path": "160"
    },
    "537": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "AND",
      "path": "160"
    },
    "538": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "DUP4",
      "path": "160"
    },
    "539": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "540": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "SWAP3",
      "path": "160"
    },
    "541": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "542": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "543": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "KECCAK256",
      "path": "160"
    },
    "544": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "SLOAD",
      "path": "160"
    },
    "545": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2369,
        2391
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "546": {
      "fn": "ERC1155.balanceOf",
      "jump": "o",
      "offset": [
        2170,
        2398
      ],
      "op": "JUMP",
      "path": "160"
    },
    "547": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "548": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1323,
        1327
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x0"
    },
    "550": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "554": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "556": {
      "op": "SHL"
    },
    "557": {
      "op": "SUB"
    },
    "558": {
      "op": "NOT"
    },
    "559": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1399
      ],
      "op": "DUP3",
      "path": "160",
      "statement": 3
    },
    "560": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1399
      ],
      "op": "AND",
      "path": "160"
    },
    "561": {
      "op": "PUSH4",
      "value": "0x6CDB3D13"
    },
    "566": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "568": {
      "op": "SHL"
    },
    "569": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1399
      ],
      "op": "EQ",
      "path": "160"
    },
    "570": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1399
      ],
      "op": "DUP1",
      "path": "160"
    },
    "571": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1467
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x254"
    },
    "574": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1467
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "575": {
      "op": "POP"
    },
    "576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "580": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "582": {
      "op": "SHL"
    },
    "583": {
      "op": "SUB"
    },
    "584": {
      "op": "NOT"
    },
    "585": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1415,
        1467
      ],
      "op": "DUP3",
      "path": "160"
    },
    "586": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1415,
        1467
      ],
      "op": "AND",
      "path": "160"
    },
    "587": {
      "op": "PUSH4",
      "value": "0x3A24D07"
    },
    "592": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "594": {
      "op": "SHL"
    },
    "595": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1415,
        1467
      ],
      "op": "EQ",
      "path": "160"
    },
    "596": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1467
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "597": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1519
      ],
      "op": "DUP1",
      "path": "160"
    },
    "598": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1519
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x26F"
    },
    "601": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1358,
        1519
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "602": {
      "op": "POP"
    },
    "603": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "608": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "610": {
      "op": "SHL"
    },
    "611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "615": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "617": {
      "op": "SHL"
    },
    "618": {
      "op": "SUB"
    },
    "619": {
      "op": "NOT"
    },
    "620": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "224",
      "statement": 4
    },
    "621": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "224"
    },
    "622": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "224"
    },
    "623": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1483,
        1519
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "624": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1339,
        1519
      ],
      "op": "SWAP3",
      "path": "160"
    },
    "625": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1221,
        1526
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "626": {
      "op": "POP"
    },
    "627": {
      "op": "POP"
    },
    "628": {
      "fn": "ERC1155.supportsInterface",
      "jump": "o",
      "offset": [
        1221,
        1526
      ],
      "op": "JUMP",
      "path": "160"
    },
    "629": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "630": {
      "fn": "ERC1155.uri",
      "offset": [
        1985,
        1998
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x60"
    },
    "632": {
      "fn": "ERC1155.uri",
      "offset": [
        2017,
        2021
      ],
      "op": "PUSH1",
      "path": "160",
      "statement": 5,
      "value": "0x2"
    },
    "634": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "160"
    },
    "635": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SLOAD",
      "path": "160"
    },
    "636": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x284"
    },
    "639": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "640": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x1085"
    },
    "643": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMP",
      "path": "160"
    },
    "644": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "645": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "160"
    },
    "646": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x1F"
    },
    "648": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "160"
    },
    "649": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "651": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "160"
    },
    "652": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "653": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DIV",
      "path": "160"
    },
    "654": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "MUL",
      "path": "160"
    },
    "655": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "657": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "160"
    },
    "658": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "660": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "661": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "662": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP2",
      "path": "160"
    },
    "663": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "160"
    },
    "664": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "666": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "667": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "160"
    },
    "668": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP3",
      "path": "160"
    },
    "669": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "670": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "671": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP2",
      "path": "160"
    },
    "672": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP2",
      "path": "160"
    },
    "673": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "674": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "676": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "160"
    },
    "677": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP3",
      "path": "160"
    },
    "678": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "160"
    },
    "679": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SLOAD",
      "path": "160"
    },
    "680": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x2B0"
    },
    "683": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "684": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x1085"
    },
    "687": {
      "fn": "ERC1155.uri",
      "jump": "i",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMP",
      "path": "160"
    },
    "688": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "689": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "160"
    },
    "690": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ISZERO",
      "path": "160"
    },
    "691": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x2FD"
    },
    "694": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "695": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "160"
    },
    "696": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x1F"
    },
    "698": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "LT",
      "path": "160"
    },
    "699": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x2D2"
    },
    "702": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "703": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x100"
    },
    "706": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "160"
    },
    "707": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP4",
      "path": "160"
    },
    "708": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SLOAD",
      "path": "160"
    },
    "709": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DIV",
      "path": "160"
    },
    "710": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "MUL",
      "path": "160"
    },
    "711": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP4",
      "path": "160"
    },
    "712": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "713": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "714": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "716": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "160"
    },
    "717": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "718": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x2FD"
    },
    "721": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMP",
      "path": "160"
    },
    "722": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "723": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP3",
      "path": "160"
    },
    "724": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "160"
    },
    "725": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "726": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "727": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x0"
    },
    "729": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "730": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "732": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x0"
    },
    "734": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "KECCAK256",
      "path": "160"
    },
    "735": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "736": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "737": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP2",
      "path": "160"
    },
    "738": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SLOAD",
      "path": "160"
    },
    "739": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP2",
      "path": "160"
    },
    "740": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "741": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "742": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x1"
    },
    "744": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "160"
    },
    "745": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "746": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "748": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "160"
    },
    "749": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP1",
      "path": "160"
    },
    "750": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP4",
      "path": "160"
    },
    "751": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "GT",
      "path": "160"
    },
    "752": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x2E0"
    },
    "755": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "756": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP3",
      "path": "160"
    },
    "757": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "758": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SUB",
      "path": "160"
    },
    "759": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x1F"
    },
    "761": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "AND",
      "path": "160"
    },
    "762": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "DUP3",
      "path": "160"
    },
    "763": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "ADD",
      "path": "160"
    },
    "764": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "765": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "766": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "POP",
      "path": "160"
    },
    "767": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "POP",
      "path": "160"
    },
    "768": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "POP",
      "path": "160"
    },
    "769": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "POP",
      "path": "160"
    },
    "770": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "POP",
      "path": "160"
    },
    "771": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "772": {
      "fn": "ERC1155.uri",
      "offset": [
        2010,
        2021
      ],
      "op": "POP",
      "path": "160"
    },
    "773": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "774": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "775": {
      "fn": "ERC1155.uri",
      "offset": [
        1925,
        2028
      ],
      "op": "POP",
      "path": "160"
    },
    "776": {
      "fn": "ERC1155.uri",
      "jump": "o",
      "offset": [
        1925,
        2028
      ],
      "op": "JUMP",
      "path": "160"
    },
    "777": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "782": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "784": {
      "op": "SHL"
    },
    "785": {
      "op": "SUB"
    },
    "786": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4270,
        4290
      ],
      "op": "DUP6",
      "path": "160",
      "statement": 6
    },
    "787": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4270,
        4290
      ],
      "op": "AND",
      "path": "160"
    },
    "788": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210",
      "statement": 7
    },
    "789": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4270,
        4290
      ],
      "op": "EQ",
      "path": "160"
    },
    "790": {
      "branch": 42,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4270,
        4290
      ],
      "op": "DUP1",
      "path": "160"
    },
    "791": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4270,
        4330
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x325"
    },
    "794": {
      "branch": 42,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4270,
        4330
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "795": {
      "op": "POP"
    },
    "796": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4294,
        4330
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x325"
    },
    "799": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4311,
        4315
      ],
      "op": "DUP6",
      "path": "160"
    },
    "800": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "801": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x14B"
    },
    "804": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3351,
        3517
      ],
      "op": "JUMP",
      "path": "160"
    },
    "805": {
      "branch": 43,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4294,
        4330
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "806": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x38C"
    },
    "809": {
      "branch": 43,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "810": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "812": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "813": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "817": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "819": {
      "op": "SHL"
    },
    "820": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "DUP2",
      "path": "160"
    },
    "821": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "822": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "824": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "826": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "DUP3",
      "path": "160"
    },
    "827": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "ADD",
      "path": "160"
    },
    "828": {
      "op": "MSTORE"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "833": {
      "op": "DUP3"
    },
    "834": {
      "op": "ADD"
    },
    "835": {
      "op": "MSTORE"
    },
    "836": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
    },
    "869": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "871": {
      "op": "DUP3"
    },
    "872": {
      "op": "ADD"
    },
    "873": {
      "op": "MSTORE"
    },
    "874": {
      "op": "PUSH18",
      "value": "0x1BDDDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "893": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "895": {
      "op": "SHL"
    },
    "896": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "898": {
      "op": "DUP3"
    },
    "899": {
      "op": "ADD"
    },
    "900": {
      "op": "MSTORE"
    },
    "901": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "903": {
      "op": "ADD"
    },
    "904": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x1F4"
    },
    "907": {
      "op": "JUMP"
    },
    "908": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4249,
        4406
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "909": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4416,
        4468
      ],
      "op": "PUSH2",
      "path": "160",
      "statement": 8,
      "value": "0x399"
    },
    "912": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4439,
        4443
      ],
      "op": "DUP6",
      "path": "160"
    },
    "913": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4445,
        4447
      ],
      "op": "DUP6",
      "path": "160"
    },
    "914": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4449,
        4452
      ],
      "op": "DUP6",
      "path": "160"
    },
    "915": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4454,
        4461
      ],
      "op": "DUP6",
      "path": "160"
    },
    "916": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4463,
        4467
      ],
      "op": "DUP6",
      "path": "160"
    },
    "917": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4416,
        4438
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x560"
    },
    "920": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4416,
        4468
      ],
      "op": "JUMP",
      "path": "160"
    },
    "921": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4416,
        4468
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "922": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "POP",
      "path": "160"
    },
    "923": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "POP",
      "path": "160"
    },
    "924": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "POP",
      "path": "160"
    },
    "925": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "POP",
      "path": "160"
    },
    "926": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4045,
        4475
      ],
      "op": "POP",
      "path": "160"
    },
    "927": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        4045,
        4475
      ],
      "op": "JUMP",
      "path": "160"
    },
    "928": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "929": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2706,
        2722
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x60"
    },
    "931": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2765,
        2768
      ],
      "op": "DUP2",
      "path": "160",
      "statement": 9
    },
    "932": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2765,
        2775
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "933": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2746,
        2754
      ],
      "op": "DUP4",
      "path": "160"
    },
    "934": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2746,
        2761
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "935": {
      "branch": 44,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2746,
        2775
      ],
      "op": "EQ",
      "path": "160"
    },
    "936": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x405"
    },
    "939": {
      "branch": 44,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "940": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "942": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "943": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "947": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "949": {
      "op": "SHL"
    },
    "950": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "DUP2",
      "path": "160"
    },
    "951": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "952": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "954": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "956": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "DUP3",
      "path": "160"
    },
    "957": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "ADD",
      "path": "160"
    },
    "958": {
      "op": "MSTORE"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "963": {
      "op": "DUP3"
    },
    "964": {
      "op": "ADD"
    },
    "965": {
      "op": "MSTORE"
    },
    "966": {
      "op": "PUSH32",
      "value": "0x455243313135353A206163636F756E747320616E6420696473206C656E677468"
    },
    "999": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1001": {
      "op": "DUP3"
    },
    "1002": {
      "op": "ADD"
    },
    "1003": {
      "op": "MSTORE"
    },
    "1004": {
      "op": "PUSH9",
      "value": "0x40DAD2E6DAC2E8C6D"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0xBB"
    },
    "1016": {
      "op": "SHL"
    },
    "1017": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1019": {
      "op": "DUP3"
    },
    "1020": {
      "op": "ADD"
    },
    "1021": {
      "op": "MSTORE"
    },
    "1022": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1024": {
      "op": "ADD"
    },
    "1025": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x1F4"
    },
    "1028": {
      "op": "JUMP"
    },
    "1029": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2738,
        2821
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1030": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2832,
        2862
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x0"
    },
    "1032": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2879,
        2887
      ],
      "op": "DUP4",
      "path": "160"
    },
    "1033": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2879,
        2894
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "1034": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH8",
      "path": "160",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1043": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1044": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "GT",
      "path": "160"
    },
    "1045": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "ISZERO",
      "path": "160"
    },
    "1046": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x421"
    },
    "1049": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "1050": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x421"
    },
    "1053": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xCA2"
    },
    "1056": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2865,
        2895
      ],
      "op": "JUMP",
      "path": "160"
    },
    "1057": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1058": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "1060": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "1061": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "1062": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP1",
      "path": "160"
    },
    "1063": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP3",
      "path": "160"
    },
    "1064": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "1065": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP1",
      "path": "160"
    },
    "1066": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "1068": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "MUL",
      "path": "160"
    },
    "1069": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "1071": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "ADD",
      "path": "160"
    },
    "1072": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP3",
      "path": "160"
    },
    "1073": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "ADD",
      "path": "160"
    },
    "1074": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "1076": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "1077": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP1",
      "path": "160"
    },
    "1078": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "ISZERO",
      "path": "160"
    },
    "1079": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x44A"
    },
    "1082": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "1083": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1084": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "1086": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "ADD",
      "path": "160"
    },
    "1087": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "1089": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP3",
      "path": "160"
    },
    "1090": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "MUL",
      "path": "160"
    },
    "1091": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP1",
      "path": "160"
    },
    "1092": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "CALLDATASIZE",
      "path": "160"
    },
    "1093": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "DUP4",
      "path": "160"
    },
    "1094": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "CALLDATACOPY",
      "path": "160"
    },
    "1095": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "ADD",
      "path": "160"
    },
    "1096": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "1097": {
      "op": "POP"
    },
    "1098": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1099": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2895
      ],
      "op": "POP",
      "path": "160"
    },
    "1100": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2832,
        2895
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "1101": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2832,
        2895
      ],
      "op": "POP",
      "path": "160"
    },
    "1102": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2911,
        2920
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x0"
    },
    "1104": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2906,
        3026
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1105": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2930,
        2938
      ],
      "op": "DUP5",
      "path": "160"
    },
    "1106": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2930,
        2945
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "1107": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2926,
        2927
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1108": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2926,
        2945
      ],
      "op": "LT",
      "path": "160"
    },
    "1109": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2906,
        3026
      ],
      "op": "ISZERO",
      "path": "160"
    },
    "1110": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2906,
        3026
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x4C2"
    },
    "1113": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2906,
        3026
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "1114": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2985,
        3015
      ],
      "op": "PUSH2",
      "path": "160",
      "statement": 10,
      "value": "0x495"
    },
    "1117": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3003
      ],
      "op": "DUP6",
      "path": "160"
    },
    "1118": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3004,
        3005
      ],
      "op": "DUP3",
      "path": "160"
    },
    "1119": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1120": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "1121": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1122": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "LT",
      "path": "160"
    },
    "1123": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x46E"
    },
    "1126": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "1127": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x46E"
    },
    "1130": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x10C0"
    },
    "1133": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2995,
        3006
      ],
      "op": "JUMP",
      "path": "160"
    },
    "1134": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1135": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "1137": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "MUL",
      "path": "160"
    },
    "1138": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "1140": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "ADD",
      "path": "160"
    },
    "1141": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "ADD",
      "path": "160"
    },
    "1142": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2995,
        3006
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "1143": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3011
      ],
      "op": "DUP6",
      "path": "160"
    },
    "1144": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3012,
        3013
      ],
      "op": "DUP4",
      "path": "160"
    },
    "1145": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1146": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "1147": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1148": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "LT",
      "path": "160"
    },
    "1149": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x488"
    },
    "1152": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "1153": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x488"
    },
    "1156": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x10C0"
    },
    "1159": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        3008,
        3014
      ],
      "op": "JUMP",
      "path": "160"
    },
    "1160": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1161": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "1163": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "MUL",
      "path": "160"
    },
    "1164": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "1166": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "ADD",
      "path": "160"
    },
    "1167": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "ADD",
      "path": "160"
    },
    "1168": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3008,
        3014
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "1169": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2985,
        2994
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x18C"
    },
    "1172": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2985,
        3015
      ],
      "op": "JUMP",
      "path": "160"
    },
    "1173": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2985,
        3015
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1174": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2979
      ],
      "op": "DUP3",
      "path": "160"
    },
    "1175": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2980,
        2981
      ],
      "op": "DUP3",
      "path": "160"
    },
    "1176": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1177": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "1178": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1179": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "LT",
      "path": "160"
    },
    "1180": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x4A7"
    },
    "1183": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "1184": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x4A7"
    },
    "1187": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x10C0"
    },
    "1190": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2966,
        2982
      ],
      "op": "JUMP",
      "path": "160"
    },
    "1191": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1192": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "1194": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "1195": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1196": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "MUL",
      "path": "160"
    },
    "1197": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "1198": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "1199": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "1200": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "ADD",
      "path": "160"
    },
    "1201": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        2982
      ],
      "op": "ADD",
      "path": "160"
    },
    "1202": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2966,
        3015
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "1203": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2950
      ],
      "op": "PUSH2",
      "path": "160",
      "statement": 11,
      "value": "0x4BB"
    },
    "1206": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2950
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1207": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2950
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x10EC"
    },
    "1210": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2947,
        2950
      ],
      "op": "JUMP",
      "path": "160"
    },
    "1211": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2950
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1212": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2950
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "1213": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2950
      ],
      "op": "POP",
      "path": "160"
    },
    "1214": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2906,
        3026
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x450"
    },
    "1217": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2906,
        3026
      ],
      "op": "JUMP",
      "path": "160"
    },
    "1218": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2906,
        3026
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1219": {
      "op": "POP"
    },
    "1220": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        3043,
        3056
      ],
      "op": "SWAP4",
      "path": "160",
      "statement": 12
    },
    "1221": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2555,
        3063
      ],
      "op": "SWAP3",
      "path": "160"
    },
    "1222": {
      "op": "POP"
    },
    "1223": {
      "op": "POP"
    },
    "1224": {
      "op": "POP"
    },
    "1225": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "o",
      "offset": [
        2555,
        3063
      ],
      "op": "JUMP",
      "path": "160"
    },
    "1226": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1227": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3225,
        3277
      ],
      "op": "PUSH2",
      "path": "160",
      "statement": 13,
      "value": "0x4D5"
    },
    "1230": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "1231": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3258,
        3266
      ],
      "op": "DUP4",
      "path": "160"
    },
    "1232": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3268,
        3276
      ],
      "op": "DUP4",
      "path": "160"
    },
    "1233": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3225,
        3243
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x73D"
    },
    "1236": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3225,
        3277
      ],
      "op": "JUMP",
      "path": "160"
    },
    "1237": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3225,
        3277
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1238": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "POP",
      "path": "160"
    },
    "1239": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3131,
        3284
      ],
      "op": "POP",
      "path": "160"
    },
    "1240": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "o",
      "offset": [
        3131,
        3284
      ],
      "op": "JUMP",
      "path": "160"
    },
    "1241": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3584,
        3973
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1244": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1246": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1248": {
      "op": "SHL"
    },
    "1249": {
      "op": "SUB"
    },
    "1250": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3784,
        3804
      ],
      "op": "DUP6",
      "path": "160",
      "statement": 14
    },
    "1251": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3784,
        3804
      ],
      "op": "AND",
      "path": "160"
    },
    "1252": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "1253": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3784,
        3804
      ],
      "op": "EQ",
      "path": "160"
    },
    "1254": {
      "branch": 45,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3784,
        3804
      ],
      "op": "DUP1",
      "path": "160"
    },
    "1255": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3784,
        3844
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x4F5"
    },
    "1258": {
      "branch": 45,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3784,
        3844
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "1259": {
      "op": "POP"
    },
    "1260": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3808,
        3844
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x4F5"
    },
    "1263": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3825,
        3829
      ],
      "op": "DUP6",
      "path": "160"
    },
    "1264": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "1265": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3351,
        3517
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x14B"
    },
    "1268": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3351,
        3517
      ],
      "op": "JUMP",
      "path": "160"
    },
    "1269": {
      "branch": 46,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3808,
        3844
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1270": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x553"
    },
    "1273": {
      "branch": 46,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "1274": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "1276": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "1277": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1283": {
      "op": "SHL"
    },
    "1284": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1285": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1288": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "1290": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "DUP3",
      "path": "160"
    },
    "1291": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "ADD",
      "path": "160"
    },
    "1292": {
      "op": "MSTORE"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1297": {
      "op": "DUP3"
    },
    "1298": {
      "op": "ADD"
    },
    "1299": {
      "op": "MSTORE"
    },
    "1300": {
      "op": "PUSH32",
      "value": "0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1335": {
      "op": "DUP3"
    },
    "1336": {
      "op": "ADD"
    },
    "1337": {
      "op": "MSTORE"
    },
    "1338": {
      "op": "PUSH9",
      "value": "0x8185C1C1C9BDD9959"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "1350": {
      "op": "SHL"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1353": {
      "op": "DUP3"
    },
    "1354": {
      "op": "ADD"
    },
    "1355": {
      "op": "MSTORE"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1358": {
      "op": "ADD"
    },
    "1359": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x1F4"
    },
    "1362": {
      "op": "JUMP"
    },
    "1363": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3763,
        3911
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1364": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3921,
        3966
      ],
      "op": "PUSH2",
      "path": "160",
      "statement": 15,
      "value": "0x399"
    },
    "1367": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3939,
        3943
      ],
      "op": "DUP6",
      "path": "160"
    },
    "1368": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3945,
        3947
      ],
      "op": "DUP6",
      "path": "160"
    },
    "1369": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3949,
        3951
      ],
      "op": "DUP6",
      "path": "160"
    },
    "1370": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3953,
        3959
      ],
      "op": "DUP6",
      "path": "160"
    },
    "1371": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3961,
        3965
      ],
      "op": "DUP6",
      "path": "160"
    },
    "1372": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3921,
        3938
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x81E"
    },
    "1375": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        3921,
        3966
      ],
      "op": "JUMP",
      "path": "160"
    },
    "1376": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6068,
        7113
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1377": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6288,
        6295
      ],
      "op": "DUP2",
      "path": "160",
      "statement": 16
    },
    "1378": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6288,
        6302
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "1379": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6274,
        6277
      ],
      "op": "DUP4",
      "path": "160"
    },
    "1380": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6274,
        6284
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "1381": {
      "branch": 47,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6274,
        6302
      ],
      "op": "EQ",
      "path": "160"
    },
    "1382": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x5C2"
    },
    "1385": {
      "branch": 47,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "1386": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "1388": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "1389": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1393": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1395": {
      "op": "SHL"
    },
    "1396": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1397": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1400": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "1402": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "DUP3",
      "path": "160"
    },
    "1403": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "ADD",
      "path": "160"
    },
    "1404": {
      "op": "MSTORE"
    },
    "1405": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1409": {
      "op": "DUP3"
    },
    "1410": {
      "op": "ADD"
    },
    "1411": {
      "op": "MSTORE"
    },
    "1412": {
      "op": "PUSH32",
      "value": "0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1447": {
      "op": "DUP3"
    },
    "1448": {
      "op": "ADD"
    },
    "1449": {
      "op": "MSTORE"
    },
    "1450": {
      "op": "PUSH8",
      "value": "0xDAD2E6DAC2E8C6D"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "1461": {
      "op": "SHL"
    },
    "1462": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1464": {
      "op": "DUP3"
    },
    "1465": {
      "op": "ADD"
    },
    "1466": {
      "op": "MSTORE"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1469": {
      "op": "ADD"
    },
    "1470": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x1F4"
    },
    "1473": {
      "op": "JUMP"
    },
    "1474": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6266,
        6347
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1481": {
      "op": "SHL"
    },
    "1482": {
      "op": "SUB"
    },
    "1483": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6365,
        6381
      ],
      "op": "DUP5",
      "path": "160",
      "statement": 17
    },
    "1484": {
      "branch": 48,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6365,
        6381
      ],
      "op": "AND",
      "path": "160"
    },
    "1485": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x5E8"
    },
    "1488": {
      "branch": 48,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "1489": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "1491": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "1492": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1498": {
      "op": "SHL"
    },
    "1499": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1500": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "1501": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "1503": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "ADD",
      "path": "160"
    },
    "1504": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x1F4"
    },
    "1507": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "1508": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x1107"
    },
    "1511": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6357,
        6423
      ],
      "op": "JUMP",
      "path": "160"
    },
    "1512": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6357,
        6423
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1513": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "1514": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6434,
        6450
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x0"
    },
    "1516": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1517": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6571,
        6574
      ],
      "op": "DUP5",
      "path": "160"
    },
    "1518": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6571,
        6581
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "1519": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6567,
        6568
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1520": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6567,
        6581
      ],
      "op": "LT",
      "path": "160"
    },
    "1521": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "ISZERO",
      "path": "160"
    },
    "1522": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x6CF"
    },
    "1525": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "1526": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6602,
        6612
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x0"
    },
    "1528": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6618
      ],
      "op": "DUP6",
      "path": "160"
    },
    "1529": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6619,
        6620
      ],
      "op": "DUP3",
      "path": "160"
    },
    "1530": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1531": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "1532": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1533": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "LT",
      "path": "160"
    },
    "1534": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x609"
    },
    "1537": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "1538": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x609"
    },
    "1541": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x10C0"
    },
    "1544": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6615,
        6621
      ],
      "op": "JUMP",
      "path": "160"
    },
    "1545": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1546": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "1548": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "MUL",
      "path": "160"
    },
    "1549": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "1551": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "ADD",
      "path": "160"
    },
    "1552": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "ADD",
      "path": "160"
    },
    "1553": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6615,
        6621
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "1554": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6602,
        6621
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "1555": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6602,
        6621
      ],
      "op": "POP",
      "path": "160"
    },
    "1556": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6635,
        6649
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x0"
    },
    "1558": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6659
      ],
      "op": "DUP6",
      "path": "160"
    },
    "1559": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6660,
        6661
      ],
      "op": "DUP4",
      "path": "160"
    },
    "1560": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1561": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "1562": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1563": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "LT",
      "path": "160"
    },
    "1564": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x627"
    },
    "1567": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "1568": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x627"
    },
    "1571": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x10C0"
    },
    "1574": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6652,
        6662
      ],
      "op": "JUMP",
      "path": "160"
    },
    "1575": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1576": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "1578": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "1579": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1580": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "MUL",
      "path": "160"
    },
    "1581": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "1582": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "1583": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "1584": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "ADD",
      "path": "160"
    },
    "1585": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1586": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "ADD",
      "path": "160"
    },
    "1587": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "1588": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6677,
        6696
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x0"
    },
    "1590": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "DUP5",
      "path": "160"
    },
    "1591": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1592": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "1593": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "DUP1",
      "path": "160"
    },
    "1594": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "DUP4",
      "path": "160"
    },
    "1595": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "1596": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "1598": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "DUP1",
      "path": "160"
    },
    "1599": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "DUP3",
      "path": "160"
    },
    "1600": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6712
      ],
      "op": "KECCAK256",
      "path": "160"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1607": {
      "op": "SHL"
    },
    "1608": {
      "op": "SUB"
    },
    "1609": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "DUP15",
      "path": "160"
    },
    "1610": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "AND",
      "path": "160"
    },
    "1611": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "DUP4",
      "path": "160"
    },
    "1612": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "1613": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "1614": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "SWAP4",
      "path": "160"
    },
    "1615": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "1616": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "1617": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "1618": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "1619": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "KECCAK256",
      "path": "160"
    },
    "1620": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6699,
        6718
      ],
      "op": "SLOAD",
      "path": "160"
    },
    "1621": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "1622": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6652,
        6662
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "1623": {
      "op": "POP"
    },
    "1624": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6740,
        6761
      ],
      "op": "DUP2",
      "path": "160",
      "statement": 18
    },
    "1625": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6740,
        6761
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1626": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6740,
        6761
      ],
      "op": "LT",
      "path": "160"
    },
    "1627": {
      "branch": 49,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6740,
        6761
      ],
      "op": "ISZERO",
      "path": "160"
    },
    "1628": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x677"
    },
    "1631": {
      "branch": 49,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "1632": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "1634": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "1635": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1641": {
      "op": "SHL"
    },
    "1642": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1643": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "1644": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "1646": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "ADD",
      "path": "160"
    },
    "1647": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x1F4"
    },
    "1650": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "1651": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x114C"
    },
    "1654": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6732,
        6808
      ],
      "op": "JUMP",
      "path": "160"
    },
    "1655": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6732,
        6808
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1656": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6859
      ],
      "op": "PUSH1",
      "path": "160",
      "statement": 19,
      "value": "0x0"
    },
    "1658": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "DUP4",
      "path": "160"
    },
    "1659": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1660": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "1661": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "1663": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1664": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1665": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "1666": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "1668": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "DUP1",
      "path": "160"
    },
    "1669": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "DUP4",
      "path": "160"
    },
    "1670": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6863
      ],
      "op": "KECCAK256",
      "path": "160"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1677": {
      "op": "SHL"
    },
    "1678": {
      "op": "SUB"
    },
    "1679": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "DUP15",
      "path": "160"
    },
    "1680": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1681": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "AND",
      "path": "160"
    },
    "1682": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "DUP6",
      "path": "160"
    },
    "1683": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "1684": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "SWAP3",
      "path": "160"
    },
    "1685": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "1686": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "DUP1",
      "path": "160"
    },
    "1687": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "DUP4",
      "path": "160"
    },
    "1688": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6869
      ],
      "op": "KECCAK256",
      "path": "160"
    },
    "1689": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6872,
        6892
      ],
      "op": "DUP6",
      "path": "160"
    },
    "1690": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6872,
        6892
      ],
      "op": "DUP6",
      "path": "160"
    },
    "1691": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6872,
        6892
      ],
      "op": "SUB",
      "path": "160"
    },
    "1692": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6892
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "1693": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6892
      ],
      "op": "SSTORE",
      "path": "160"
    },
    "1694": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6937
      ],
      "op": "SWAP1",
      "path": "160",
      "statement": 20
    },
    "1695": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6937
      ],
      "op": "DUP12",
      "path": "160"
    },
    "1696": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6937
      ],
      "op": "AND",
      "path": "160"
    },
    "1697": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6937
      ],
      "op": "DUP3",
      "path": "160"
    },
    "1698": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6937
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "1699": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6937
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1700": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6937
      ],
      "op": "KECCAK256",
      "path": "160"
    },
    "1701": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "DUP1",
      "path": "160"
    },
    "1702": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "SLOAD",
      "path": "160"
    },
    "1703": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6872,
        6892
      ],
      "op": "DUP5",
      "path": "160"
    },
    "1704": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6872,
        6892
      ],
      "op": "SWAP3",
      "path": "160"
    },
    "1705": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6850,
        6859
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "1706": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x6B4"
    },
    "1709": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "1710": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6872,
        6892
      ],
      "op": "DUP5",
      "path": "160"
    },
    "1711": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6872,
        6892
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "1712": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x1196"
    },
    "1715": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6920,
        6947
      ],
      "op": "JUMP",
      "path": "160"
    },
    "1716": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1717": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "SWAP3",
      "path": "160"
    },
    "1718": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "POP",
      "path": "160"
    },
    "1719": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "POP",
      "path": "160"
    },
    "1720": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1721": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "1722": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "SSTORE",
      "path": "160"
    },
    "1723": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6920,
        6947
      ],
      "op": "POP",
      "path": "160"
    },
    "1724": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6588,
        6958
      ],
      "op": "POP",
      "path": "160"
    },
    "1725": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6588,
        6958
      ],
      "op": "POP",
      "path": "160"
    },
    "1726": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6588,
        6958
      ],
      "op": "POP",
      "path": "160"
    },
    "1727": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6583,
        6586
      ],
      "op": "DUP1",
      "path": "160",
      "statement": 21
    },
    "1728": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6583,
        6586
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x6C8"
    },
    "1731": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6583,
        6586
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "1732": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6583,
        6586
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x10EC"
    },
    "1735": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6583,
        6586
      ],
      "op": "JUMP",
      "path": "160"
    },
    "1736": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6583,
        6586
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1737": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6583,
        6586
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "1738": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6583,
        6586
      ],
      "op": "POP",
      "path": "160"
    },
    "1739": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x5EC"
    },
    "1742": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "JUMP",
      "path": "160"
    },
    "1743": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1744": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6547,
        6958
      ],
      "op": "POP",
      "path": "160"
    },
    "1745": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7003,
        7005
      ],
      "op": "DUP5",
      "path": "160",
      "statement": 22
    },
    "1746": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1752": {
      "op": "SHL"
    },
    "1753": {
      "op": "SUB"
    },
    "1754": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "AND",
      "path": "160"
    },
    "1755": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6997,
        7001
      ],
      "op": "DUP7",
      "path": "160"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1760": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1762": {
      "op": "SHL"
    },
    "1763": {
      "op": "SUB"
    },
    "1764": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "AND",
      "path": "160"
    },
    "1765": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6987,
        6995
      ],
      "op": "DUP3",
      "path": "160"
    },
    "1766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1772": {
      "op": "SHL"
    },
    "1773": {
      "op": "SUB"
    },
    "1774": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "AND",
      "path": "160"
    },
    "1775": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "PUSH32",
      "path": "160",
      "value": "0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
    },
    "1808": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7007,
        7010
      ],
      "op": "DUP8",
      "path": "160"
    },
    "1809": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7019
      ],
      "op": "DUP8",
      "path": "160"
    },
    "1810": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "1812": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "1813": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x71F"
    },
    "1816": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "SWAP3",
      "path": "160"
    },
    "1817": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "1818": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "1819": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x11AE"
    },
    "1822": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6973,
        7020
      ],
      "op": "JUMP",
      "path": "160"
    },
    "1823": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1824": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "1826": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "1827": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "DUP1",
      "path": "160"
    },
    "1828": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "1829": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "SUB",
      "path": "160"
    },
    "1830": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "1831": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6973,
        7020
      ],
      "op": "LOG4",
      "path": "160"
    },
    "1832": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7031,
        7106
      ],
      "op": "PUSH2",
      "path": "160",
      "statement": 23,
      "value": "0x735"
    },
    "1835": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7067,
        7075
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1836": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7077,
        7081
      ],
      "op": "DUP8",
      "path": "160"
    },
    "1837": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7083,
        7085
      ],
      "op": "DUP8",
      "path": "160"
    },
    "1838": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7087,
        7090
      ],
      "op": "DUP8",
      "path": "160"
    },
    "1839": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7092,
        7099
      ],
      "op": "DUP8",
      "path": "160"
    },
    "1840": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7101,
        7105
      ],
      "op": "DUP8",
      "path": "160"
    },
    "1841": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7031,
        7066
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x944"
    },
    "1844": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7031,
        7106
      ],
      "op": "JUMP",
      "path": "160"
    },
    "1845": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7031,
        7106
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1846": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6256,
        7113
      ],
      "op": "POP",
      "path": "160"
    },
    "1847": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6068,
        7113
      ],
      "op": "POP",
      "path": "160"
    },
    "1848": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6068,
        7113
      ],
      "op": "POP",
      "path": "160"
    },
    "1849": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6068,
        7113
      ],
      "op": "POP",
      "path": "160"
    },
    "1850": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6068,
        7113
      ],
      "op": "POP",
      "path": "160"
    },
    "1851": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6068,
        7113
      ],
      "op": "POP",
      "path": "160"
    },
    "1852": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        6068,
        7113
      ],
      "op": "JUMP",
      "path": "160"
    },
    "1853": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12074,
        12397
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1854": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12224,
        12232
      ],
      "op": "DUP2",
      "path": "160",
      "statement": 24
    },
    "1855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1861": {
      "op": "SHL"
    },
    "1862": {
      "op": "SUB"
    },
    "1863": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12215,
        12232
      ],
      "op": "AND",
      "path": "160"
    },
    "1864": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12215,
        12220
      ],
      "op": "DUP4",
      "path": "160"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1871": {
      "op": "SHL"
    },
    "1872": {
      "op": "SUB"
    },
    "1873": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12215,
        12232
      ],
      "op": "AND",
      "path": "160"
    },
    "1874": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12215,
        12232
      ],
      "op": "EQ",
      "path": "160"
    },
    "1875": {
      "branch": 50,
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12215,
        12232
      ],
      "op": "ISZERO",
      "path": "160"
    },
    "1876": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x7B1"
    },
    "1879": {
      "branch": 50,
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "1880": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "1882": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "1883": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1889": {
      "op": "SHL"
    },
    "1890": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1891": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "1892": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1894": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "1896": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "DUP3",
      "path": "160"
    },
    "1897": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "ADD",
      "path": "160"
    },
    "1898": {
      "op": "MSTORE"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1903": {
      "op": "DUP3"
    },
    "1904": {
      "op": "ADD"
    },
    "1905": {
      "op": "MSTORE"
    },
    "1906": {
      "op": "PUSH32",
      "value": "0x455243313135353A2073657474696E6720617070726F76616C20737461747573"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1941": {
      "op": "DUP3"
    },
    "1942": {
      "op": "ADD"
    },
    "1943": {
      "op": "MSTORE"
    },
    "1944": {
      "op": "PUSH9",
      "value": "0x103337B91039B2B633"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1956": {
      "op": "SHL"
    },
    "1957": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1959": {
      "op": "DUP3"
    },
    "1960": {
      "op": "ADD"
    },
    "1961": {
      "op": "MSTORE"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1964": {
      "op": "ADD"
    },
    "1965": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x1F4"
    },
    "1968": {
      "op": "JUMP"
    },
    "1969": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12207,
        12278
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "1970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1976": {
      "op": "SHL"
    },
    "1977": {
      "op": "SUB"
    },
    "1978": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "DUP4",
      "path": "160",
      "statement": 25
    },
    "1979": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1980": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "AND",
      "path": "160"
    },
    "1981": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x0"
    },
    "1983": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1984": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1985": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "1986": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12306
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x1"
    },
    "1988": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "1990": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "1991": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "DUP2",
      "path": "160"
    },
    "1992": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "1993": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "1995": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "DUP1",
      "path": "160"
    },
    "1996": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "DUP4",
      "path": "160"
    },
    "1997": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12313
      ],
      "op": "KECCAK256",
      "path": "160"
    },
    "1998": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "SWAP5",
      "path": "160"
    },
    "1999": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "DUP8",
      "path": "160"
    },
    "2000": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "AND",
      "path": "160"
    },
    "2001": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "DUP1",
      "path": "160"
    },
    "2002": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "DUP5",
      "path": "160"
    },
    "2003": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "2004": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "SWAP5",
      "path": "160"
    },
    "2005": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "DUP3",
      "path": "160"
    },
    "2006": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "2007": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "2008": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "DUP3",
      "path": "160"
    },
    "2009": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2010": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12323
      ],
      "op": "KECCAK256",
      "path": "160"
    },
    "2011": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "DUP1",
      "path": "160"
    },
    "2012": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "SLOAD",
      "path": "160"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2015": {
      "op": "NOT"
    },
    "2016": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "AND",
      "path": "160"
    },
    "2017": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "DUP7",
      "path": "160"
    },
    "2018": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "ISZERO",
      "path": "160"
    },
    "2019": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "ISZERO",
      "path": "160"
    },
    "2020": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2021": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2022": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "OR",
      "path": "160"
    },
    "2023": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2024": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "2025": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12288,
        12334
      ],
      "op": "SSTORE",
      "path": "160"
    },
    "2026": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "SWAP2",
      "path": "160",
      "statement": 26
    },
    "2027": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "2028": {
      "op": "SWAP2"
    },
    "2029": {
      "op": "DUP3"
    },
    "2030": {
      "op": "MSTORE"
    },
    "2031": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "PUSH32",
      "path": "160",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "2064": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "2065": {
      "op": "ADD"
    },
    "2066": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "2068": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "2069": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "DUP1",
      "path": "160"
    },
    "2070": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "2071": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "SUB",
      "path": "160"
    },
    "2072": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2073": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12349,
        12390
      ],
      "op": "LOG3",
      "path": "160"
    },
    "2074": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12074,
        12397
      ],
      "op": "POP",
      "path": "160"
    },
    "2075": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12074,
        12397
      ],
      "op": "POP",
      "path": "160"
    },
    "2076": {
      "fn": "ERC1155._setApprovalForAll",
      "offset": [
        12074,
        12397
      ],
      "op": "POP",
      "path": "160"
    },
    "2077": {
      "fn": "ERC1155._setApprovalForAll",
      "jump": "o",
      "offset": [
        12074,
        12397
      ],
      "op": "JUMP",
      "path": "160"
    },
    "2078": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        4925,
        5722
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2085": {
      "op": "SHL"
    },
    "2086": {
      "op": "SUB"
    },
    "2087": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5106,
        5122
      ],
      "op": "DUP5",
      "path": "160",
      "statement": 27
    },
    "2088": {
      "branch": 51,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5106,
        5122
      ],
      "op": "AND",
      "path": "160"
    },
    "2089": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x844"
    },
    "2092": {
      "branch": 51,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "2093": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "2095": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "2096": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2100": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2102": {
      "op": "SHL"
    },
    "2103": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2104": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "2105": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "2107": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "ADD",
      "path": "160"
    },
    "2108": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x1F4"
    },
    "2111": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2112": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x1107"
    },
    "2115": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5098,
        5164
      ],
      "op": "JUMP",
      "path": "160"
    },
    "2116": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5098,
        5164
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "2117": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "2118": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5217,
        5313
      ],
      "op": "PUSH2",
      "path": "160",
      "statement": 28,
      "value": "0x85D"
    },
    "2121": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "DUP2",
      "path": "210"
    },
    "2122": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5248,
        5252
      ],
      "op": "DUP8",
      "path": "160"
    },
    "2123": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5254,
        5256
      ],
      "op": "DUP8",
      "path": "160"
    },
    "2124": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5258,
        5279
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x854"
    },
    "2127": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5276,
        5278
      ],
      "op": "DUP9",
      "path": "160"
    },
    "2128": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5258,
        5275
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xAA0"
    },
    "2131": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5258,
        5279
      ],
      "op": "JUMP",
      "path": "160"
    },
    "2132": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5258,
        5279
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "2133": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5281,
        5306
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x399"
    },
    "2136": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5299,
        5305
      ],
      "op": "DUP9",
      "path": "160"
    },
    "2137": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5281,
        5298
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xAA0"
    },
    "2140": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5281,
        5306
      ],
      "op": "JUMP",
      "path": "160"
    },
    "2141": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5217,
        5313
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "2142": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5324,
        5343
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x0"
    },
    "2144": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "DUP5",
      "path": "160"
    },
    "2145": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2146": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "2147": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "2149": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2150": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2151": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "2152": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "2154": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "DUP1",
      "path": "160"
    },
    "2155": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "DUP4",
      "path": "160"
    },
    "2156": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5359
      ],
      "op": "KECCAK256",
      "path": "160"
    },
    "2157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2161": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2163": {
      "op": "SHL"
    },
    "2164": {
      "op": "SUB"
    },
    "2165": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "DUP11",
      "path": "160"
    },
    "2166": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "AND",
      "path": "160"
    },
    "2167": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "DUP5",
      "path": "160"
    },
    "2168": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "2169": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2170": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "2171": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "2172": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2173": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "KECCAK256",
      "path": "160"
    },
    "2174": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5365
      ],
      "op": "SLOAD",
      "path": "160"
    },
    "2175": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5383,
        5404
      ],
      "op": "DUP4",
      "path": "160",
      "statement": 29
    },
    "2176": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5383,
        5404
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2177": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5383,
        5404
      ],
      "op": "LT",
      "path": "160"
    },
    "2178": {
      "branch": 52,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5383,
        5404
      ],
      "op": "ISZERO",
      "path": "160"
    },
    "2179": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x89E"
    },
    "2182": {
      "branch": 52,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "2183": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "2185": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "2186": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2190": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2192": {
      "op": "SHL"
    },
    "2193": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2194": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "2195": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "2197": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "ADD",
      "path": "160"
    },
    "2198": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x1F4"
    },
    "2201": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2202": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x114C"
    },
    "2205": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5375,
        5451
      ],
      "op": "JUMP",
      "path": "160"
    },
    "2206": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5375,
        5451
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "2207": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5494
      ],
      "op": "PUSH1",
      "path": "160",
      "statement": 30,
      "value": "0x0"
    },
    "2209": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "DUP6",
      "path": "160"
    },
    "2210": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2211": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "2212": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "2214": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2215": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2216": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "2217": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "2219": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "DUP1",
      "path": "160"
    },
    "2220": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "DUP4",
      "path": "160"
    },
    "2221": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5498
      ],
      "op": "KECCAK256",
      "path": "160"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2226": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2228": {
      "op": "SHL"
    },
    "2229": {
      "op": "SUB"
    },
    "2230": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "DUP12",
      "path": "160"
    },
    "2231": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2232": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "AND",
      "path": "160"
    },
    "2233": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "DUP6",
      "path": "160"
    },
    "2234": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "2235": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "SWAP3",
      "path": "160"
    },
    "2236": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "2237": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "DUP1",
      "path": "160"
    },
    "2238": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "DUP4",
      "path": "160"
    },
    "2239": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5504
      ],
      "op": "KECCAK256",
      "path": "160"
    },
    "2240": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5507,
        5527
      ],
      "op": "DUP8",
      "path": "160"
    },
    "2241": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5507,
        5527
      ],
      "op": "DUP6",
      "path": "160"
    },
    "2242": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5507,
        5527
      ],
      "op": "SUB",
      "path": "160"
    },
    "2243": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5527
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2244": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5527
      ],
      "op": "SSTORE",
      "path": "160"
    },
    "2245": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5564
      ],
      "op": "SWAP1",
      "path": "160",
      "statement": 31
    },
    "2246": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5564
      ],
      "op": "DUP9",
      "path": "160"
    },
    "2247": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5564
      ],
      "op": "AND",
      "path": "160"
    },
    "2248": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5564
      ],
      "op": "DUP3",
      "path": "160"
    },
    "2249": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5564
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "2250": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5564
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2251": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5564
      ],
      "op": "KECCAK256",
      "path": "160"
    },
    "2252": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "DUP1",
      "path": "160"
    },
    "2253": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "SLOAD",
      "path": "160"
    },
    "2254": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5507,
        5527
      ],
      "op": "DUP7",
      "path": "160"
    },
    "2255": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5507,
        5527
      ],
      "op": "SWAP3",
      "path": "160"
    },
    "2256": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5485,
        5494
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2257": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x8DB"
    },
    "2260": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2261": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5507,
        5527
      ],
      "op": "DUP5",
      "path": "160"
    },
    "2262": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5507,
        5527
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2263": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x1196"
    },
    "2266": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5547,
        5574
      ],
      "op": "JUMP",
      "path": "160"
    },
    "2267": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "2268": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2269": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "2270": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5547,
        5574
      ],
      "op": "SSTORE",
      "path": "160"
    },
    "2271": {
      "op": "POP"
    },
    "2272": {
      "op": "POP"
    },
    "2273": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "PUSH1",
      "path": "160",
      "statement": 32,
      "value": "0x40"
    },
    "2275": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "DUP1",
      "path": "160"
    },
    "2276": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "2277": {
      "op": "DUP7"
    },
    "2278": {
      "op": "DUP2"
    },
    "2279": {
      "op": "MSTORE"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2282": {
      "op": "DUP2"
    },
    "2283": {
      "op": "ADD"
    },
    "2284": {
      "op": "DUP7"
    },
    "2285": {
      "op": "SWAP1"
    },
    "2286": {
      "op": "MSTORE"
    },
    "2287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2291": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2293": {
      "op": "SHL"
    },
    "2294": {
      "op": "SUB"
    },
    "2295": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "DUP1",
      "path": "160"
    },
    "2296": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "DUP10",
      "path": "160"
    },
    "2297": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "AND",
      "path": "160"
    },
    "2298": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "SWAP3",
      "path": "160"
    },
    "2299": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "DUP11",
      "path": "160"
    },
    "2300": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "DUP3",
      "path": "160"
    },
    "2301": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "AND",
      "path": "160"
    },
    "2302": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "SWAP3",
      "path": "160"
    },
    "2303": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "2304": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "DUP7",
      "path": "160"
    },
    "2305": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "AND",
      "path": "160"
    },
    "2306": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "2307": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "PUSH32",
      "path": "160",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "2340": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "2341": {
      "op": "ADD"
    },
    "2342": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "2344": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "2345": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "DUP1",
      "path": "160"
    },
    "2346": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "2347": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "SUB",
      "path": "160"
    },
    "2348": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2349": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5590,
        5636
      ],
      "op": "LOG4",
      "path": "160"
    },
    "2350": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5647,
        5715
      ],
      "op": "PUSH2",
      "path": "160",
      "statement": 33,
      "value": "0x93B"
    },
    "2353": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5678,
        5686
      ],
      "op": "DUP3",
      "path": "160"
    },
    "2354": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5688,
        5692
      ],
      "op": "DUP9",
      "path": "160"
    },
    "2355": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5694,
        5696
      ],
      "op": "DUP9",
      "path": "160"
    },
    "2356": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5698,
        5700
      ],
      "op": "DUP9",
      "path": "160"
    },
    "2357": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5702,
        5708
      ],
      "op": "DUP9",
      "path": "160"
    },
    "2358": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5710,
        5714
      ],
      "op": "DUP9",
      "path": "160"
    },
    "2359": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5647,
        5677
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xAEB"
    },
    "2362": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5647,
        5715
      ],
      "op": "JUMP",
      "path": "160"
    },
    "2363": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5647,
        5715
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "2364": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5088,
        5722
      ],
      "op": "POP",
      "path": "160"
    },
    "2365": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5088,
        5722
      ],
      "op": "POP",
      "path": "160"
    },
    "2366": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        4925,
        5722
      ],
      "op": "POP",
      "path": "160"
    },
    "2367": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        4925,
        5722
      ],
      "op": "POP",
      "path": "160"
    },
    "2368": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        4925,
        5722
      ],
      "op": "POP",
      "path": "160"
    },
    "2369": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        4925,
        5722
      ],
      "op": "POP",
      "path": "160"
    },
    "2370": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        4925,
        5722
      ],
      "op": "POP",
      "path": "160"
    },
    "2371": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "o",
      "offset": [
        4925,
        5722
      ],
      "op": "JUMP",
      "path": "160"
    },
    "2372": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14282,
        15074
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2379": {
      "op": "SHL"
    },
    "2380": {
      "op": "SUB"
    },
    "2381": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14514,
        14527
      ],
      "op": "DUP5",
      "path": "160"
    },
    "2382": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14514,
        14527
      ],
      "op": "AND",
      "path": "160"
    },
    "2383": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "206",
      "statement": 34
    },
    "2384": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1488
      ],
      "op": "ISZERO",
      "path": "206"
    },
    "2385": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14510,
        15068
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x735"
    },
    "2388": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14510,
        15068
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "2389": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "2391": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "2392": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "2397": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2399": {
      "op": "SHL"
    },
    "2400": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2401": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2408": {
      "op": "SHL"
    },
    "2409": {
      "op": "SUB"
    },
    "2410": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14592
      ],
      "op": "DUP6",
      "path": "160"
    },
    "2411": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14592
      ],
      "op": "AND",
      "path": "160"
    },
    "2412": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14592
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2413": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14592
      ],
      "op": "PUSH4",
      "path": "160",
      "value": "0xBC197C81"
    },
    "2418": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14592
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2419": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x988"
    },
    "2422": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2423": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14593,
        14601
      ],
      "op": "DUP10",
      "path": "160"
    },
    "2424": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14593,
        14601
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2425": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14603,
        14607
      ],
      "op": "DUP10",
      "path": "160"
    },
    "2426": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14603,
        14607
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2427": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14609,
        14612
      ],
      "op": "DUP9",
      "path": "160"
    },
    "2428": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14609,
        14612
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2429": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14614,
        14621
      ],
      "op": "DUP9",
      "path": "160"
    },
    "2430": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14614,
        14621
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2431": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14623,
        14627
      ],
      "op": "DUP9",
      "path": "160"
    },
    "2432": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14623,
        14627
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2433": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "2435": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "ADD",
      "path": "160"
    },
    "2436": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x11DC"
    },
    "2439": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14549,
        14628
      ],
      "op": "JUMP",
      "path": "160"
    },
    "2440": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "2441": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "2443": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "2445": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "2446": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP1",
      "path": "160"
    },
    "2447": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP4",
      "path": "160"
    },
    "2448": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "SUB",
      "path": "160"
    },
    "2449": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2450": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x0"
    },
    "2452": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP8",
      "path": "160"
    },
    "2453": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "GAS",
      "path": "160"
    },
    "2454": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "CALL",
      "path": "160"
    },
    "2455": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "SWAP3",
      "path": "160"
    },
    "2456": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "POP",
      "path": "160"
    },
    "2457": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "POP",
      "path": "160"
    },
    "2458": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "POP",
      "path": "160"
    },
    "2459": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP1",
      "path": "160"
    },
    "2460": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "ISZERO",
      "path": "160"
    },
    "2461": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x9C3"
    },
    "2464": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "2465": {
      "op": "POP"
    },
    "2466": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "2468": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP1",
      "path": "160"
    },
    "2469": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "2470": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x1F"
    },
    "2472": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "RETURNDATASIZE",
      "path": "160"
    },
    "2473": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2474": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2475": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "ADD",
      "path": "160"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2478": {
      "op": "NOT"
    },
    "2479": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "AND",
      "path": "160"
    },
    "2480": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP3",
      "path": "160"
    },
    "2481": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "ADD",
      "path": "160"
    },
    "2482": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2483": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "SWAP3",
      "path": "160"
    },
    "2484": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "2485": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x9C0"
    },
    "2488": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "2489": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2490": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "ADD",
      "path": "160"
    },
    "2491": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2492": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x123A"
    },
    "2495": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14549,
        14628
      ],
      "op": "JUMP",
      "path": "160"
    },
    "2496": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "2497": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x1"
    },
    "2499": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14549,
        14628
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "2500": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xA70"
    },
    "2503": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "2504": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x9CF"
    },
    "2507": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x1257"
    },
    "2510": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMP",
      "path": "160"
    },
    "2511": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "2512": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "DUP1",
      "path": "160"
    },
    "2513": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH4",
      "path": "160",
      "value": "0x8C379A0"
    },
    "2518": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "EQ",
      "path": "160"
    },
    "2519": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "ISZERO",
      "path": "160"
    },
    "2520": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xA09"
    },
    "2523": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "2524": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "POP",
      "path": "160"
    },
    "2525": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x9E4"
    },
    "2528": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x1273"
    },
    "2531": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMP",
      "path": "160"
    },
    "2532": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "2533": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "DUP1",
      "path": "160"
    },
    "2534": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x9EF"
    },
    "2537": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "2538": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "POP",
      "path": "160"
    },
    "2539": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xA0B"
    },
    "2542": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMP",
      "path": "160"
    },
    "2543": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "2544": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14934,
        14940
      ],
      "op": "DUP1",
      "path": "160",
      "statement": 35
    },
    "2545": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "2547": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "2548": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2554": {
      "op": "SHL"
    },
    "2555": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2556": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "2557": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "2559": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "ADD",
      "path": "160"
    },
    "2560": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x1F4"
    },
    "2563": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "2564": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2565": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14927,
        14941
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xC8F"
    },
    "2568": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14927,
        14941
      ],
      "op": "JUMP",
      "path": "160"
    },
    "2569": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "2570": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "POP",
      "path": "160"
    },
    "2571": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "2572": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14981,
        15043
      ],
      "op": "PUSH1",
      "path": "160",
      "statement": 36,
      "value": "0x40"
    },
    "2574": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14981,
        15043
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "2575": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2579": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2581": {
      "op": "SHL"
    },
    "2582": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14981,
        15043
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2583": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14981,
        15043
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2586": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14981,
        15043
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "2588": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14981,
        15043
      ],
      "op": "DUP3",
      "path": "160"
    },
    "2589": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14981,
        15043
      ],
      "op": "ADD",
      "path": "160"
    },
    "2590": {
      "op": "MSTORE"
    },
    "2591": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "2593": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2595": {
      "op": "DUP3"
    },
    "2596": {
      "op": "ADD"
    },
    "2597": {
      "op": "MSTORE"
    },
    "2598": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
    },
    "2631": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2633": {
      "op": "DUP3"
    },
    "2634": {
      "op": "ADD"
    },
    "2635": {
      "op": "MSTORE"
    },
    "2636": {
      "op": "PUSH20",
      "value": "0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "2657": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "2659": {
      "op": "SHL"
    },
    "2660": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2662": {
      "op": "DUP3"
    },
    "2663": {
      "op": "ADD"
    },
    "2664": {
      "op": "MSTORE"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2667": {
      "op": "ADD"
    },
    "2668": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14981,
        15043
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x1F4"
    },
    "2671": {
      "op": "JUMP"
    },
    "2672": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14545,
        15058
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2679": {
      "op": "SHL"
    },
    "2680": {
      "op": "SUB"
    },
    "2681": {
      "op": "NOT"
    },
    "2682": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14707,
        14767
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2683": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14707,
        14767
      ],
      "op": "AND",
      "path": "160"
    },
    "2684": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "2689": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2691": {
      "op": "SHL"
    },
    "2692": {
      "branch": 53,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14707,
        14767
      ],
      "op": "EQ",
      "path": "160"
    },
    "2693": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14703,
        14860
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x93B"
    },
    "2696": {
      "branch": 53,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14703,
        14860
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "2697": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "PUSH1",
      "path": "160",
      "statement": 37,
      "value": "0x40"
    },
    "2699": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "2700": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2704": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2706": {
      "op": "SHL"
    },
    "2707": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2708": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "2709": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "2711": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "ADD",
      "path": "160"
    },
    "2712": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x1F4"
    },
    "2715": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2716": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14791,
        14841
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x12FD"
    },
    "2719": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14791,
        14841
      ],
      "op": "JUMP",
      "path": "160"
    },
    "2720": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15080,
        15273
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "2721": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "2723": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP1",
      "path": "160"
    },
    "2724": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "2725": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15213,
        15214
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x1"
    },
    "2727": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP1",
      "path": "160"
    },
    "2728": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP3",
      "path": "160"
    },
    "2729": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "2730": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2731": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP4",
      "path": "160"
    },
    "2732": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "ADD",
      "path": "160"
    },
    "2733": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2734": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "SWAP3",
      "path": "160"
    },
    "2735": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "2736": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15146,
        15162
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x60"
    },
    "2738": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15146,
        15162
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "2739": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15174,
        15196
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x0"
    },
    "2741": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15174,
        15196
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "2742": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2743": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "2745": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP1",
      "path": "160"
    },
    "2746": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP4",
      "path": "160"
    },
    "2747": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "ADD",
      "path": "160"
    },
    "2748": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2749": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP1",
      "path": "160"
    },
    "2750": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "CALLDATASIZE",
      "path": "160"
    },
    "2751": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "DUP4",
      "path": "160"
    },
    "2752": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "CALLDATACOPY",
      "path": "160"
    },
    "2753": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "ADD",
      "path": "160"
    },
    "2754": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2755": {
      "op": "POP"
    },
    "2756": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15199,
        15215
      ],
      "op": "POP",
      "path": "160"
    },
    "2757": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15174,
        15215
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2758": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15174,
        15215
      ],
      "op": "POP",
      "path": "160"
    },
    "2759": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15236,
        15243
      ],
      "op": "DUP3",
      "path": "160",
      "statement": 38
    },
    "2760": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15230
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2761": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15231,
        15232
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x0"
    },
    "2763": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2764": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "2765": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2766": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "LT",
      "path": "160"
    },
    "2767": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xADA"
    },
    "2770": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "2771": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xADA"
    },
    "2774": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x10C0"
    },
    "2777": {
      "fn": "ERC1155._asSingletonArray",
      "jump": "i",
      "offset": [
        15225,
        15233
      ],
      "op": "JUMP",
      "path": "160"
    },
    "2778": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "2779": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "2781": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2782": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2783": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "MUL",
      "path": "160"
    },
    "2784": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "2785": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2786": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "2787": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "ADD",
      "path": "160"
    },
    "2788": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15233
      ],
      "op": "ADD",
      "path": "160"
    },
    "2789": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15225,
        15243
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "2790": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15261,
        15266
      ],
      "op": "SWAP3",
      "path": "160",
      "statement": 39
    },
    "2791": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15080,
        15273
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "2792": {
      "op": "POP"
    },
    "2793": {
      "op": "POP"
    },
    "2794": {
      "fn": "ERC1155._asSingletonArray",
      "jump": "o",
      "offset": [
        15080,
        15273
      ],
      "op": "JUMP",
      "path": "160"
    },
    "2795": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13551,
        14276
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2802": {
      "op": "SHL"
    },
    "2803": {
      "op": "SUB"
    },
    "2804": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13758,
        13771
      ],
      "op": "DUP5",
      "path": "160"
    },
    "2805": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13758,
        13771
      ],
      "op": "AND",
      "path": "160"
    },
    "2806": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "206"
    },
    "2807": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1488
      ],
      "op": "ISZERO",
      "path": "206"
    },
    "2808": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13754,
        14270
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x735"
    },
    "2811": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13754,
        14270
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "2812": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "2814": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "2815": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "2820": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2822": {
      "op": "SHL"
    },
    "2823": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2824": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "2825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2829": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2831": {
      "op": "SHL"
    },
    "2832": {
      "op": "SUB"
    },
    "2833": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13831
      ],
      "op": "DUP6",
      "path": "160"
    },
    "2834": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13831
      ],
      "op": "AND",
      "path": "160"
    },
    "2835": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13831
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2836": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13831
      ],
      "op": "PUSH4",
      "path": "160",
      "value": "0xF23A6E61"
    },
    "2841": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13831
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2842": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xB2F"
    },
    "2845": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2846": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13832,
        13840
      ],
      "op": "DUP10",
      "path": "160"
    },
    "2847": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13832,
        13840
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2848": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13842,
        13846
      ],
      "op": "DUP10",
      "path": "160"
    },
    "2849": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13842,
        13846
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2850": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13848,
        13850
      ],
      "op": "DUP9",
      "path": "160"
    },
    "2851": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13848,
        13850
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2852": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13852,
        13858
      ],
      "op": "DUP9",
      "path": "160"
    },
    "2853": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13852,
        13858
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2854": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13860,
        13864
      ],
      "op": "DUP9",
      "path": "160"
    },
    "2855": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13860,
        13864
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2856": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "2858": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "ADD",
      "path": "160"
    },
    "2859": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x1345"
    },
    "2862": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13793,
        13865
      ],
      "op": "JUMP",
      "path": "160"
    },
    "2863": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "2864": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x20"
    },
    "2866": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "2868": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "2869": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP1",
      "path": "160"
    },
    "2870": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP4",
      "path": "160"
    },
    "2871": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "SUB",
      "path": "160"
    },
    "2872": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2873": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x0"
    },
    "2875": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP8",
      "path": "160"
    },
    "2876": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "GAS",
      "path": "160"
    },
    "2877": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "CALL",
      "path": "160"
    },
    "2878": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "SWAP3",
      "path": "160"
    },
    "2879": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "POP",
      "path": "160"
    },
    "2880": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "POP",
      "path": "160"
    },
    "2881": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "POP",
      "path": "160"
    },
    "2882": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP1",
      "path": "160"
    },
    "2883": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "ISZERO",
      "path": "160"
    },
    "2884": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xB6A"
    },
    "2887": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "2888": {
      "op": "POP"
    },
    "2889": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x40"
    },
    "2891": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP1",
      "path": "160"
    },
    "2892": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "2893": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x1F"
    },
    "2895": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "RETURNDATASIZE",
      "path": "160"
    },
    "2896": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2897": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2898": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "ADD",
      "path": "160"
    },
    "2899": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2901": {
      "op": "NOT"
    },
    "2902": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "AND",
      "path": "160"
    },
    "2903": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP3",
      "path": "160"
    },
    "2904": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "ADD",
      "path": "160"
    },
    "2905": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2906": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "SWAP3",
      "path": "160"
    },
    "2907": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "2908": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xB67"
    },
    "2911": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "SWAP2",
      "path": "160"
    },
    "2912": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2913": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "ADD",
      "path": "160"
    },
    "2914": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2915": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x123A"
    },
    "2918": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13793,
        13865
      ],
      "op": "JUMP",
      "path": "160"
    },
    "2919": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "2920": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x1"
    },
    "2922": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13793,
        13865
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "2923": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13789,
        14260
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0xB76"
    },
    "2926": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13789,
        14260
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "2927": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13789,
        14260
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x9CF"
    },
    "2930": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13789,
        14260
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x1257"
    },
    "2933": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13789,
        14260
      ],
      "op": "JUMP",
      "path": "160"
    },
    "2934": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13789,
        14260
      ],
      "op": "JUMPDEST",
      "path": "160"
    },
    "2935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2937": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2941": {
      "op": "SHL"
    },
    "2942": {
      "op": "SUB"
    },
    "2943": {
      "op": "NOT"
    },
    "2944": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13914,
        13969
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2945": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13914,
        13969
      ],
      "op": "AND",
      "path": "160"
    },
    "2946": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "2951": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2953": {
      "op": "SHL"
    },
    "2954": {
      "branch": 54,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13914,
        13969
      ],
      "op": "EQ",
      "path": "160"
    },
    "2955": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13910,
        14062
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x93B"
    },
    "2958": {
      "branch": 54,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13910,
        14062
      ],
      "op": "JUMPI",
      "path": "160"
    },
    "2959": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "PUSH1",
      "path": "160",
      "statement": 40,
      "value": "0x40"
    },
    "2961": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "MLOAD",
      "path": "160"
    },
    "2962": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2966": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2968": {
      "op": "SHL"
    },
    "2969": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "DUP2",
      "path": "160"
    },
    "2970": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "MSTORE",
      "path": "160"
    },
    "2971": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "PUSH1",
      "path": "160",
      "value": "0x4"
    },
    "2973": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "ADD",
      "path": "160"
    },
    "2974": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x1F4"
    },
    "2977": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "SWAP1",
      "path": "160"
    },
    "2978": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13993,
        14043
      ],
      "op": "PUSH2",
      "path": "160",
      "value": "0x12FD"
    },
    "2981": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13993,
        14043
      ],
      "op": "JUMP",
      "path": "160"
    },
    "2982": {
      "op": "JUMPDEST"
    },
    "2983": {
      "op": "DUP1"
    },
    "2984": {
      "op": "CALLDATALOAD"
    },
    "2985": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2987": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2991": {
      "op": "SHL"
    },
    "2992": {
      "op": "SUB"
    },
    "2993": {
      "op": "DUP2"
    },
    "2994": {
      "op": "AND"
    },
    "2995": {
      "op": "DUP2"
    },
    "2996": {
      "op": "EQ"
    },
    "2997": {
      "op": "PUSH2",
      "value": "0xBBD"
    },
    "3000": {
      "op": "JUMPI"
    },
    "3001": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3003": {
      "op": "DUP1"
    },
    "3004": {
      "op": "REVERT"
    },
    "3005": {
      "op": "JUMPDEST"
    },
    "3006": {
      "op": "SWAP2"
    },
    "3007": {
      "op": "SWAP1"
    },
    "3008": {
      "op": "POP"
    },
    "3009": {
      "jump": "o",
      "op": "JUMP"
    },
    "3010": {
      "op": "JUMPDEST"
    },
    "3011": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3013": {
      "op": "DUP1"
    },
    "3014": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3016": {
      "op": "DUP4"
    },
    "3017": {
      "op": "DUP6"
    },
    "3018": {
      "op": "SUB"
    },
    "3019": {
      "op": "SLT"
    },
    "3020": {
      "op": "ISZERO"
    },
    "3021": {
      "op": "PUSH2",
      "value": "0xBD5"
    },
    "3024": {
      "op": "JUMPI"
    },
    "3025": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3027": {
      "op": "DUP1"
    },
    "3028": {
      "op": "REVERT"
    },
    "3029": {
      "op": "JUMPDEST"
    },
    "3030": {
      "op": "PUSH2",
      "value": "0xBDE"
    },
    "3033": {
      "op": "DUP4"
    },
    "3034": {
      "op": "PUSH2",
      "value": "0xBA6"
    },
    "3037": {
      "jump": "i",
      "op": "JUMP"
    },
    "3038": {
      "op": "JUMPDEST"
    },
    "3039": {
      "op": "SWAP5"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3042": {
      "op": "SWAP4"
    },
    "3043": {
      "op": "SWAP1"
    },
    "3044": {
      "op": "SWAP4"
    },
    "3045": {
      "op": "ADD"
    },
    "3046": {
      "op": "CALLDATALOAD"
    },
    "3047": {
      "op": "SWAP4"
    },
    "3048": {
      "op": "POP"
    },
    "3049": {
      "op": "POP"
    },
    "3050": {
      "op": "POP"
    },
    "3051": {
      "jump": "o",
      "op": "JUMP"
    },
    "3052": {
      "op": "JUMPDEST"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3059": {
      "op": "SHL"
    },
    "3060": {
      "op": "SUB"
    },
    "3061": {
      "op": "NOT"
    },
    "3062": {
      "op": "DUP2"
    },
    "3063": {
      "op": "AND"
    },
    "3064": {
      "op": "DUP2"
    },
    "3065": {
      "op": "EQ"
    },
    "3066": {
      "op": "PUSH2",
      "value": "0xC02"
    },
    "3069": {
      "op": "JUMPI"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3072": {
      "op": "DUP1"
    },
    "3073": {
      "op": "REVERT"
    },
    "3074": {
      "op": "JUMPDEST"
    },
    "3075": {
      "op": "POP"
    },
    "3076": {
      "jump": "o",
      "op": "JUMP"
    },
    "3077": {
      "op": "JUMPDEST"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3082": {
      "op": "DUP3"
    },
    "3083": {
      "op": "DUP5"
    },
    "3084": {
      "op": "SUB"
    },
    "3085": {
      "op": "SLT"
    },
    "3086": {
      "op": "ISZERO"
    },
    "3087": {
      "op": "PUSH2",
      "value": "0xC17"
    },
    "3090": {
      "op": "JUMPI"
    },
    "3091": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3093": {
      "op": "DUP1"
    },
    "3094": {
      "op": "REVERT"
    },
    "3095": {
      "op": "JUMPDEST"
    },
    "3096": {
      "op": "DUP2"
    },
    "3097": {
      "op": "CALLDATALOAD"
    },
    "3098": {
      "op": "PUSH2",
      "value": "0xC22"
    },
    "3101": {
      "op": "DUP2"
    },
    "3102": {
      "op": "PUSH2",
      "value": "0xBEC"
    },
    "3105": {
      "jump": "i",
      "op": "JUMP"
    },
    "3106": {
      "op": "JUMPDEST"
    },
    "3107": {
      "op": "SWAP4"
    },
    "3108": {
      "op": "SWAP3"
    },
    "3109": {
      "op": "POP"
    },
    "3110": {
      "op": "POP"
    },
    "3111": {
      "op": "POP"
    },
    "3112": {
      "jump": "o",
      "op": "JUMP"
    },
    "3113": {
      "op": "JUMPDEST"
    },
    "3114": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3118": {
      "op": "DUP3"
    },
    "3119": {
      "op": "DUP5"
    },
    "3120": {
      "op": "SUB"
    },
    "3121": {
      "op": "SLT"
    },
    "3122": {
      "op": "ISZERO"
    },
    "3123": {
      "op": "PUSH2",
      "value": "0xC3B"
    },
    "3126": {
      "op": "JUMPI"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3129": {
      "op": "DUP1"
    },
    "3130": {
      "op": "REVERT"
    },
    "3131": {
      "op": "JUMPDEST"
    },
    "3132": {
      "op": "POP"
    },
    "3133": {
      "op": "CALLDATALOAD"
    },
    "3134": {
      "op": "SWAP2"
    },
    "3135": {
      "op": "SWAP1"
    },
    "3136": {
      "op": "POP"
    },
    "3137": {
      "jump": "o",
      "op": "JUMP"
    },
    "3138": {
      "op": "JUMPDEST"
    },
    "3139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3141": {
      "op": "DUP2"
    },
    "3142": {
      "op": "MLOAD"
    },
    "3143": {
      "op": "DUP1"
    },
    "3144": {
      "op": "DUP5"
    },
    "3145": {
      "op": "MSTORE"
    },
    "3146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3148": {
      "op": "JUMPDEST"
    },
    "3149": {
      "op": "DUP2"
    },
    "3150": {
      "op": "DUP2"
    },
    "3151": {
      "op": "LT"
    },
    "3152": {
      "op": "ISZERO"
    },
    "3153": {
      "op": "PUSH2",
      "value": "0xC68"
    },
    "3156": {
      "op": "JUMPI"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3159": {
      "op": "DUP2"
    },
    "3160": {
      "op": "DUP6"
    },
    "3161": {
      "op": "ADD"
    },
    "3162": {
      "op": "DUP2"
    },
    "3163": {
      "op": "ADD"
    },
    "3164": {
      "op": "MLOAD"
    },
    "3165": {
      "op": "DUP7"
    },
    "3166": {
      "op": "DUP4"
    },
    "3167": {
      "op": "ADD"
    },
    "3168": {
      "op": "DUP3"
    },
    "3169": {
      "op": "ADD"
    },
    "3170": {
      "op": "MSTORE"
    },
    "3171": {
      "op": "ADD"
    },
    "3172": {
      "op": "PUSH2",
      "value": "0xC4C"
    },
    "3175": {
      "op": "JUMP"
    },
    "3176": {
      "op": "JUMPDEST"
    },
    "3177": {
      "op": "DUP2"
    },
    "3178": {
      "op": "DUP2"
    },
    "3179": {
      "op": "GT"
    },
    "3180": {
      "op": "ISZERO"
    },
    "3181": {
      "op": "PUSH2",
      "value": "0xC7A"
    },
    "3184": {
      "op": "JUMPI"
    },
    "3185": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3187": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3189": {
      "op": "DUP4"
    },
    "3190": {
      "op": "DUP8"
    },
    "3191": {
      "op": "ADD"
    },
    "3192": {
      "op": "ADD"
    },
    "3193": {
      "op": "MSTORE"
    },
    "3194": {
      "op": "JUMPDEST"
    },
    "3195": {
      "op": "POP"
    },
    "3196": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3198": {
      "op": "ADD"
    },
    "3199": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3201": {
      "op": "NOT"
    },
    "3202": {
      "op": "AND"
    },
    "3203": {
      "op": "SWAP3"
    },
    "3204": {
      "op": "SWAP1"
    },
    "3205": {
      "op": "SWAP3"
    },
    "3206": {
      "op": "ADD"
    },
    "3207": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3209": {
      "op": "ADD"
    },
    "3210": {
      "op": "SWAP3"
    },
    "3211": {
      "op": "SWAP2"
    },
    "3212": {
      "op": "POP"
    },
    "3213": {
      "op": "POP"
    },
    "3214": {
      "jump": "o",
      "op": "JUMP"
    },
    "3215": {
      "op": "JUMPDEST"
    },
    "3216": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3218": {
      "op": "DUP2"
    },
    "3219": {
      "op": "MSTORE"
    },
    "3220": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3222": {
      "op": "PUSH2",
      "value": "0xC22"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3227": {
      "op": "DUP4"
    },
    "3228": {
      "op": "ADD"
    },
    "3229": {
      "op": "DUP5"
    },
    "3230": {
      "op": "PUSH2",
      "value": "0xC42"
    },
    "3233": {
      "jump": "i",
      "op": "JUMP"
    },
    "3234": {
      "op": "JUMPDEST"
    },
    "3235": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3240": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3242": {
      "op": "SHL"
    },
    "3243": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3245": {
      "op": "MSTORE"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3248": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3250": {
      "op": "MSTORE"
    },
    "3251": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3255": {
      "op": "REVERT"
    },
    "3256": {
      "op": "JUMPDEST"
    },
    "3257": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3259": {
      "op": "DUP3"
    },
    "3260": {
      "op": "ADD"
    },
    "3261": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3263": {
      "op": "NOT"
    },
    "3264": {
      "op": "AND"
    },
    "3265": {
      "op": "DUP2"
    },
    "3266": {
      "op": "ADD"
    },
    "3267": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3276": {
      "op": "DUP2"
    },
    "3277": {
      "op": "GT"
    },
    "3278": {
      "op": "DUP3"
    },
    "3279": {
      "op": "DUP3"
    },
    "3280": {
      "op": "LT"
    },
    "3281": {
      "op": "OR"
    },
    "3282": {
      "op": "ISZERO"
    },
    "3283": {
      "op": "PUSH2",
      "value": "0xCDE"
    },
    "3286": {
      "op": "JUMPI"
    },
    "3287": {
      "op": "PUSH2",
      "value": "0xCDE"
    },
    "3290": {
      "op": "PUSH2",
      "value": "0xCA2"
    },
    "3293": {
      "jump": "i",
      "op": "JUMP"
    },
    "3294": {
      "op": "JUMPDEST"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3297": {
      "op": "MSTORE"
    },
    "3298": {
      "op": "POP"
    },
    "3299": {
      "op": "POP"
    },
    "3300": {
      "jump": "o",
      "op": "JUMP"
    },
    "3301": {
      "op": "JUMPDEST"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3304": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3313": {
      "op": "DUP3"
    },
    "3314": {
      "op": "GT"
    },
    "3315": {
      "op": "ISZERO"
    },
    "3316": {
      "op": "PUSH2",
      "value": "0xCFF"
    },
    "3319": {
      "op": "JUMPI"
    },
    "3320": {
      "op": "PUSH2",
      "value": "0xCFF"
    },
    "3323": {
      "op": "PUSH2",
      "value": "0xCA2"
    },
    "3326": {
      "jump": "i",
      "op": "JUMP"
    },
    "3327": {
      "op": "JUMPDEST"
    },
    "3328": {
      "op": "POP"
    },
    "3329": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3331": {
      "op": "SHL"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3334": {
      "op": "ADD"
    },
    "3335": {
      "op": "SWAP1"
    },
    "3336": {
      "jump": "o",
      "op": "JUMP"
    },
    "3337": {
      "op": "JUMPDEST"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3340": {
      "op": "DUP3"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3343": {
      "op": "DUP4"
    },
    "3344": {
      "op": "ADD"
    },
    "3345": {
      "op": "SLT"
    },
    "3346": {
      "op": "PUSH2",
      "value": "0xD1A"
    },
    "3349": {
      "op": "JUMPI"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3352": {
      "op": "DUP1"
    },
    "3353": {
      "op": "REVERT"
    },
    "3354": {
      "op": "JUMPDEST"
    },
    "3355": {
      "op": "DUP2"
    },
    "3356": {
      "op": "CALLDATALOAD"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3359": {
      "op": "PUSH2",
      "value": "0xD27"
    },
    "3362": {
      "op": "DUP3"
    },
    "3363": {
      "op": "PUSH2",
      "value": "0xCE5"
    },
    "3366": {
      "jump": "i",
      "op": "JUMP"
    },
    "3367": {
      "op": "JUMPDEST"
    },
    "3368": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3370": {
      "op": "MLOAD"
    },
    "3371": {
      "op": "PUSH2",
      "value": "0xD34"
    },
    "3374": {
      "op": "DUP3"
    },
    "3375": {
      "op": "DUP3"
    },
    "3376": {
      "op": "PUSH2",
      "value": "0xCB8"
    },
    "3379": {
      "jump": "i",
      "op": "JUMP"
    },
    "3380": {
      "op": "JUMPDEST"
    },
    "3381": {
      "op": "DUP4"
    },
    "3382": {
      "op": "DUP2"
    },
    "3383": {
      "op": "MSTORE"
    },
    "3384": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3386": {
      "op": "SWAP4"
    },
    "3387": {
      "op": "SWAP1"
    },
    "3388": {
      "op": "SWAP4"
    },
    "3389": {
      "op": "SHL"
    },
    "3390": {
      "op": "DUP6"
    },
    "3391": {
      "op": "ADD"
    },
    "3392": {
      "op": "DUP3"
    },
    "3393": {
      "op": "ADD"
    },
    "3394": {
      "op": "SWAP3"
    },
    "3395": {
      "op": "DUP3"
    },
    "3396": {
      "op": "DUP2"
    },
    "3397": {
      "op": "ADD"
    },
    "3398": {
      "op": "SWAP2"
    },
    "3399": {
      "op": "POP"
    },
    "3400": {
      "op": "DUP7"
    },
    "3401": {
      "op": "DUP5"
    },
    "3402": {
      "op": "GT"
    },
    "3403": {
      "op": "ISZERO"
    },
    "3404": {
      "op": "PUSH2",
      "value": "0xD54"
    },
    "3407": {
      "op": "JUMPI"
    },
    "3408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3410": {
      "op": "DUP1"
    },
    "3411": {
      "op": "REVERT"
    },
    "3412": {
      "op": "JUMPDEST"
    },
    "3413": {
      "op": "DUP3"
    },
    "3414": {
      "op": "DUP7"
    },
    "3415": {
      "op": "ADD"
    },
    "3416": {
      "op": "JUMPDEST"
    },
    "3417": {
      "op": "DUP5"
    },
    "3418": {
      "op": "DUP2"
    },
    "3419": {
      "op": "LT"
    },
    "3420": {
      "op": "ISZERO"
    },
    "3421": {
      "op": "PUSH2",
      "value": "0xD6F"
    },
    "3424": {
      "op": "JUMPI"
    },
    "3425": {
      "op": "DUP1"
    },
    "3426": {
      "op": "CALLDATALOAD"
    },
    "3427": {
      "op": "DUP4"
    },
    "3428": {
      "op": "MSTORE"
    },
    "3429": {
      "op": "SWAP2"
    },
    "3430": {
      "op": "DUP4"
    },
    "3431": {
      "op": "ADD"
    },
    "3432": {
      "op": "SWAP2"
    },
    "3433": {
      "op": "DUP4"
    },
    "3434": {
      "op": "ADD"
    },
    "3435": {
      "op": "PUSH2",
      "value": "0xD58"
    },
    "3438": {
      "op": "JUMP"
    },
    "3439": {
      "op": "JUMPDEST"
    },
    "3440": {
      "op": "POP"
    },
    "3441": {
      "op": "SWAP7"
    },
    "3442": {
      "op": "SWAP6"
    },
    "3443": {
      "op": "POP"
    },
    "3444": {
      "op": "POP"
    },
    "3445": {
      "op": "POP"
    },
    "3446": {
      "op": "POP"
    },
    "3447": {
      "op": "POP"
    },
    "3448": {
      "op": "POP"
    },
    "3449": {
      "jump": "o",
      "op": "JUMP"
    },
    "3450": {
      "op": "JUMPDEST"
    },
    "3451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3453": {
      "op": "DUP3"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3456": {
      "op": "DUP4"
    },
    "3457": {
      "op": "ADD"
    },
    "3458": {
      "op": "SLT"
    },
    "3459": {
      "op": "PUSH2",
      "value": "0xD8B"
    },
    "3462": {
      "op": "JUMPI"
    },
    "3463": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3465": {
      "op": "DUP1"
    },
    "3466": {
      "op": "REVERT"
    },
    "3467": {
      "op": "JUMPDEST"
    },
    "3468": {
      "op": "DUP2"
    },
    "3469": {
      "op": "CALLDATALOAD"
    },
    "3470": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3479": {
      "op": "DUP2"
    },
    "3480": {
      "op": "GT"
    },
    "3481": {
      "op": "ISZERO"
    },
    "3482": {
      "op": "PUSH2",
      "value": "0xDA5"
    },
    "3485": {
      "op": "JUMPI"
    },
    "3486": {
      "op": "PUSH2",
      "value": "0xDA5"
    },
    "3489": {
      "op": "PUSH2",
      "value": "0xCA2"
    },
    "3492": {
      "jump": "i",
      "op": "JUMP"
    },
    "3493": {
      "op": "JUMPDEST"
    },
    "3494": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3496": {
      "op": "MLOAD"
    },
    "3497": {
      "op": "PUSH2",
      "value": "0xDBC"
    },
    "3500": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3502": {
      "op": "DUP4"
    },
    "3503": {
      "op": "ADD"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3506": {
      "op": "NOT"
    },
    "3507": {
      "op": "AND"
    },
    "3508": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3510": {
      "op": "ADD"
    },
    "3511": {
      "op": "DUP3"
    },
    "3512": {
      "op": "PUSH2",
      "value": "0xCB8"
    },
    "3515": {
      "jump": "i",
      "op": "JUMP"
    },
    "3516": {
      "op": "JUMPDEST"
    },
    "3517": {
      "op": "DUP2"
    },
    "3518": {
      "op": "DUP2"
    },
    "3519": {
      "op": "MSTORE"
    },
    "3520": {
      "op": "DUP5"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3523": {
      "op": "DUP4"
    },
    "3524": {
      "op": "DUP7"
    },
    "3525": {
      "op": "ADD"
    },
    "3526": {
      "op": "ADD"
    },
    "3527": {
      "op": "GT"
    },
    "3528": {
      "op": "ISZERO"
    },
    "3529": {
      "op": "PUSH2",
      "value": "0xDD1"
    },
    "3532": {
      "op": "JUMPI"
    },
    "3533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3535": {
      "op": "DUP1"
    },
    "3536": {
      "op": "REVERT"
    },
    "3537": {
      "op": "JUMPDEST"
    },
    "3538": {
      "op": "DUP2"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3541": {
      "op": "DUP6"
    },
    "3542": {
      "op": "ADD"
    },
    "3543": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3545": {
      "op": "DUP4"
    },
    "3546": {
      "op": "ADD"
    },
    "3547": {
      "op": "CALLDATACOPY"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3550": {
      "op": "SWAP2"
    },
    "3551": {
      "op": "DUP2"
    },
    "3552": {
      "op": "ADD"
    },
    "3553": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3555": {
      "op": "ADD"
    },
    "3556": {
      "op": "SWAP2"
    },
    "3557": {
      "op": "SWAP1"
    },
    "3558": {
      "op": "SWAP2"
    },
    "3559": {
      "op": "MSTORE"
    },
    "3560": {
      "op": "SWAP4"
    },
    "3561": {
      "op": "SWAP3"
    },
    "3562": {
      "op": "POP"
    },
    "3563": {
      "op": "POP"
    },
    "3564": {
      "op": "POP"
    },
    "3565": {
      "jump": "o",
      "op": "JUMP"
    },
    "3566": {
      "op": "JUMPDEST"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3569": {
      "op": "DUP1"
    },
    "3570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3572": {
      "op": "DUP1"
    },
    "3573": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3577": {
      "op": "DUP7"
    },
    "3578": {
      "op": "DUP9"
    },
    "3579": {
      "op": "SUB"
    },
    "3580": {
      "op": "SLT"
    },
    "3581": {
      "op": "ISZERO"
    },
    "3582": {
      "op": "PUSH2",
      "value": "0xE06"
    },
    "3585": {
      "op": "JUMPI"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3588": {
      "op": "DUP1"
    },
    "3589": {
      "op": "REVERT"
    },
    "3590": {
      "op": "JUMPDEST"
    },
    "3591": {
      "op": "PUSH2",
      "value": "0xE0F"
    },
    "3594": {
      "op": "DUP7"
    },
    "3595": {
      "op": "PUSH2",
      "value": "0xBA6"
    },
    "3598": {
      "jump": "i",
      "op": "JUMP"
    },
    "3599": {
      "op": "JUMPDEST"
    },
    "3600": {
      "op": "SWAP5"
    },
    "3601": {
      "op": "POP"
    },
    "3602": {
      "op": "PUSH2",
      "value": "0xE1D"
    },
    "3605": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3607": {
      "op": "DUP8"
    },
    "3608": {
      "op": "ADD"
    },
    "3609": {
      "op": "PUSH2",
      "value": "0xBA6"
    },
    "3612": {
      "jump": "i",
      "op": "JUMP"
    },
    "3613": {
      "op": "JUMPDEST"
    },
    "3614": {
      "op": "SWAP4"
    },
    "3615": {
      "op": "POP"
    },
    "3616": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3618": {
      "op": "DUP7"
    },
    "3619": {
      "op": "ADD"
    },
    "3620": {
      "op": "CALLDATALOAD"
    },
    "3621": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3630": {
      "op": "DUP1"
    },
    "3631": {
      "op": "DUP3"
    },
    "3632": {
      "op": "GT"
    },
    "3633": {
      "op": "ISZERO"
    },
    "3634": {
      "op": "PUSH2",
      "value": "0xE3A"
    },
    "3637": {
      "op": "JUMPI"
    },
    "3638": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3640": {
      "op": "DUP1"
    },
    "3641": {
      "op": "REVERT"
    },
    "3642": {
      "op": "JUMPDEST"
    },
    "3643": {
      "op": "PUSH2",
      "value": "0xE46"
    },
    "3646": {
      "op": "DUP10"
    },
    "3647": {
      "op": "DUP4"
    },
    "3648": {
      "op": "DUP11"
    },
    "3649": {
      "op": "ADD"
    },
    "3650": {
      "op": "PUSH2",
      "value": "0xD09"
    },
    "3653": {
      "jump": "i",
      "op": "JUMP"
    },
    "3654": {
      "op": "JUMPDEST"
    },
    "3655": {
      "op": "SWAP5"
    },
    "3656": {
      "op": "POP"
    },
    "3657": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3659": {
      "op": "DUP9"
    },
    "3660": {
      "op": "ADD"
    },
    "3661": {
      "op": "CALLDATALOAD"
    },
    "3662": {
      "op": "SWAP2"
    },
    "3663": {
      "op": "POP"
    },
    "3664": {
      "op": "DUP1"
    },
    "3665": {
      "op": "DUP3"
    },
    "3666": {
      "op": "GT"
    },
    "3667": {
      "op": "ISZERO"
    },
    "3668": {
      "op": "PUSH2",
      "value": "0xE5C"
    },
    "3671": {
      "op": "JUMPI"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3674": {
      "op": "DUP1"
    },
    "3675": {
      "op": "REVERT"
    },
    "3676": {
      "op": "JUMPDEST"
    },
    "3677": {
      "op": "PUSH2",
      "value": "0xE68"
    },
    "3680": {
      "op": "DUP10"
    },
    "3681": {
      "op": "DUP4"
    },
    "3682": {
      "op": "DUP11"
    },
    "3683": {
      "op": "ADD"
    },
    "3684": {
      "op": "PUSH2",
      "value": "0xD09"
    },
    "3687": {
      "jump": "i",
      "op": "JUMP"
    },
    "3688": {
      "op": "JUMPDEST"
    },
    "3689": {
      "op": "SWAP4"
    },
    "3690": {
      "op": "POP"
    },
    "3691": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3693": {
      "op": "DUP9"
    },
    "3694": {
      "op": "ADD"
    },
    "3695": {
      "op": "CALLDATALOAD"
    },
    "3696": {
      "op": "SWAP2"
    },
    "3697": {
      "op": "POP"
    },
    "3698": {
      "op": "DUP1"
    },
    "3699": {
      "op": "DUP3"
    },
    "3700": {
      "op": "GT"
    },
    "3701": {
      "op": "ISZERO"
    },
    "3702": {
      "op": "PUSH2",
      "value": "0xE7E"
    },
    "3705": {
      "op": "JUMPI"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3708": {
      "op": "DUP1"
    },
    "3709": {
      "op": "REVERT"
    },
    "3710": {
      "op": "JUMPDEST"
    },
    "3711": {
      "op": "POP"
    },
    "3712": {
      "op": "PUSH2",
      "value": "0xE8B"
    },
    "3715": {
      "op": "DUP9"
    },
    "3716": {
      "op": "DUP3"
    },
    "3717": {
      "op": "DUP10"
    },
    "3718": {
      "op": "ADD"
    },
    "3719": {
      "op": "PUSH2",
      "value": "0xD7A"
    },
    "3722": {
      "jump": "i",
      "op": "JUMP"
    },
    "3723": {
      "op": "JUMPDEST"
    },
    "3724": {
      "op": "SWAP2"
    },
    "3725": {
      "op": "POP"
    },
    "3726": {
      "op": "POP"
    },
    "3727": {
      "op": "SWAP3"
    },
    "3728": {
      "op": "SWAP6"
    },
    "3729": {
      "op": "POP"
    },
    "3730": {
      "op": "SWAP3"
    },
    "3731": {
      "op": "SWAP6"
    },
    "3732": {
      "op": "SWAP1"
    },
    "3733": {
      "op": "SWAP4"
    },
    "3734": {
      "op": "POP"
    },
    "3735": {
      "jump": "o",
      "op": "JUMP"
    },
    "3736": {
      "op": "JUMPDEST"
    },
    "3737": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3739": {
      "op": "DUP1"
    },
    "3740": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3742": {
      "op": "DUP4"
    },
    "3743": {
      "op": "DUP6"
    },
    "3744": {
      "op": "SUB"
    },
    "3745": {
      "op": "SLT"
    },
    "3746": {
      "op": "ISZERO"
    },
    "3747": {
      "op": "PUSH2",
      "value": "0xEAB"
    },
    "3750": {
      "op": "JUMPI"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3753": {
      "op": "DUP1"
    },
    "3754": {
      "op": "REVERT"
    },
    "3755": {
      "op": "JUMPDEST"
    },
    "3756": {
      "op": "DUP3"
    },
    "3757": {
      "op": "CALLDATALOAD"
    },
    "3758": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3767": {
      "op": "DUP1"
    },
    "3768": {
      "op": "DUP3"
    },
    "3769": {
      "op": "GT"
    },
    "3770": {
      "op": "ISZERO"
    },
    "3771": {
      "op": "PUSH2",
      "value": "0xEC3"
    },
    "3774": {
      "op": "JUMPI"
    },
    "3775": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3777": {
      "op": "DUP1"
    },
    "3778": {
      "op": "REVERT"
    },
    "3779": {
      "op": "JUMPDEST"
    },
    "3780": {
      "op": "DUP2"
    },
    "3781": {
      "op": "DUP6"
    },
    "3782": {
      "op": "ADD"
    },
    "3783": {
      "op": "SWAP2"
    },
    "3784": {
      "op": "POP"
    },
    "3785": {
      "op": "DUP6"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3788": {
      "op": "DUP4"
    },
    "3789": {
      "op": "ADD"
    },
    "3790": {
      "op": "SLT"
    },
    "3791": {
      "op": "PUSH2",
      "value": "0xED7"
    },
    "3794": {
      "op": "JUMPI"
    },
    "3795": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3797": {
      "op": "DUP1"
    },
    "3798": {
      "op": "REVERT"
    },
    "3799": {
      "op": "JUMPDEST"
    },
    "3800": {
      "op": "DUP2"
    },
    "3801": {
      "op": "CALLDATALOAD"
    },
    "3802": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3804": {
      "op": "PUSH2",
      "value": "0xEE4"
    },
    "3807": {
      "op": "DUP3"
    },
    "3808": {
      "op": "PUSH2",
      "value": "0xCE5"
    },
    "3811": {
      "jump": "i",
      "op": "JUMP"
    },
    "3812": {
      "op": "JUMPDEST"
    },
    "3813": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3815": {
      "op": "MLOAD"
    },
    "3816": {
      "op": "PUSH2",
      "value": "0xEF1"
    },
    "3819": {
      "op": "DUP3"
    },
    "3820": {
      "op": "DUP3"
    },
    "3821": {
      "op": "PUSH2",
      "value": "0xCB8"
    },
    "3824": {
      "jump": "i",
      "op": "JUMP"
    },
    "3825": {
      "op": "JUMPDEST"
    },
    "3826": {
      "op": "DUP4"
    },
    "3827": {
      "op": "DUP2"
    },
    "3828": {
      "op": "MSTORE"
    },
    "3829": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "3831": {
      "op": "SWAP4"
    },
    "3832": {
      "op": "SWAP1"
    },
    "3833": {
      "op": "SWAP4"
    },
    "3834": {
      "op": "SHL"
    },
    "3835": {
      "op": "DUP6"
    },
    "3836": {
      "op": "ADD"
    },
    "3837": {
      "op": "DUP3"
    },
    "3838": {
      "op": "ADD"
    },
    "3839": {
      "op": "SWAP3"
    },
    "3840": {
      "op": "DUP3"
    },
    "3841": {
      "op": "DUP2"
    },
    "3842": {
      "op": "ADD"
    },
    "3843": {
      "op": "SWAP2"
    },
    "3844": {
      "op": "POP"
    },
    "3845": {
      "op": "DUP10"
    },
    "3846": {
      "op": "DUP5"
    },
    "3847": {
      "op": "GT"
    },
    "3848": {
      "op": "ISZERO"
    },
    "3849": {
      "op": "PUSH2",
      "value": "0xF11"
    },
    "3852": {
      "op": "JUMPI"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3855": {
      "op": "DUP1"
    },
    "3856": {
      "op": "REVERT"
    },
    "3857": {
      "op": "JUMPDEST"
    },
    "3858": {
      "op": "SWAP5"
    },
    "3859": {
      "op": "DUP3"
    },
    "3860": {
      "op": "ADD"
    },
    "3861": {
      "op": "SWAP5"
    },
    "3862": {
      "op": "JUMPDEST"
    },
    "3863": {
      "op": "DUP4"
    },
    "3864": {
      "op": "DUP7"
    },
    "3865": {
      "op": "LT"
    },
    "3866": {
      "op": "ISZERO"
    },
    "3867": {
      "op": "PUSH2",
      "value": "0xF36"
    },
    "3870": {
      "op": "JUMPI"
    },
    "3871": {
      "op": "PUSH2",
      "value": "0xF27"
    },
    "3874": {
      "op": "DUP7"
    },
    "3875": {
      "op": "PUSH2",
      "value": "0xBA6"
    },
    "3878": {
      "jump": "i",
      "op": "JUMP"
    },
    "3879": {
      "op": "JUMPDEST"
    },
    "3880": {
      "op": "DUP3"
    },
    "3881": {
      "op": "MSTORE"
    },
    "3882": {
      "op": "SWAP5"
    },
    "3883": {
      "op": "DUP3"
    },
    "3884": {
      "op": "ADD"
    },
    "3885": {
      "op": "SWAP5"
    },
    "3886": {
      "op": "SWAP1"
    },
    "3887": {
      "op": "DUP3"
    },
    "3888": {
      "op": "ADD"
    },
    "3889": {
      "op": "SWAP1"
    },
    "3890": {
      "op": "PUSH2",
      "value": "0xF16"
    },
    "3893": {
      "op": "JUMP"
    },
    "3894": {
      "op": "JUMPDEST"
    },
    "3895": {
      "op": "SWAP7"
    },
    "3896": {
      "op": "POP"
    },
    "3897": {
      "op": "POP"
    },
    "3898": {
      "op": "DUP7"
    },
    "3899": {
      "op": "ADD"
    },
    "3900": {
      "op": "CALLDATALOAD"
    },
    "3901": {
      "op": "SWAP3"
    },
    "3902": {
      "op": "POP"
    },
    "3903": {
      "op": "POP"
    },
    "3904": {
      "op": "DUP1"
    },
    "3905": {
      "op": "DUP3"
    },
    "3906": {
      "op": "GT"
    },
    "3907": {
      "op": "ISZERO"
    },
    "3908": {
      "op": "PUSH2",
      "value": "0xF4C"
    },
    "3911": {
      "op": "JUMPI"
    },
    "3912": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3914": {
      "op": "DUP1"
    },
    "3915": {
      "op": "REVERT"
    },
    "3916": {
      "op": "JUMPDEST"
    },
    "3917": {
      "op": "POP"
    },
    "3918": {
      "op": "PUSH2",
      "value": "0xF59"
    },
    "3921": {
      "op": "DUP6"
    },
    "3922": {
      "op": "DUP3"
    },
    "3923": {
      "op": "DUP7"
    },
    "3924": {
      "op": "ADD"
    },
    "3925": {
      "op": "PUSH2",
      "value": "0xD09"
    },
    "3928": {
      "jump": "i",
      "op": "JUMP"
    },
    "3929": {
      "op": "JUMPDEST"
    },
    "3930": {
      "op": "SWAP2"
    },
    "3931": {
      "op": "POP"
    },
    "3932": {
      "op": "POP"
    },
    "3933": {
      "op": "SWAP3"
    },
    "3934": {
      "op": "POP"
    },
    "3935": {
      "op": "SWAP3"
    },
    "3936": {
      "op": "SWAP1"
    },
    "3937": {
      "op": "POP"
    },
    "3938": {
      "jump": "o",
      "op": "JUMP"
    },
    "3939": {
      "op": "JUMPDEST"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3942": {
      "op": "DUP2"
    },
    "3943": {
      "op": "MLOAD"
    },
    "3944": {
      "op": "DUP1"
    },
    "3945": {
      "op": "DUP5"
    },
    "3946": {
      "op": "MSTORE"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3949": {
      "op": "DUP1"
    },
    "3950": {
      "op": "DUP6"
    },
    "3951": {
      "op": "ADD"
    },
    "3952": {
      "op": "SWAP5"
    },
    "3953": {
      "op": "POP"
    },
    "3954": {
      "op": "DUP1"
    },
    "3955": {
      "op": "DUP5"
    },
    "3956": {
      "op": "ADD"
    },
    "3957": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3959": {
      "op": "JUMPDEST"
    },
    "3960": {
      "op": "DUP4"
    },
    "3961": {
      "op": "DUP2"
    },
    "3962": {
      "op": "LT"
    },
    "3963": {
      "op": "ISZERO"
    },
    "3964": {
      "op": "PUSH2",
      "value": "0xF93"
    },
    "3967": {
      "op": "JUMPI"
    },
    "3968": {
      "op": "DUP2"
    },
    "3969": {
      "op": "MLOAD"
    },
    "3970": {
      "op": "DUP8"
    },
    "3971": {
      "op": "MSTORE"
    },
    "3972": {
      "op": "SWAP6"
    },
    "3973": {
      "op": "DUP3"
    },
    "3974": {
      "op": "ADD"
    },
    "3975": {
      "op": "SWAP6"
    },
    "3976": {
      "op": "SWAP1"
    },
    "3977": {
      "op": "DUP3"
    },
    "3978": {
      "op": "ADD"
    },
    "3979": {
      "op": "SWAP1"
    },
    "3980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3982": {
      "op": "ADD"
    },
    "3983": {
      "op": "PUSH2",
      "value": "0xF77"
    },
    "3986": {
      "op": "JUMP"
    },
    "3987": {
      "op": "JUMPDEST"
    },
    "3988": {
      "op": "POP"
    },
    "3989": {
      "op": "SWAP5"
    },
    "3990": {
      "op": "SWAP6"
    },
    "3991": {
      "op": "SWAP5"
    },
    "3992": {
      "op": "POP"
    },
    "3993": {
      "op": "POP"
    },
    "3994": {
      "op": "POP"
    },
    "3995": {
      "op": "POP"
    },
    "3996": {
      "op": "POP"
    },
    "3997": {
      "jump": "o",
      "op": "JUMP"
    },
    "3998": {
      "op": "JUMPDEST"
    },
    "3999": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4001": {
      "op": "DUP2"
    },
    "4002": {
      "op": "MSTORE"
    },
    "4003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4005": {
      "op": "PUSH2",
      "value": "0xC22"
    },
    "4008": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4010": {
      "op": "DUP4"
    },
    "4011": {
      "op": "ADD"
    },
    "4012": {
      "op": "DUP5"
    },
    "4013": {
      "op": "PUSH2",
      "value": "0xF63"
    },
    "4016": {
      "jump": "i",
      "op": "JUMP"
    },
    "4017": {
      "op": "JUMPDEST"
    },
    "4018": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4020": {
      "op": "DUP1"
    },
    "4021": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4023": {
      "op": "DUP4"
    },
    "4024": {
      "op": "DUP6"
    },
    "4025": {
      "op": "SUB"
    },
    "4026": {
      "op": "SLT"
    },
    "4027": {
      "op": "ISZERO"
    },
    "4028": {
      "op": "PUSH2",
      "value": "0xFC4"
    },
    "4031": {
      "op": "JUMPI"
    },
    "4032": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4034": {
      "op": "DUP1"
    },
    "4035": {
      "op": "REVERT"
    },
    "4036": {
      "op": "JUMPDEST"
    },
    "4037": {
      "op": "PUSH2",
      "value": "0xFCD"
    },
    "4040": {
      "op": "DUP4"
    },
    "4041": {
      "op": "PUSH2",
      "value": "0xBA6"
    },
    "4044": {
      "jump": "i",
      "op": "JUMP"
    },
    "4045": {
      "op": "JUMPDEST"
    },
    "4046": {
      "op": "SWAP2"
    },
    "4047": {
      "op": "POP"
    },
    "4048": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4050": {
      "op": "DUP4"
    },
    "4051": {
      "op": "ADD"
    },
    "4052": {
      "op": "CALLDATALOAD"
    },
    "4053": {
      "op": "DUP1"
    },
    "4054": {
      "op": "ISZERO"
    },
    "4055": {
      "op": "ISZERO"
    },
    "4056": {
      "op": "DUP2"
    },
    "4057": {
      "op": "EQ"
    },
    "4058": {
      "op": "PUSH2",
      "value": "0xFE2"
    },
    "4061": {
      "op": "JUMPI"
    },
    "4062": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4064": {
      "op": "DUP1"
    },
    "4065": {
      "op": "REVERT"
    },
    "4066": {
      "op": "JUMPDEST"
    },
    "4067": {
      "op": "DUP1"
    },
    "4068": {
      "op": "SWAP2"
    },
    "4069": {
      "op": "POP"
    },
    "4070": {
      "op": "POP"
    },
    "4071": {
      "op": "SWAP3"
    },
    "4072": {
      "op": "POP"
    },
    "4073": {
      "op": "SWAP3"
    },
    "4074": {
      "op": "SWAP1"
    },
    "4075": {
      "op": "POP"
    },
    "4076": {
      "jump": "o",
      "op": "JUMP"
    },
    "4077": {
      "op": "JUMPDEST"
    },
    "4078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4080": {
      "op": "DUP1"
    },
    "4081": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4083": {
      "op": "DUP4"
    },
    "4084": {
      "op": "DUP6"
    },
    "4085": {
      "op": "SUB"
    },
    "4086": {
      "op": "SLT"
    },
    "4087": {
      "op": "ISZERO"
    },
    "4088": {
      "op": "PUSH2",
      "value": "0x1000"
    },
    "4091": {
      "op": "JUMPI"
    },
    "4092": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4094": {
      "op": "DUP1"
    },
    "4095": {
      "op": "REVERT"
    },
    "4096": {
      "op": "JUMPDEST"
    },
    "4097": {
      "op": "PUSH2",
      "value": "0x1009"
    },
    "4100": {
      "op": "DUP4"
    },
    "4101": {
      "op": "PUSH2",
      "value": "0xBA6"
    },
    "4104": {
      "jump": "i",
      "op": "JUMP"
    },
    "4105": {
      "op": "JUMPDEST"
    },
    "4106": {
      "op": "SWAP2"
    },
    "4107": {
      "op": "POP"
    },
    "4108": {
      "op": "PUSH2",
      "value": "0x1017"
    },
    "4111": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4113": {
      "op": "DUP5"
    },
    "4114": {
      "op": "ADD"
    },
    "4115": {
      "op": "PUSH2",
      "value": "0xBA6"
    },
    "4118": {
      "jump": "i",
      "op": "JUMP"
    },
    "4119": {
      "op": "JUMPDEST"
    },
    "4120": {
      "op": "SWAP1"
    },
    "4121": {
      "op": "POP"
    },
    "4122": {
      "op": "SWAP3"
    },
    "4123": {
      "op": "POP"
    },
    "4124": {
      "op": "SWAP3"
    },
    "4125": {
      "op": "SWAP1"
    },
    "4126": {
      "op": "POP"
    },
    "4127": {
      "jump": "o",
      "op": "JUMP"
    },
    "4128": {
      "op": "JUMPDEST"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4131": {
      "op": "DUP1"
    },
    "4132": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4134": {
      "op": "DUP1"
    },
    "4135": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4139": {
      "op": "DUP7"
    },
    "4140": {
      "op": "DUP9"
    },
    "4141": {
      "op": "SUB"
    },
    "4142": {
      "op": "SLT"
    },
    "4143": {
      "op": "ISZERO"
    },
    "4144": {
      "op": "PUSH2",
      "value": "0x1038"
    },
    "4147": {
      "op": "JUMPI"
    },
    "4148": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4150": {
      "op": "DUP1"
    },
    "4151": {
      "op": "REVERT"
    },
    "4152": {
      "op": "JUMPDEST"
    },
    "4153": {
      "op": "PUSH2",
      "value": "0x1041"
    },
    "4156": {
      "op": "DUP7"
    },
    "4157": {
      "op": "PUSH2",
      "value": "0xBA6"
    },
    "4160": {
      "jump": "i",
      "op": "JUMP"
    },
    "4161": {
      "op": "JUMPDEST"
    },
    "4162": {
      "op": "SWAP5"
    },
    "4163": {
      "op": "POP"
    },
    "4164": {
      "op": "PUSH2",
      "value": "0x104F"
    },
    "4167": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4169": {
      "op": "DUP8"
    },
    "4170": {
      "op": "ADD"
    },
    "4171": {
      "op": "PUSH2",
      "value": "0xBA6"
    },
    "4174": {
      "jump": "i",
      "op": "JUMP"
    },
    "4175": {
      "op": "JUMPDEST"
    },
    "4176": {
      "op": "SWAP4"
    },
    "4177": {
      "op": "POP"
    },
    "4178": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4180": {
      "op": "DUP7"
    },
    "4181": {
      "op": "ADD"
    },
    "4182": {
      "op": "CALLDATALOAD"
    },
    "4183": {
      "op": "SWAP3"
    },
    "4184": {
      "op": "POP"
    },
    "4185": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4187": {
      "op": "DUP7"
    },
    "4188": {
      "op": "ADD"
    },
    "4189": {
      "op": "CALLDATALOAD"
    },
    "4190": {
      "op": "SWAP2"
    },
    "4191": {
      "op": "POP"
    },
    "4192": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4194": {
      "op": "DUP7"
    },
    "4195": {
      "op": "ADD"
    },
    "4196": {
      "op": "CALLDATALOAD"
    },
    "4197": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4206": {
      "op": "DUP2"
    },
    "4207": {
      "op": "GT"
    },
    "4208": {
      "op": "ISZERO"
    },
    "4209": {
      "op": "PUSH2",
      "value": "0x1079"
    },
    "4212": {
      "op": "JUMPI"
    },
    "4213": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4215": {
      "op": "DUP1"
    },
    "4216": {
      "op": "REVERT"
    },
    "4217": {
      "op": "JUMPDEST"
    },
    "4218": {
      "op": "PUSH2",
      "value": "0xE8B"
    },
    "4221": {
      "op": "DUP9"
    },
    "4222": {
      "op": "DUP3"
    },
    "4223": {
      "op": "DUP10"
    },
    "4224": {
      "op": "ADD"
    },
    "4225": {
      "op": "PUSH2",
      "value": "0xD7A"
    },
    "4228": {
      "jump": "i",
      "op": "JUMP"
    },
    "4229": {
      "op": "JUMPDEST"
    },
    "4230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4232": {
      "op": "DUP2"
    },
    "4233": {
      "op": "DUP2"
    },
    "4234": {
      "op": "SHR"
    },
    "4235": {
      "op": "SWAP1"
    },
    "4236": {
      "op": "DUP3"
    },
    "4237": {
      "op": "AND"
    },
    "4238": {
      "op": "DUP1"
    },
    "4239": {
      "op": "PUSH2",
      "value": "0x1099"
    },
    "4242": {
      "op": "JUMPI"
    },
    "4243": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4245": {
      "op": "DUP3"
    },
    "4246": {
      "op": "AND"
    },
    "4247": {
      "op": "SWAP2"
    },
    "4248": {
      "op": "POP"
    },
    "4249": {
      "op": "JUMPDEST"
    },
    "4250": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4252": {
      "op": "DUP3"
    },
    "4253": {
      "op": "LT"
    },
    "4254": {
      "op": "DUP2"
    },
    "4255": {
      "op": "EQ"
    },
    "4256": {
      "op": "ISZERO"
    },
    "4257": {
      "op": "PUSH2",
      "value": "0x10BA"
    },
    "4260": {
      "op": "JUMPI"
    },
    "4261": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4266": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4268": {
      "op": "SHL"
    },
    "4269": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4271": {
      "op": "MSTORE"
    },
    "4272": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4274": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4276": {
      "op": "MSTORE"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4281": {
      "op": "REVERT"
    },
    "4282": {
      "op": "JUMPDEST"
    },
    "4283": {
      "op": "POP"
    },
    "4284": {
      "op": "SWAP2"
    },
    "4285": {
      "op": "SWAP1"
    },
    "4286": {
      "op": "POP"
    },
    "4287": {
      "jump": "o",
      "op": "JUMP"
    },
    "4288": {
      "op": "JUMPDEST"
    },
    "4289": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4296": {
      "op": "SHL"
    },
    "4297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4299": {
      "op": "MSTORE"
    },
    "4300": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4302": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4304": {
      "op": "MSTORE"
    },
    "4305": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4309": {
      "op": "REVERT"
    },
    "4310": {
      "op": "JUMPDEST"
    },
    "4311": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4316": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4318": {
      "op": "SHL"
    },
    "4319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4321": {
      "op": "MSTORE"
    },
    "4322": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4324": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4326": {
      "op": "MSTORE"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4329": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4331": {
      "op": "REVERT"
    },
    "4332": {
      "op": "JUMPDEST"
    },
    "4333": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4335": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4337": {
      "op": "NOT"
    },
    "4338": {
      "op": "DUP3"
    },
    "4339": {
      "op": "EQ"
    },
    "4340": {
      "op": "ISZERO"
    },
    "4341": {
      "op": "PUSH2",
      "value": "0x1100"
    },
    "4344": {
      "op": "JUMPI"
    },
    "4345": {
      "op": "PUSH2",
      "value": "0x1100"
    },
    "4348": {
      "op": "PUSH2",
      "value": "0x10D6"
    },
    "4351": {
      "jump": "i",
      "op": "JUMP"
    },
    "4352": {
      "op": "JUMPDEST"
    },
    "4353": {
      "op": "POP"
    },
    "4354": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4356": {
      "op": "ADD"
    },
    "4357": {
      "op": "SWAP1"
    },
    "4358": {
      "jump": "o",
      "op": "JUMP"
    },
    "4359": {
      "op": "JUMPDEST"
    },
    "4360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4362": {
      "op": "DUP1"
    },
    "4363": {
      "op": "DUP3"
    },
    "4364": {
      "op": "MSTORE"
    },
    "4365": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "4367": {
      "op": "SWAP1"
    },
    "4368": {
      "op": "DUP3"
    },
    "4369": {
      "op": "ADD"
    },
    "4370": {
      "op": "MSTORE"
    },
    "4371": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F20746865207A65726F206164"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4406": {
      "op": "DUP3"
    },
    "4407": {
      "op": "ADD"
    },
    "4408": {
      "op": "MSTORE"
    },
    "4409": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "4415": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "4417": {
      "op": "SHL"
    },
    "4418": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4420": {
      "op": "DUP3"
    },
    "4421": {
      "op": "ADD"
    },
    "4422": {
      "op": "MSTORE"
    },
    "4423": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4425": {
      "op": "ADD"
    },
    "4426": {
      "op": "SWAP1"
    },
    "4427": {
      "jump": "o",
      "op": "JUMP"
    },
    "4428": {
      "op": "JUMPDEST"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4431": {
      "op": "DUP1"
    },
    "4432": {
      "op": "DUP3"
    },
    "4433": {
      "op": "MSTORE"
    },
    "4434": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "4436": {
      "op": "SWAP1"
    },
    "4437": {
      "op": "DUP3"
    },
    "4438": {
      "op": "ADD"
    },
    "4439": {
      "op": "MSTORE"
    },
    "4440": {
      "op": "PUSH32",
      "value": "0x455243313135353A20696E73756666696369656E742062616C616E636520666F"
    },
    "4473": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4475": {
      "op": "DUP3"
    },
    "4476": {
      "op": "ADD"
    },
    "4477": {
      "op": "MSTORE"
    },
    "4478": {
      "op": "PUSH10",
      "value": "0x39103A3930B739B332B9"
    },
    "4489": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "4491": {
      "op": "SHL"
    },
    "4492": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4494": {
      "op": "DUP3"
    },
    "4495": {
      "op": "ADD"
    },
    "4496": {
      "op": "MSTORE"
    },
    "4497": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4499": {
      "op": "ADD"
    },
    "4500": {
      "op": "SWAP1"
    },
    "4501": {
      "jump": "o",
      "op": "JUMP"
    },
    "4502": {
      "op": "JUMPDEST"
    },
    "4503": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4505": {
      "op": "DUP3"
    },
    "4506": {
      "op": "NOT"
    },
    "4507": {
      "op": "DUP3"
    },
    "4508": {
      "op": "GT"
    },
    "4509": {
      "op": "ISZERO"
    },
    "4510": {
      "op": "PUSH2",
      "value": "0x11A9"
    },
    "4513": {
      "op": "JUMPI"
    },
    "4514": {
      "op": "PUSH2",
      "value": "0x11A9"
    },
    "4517": {
      "op": "PUSH2",
      "value": "0x10D6"
    },
    "4520": {
      "jump": "i",
      "op": "JUMP"
    },
    "4521": {
      "op": "JUMPDEST"
    },
    "4522": {
      "op": "POP"
    },
    "4523": {
      "op": "ADD"
    },
    "4524": {
      "op": "SWAP1"
    },
    "4525": {
      "jump": "o",
      "op": "JUMP"
    },
    "4526": {
      "op": "JUMPDEST"
    },
    "4527": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4529": {
      "op": "DUP2"
    },
    "4530": {
      "op": "MSTORE"
    },
    "4531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4533": {
      "op": "PUSH2",
      "value": "0x11C1"
    },
    "4536": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4538": {
      "op": "DUP4"
    },
    "4539": {
      "op": "ADD"
    },
    "4540": {
      "op": "DUP6"
    },
    "4541": {
      "op": "PUSH2",
      "value": "0xF63"
    },
    "4544": {
      "jump": "i",
      "op": "JUMP"
    },
    "4545": {
      "op": "JUMPDEST"
    },
    "4546": {
      "op": "DUP3"
    },
    "4547": {
      "op": "DUP2"
    },
    "4548": {
      "op": "SUB"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4551": {
      "op": "DUP5"
    },
    "4552": {
      "op": "ADD"
    },
    "4553": {
      "op": "MSTORE"
    },
    "4554": {
      "op": "PUSH2",
      "value": "0x11D3"
    },
    "4557": {
      "op": "DUP2"
    },
    "4558": {
      "op": "DUP6"
    },
    "4559": {
      "op": "PUSH2",
      "value": "0xF63"
    },
    "4562": {
      "jump": "i",
      "op": "JUMP"
    },
    "4563": {
      "op": "JUMPDEST"
    },
    "4564": {
      "op": "SWAP6"
    },
    "4565": {
      "op": "SWAP5"
    },
    "4566": {
      "op": "POP"
    },
    "4567": {
      "op": "POP"
    },
    "4568": {
      "op": "POP"
    },
    "4569": {
      "op": "POP"
    },
    "4570": {
      "op": "POP"
    },
    "4571": {
      "jump": "o",
      "op": "JUMP"
    },
    "4572": {
      "op": "JUMPDEST"
    },
    "4573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4575": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4579": {
      "op": "SHL"
    },
    "4580": {
      "op": "SUB"
    },
    "4581": {
      "op": "DUP7"
    },
    "4582": {
      "op": "DUP2"
    },
    "4583": {
      "op": "AND"
    },
    "4584": {
      "op": "DUP3"
    },
    "4585": {
      "op": "MSTORE"
    },
    "4586": {
      "op": "DUP6"
    },
    "4587": {
      "op": "AND"
    },
    "4588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4590": {
      "op": "DUP3"
    },
    "4591": {
      "op": "ADD"
    },
    "4592": {
      "op": "MSTORE"
    },
    "4593": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4595": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4597": {
      "op": "DUP3"
    },
    "4598": {
      "op": "ADD"
    },
    "4599": {
      "op": "DUP2"
    },
    "4600": {
      "op": "SWAP1"
    },
    "4601": {
      "op": "MSTORE"
    },
    "4602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4604": {
      "op": "SWAP1"
    },
    "4605": {
      "op": "PUSH2",
      "value": "0x1208"
    },
    "4608": {
      "op": "SWAP1"
    },
    "4609": {
      "op": "DUP4"
    },
    "4610": {
      "op": "ADD"
    },
    "4611": {
      "op": "DUP7"
    },
    "4612": {
      "op": "PUSH2",
      "value": "0xF63"
    },
    "4615": {
      "jump": "i",
      "op": "JUMP"
    },
    "4616": {
      "op": "JUMPDEST"
    },
    "4617": {
      "op": "DUP3"
    },
    "4618": {
      "op": "DUP2"
    },
    "4619": {
      "op": "SUB"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4622": {
      "op": "DUP5"
    },
    "4623": {
      "op": "ADD"
    },
    "4624": {
      "op": "MSTORE"
    },
    "4625": {
      "op": "PUSH2",
      "value": "0x121A"
    },
    "4628": {
      "op": "DUP2"
    },
    "4629": {
      "op": "DUP7"
    },
    "4630": {
      "op": "PUSH2",
      "value": "0xF63"
    },
    "4633": {
      "jump": "i",
      "op": "JUMP"
    },
    "4634": {
      "op": "JUMPDEST"
    },
    "4635": {
      "op": "SWAP1"
    },
    "4636": {
      "op": "POP"
    },
    "4637": {
      "op": "DUP3"
    },
    "4638": {
      "op": "DUP2"
    },
    "4639": {
      "op": "SUB"
    },
    "4640": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4642": {
      "op": "DUP5"
    },
    "4643": {
      "op": "ADD"
    },
    "4644": {
      "op": "MSTORE"
    },
    "4645": {
      "op": "PUSH2",
      "value": "0x122E"
    },
    "4648": {
      "op": "DUP2"
    },
    "4649": {
      "op": "DUP6"
    },
    "4650": {
      "op": "PUSH2",
      "value": "0xC42"
    },
    "4653": {
      "jump": "i",
      "op": "JUMP"
    },
    "4654": {
      "op": "JUMPDEST"
    },
    "4655": {
      "op": "SWAP9"
    },
    "4656": {
      "op": "SWAP8"
    },
    "4657": {
      "op": "POP"
    },
    "4658": {
      "op": "POP"
    },
    "4659": {
      "op": "POP"
    },
    "4660": {
      "op": "POP"
    },
    "4661": {
      "op": "POP"
    },
    "4662": {
      "op": "POP"
    },
    "4663": {
      "op": "POP"
    },
    "4664": {
      "op": "POP"
    },
    "4665": {
      "jump": "o",
      "op": "JUMP"
    },
    "4666": {
      "op": "JUMPDEST"
    },
    "4667": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4669": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4671": {
      "op": "DUP3"
    },
    "4672": {
      "op": "DUP5"
    },
    "4673": {
      "op": "SUB"
    },
    "4674": {
      "op": "SLT"
    },
    "4675": {
      "op": "ISZERO"
    },
    "4676": {
      "op": "PUSH2",
      "value": "0x124C"
    },
    "4679": {
      "op": "JUMPI"
    },
    "4680": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4682": {
      "op": "DUP1"
    },
    "4683": {
      "op": "REVERT"
    },
    "4684": {
      "op": "JUMPDEST"
    },
    "4685": {
      "op": "DUP2"
    },
    "4686": {
      "op": "MLOAD"
    },
    "4687": {
      "op": "PUSH2",
      "value": "0xC22"
    },
    "4690": {
      "op": "DUP2"
    },
    "4691": {
      "op": "PUSH2",
      "value": "0xBEC"
    },
    "4694": {
      "jump": "i",
      "op": "JUMP"
    },
    "4695": {
      "op": "JUMPDEST"
    },
    "4696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4698": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4700": {
      "op": "RETURNDATASIZE"
    },
    "4701": {
      "op": "GT"
    },
    "4702": {
      "op": "ISZERO"
    },
    "4703": {
      "op": "PUSH2",
      "value": "0x1270"
    },
    "4706": {
      "op": "JUMPI"
    },
    "4707": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4709": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4711": {
      "op": "DUP1"
    },
    "4712": {
      "op": "RETURNDATACOPY"
    },
    "4713": {
      "op": "POP"
    },
    "4714": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4716": {
      "op": "MLOAD"
    },
    "4717": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4719": {
      "op": "SHR"
    },
    "4720": {
      "op": "JUMPDEST"
    },
    "4721": {
      "op": "SWAP1"
    },
    "4722": {
      "jump": "o",
      "op": "JUMP"
    },
    "4723": {
      "op": "JUMPDEST"
    },
    "4724": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4726": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4728": {
      "op": "RETURNDATASIZE"
    },
    "4729": {
      "op": "LT"
    },
    "4730": {
      "op": "ISZERO"
    },
    "4731": {
      "op": "PUSH2",
      "value": "0x1281"
    },
    "4734": {
      "op": "JUMPI"
    },
    "4735": {
      "op": "SWAP1"
    },
    "4736": {
      "jump": "o",
      "op": "JUMP"
    },
    "4737": {
      "op": "JUMPDEST"
    },
    "4738": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4740": {
      "op": "MLOAD"
    },
    "4741": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4743": {
      "op": "NOT"
    },
    "4744": {
      "op": "RETURNDATASIZE"
    },
    "4745": {
      "op": "DUP2"
    },
    "4746": {
      "op": "ADD"
    },
    "4747": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4749": {
      "op": "DUP4"
    },
    "4750": {
      "op": "RETURNDATACOPY"
    },
    "4751": {
      "op": "DUP2"
    },
    "4752": {
      "op": "MLOAD"
    },
    "4753": {
      "op": "RETURNDATASIZE"
    },
    "4754": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4763": {
      "op": "DUP2"
    },
    "4764": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4766": {
      "op": "DUP5"
    },
    "4767": {
      "op": "ADD"
    },
    "4768": {
      "op": "GT"
    },
    "4769": {
      "op": "DUP2"
    },
    "4770": {
      "op": "DUP5"
    },
    "4771": {
      "op": "GT"
    },
    "4772": {
      "op": "OR"
    },
    "4773": {
      "op": "ISZERO"
    },
    "4774": {
      "op": "PUSH2",
      "value": "0x12B1"
    },
    "4777": {
      "op": "JUMPI"
    },
    "4778": {
      "op": "POP"
    },
    "4779": {
      "op": "POP"
    },
    "4780": {
      "op": "POP"
    },
    "4781": {
      "op": "POP"
    },
    "4782": {
      "op": "POP"
    },
    "4783": {
      "op": "SWAP1"
    },
    "4784": {
      "jump": "o",
      "op": "JUMP"
    },
    "4785": {
      "op": "JUMPDEST"
    },
    "4786": {
      "op": "DUP3"
    },
    "4787": {
      "op": "DUP6"
    },
    "4788": {
      "op": "ADD"
    },
    "4789": {
      "op": "SWAP2"
    },
    "4790": {
      "op": "POP"
    },
    "4791": {
      "op": "DUP2"
    },
    "4792": {
      "op": "MLOAD"
    },
    "4793": {
      "op": "DUP2"
    },
    "4794": {
      "op": "DUP2"
    },
    "4795": {
      "op": "GT"
    },
    "4796": {
      "op": "ISZERO"
    },
    "4797": {
      "op": "PUSH2",
      "value": "0x12C9"
    },
    "4800": {
      "op": "JUMPI"
    },
    "4801": {
      "op": "POP"
    },
    "4802": {
      "op": "POP"
    },
    "4803": {
      "op": "POP"
    },
    "4804": {
      "op": "POP"
    },
    "4805": {
      "op": "POP"
    },
    "4806": {
      "op": "POP"
    },
    "4807": {
      "op": "SWAP1"
    },
    "4808": {
      "jump": "o",
      "op": "JUMP"
    },
    "4809": {
      "op": "JUMPDEST"
    },
    "4810": {
      "op": "DUP5"
    },
    "4811": {
      "op": "RETURNDATASIZE"
    },
    "4812": {
      "op": "DUP8"
    },
    "4813": {
      "op": "ADD"
    },
    "4814": {
      "op": "ADD"
    },
    "4815": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4817": {
      "op": "DUP3"
    },
    "4818": {
      "op": "DUP6"
    },
    "4819": {
      "op": "ADD"
    },
    "4820": {
      "op": "ADD"
    },
    "4821": {
      "op": "GT"
    },
    "4822": {
      "op": "ISZERO"
    },
    "4823": {
      "op": "PUSH2",
      "value": "0x12E3"
    },
    "4826": {
      "op": "JUMPI"
    },
    "4827": {
      "op": "POP"
    },
    "4828": {
      "op": "POP"
    },
    "4829": {
      "op": "POP"
    },
    "4830": {
      "op": "POP"
    },
    "4831": {
      "op": "POP"
    },
    "4832": {
      "op": "POP"
    },
    "4833": {
      "op": "SWAP1"
    },
    "4834": {
      "jump": "o",
      "op": "JUMP"
    },
    "4835": {
      "op": "JUMPDEST"
    },
    "4836": {
      "op": "PUSH2",
      "value": "0x12F2"
    },
    "4839": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4841": {
      "op": "DUP3"
    },
    "4842": {
      "op": "DUP7"
    },
    "4843": {
      "op": "ADD"
    },
    "4844": {
      "op": "ADD"
    },
    "4845": {
      "op": "DUP8"
    },
    "4846": {
      "op": "PUSH2",
      "value": "0xCB8"
    },
    "4849": {
      "jump": "i",
      "op": "JUMP"
    },
    "4850": {
      "op": "JUMPDEST"
    },
    "4851": {
      "op": "POP"
    },
    "4852": {
      "op": "SWAP1"
    },
    "4853": {
      "op": "SWAP6"
    },
    "4854": {
      "op": "SWAP5"
    },
    "4855": {
      "op": "POP"
    },
    "4856": {
      "op": "POP"
    },
    "4857": {
      "op": "POP"
    },
    "4858": {
      "op": "POP"
    },
    "4859": {
      "op": "POP"
    },
    "4860": {
      "jump": "o",
      "op": "JUMP"
    },
    "4861": {
      "op": "JUMPDEST"
    },
    "4862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4864": {
      "op": "DUP1"
    },
    "4865": {
      "op": "DUP3"
    },
    "4866": {
      "op": "MSTORE"
    },
    "4867": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "4869": {
      "op": "SWAP1"
    },
    "4870": {
      "op": "DUP3"
    },
    "4871": {
      "op": "ADD"
    },
    "4872": {
      "op": "MSTORE"
    },
    "4873": {
      "op": "PUSH32",
      "value": "0x455243313135353A204552433131353552656365697665722072656A65637465"
    },
    "4906": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4908": {
      "op": "DUP3"
    },
    "4909": {
      "op": "ADD"
    },
    "4910": {
      "op": "MSTORE"
    },
    "4911": {
      "op": "PUSH8",
      "value": "0x6420746F6B656E73"
    },
    "4920": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4922": {
      "op": "SHL"
    },
    "4923": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4925": {
      "op": "DUP3"
    },
    "4926": {
      "op": "ADD"
    },
    "4927": {
      "op": "MSTORE"
    },
    "4928": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4930": {
      "op": "ADD"
    },
    "4931": {
      "op": "SWAP1"
    },
    "4932": {
      "jump": "o",
      "op": "JUMP"
    },
    "4933": {
      "op": "JUMPDEST"
    },
    "4934": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4938": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4940": {
      "op": "SHL"
    },
    "4941": {
      "op": "SUB"
    },
    "4942": {
      "op": "DUP7"
    },
    "4943": {
      "op": "DUP2"
    },
    "4944": {
      "op": "AND"
    },
    "4945": {
      "op": "DUP3"
    },
    "4946": {
      "op": "MSTORE"
    },
    "4947": {
      "op": "DUP6"
    },
    "4948": {
      "op": "AND"
    },
    "4949": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4951": {
      "op": "DUP3"
    },
    "4952": {
      "op": "ADD"
    },
    "4953": {
      "op": "MSTORE"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4956": {
      "op": "DUP2"
    },
    "4957": {
      "op": "ADD"
    },
    "4958": {
      "op": "DUP5"
    },
    "4959": {
      "op": "SWAP1"
    },
    "4960": {
      "op": "MSTORE"
    },
    "4961": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4963": {
      "op": "DUP2"
    },
    "4964": {
      "op": "ADD"
    },
    "4965": {
      "op": "DUP4"
    },
    "4966": {
      "op": "SWAP1"
    },
    "4967": {
      "op": "MSTORE"
    },
    "4968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4970": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4972": {
      "op": "DUP3"
    },
    "4973": {
      "op": "ADD"
    },
    "4974": {
      "op": "DUP2"
    },
    "4975": {
      "op": "SWAP1"
    },
    "4976": {
      "op": "MSTORE"
    },
    "4977": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4979": {
      "op": "SWAP1"
    },
    "4980": {
      "op": "PUSH2",
      "value": "0x137F"
    },
    "4983": {
      "op": "SWAP1"
    },
    "4984": {
      "op": "DUP4"
    },
    "4985": {
      "op": "ADD"
    },
    "4986": {
      "op": "DUP5"
    },
    "4987": {
      "op": "PUSH2",
      "value": "0xC42"
    },
    "4990": {
      "jump": "i",
      "op": "JUMP"
    },
    "4991": {
      "op": "JUMPDEST"
    },
    "4992": {
      "op": "SWAP8"
    },
    "4993": {
      "op": "SWAP7"
    },
    "4994": {
      "op": "POP"
    },
    "4995": {
      "op": "POP"
    },
    "4996": {
      "op": "POP"
    },
    "4997": {
      "op": "POP"
    },
    "4998": {
      "op": "POP"
    },
    "4999": {
      "op": "POP"
    },
    "5000": {
      "op": "POP"
    },
    "5001": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "0f814780500abf2e917858e34184a7dbfe318c0f",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC1155.sol\";\nimport \"./IERC1155Receiver.sol\";\nimport \"./extensions/IERC1155MetadataURI.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: balance query for the zero address\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(address[] memory accounts, uint256[] memory ids)\n        public\n        view\n        virtual\n        override\n        returns (uint256[] memory)\n    {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not owner nor approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: transfer caller is not owner nor approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, _asSingletonArray(id), _asSingletonArray(amount), data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(\n        address from,\n        uint256 id,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), _asSingletonArray(id), _asSingletonArray(amount), \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(\n        address from,\n        uint256[] memory ids,\n        uint256[] memory amounts\n    ) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n",
  "sourceMap": "555:14720:160:-:0;;;1092:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1134:13;1142:4;1134:7;:13::i;:::-;1092:62;555:14720;;7936:86;8002:13;;;;:4;;:13;;;;;:::i;:::-;;7936:86;:::o;555:14720::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;555:14720:160;;;-1:-1:-1;555:14720:160;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:239;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1087;226:6;257:2;300;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;343:16;;-1:-1:-1;;;;;408:14:239;;;405:34;;;435:1;432;425:12;405:34;473:6;462:9;458:22;448:32;;518:7;511:4;507:2;503:13;499:27;489:55;;540:1;537;530:12;489:55;569:2;563:9;591:2;587;584:10;581:36;;;597:18;;:::i;:::-;672:2;666:9;640:2;726:13;;-1:-1:-1;;722:22:239;;;746:2;718:31;714:40;702:53;;;770:18;;;790:22;;;767:46;764:72;;;816:18;;:::i;:::-;856:10;852:2;845:22;891:2;883:6;876:18;931:7;926:2;921;917;913:11;909:20;906:33;903:53;;;952:1;949;942:12;903:53;974:1;965:10;;984:129;998:2;995:1;992:9;984:129;;;1086:10;;;1082:19;;1076:26;1055:14;;;1051:23;;1044:59;1009:10;;;;984:129;;;1131:2;1128:1;1125:9;1122:80;;;1190:1;1185:2;1180;1172:6;1168:15;1164:24;1157:35;1122:80;1221:6;146:1087;-1:-1:-1;;;;;;;;146:1087:239:o;1238:380::-;1317:1;1313:12;;;;1360;;;1381:61;;1435:4;1427:6;1423:17;1413:27;;1381:61;1488:2;1480:6;1477:14;1457:18;1454:38;1451:161;;;1534:10;1529:3;1525:20;1522:1;1515:31;1569:4;1566:1;1559:15;1597:4;1594:1;1587:15;1451:161;;1238:380;;;:::o;:::-;555:14720:160;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/token/ERC1155/ERC1155.sol",
  "type": "contract"
}