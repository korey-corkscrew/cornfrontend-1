{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "187": "contracts/openzeppelin/contracts/token/ERC721/ERC721.sol",
    "188": "contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
    "189": "contracts/openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
    "196": "contracts/openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "206": "contracts/openzeppelin/contracts/utils/Address.sol",
    "210": "contracts/openzeppelin/contracts/utils/Context.sol",
    "215": "contracts/openzeppelin/contracts/utils/Strings.sol",
    "224": "contracts/openzeppelin/contracts/utils/introspection/ERC165.sol",
    "228": "contracts/openzeppelin/contracts/utils/introspection/IERC165.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/token/ERC721/ERC721.sol",
    "exportedSymbols": {
      "Address": [
        26327
      ],
      "Context": [
        26715
      ],
      "ERC165": [
        28500
      ],
      "ERC721": [
        23473
      ],
      "IERC165": [
        28824
      ],
      "IERC721": [
        23589
      ],
      "IERC721Metadata": [
        24244
      ],
      "IERC721Receiver": [
        23607
      ],
      "Strings": [
        27218
      ]
    },
    "id": 23474,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 22609,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "107:23:187"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 22610,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23474,
        "sourceUnit": 23590,
        "src": "132:23:187",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 22611,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23474,
        "sourceUnit": 23608,
        "src": "156:31:187",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "./extensions/IERC721Metadata.sol",
        "id": 22612,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23474,
        "sourceUnit": 24245,
        "src": "188:42:187",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 22613,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23474,
        "sourceUnit": 26328,
        "src": "231:33:187",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 22614,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23474,
        "sourceUnit": 26716,
        "src": "265:33:187",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/Strings.sol",
        "file": "../../utils/Strings.sol",
        "id": 22615,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23474,
        "sourceUnit": 27219,
        "src": "299:33:187",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/introspection/ERC165.sol",
        "file": "../../utils/introspection/ERC165.sol",
        "id": 22616,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23474,
        "sourceUnit": 28501,
        "src": "333:46:187",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 22618,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26715,
              "src": "647:7:187"
            },
            "id": 22619,
            "nodeType": "InheritanceSpecifier",
            "src": "647:7:187"
          },
          {
            "baseName": {
              "id": 22620,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28500,
              "src": "656:6:187"
            },
            "id": 22621,
            "nodeType": "InheritanceSpecifier",
            "src": "656:6:187"
          },
          {
            "baseName": {
              "id": 22622,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23589,
              "src": "664:7:187"
            },
            "id": 22623,
            "nodeType": "InheritanceSpecifier",
            "src": "664:7:187"
          },
          {
            "baseName": {
              "id": 22624,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24244,
              "src": "673:15:187"
            },
            "id": 22625,
            "nodeType": "InheritanceSpecifier",
            "src": "673:15:187"
          }
        ],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 22617,
          "nodeType": "StructuredDocumentation",
          "src": "381:246:187",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 23473,
        "linearizedBaseContracts": [
          23473,
          24244,
          23589,
          28500,
          28824,
          26715
        ],
        "name": "ERC721",
        "nameLocation": "637:6:187",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 22628,
            "libraryName": {
              "id": 22626,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26327,
              "src": "701:7:187"
            },
            "nodeType": "UsingForDirective",
            "src": "695:26:187",
            "typeName": {
              "id": 22627,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "713:7:187",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 22631,
            "libraryName": {
              "id": 22629,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 27218,
              "src": "732:7:187"
            },
            "nodeType": "UsingForDirective",
            "src": "726:26:187",
            "typeName": {
              "id": 22630,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "744:7:187",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 22633,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "791:5:187",
            "nodeType": "VariableDeclaration",
            "scope": 23473,
            "src": "776:20:187",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 22632,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "776:6:187",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 22635,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "838:7:187",
            "nodeType": "VariableDeclaration",
            "scope": 23473,
            "src": "823:22:187",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 22634,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "823:6:187",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 22639,
            "mutability": "mutable",
            "name": "_owners",
            "nameLocation": "934:7:187",
            "nodeType": "VariableDeclaration",
            "scope": 23473,
            "src": "898:43:187",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 22638,
              "keyType": {
                "id": 22636,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "906:7:187",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "898:27:187",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 22637,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "917:7:187",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 22643,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1028:9:187",
            "nodeType": "VariableDeclaration",
            "scope": 23473,
            "src": "992:45:187",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 22642,
              "keyType": {
                "id": 22640,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1000:7:187",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "992:27:187",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 22641,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1011:7:187",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 22647,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1129:15:187",
            "nodeType": "VariableDeclaration",
            "scope": 23473,
            "src": "1093:51:187",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 22646,
              "keyType": {
                "id": 22644,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1101:7:187",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1093:27:187",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 22645,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1112:7:187",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 22653,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1252:18:187",
            "nodeType": "VariableDeclaration",
            "scope": 23473,
            "src": "1199:71:187",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 22652,
              "keyType": {
                "id": 22648,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1207:7:187",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1199:44:187",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 22651,
                "keyType": {
                  "id": 22649,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1226:7:187",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1218:24:187",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 22650,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1237:4:187",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 22669,
              "nodeType": "Block",
              "src": "1446:57:187",
              "statements": [
                {
                  "expression": {
                    "id": 22663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22661,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22633,
                      "src": "1456:5:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 22662,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22656,
                      "src": "1464:5:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1456:13:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 22664,
                  "nodeType": "ExpressionStatement",
                  "src": "1456:13:187"
                },
                {
                  "expression": {
                    "id": 22667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22665,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22635,
                      "src": "1479:7:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 22666,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22658,
                      "src": "1489:7:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1479:17:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 22668,
                  "nodeType": "ExpressionStatement",
                  "src": "1479:17:187"
                }
              ]
            },
            "documentation": {
              "id": 22654,
              "nodeType": "StructuredDocumentation",
              "src": "1277:108:187",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 22670,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22656,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1416:5:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 22670,
                  "src": "1402:19:187",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 22655,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:6:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22658,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1437:7:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 22670,
                  "src": "1423:21:187",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 22657,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1423:6:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1401:44:187"
            },
            "returnParameters": {
              "id": 22660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1446:0:187"
            },
            "scope": 23473,
            "src": "1390:113:187",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              28499,
              28823
            ],
            "body": {
              "id": 22700,
              "nodeType": "Block",
              "src": "1678:192:187",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 22698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 22693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 22686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 22681,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22673,
                          "src": "1707:11:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 22683,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23589,
                                "src": "1727:7:187",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$23589_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$23589_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 22682,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1722:4:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 22684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1722:13:187",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$23589",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 22685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1722:25:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1707:40:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 22692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 22687,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22673,
                          "src": "1763:11:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 22689,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24244,
                                "src": "1783:15:187",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$24244_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$24244_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 22688,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1778:4:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 22690,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1778:21:187",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$24244",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 22691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1778:33:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1763:48:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1707:104:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 22696,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22673,
                          "src": "1851:11:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 22694,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1827:5:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$23473_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 22695,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 28499,
                        "src": "1827:23:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 22697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1827:36:187",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1707:156:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 22680,
                  "id": 22699,
                  "nodeType": "Return",
                  "src": "1688:175:187"
                }
              ]
            },
            "documentation": {
              "id": 22671,
              "nodeType": "StructuredDocumentation",
              "src": "1509:56:187",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 22701,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1579:17:187",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22677,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 22675,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28500,
                  "src": "1646:6:187"
                },
                {
                  "id": 22676,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 28824,
                  "src": "1654:7:187"
                }
              ],
              "src": "1637:25:187"
            },
            "parameters": {
              "id": 22674,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22673,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1604:11:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 22701,
                  "src": "1597:18:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 22672,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1597:6:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1596:20:187"
            },
            "returnParameters": {
              "id": 22680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22679,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22701,
                  "src": "1672:4:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 22678,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1672:4:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1671:6:187"
            },
            "scope": 23473,
            "src": "1570:300:187",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              23514
            ],
            "body": {
              "id": 22724,
              "nodeType": "Block",
              "src": "2010:124:187",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 22716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 22711,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22704,
                          "src": "2028:5:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 22714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2045:1:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 22713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2037:7:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 22712,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2037:7:187",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 22715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2037:10:187",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2028:19:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 22717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2049:44:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 22710,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2020:7:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2020:74:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22719,
                  "nodeType": "ExpressionStatement",
                  "src": "2020:74:187"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 22720,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22643,
                      "src": "2111:9:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 22722,
                    "indexExpression": {
                      "id": 22721,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22704,
                      "src": "2121:5:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2111:16:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 22709,
                  "id": 22723,
                  "nodeType": "Return",
                  "src": "2104:23:187"
                }
              ]
            },
            "documentation": {
              "id": 22702,
              "nodeType": "StructuredDocumentation",
              "src": "1876:48:187",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 22725,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1938:9:187",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22706,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1983:8:187"
            },
            "parameters": {
              "id": 22705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22704,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1956:5:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 22725,
                  "src": "1948:13:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1948:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1947:15:187"
            },
            "returnParameters": {
              "id": 22709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22708,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22725,
                  "src": "2001:7:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22707,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2001:7:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2000:9:187"
            },
            "scope": 23473,
            "src": "1929:205:187",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              23522
            ],
            "body": {
              "id": 22752,
              "nodeType": "Block",
              "src": "2272:154:187",
              "statements": [
                {
                  "assignments": [
                    22735
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22735,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2290:5:187",
                      "nodeType": "VariableDeclaration",
                      "scope": 22752,
                      "src": "2282:13:187",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 22734,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2282:7:187",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22739,
                  "initialValue": {
                    "baseExpression": {
                      "id": 22736,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22639,
                      "src": "2298:7:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 22738,
                    "indexExpression": {
                      "id": 22737,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22728,
                      "src": "2306:7:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2298:16:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2282:32:187"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 22746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 22741,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22735,
                          "src": "2332:5:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 22744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2349:1:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 22743,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2341:7:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 22742,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2341:7:187",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 22745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2341:10:187",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2332:19:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 22747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2353:43:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "id": 22740,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2324:7:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2324:73:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22749,
                  "nodeType": "ExpressionStatement",
                  "src": "2324:73:187"
                },
                {
                  "expression": {
                    "id": 22750,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 22735,
                    "src": "2414:5:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 22733,
                  "id": 22751,
                  "nodeType": "Return",
                  "src": "2407:12:187"
                }
              ]
            },
            "documentation": {
              "id": 22726,
              "nodeType": "StructuredDocumentation",
              "src": "2140:46:187",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 22753,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2200:7:187",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22730,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2245:8:187"
            },
            "parameters": {
              "id": 22729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22728,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2216:7:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 22753,
                  "src": "2208:15:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22727,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2208:7:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2207:17:187"
            },
            "returnParameters": {
              "id": 22733,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22732,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22753,
                  "src": "2263:7:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22731,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2263:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2262:9:187"
            },
            "scope": 23473,
            "src": "2191:235:187",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              24229
            ],
            "body": {
              "id": 22762,
              "nodeType": "Block",
              "src": "2557:29:187",
              "statements": [
                {
                  "expression": {
                    "id": 22760,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 22633,
                    "src": "2574:5:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 22759,
                  "id": 22761,
                  "nodeType": "Return",
                  "src": "2567:12:187"
                }
              ]
            },
            "documentation": {
              "id": 22754,
              "nodeType": "StructuredDocumentation",
              "src": "2432:51:187",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 22763,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2497:4:187",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22756,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2524:8:187"
            },
            "parameters": {
              "id": 22755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2501:2:187"
            },
            "returnParameters": {
              "id": 22759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22758,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22763,
                  "src": "2542:13:187",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 22757,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2542:6:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2541:15:187"
            },
            "scope": 23473,
            "src": "2488:98:187",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              24235
            ],
            "body": {
              "id": 22772,
              "nodeType": "Block",
              "src": "2721:31:187",
              "statements": [
                {
                  "expression": {
                    "id": 22770,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 22635,
                    "src": "2738:7:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 22769,
                  "id": 22771,
                  "nodeType": "Return",
                  "src": "2731:14:187"
                }
              ]
            },
            "documentation": {
              "id": 22764,
              "nodeType": "StructuredDocumentation",
              "src": "2592:53:187",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 22773,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2659:6:187",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22766,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2688:8:187"
            },
            "parameters": {
              "id": 22765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2665:2:187"
            },
            "returnParameters": {
              "id": 22769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22768,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22773,
                  "src": "2706:13:187",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 22767,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2706:6:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2705:15:187"
            },
            "scope": 23473,
            "src": "2650:102:187",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              24243
            ],
            "body": {
              "id": 22814,
              "nodeType": "Block",
              "src": "2906:241:187",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 22784,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22776,
                            "src": "2932:7:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 22783,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23046,
                          "src": "2924:7:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 22785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2924:16:187",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 22786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2942:49:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 22782,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2916:7:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2916:76:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22788,
                  "nodeType": "ExpressionStatement",
                  "src": "2916:76:187"
                },
                {
                  "assignments": [
                    22790
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22790,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "3017:7:187",
                      "nodeType": "VariableDeclaration",
                      "scope": 22814,
                      "src": "3003:21:187",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 22789,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "3003:6:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22793,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 22791,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22824,
                      "src": "3027:8:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 22792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3027:10:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3003:34:187"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 22800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 22796,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22790,
                              "src": "3060:7:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 22795,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3054:5:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 22794,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3054:5:187",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 22797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3054:14:187",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 22798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3054:21:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 22799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3078:1:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3054:25:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 22811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3138:2:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 22812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "3054:86:187",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 22805,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22790,
                              "src": "3106:7:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 22806,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22776,
                                  "src": "3115:7:187",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 22807,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 27100,
                                "src": "3115:16:187",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 22808,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3115:18:187",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 22803,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3089:3:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 22804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3089:16:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 22809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3089:45:187",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 22802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3082:6:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 22801,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3082:6:187",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 22810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3082:53:187",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 22781,
                  "id": 22813,
                  "nodeType": "Return",
                  "src": "3047:93:187"
                }
              ]
            },
            "documentation": {
              "id": 22774,
              "nodeType": "StructuredDocumentation",
              "src": "2758:55:187",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 22815,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2827:8:187",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22778,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2873:8:187"
            },
            "parameters": {
              "id": 22777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22776,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2844:7:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 22815,
                  "src": "2836:15:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2836:7:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2835:17:187"
            },
            "returnParameters": {
              "id": 22781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22780,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22815,
                  "src": "2891:13:187",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 22779,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2891:6:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2890:15:187"
            },
            "scope": 23473,
            "src": "2818:329:187",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 22823,
              "nodeType": "Block",
              "src": "3455:26:187",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 22821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3472:2:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 22820,
                  "id": 22822,
                  "nodeType": "Return",
                  "src": "3465:9:187"
                }
              ]
            },
            "documentation": {
              "id": 22816,
              "nodeType": "StructuredDocumentation",
              "src": "3153:231:187",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
            },
            "id": 22824,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3398:8:187",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3406:2:187"
            },
            "returnParameters": {
              "id": 22820,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22819,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22824,
                  "src": "3440:13:187",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 22818,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3440:6:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3439:15:187"
            },
            "scope": 23473,
            "src": "3389:92:187",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              23550
            ],
            "body": {
              "id": 22866,
              "nodeType": "Block",
              "src": "3608:331:187",
              "statements": [
                {
                  "assignments": [
                    22834
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22834,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3626:5:187",
                      "nodeType": "VariableDeclaration",
                      "scope": 22866,
                      "src": "3618:13:187",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 22833,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3618:7:187",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22839,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 22837,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22829,
                        "src": "3649:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 22835,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23473,
                        "src": "3634:6:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$23473_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 22836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22753,
                      "src": "3634:14:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 22838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3634:23:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3618:39:187"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 22843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 22841,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22827,
                          "src": "3675:2:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 22842,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22834,
                          "src": "3681:5:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3675:11:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 22844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3688:35:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 22840,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3667:7:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3667:57:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22846,
                  "nodeType": "ExpressionStatement",
                  "src": "3667:57:187"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 22857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 22851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 22848,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26705,
                              "src": "3756:10:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 22849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3756:12:187",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 22850,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22834,
                            "src": "3772:5:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3756:21:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 22853,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22834,
                              "src": "3798:5:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 22854,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26705,
                                "src": "3805:10:187",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 22855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3805:12:187",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 22852,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22923,
                            "src": "3781:16:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 22856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3781:37:187",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3756:62:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 22858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3832:58:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 22847,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3735:7:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3735:165:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22860,
                  "nodeType": "ExpressionStatement",
                  "src": "3735:165:187"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22862,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22827,
                        "src": "3920:2:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22863,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22829,
                        "src": "3924:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22861,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23356,
                      "src": "3911:8:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 22864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3911:21:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22865,
                  "nodeType": "ExpressionStatement",
                  "src": "3911:21:187"
                }
              ]
            },
            "documentation": {
              "id": 22825,
              "nodeType": "StructuredDocumentation",
              "src": "3487:46:187",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 22867,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3547:7:187",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22831,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3599:8:187"
            },
            "parameters": {
              "id": 22830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22827,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3563:2:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 22867,
                  "src": "3555:10:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22826,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3555:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22829,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3575:7:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 22867,
                  "src": "3567:15:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3567:7:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3554:29:187"
            },
            "returnParameters": {
              "id": 22832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3608:0:187"
            },
            "scope": 23473,
            "src": "3538:401:187",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              23558
            ],
            "body": {
              "id": 22887,
              "nodeType": "Block",
              "src": "4085:132:187",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 22878,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22870,
                            "src": "4111:7:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 22877,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23046,
                          "src": "4103:7:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 22879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4103:16:187",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 22880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4121:46:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 22876,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4095:7:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4095:73:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22882,
                  "nodeType": "ExpressionStatement",
                  "src": "4095:73:187"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 22883,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22647,
                      "src": "4186:15:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 22885,
                    "indexExpression": {
                      "id": 22884,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22870,
                      "src": "4202:7:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4186:24:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 22875,
                  "id": 22886,
                  "nodeType": "Return",
                  "src": "4179:31:187"
                }
              ]
            },
            "documentation": {
              "id": 22868,
              "nodeType": "StructuredDocumentation",
              "src": "3945:50:187",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 22888,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "4009:11:187",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22872,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4058:8:187"
            },
            "parameters": {
              "id": 22871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22870,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4029:7:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 22888,
                  "src": "4021:15:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4021:7:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4020:17:187"
            },
            "returnParameters": {
              "id": 22875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22874,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22888,
                  "src": "4076:7:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22873,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4076:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4075:9:187"
            },
            "scope": 23473,
            "src": "4000:217:187",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              23566
            ],
            "body": {
              "id": 22904,
              "nodeType": "Block",
              "src": "4368:69:187",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 22898,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 26705,
                          "src": "4397:10:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 22899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4397:12:187",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22900,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22891,
                        "src": "4411:8:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22901,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22893,
                        "src": "4421:8:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 22897,
                      "name": "_setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23388,
                      "src": "4378:18:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 22902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4378:52:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22903,
                  "nodeType": "ExpressionStatement",
                  "src": "4378:52:187"
                }
              ]
            },
            "documentation": {
              "id": 22889,
              "nodeType": "StructuredDocumentation",
              "src": "4223:56:187",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 22905,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4293:17:187",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22895,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4359:8:187"
            },
            "parameters": {
              "id": 22894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22891,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4319:8:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 22905,
                  "src": "4311:16:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4311:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22893,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "4334:8:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 22905,
                  "src": "4329:13:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 22892,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4329:4:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4310:33:187"
            },
            "returnParameters": {
              "id": 22896,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4368:0:187"
            },
            "scope": 23473,
            "src": "4284:153:187",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              23576
            ],
            "body": {
              "id": 22922,
              "nodeType": "Block",
              "src": "4606:59:187",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 22916,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22653,
                        "src": "4623:18:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 22918,
                      "indexExpression": {
                        "id": 22917,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22908,
                        "src": "4642:5:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4623:25:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 22920,
                    "indexExpression": {
                      "id": 22919,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22910,
                      "src": "4649:8:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4623:35:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 22915,
                  "id": 22921,
                  "nodeType": "Return",
                  "src": "4616:42:187"
                }
              ]
            },
            "documentation": {
              "id": 22906,
              "nodeType": "StructuredDocumentation",
              "src": "4443:55:187",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 22923,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4512:16:187",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22912,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4582:8:187"
            },
            "parameters": {
              "id": 22911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22908,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4537:5:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 22923,
                  "src": "4529:13:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4529:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22910,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4552:8:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 22923,
                  "src": "4544:16:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22909,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4544:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4528:33:187"
            },
            "returnParameters": {
              "id": 22915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22914,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22923,
                  "src": "4600:4:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 22913,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4600:4:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4599:6:187"
            },
            "scope": 23473,
            "src": "4503:162:187",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              23542
            ],
            "body": {
              "id": 22949,
              "nodeType": "Block",
              "src": "4846:211:187",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 22936,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26705,
                              "src": "4935:10:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 22937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4935:12:187",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 22938,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22930,
                            "src": "4949:7:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 22935,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23087,
                          "src": "4916:18:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 22939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4916:41:187",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 22940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4959:51:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 22934,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4908:7:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4908:103:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22942,
                  "nodeType": "ExpressionStatement",
                  "src": "4908:103:187"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22944,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22926,
                        "src": "5032:4:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22945,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22928,
                        "src": "5038:2:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22946,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22930,
                        "src": "5042:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22943,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23332,
                      "src": "5022:9:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 22947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5022:28:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22948,
                  "nodeType": "ExpressionStatement",
                  "src": "5022:28:187"
                }
              ]
            },
            "documentation": {
              "id": 22924,
              "nodeType": "StructuredDocumentation",
              "src": "4671:51:187",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 22950,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4736:12:187",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22932,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4837:8:187"
            },
            "parameters": {
              "id": 22931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22926,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4766:4:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 22950,
                  "src": "4758:12:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22925,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4758:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22928,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4788:2:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 22950,
                  "src": "4780:10:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22927,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4780:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22930,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4808:7:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 22950,
                  "src": "4800:15:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22929,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4800:7:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4748:73:187"
            },
            "returnParameters": {
              "id": 22933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4846:0:187"
            },
            "scope": 23473,
            "src": "4727:330:187",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              23532
            ],
            "body": {
              "id": 22968,
              "nodeType": "Block",
              "src": "5246:56:187",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22962,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22953,
                        "src": "5273:4:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22963,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22955,
                        "src": "5279:2:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22964,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22957,
                        "src": "5283:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 22965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5292:2:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 22961,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        22969,
                        22999
                      ],
                      "referencedDeclaration": 22999,
                      "src": "5256:16:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 22966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5256:39:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22967,
                  "nodeType": "ExpressionStatement",
                  "src": "5256:39:187"
                }
              ]
            },
            "documentation": {
              "id": 22951,
              "nodeType": "StructuredDocumentation",
              "src": "5063:55:187",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 22969,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5132:16:187",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22959,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5237:8:187"
            },
            "parameters": {
              "id": 22958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22953,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5166:4:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 22969,
                  "src": "5158:12:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22952,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5158:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22955,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5188:2:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 22969,
                  "src": "5180:10:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22954,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5180:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22957,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5208:7:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 22969,
                  "src": "5200:15:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22956,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5200:7:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5148:73:187"
            },
            "returnParameters": {
              "id": 22960,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5246:0:187"
            },
            "scope": 23473,
            "src": "5123:179:187",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              23588
            ],
            "body": {
              "id": 22998,
              "nodeType": "Block",
              "src": "5519:169:187",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 22984,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26705,
                              "src": "5556:10:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 22985,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5556:12:187",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 22986,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22976,
                            "src": "5570:7:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 22983,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23087,
                          "src": "5537:18:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 22987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5537:41:187",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 22988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5580:51:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 22982,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5529:7:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5529:103:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22990,
                  "nodeType": "ExpressionStatement",
                  "src": "5529:103:187"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22992,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22972,
                        "src": "5656:4:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22993,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22974,
                        "src": "5662:2:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22994,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22976,
                        "src": "5666:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 22995,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22978,
                        "src": "5675:5:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 22991,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23028,
                      "src": "5642:13:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 22996,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5642:39:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22997,
                  "nodeType": "ExpressionStatement",
                  "src": "5642:39:187"
                }
              ]
            },
            "documentation": {
              "id": 22970,
              "nodeType": "StructuredDocumentation",
              "src": "5308:55:187",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 22999,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5377:16:187",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22980,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5510:8:187"
            },
            "parameters": {
              "id": 22979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22972,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5411:4:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 22999,
                  "src": "5403:12:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22971,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5403:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22974,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5433:2:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 22999,
                  "src": "5425:10:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22973,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5425:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22976,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5453:7:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 22999,
                  "src": "5445:15:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22975,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5445:7:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22978,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5483:5:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 22999,
                  "src": "5470:18:187",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 22977,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5470:5:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5393:101:187"
            },
            "returnParameters": {
              "id": 22981,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5519:0:187"
            },
            "scope": 23473,
            "src": "5368:320:187",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23027,
              "nodeType": "Block",
              "src": "6691:166:187",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23012,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23002,
                        "src": "6711:4:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23013,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23004,
                        "src": "6717:2:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23014,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23006,
                        "src": "6721:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23011,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23332,
                      "src": "6701:9:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 23015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6701:28:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23016,
                  "nodeType": "ExpressionStatement",
                  "src": "6701:28:187"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23019,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23002,
                            "src": "6770:4:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 23020,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23004,
                            "src": "6776:2:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 23021,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23006,
                            "src": "6780:7:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 23022,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23008,
                            "src": "6789:5:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 23018,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23450,
                          "src": "6747:22:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 23023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6747:48:187",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 23024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6797:52:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 23017,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6739:7:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6739:111:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23026,
                  "nodeType": "ExpressionStatement",
                  "src": "6739:111:187"
                }
              ]
            },
            "documentation": {
              "id": 23000,
              "nodeType": "StructuredDocumentation",
              "src": "5694:851:187",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 23028,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "6559:13:187",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23002,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6590:4:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23028,
                  "src": "6582:12:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23001,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6582:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23004,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6612:2:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23028,
                  "src": "6604:10:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23003,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6604:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23006,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6632:7:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23028,
                  "src": "6624:15:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23005,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6624:7:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23008,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "6662:5:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23028,
                  "src": "6649:18:187",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23007,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6649:5:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6572:101:187"
            },
            "returnParameters": {
              "id": 23010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6691:0:187"
            },
            "scope": 23473,
            "src": "6550:307:187",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23045,
              "nodeType": "Block",
              "src": "7231:54:187",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 23043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 23036,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22639,
                        "src": "7248:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 23038,
                      "indexExpression": {
                        "id": 23037,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23031,
                        "src": "7256:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7248:16:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 23041,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7276:1:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 23040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7268:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 23039,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7268:7:187",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 23042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7268:10:187",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7248:30:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 23035,
                  "id": 23044,
                  "nodeType": "Return",
                  "src": "7241:37:187"
                }
              ]
            },
            "documentation": {
              "id": 23029,
              "nodeType": "StructuredDocumentation",
              "src": "6863:292:187",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 23046,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "7169:7:187",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23031,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7185:7:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23046,
                  "src": "7177:15:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7177:7:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7176:17:187"
            },
            "returnParameters": {
              "id": 23035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23034,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23046,
                  "src": "7225:4:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23033,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7225:4:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7224:6:187"
            },
            "scope": 23473,
            "src": "7160:125:187",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23086,
              "nodeType": "Block",
              "src": "7542:245:187",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23058,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23051,
                            "src": "7568:7:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 23057,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23046,
                          "src": "7560:7:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 23059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7560:16:187",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 23060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7578:46:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 23056,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7552:7:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7552:73:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23062,
                  "nodeType": "ExpressionStatement",
                  "src": "7552:73:187"
                },
                {
                  "assignments": [
                    23064
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23064,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7643:5:187",
                      "nodeType": "VariableDeclaration",
                      "scope": 23086,
                      "src": "7635:13:187",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23063,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7635:7:187",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23069,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 23067,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23051,
                        "src": "7666:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 23065,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23473,
                        "src": "7651:6:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$23473_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 23066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22753,
                      "src": "7651:14:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 23068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7651:23:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7635:39:187"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 23083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 23078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 23072,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 23070,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23049,
                              "src": "7692:7:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 23071,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23064,
                              "src": "7703:5:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7692:16:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 23077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 23074,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23051,
                                  "src": "7724:7:187",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 23073,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22888,
                                "src": "7712:11:187",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 23075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7712:20:187",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 23076,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23049,
                              "src": "7736:7:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7712:31:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7692:51:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 23080,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23064,
                              "src": "7764:5:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 23081,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23049,
                              "src": "7771:7:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 23079,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22923,
                            "src": "7747:16:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 23082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7747:32:187",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7692:87:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 23084,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7691:89:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 23055,
                  "id": 23085,
                  "nodeType": "Return",
                  "src": "7684:96:187"
                }
              ]
            },
            "documentation": {
              "id": 23047,
              "nodeType": "StructuredDocumentation",
              "src": "7291:147:187",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 23087,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "7452:18:187",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23049,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7479:7:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23087,
                  "src": "7471:15:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23048,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7471:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23051,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7496:7:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23087,
                  "src": "7488:15:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23050,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7488:7:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7470:34:187"
            },
            "returnParameters": {
              "id": 23055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23054,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23087,
                  "src": "7536:4:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23053,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7536:4:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7535:6:187"
            },
            "scope": 23473,
            "src": "7443:344:187",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23101,
              "nodeType": "Block",
              "src": "8182:43:187",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23096,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23090,
                        "src": "8202:2:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23097,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23092,
                        "src": "8206:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 23098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8215:2:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 23095,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        23102,
                        23131
                      ],
                      "referencedDeclaration": 23131,
                      "src": "8192:9:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 23099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8192:26:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23100,
                  "nodeType": "ExpressionStatement",
                  "src": "8192:26:187"
                }
              ]
            },
            "documentation": {
              "id": 23088,
              "nodeType": "StructuredDocumentation",
              "src": "7793:319:187",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 23102,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8126:9:187",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23090,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8144:2:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23102,
                  "src": "8136:10:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8136:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23092,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8156:7:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23102,
                  "src": "8148:15:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23091,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8148:7:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8135:29:187"
            },
            "returnParameters": {
              "id": 23094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8182:0:187"
            },
            "scope": 23473,
            "src": "8117:108:187",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23130,
              "nodeType": "Block",
              "src": "8561:196:187",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23113,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23105,
                        "src": "8577:2:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23114,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23107,
                        "src": "8581:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23112,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23197,
                      "src": "8571:5:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 23115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8571:18:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23116,
                  "nodeType": "ExpressionStatement",
                  "src": "8571:18:187"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 23121,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8651:1:187",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 23120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8643:7:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 23119,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8643:7:187",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 23122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8643:10:187",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 23123,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23105,
                            "src": "8655:2:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 23124,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23107,
                            "src": "8659:7:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 23125,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23109,
                            "src": "8668:5:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 23118,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23450,
                          "src": "8620:22:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 23126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8620:54:187",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 23127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8688:52:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 23117,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8599:7:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8599:151:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23129,
                  "nodeType": "ExpressionStatement",
                  "src": "8599:151:187"
                }
              ]
            },
            "documentation": {
              "id": 23103,
              "nodeType": "StructuredDocumentation",
              "src": "8231:210:187",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 23131,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8455:9:187",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23105,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8482:2:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23131,
                  "src": "8474:10:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8474:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23107,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8502:7:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23131,
                  "src": "8494:15:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8494:7:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23109,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "8532:5:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23131,
                  "src": "8519:18:187",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23108,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8519:5:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8464:79:187"
            },
            "returnParameters": {
              "id": 23111,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8561:0:187"
            },
            "scope": 23473,
            "src": "8446:311:187",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23196,
              "nodeType": "Block",
              "src": "9140:366:187",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23140,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23134,
                          "src": "9158:2:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 23143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9172:1:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23142,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9164:7:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23141,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9164:7:187",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9164:10:187",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9158:16:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 23146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9176:34:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 23139,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9150:7:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9150:61:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23148,
                  "nodeType": "ExpressionStatement",
                  "src": "9150:61:187"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9229:17:187",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 23151,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23136,
                              "src": "9238:7:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 23150,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23046,
                            "src": "9230:7:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 23152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9230:16:187",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 23154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9248:30:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 23149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9221:7:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9221:58:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23156,
                  "nodeType": "ExpressionStatement",
                  "src": "9221:58:187"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 23160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9319:1:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 23159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9311:7:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23158,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9311:7:187",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9311:10:187",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23162,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23134,
                        "src": "9323:2:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23163,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23136,
                        "src": "9327:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23157,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23461,
                      "src": "9290:20:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 23164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9290:45:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23165,
                  "nodeType": "ExpressionStatement",
                  "src": "9290:45:187"
                },
                {
                  "expression": {
                    "id": 23170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23166,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22643,
                        "src": "9346:9:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 23168,
                      "indexExpression": {
                        "id": 23167,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23134,
                        "src": "9356:2:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9346:13:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 23169,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9363:1:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9346:18:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23171,
                  "nodeType": "ExpressionStatement",
                  "src": "9346:18:187"
                },
                {
                  "expression": {
                    "id": 23176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23172,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22639,
                        "src": "9374:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 23174,
                      "indexExpression": {
                        "id": 23173,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23136,
                        "src": "9382:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9374:16:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 23175,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23134,
                      "src": "9393:2:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9374:21:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23177,
                  "nodeType": "ExpressionStatement",
                  "src": "9374:21:187"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 23181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9428:1:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 23180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9420:7:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23179,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9420:7:187",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9420:10:187",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23183,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23134,
                        "src": "9432:2:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23184,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23136,
                        "src": "9436:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23178,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23488,
                      "src": "9411:8:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 23185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9411:33:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23186,
                  "nodeType": "EmitStatement",
                  "src": "9406:38:187"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 23190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9483:1:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 23189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9475:7:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23188,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9475:7:187",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9475:10:187",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23192,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23134,
                        "src": "9487:2:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23193,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23136,
                        "src": "9491:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23187,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23472,
                      "src": "9455:19:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 23194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9455:44:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23195,
                  "nodeType": "ExpressionStatement",
                  "src": "9455:44:187"
                }
              ]
            },
            "documentation": {
              "id": 23132,
              "nodeType": "StructuredDocumentation",
              "src": "8763:311:187",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 23197,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "9088:5:187",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23134,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9102:2:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23197,
                  "src": "9094:10:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23133,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9094:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23136,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9114:7:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23197,
                  "src": "9106:15:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23135,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9106:7:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9093:29:187"
            },
            "returnParameters": {
              "id": 23138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9140:0:187"
            },
            "scope": 23473,
            "src": "9079:427:187",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23256,
              "nodeType": "Block",
              "src": "9772:357:187",
              "statements": [
                {
                  "assignments": [
                    23204
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23204,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "9790:5:187",
                      "nodeType": "VariableDeclaration",
                      "scope": 23256,
                      "src": "9782:13:187",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23203,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9782:7:187",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23209,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 23207,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23200,
                        "src": "9813:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 23205,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23473,
                        "src": "9798:6:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$23473_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 23206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22753,
                      "src": "9798:14:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 23208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9798:23:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9782:39:187"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23211,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23204,
                        "src": "9853:5:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 23214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9868:1:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 23213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9860:7:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23212,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9860:7:187",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9860:10:187",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23216,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23200,
                        "src": "9872:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23210,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23461,
                      "src": "9832:20:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 23217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9832:48:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23218,
                  "nodeType": "ExpressionStatement",
                  "src": "9832:48:187"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 23222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9935:1:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 23221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9927:7:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23220,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9927:7:187",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9927:10:187",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23224,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23200,
                        "src": "9939:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23219,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23356,
                      "src": "9918:8:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 23225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9918:29:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23226,
                  "nodeType": "ExpressionStatement",
                  "src": "9918:29:187"
                },
                {
                  "expression": {
                    "id": 23231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23227,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22643,
                        "src": "9958:9:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 23229,
                      "indexExpression": {
                        "id": 23228,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23204,
                        "src": "9968:5:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9958:16:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 23230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9978:1:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "9958:21:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23232,
                  "nodeType": "ExpressionStatement",
                  "src": "9958:21:187"
                },
                {
                  "expression": {
                    "id": 23236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "9989:23:187",
                    "subExpression": {
                      "baseExpression": {
                        "id": 23233,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22639,
                        "src": "9996:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 23235,
                      "indexExpression": {
                        "id": 23234,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23200,
                        "src": "10004:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9996:16:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23237,
                  "nodeType": "ExpressionStatement",
                  "src": "9989:23:187"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 23239,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23204,
                        "src": "10037:5:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 23242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10052:1:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 23241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10044:7:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23240,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10044:7:187",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10044:10:187",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23244,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23200,
                        "src": "10056:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23238,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23488,
                      "src": "10028:8:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 23245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10028:36:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23246,
                  "nodeType": "EmitStatement",
                  "src": "10023:41:187"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23248,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23204,
                        "src": "10095:5:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 23251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10110:1:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 23250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10102:7:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23249,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10102:7:187",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10102:10:187",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23253,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23200,
                        "src": "10114:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23247,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23472,
                      "src": "10075:19:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 23254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10075:47:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23255,
                  "nodeType": "ExpressionStatement",
                  "src": "10075:47:187"
                }
              ]
            },
            "documentation": {
              "id": 23198,
              "nodeType": "StructuredDocumentation",
              "src": "9512:206:187",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 23257,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "9732:5:187",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23200,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9746:7:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23257,
                  "src": "9738:15:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9738:7:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9737:17:187"
            },
            "returnParameters": {
              "id": 23202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9772:0:187"
            },
            "scope": 23473,
            "src": "9723:406:187",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23331,
              "nodeType": "Block",
              "src": "10562:496:187",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 23270,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23264,
                              "src": "10595:7:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 23268,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23473,
                              "src": "10580:6:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$23473_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 23269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 22753,
                            "src": "10580:14:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 23271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10580:23:187",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 23272,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23260,
                          "src": "10607:4:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10580:31:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
                        "id": 23274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10613:39:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                          "typeString": "literal_string \"ERC721: transfer from incorrect owner\""
                        },
                        "value": "ERC721: transfer from incorrect owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                          "typeString": "literal_string \"ERC721: transfer from incorrect owner\""
                        }
                      ],
                      "id": 23267,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10572:7:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10572:81:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23276,
                  "nodeType": "ExpressionStatement",
                  "src": "10572:81:187"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23283,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23278,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23262,
                          "src": "10671:2:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 23281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10685:1:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10677:7:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23279,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10677:7:187",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10677:10:187",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10671:16:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 23284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10689:38:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 23277,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10663:7:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10663:65:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23286,
                  "nodeType": "ExpressionStatement",
                  "src": "10663:65:187"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23288,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23260,
                        "src": "10760:4:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23289,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23262,
                        "src": "10766:2:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23290,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23264,
                        "src": "10770:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23287,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23461,
                      "src": "10739:20:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 23291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10739:39:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23292,
                  "nodeType": "ExpressionStatement",
                  "src": "10739:39:187"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 23296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10857:1:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 23295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10849:7:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23294,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10849:7:187",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10849:10:187",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23298,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23264,
                        "src": "10861:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23293,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23356,
                      "src": "10840:8:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 23299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10840:29:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23300,
                  "nodeType": "ExpressionStatement",
                  "src": "10840:29:187"
                },
                {
                  "expression": {
                    "id": 23305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23301,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22643,
                        "src": "10880:9:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 23303,
                      "indexExpression": {
                        "id": 23302,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23260,
                        "src": "10890:4:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10880:15:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 23304,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10899:1:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10880:20:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23306,
                  "nodeType": "ExpressionStatement",
                  "src": "10880:20:187"
                },
                {
                  "expression": {
                    "id": 23311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23307,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22643,
                        "src": "10910:9:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 23309,
                      "indexExpression": {
                        "id": 23308,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23262,
                        "src": "10920:2:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10910:13:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 23310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10927:1:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10910:18:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23312,
                  "nodeType": "ExpressionStatement",
                  "src": "10910:18:187"
                },
                {
                  "expression": {
                    "id": 23317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23313,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22639,
                        "src": "10938:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 23315,
                      "indexExpression": {
                        "id": 23314,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23264,
                        "src": "10946:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10938:16:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 23316,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23262,
                      "src": "10957:2:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10938:21:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23318,
                  "nodeType": "ExpressionStatement",
                  "src": "10938:21:187"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 23320,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23260,
                        "src": "10984:4:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23321,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23262,
                        "src": "10990:2:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23322,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23264,
                        "src": "10994:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23319,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23488,
                      "src": "10975:8:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 23323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10975:27:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23324,
                  "nodeType": "EmitStatement",
                  "src": "10970:32:187"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23326,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23260,
                        "src": "11033:4:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23327,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23262,
                        "src": "11039:2:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23328,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23264,
                        "src": "11043:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23325,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23472,
                      "src": "11013:19:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 23329,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11013:38:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23330,
                  "nodeType": "ExpressionStatement",
                  "src": "11013:38:187"
                }
              ]
            },
            "documentation": {
              "id": 23258,
              "nodeType": "StructuredDocumentation",
              "src": "10135:313:187",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 23332,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "10462:9:187",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23265,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23260,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10489:4:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23332,
                  "src": "10481:12:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23259,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10481:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23262,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10511:2:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23332,
                  "src": "10503:10:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23261,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10503:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23264,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10531:7:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23332,
                  "src": "10523:15:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23263,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10523:7:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10471:73:187"
            },
            "returnParameters": {
              "id": 23266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10562:0:187"
            },
            "scope": 23473,
            "src": "10453:605:187",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23355,
              "nodeType": "Block",
              "src": "11233:107:187",
              "statements": [
                {
                  "expression": {
                    "id": 23344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23340,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22647,
                        "src": "11243:15:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 23342,
                      "indexExpression": {
                        "id": 23341,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23337,
                        "src": "11259:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11243:24:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 23343,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23335,
                      "src": "11270:2:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "11243:29:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23345,
                  "nodeType": "ExpressionStatement",
                  "src": "11243:29:187"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23349,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23337,
                            "src": "11311:7:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 23347,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23473,
                            "src": "11296:6:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$23473_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 23348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22753,
                          "src": "11296:14:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 23350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11296:23:187",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23351,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23335,
                        "src": "11321:2:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23352,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23337,
                        "src": "11325:7:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23346,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23497,
                      "src": "11287:8:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 23353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11287:46:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23354,
                  "nodeType": "EmitStatement",
                  "src": "11282:51:187"
                }
              ]
            },
            "documentation": {
              "id": 23333,
              "nodeType": "StructuredDocumentation",
              "src": "11064:100:187",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits a {Approval} event."
            },
            "id": 23356,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "11178:8:187",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23335,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11195:2:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23356,
                  "src": "11187:10:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23334,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11187:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23337,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11207:7:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23356,
                  "src": "11199:15:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23336,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11199:7:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11186:29:187"
            },
            "returnParameters": {
              "id": 23339,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11233:0:187"
            },
            "scope": 23473,
            "src": "11169:171:187",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23387,
              "nodeType": "Block",
              "src": "11598:184:187",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23367,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23359,
                          "src": "11616:5:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 23368,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23361,
                          "src": "11625:8:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11616:17:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 23370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11635:27:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 23366,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11608:7:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11608:55:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23372,
                  "nodeType": "ExpressionStatement",
                  "src": "11608:55:187"
                },
                {
                  "expression": {
                    "id": 23379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 23373,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22653,
                          "src": "11673:18:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 23376,
                        "indexExpression": {
                          "id": 23374,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23359,
                          "src": "11692:5:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11673:25:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 23377,
                      "indexExpression": {
                        "id": 23375,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23361,
                        "src": "11699:8:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11673:35:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 23378,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23363,
                      "src": "11711:8:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11673:46:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23380,
                  "nodeType": "ExpressionStatement",
                  "src": "11673:46:187"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 23382,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23359,
                        "src": "11749:5:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23383,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23361,
                        "src": "11756:8:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23384,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23363,
                        "src": "11766:8:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 23381,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23506,
                      "src": "11734:14:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 23385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11734:41:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23386,
                  "nodeType": "EmitStatement",
                  "src": "11729:46:187"
                }
              ]
            },
            "documentation": {
              "id": 23357,
              "nodeType": "StructuredDocumentation",
              "src": "11346:124:187",
              "text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits a {ApprovalForAll} event."
            },
            "id": 23388,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setApprovalForAll",
            "nameLocation": "11484:18:187",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23359,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "11520:5:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23388,
                  "src": "11512:13:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11512:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23361,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "11543:8:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23388,
                  "src": "11535:16:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23360,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11535:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23363,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "11566:8:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23388,
                  "src": "11561:13:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23362,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11561:4:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11502:78:187"
            },
            "returnParameters": {
              "id": 23365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11598:0:187"
            },
            "scope": 23473,
            "src": "11475:307:187",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23449,
              "nodeType": "Block",
              "src": "12491:622:187",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 23402,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23393,
                        "src": "12505:2:187",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 23403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26050,
                      "src": "12505:13:187",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 23404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12505:15:187",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 23447,
                    "nodeType": "Block",
                    "src": "13071:36:187",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 23445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13092:4:187",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 23401,
                        "id": 23446,
                        "nodeType": "Return",
                        "src": "13085:11:187"
                      }
                    ]
                  },
                  "id": 23448,
                  "nodeType": "IfStatement",
                  "src": "12501:606:187",
                  "trueBody": {
                    "id": 23444,
                    "nodeType": "Block",
                    "src": "12522:543:187",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 23424,
                              "nodeType": "Block",
                              "src": "12637:91:187",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 23422,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 23418,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 23416,
                                      "src": "12662:6:187",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 23419,
                                          "name": "IERC721Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 23607,
                                          "src": "12672:15:187",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$23607_$",
                                            "typeString": "type(contract IERC721Receiver)"
                                          }
                                        },
                                        "id": 23420,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 23606,
                                        "src": "12672:32:187",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 23421,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "12672:41:187",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "12662:51:187",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 23401,
                                  "id": 23423,
                                  "nodeType": "Return",
                                  "src": "12655:58:187"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 23425,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 23417,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 23416,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "12629:6:187",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 23425,
                                  "src": "12622:13:187",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 23415,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12622:6:187",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12621:15:187"
                            },
                            "src": "12613:115:187"
                          },
                          {
                            "block": {
                              "id": 23441,
                              "nodeType": "Block",
                              "src": "12757:298:187",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 23432,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 23429,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 23427,
                                        "src": "12779:6:187",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 23430,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "12779:13:187",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 23431,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "12796:1:187",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "12779:18:187",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 23439,
                                    "nodeType": "Block",
                                    "src": "12906:135:187",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
                                          "src": "12937:86:187",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "12974:2:187",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12978:6:187"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12970:3:187"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12970:15:187"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12993:6:187"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12987:5:187"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12987:13:187"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12963:6:187"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "12963:38:187"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "12963:38:187"
                                            }
                                          ]
                                        },
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 23427,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12978:6:187",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 23427,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "12993:6:187",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 23438,
                                        "nodeType": "InlineAssembly",
                                        "src": "12928:95:187"
                                      }
                                    ]
                                  },
                                  "id": 23440,
                                  "nodeType": "IfStatement",
                                  "src": "12775:266:187",
                                  "trueBody": {
                                    "id": 23437,
                                    "nodeType": "Block",
                                    "src": "12799:101:187",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 23434,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "12828:52:187",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 23433,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "12821:6:187",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 23435,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "12821:60:187",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 23436,
                                        "nodeType": "ExpressionStatement",
                                        "src": "12821:60:187"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 23442,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 23428,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 23427,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "12749:6:187",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 23442,
                                  "src": "12736:19:187",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 23426,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "12736:5:187",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "12735:21:187"
                            },
                            "src": "12729:326:187"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 23409,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26705,
                                "src": "12577:10:187",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 23410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12577:12:187",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 23411,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23391,
                              "src": "12591:4:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 23412,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23395,
                              "src": "12597:7:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 23413,
                              "name": "_data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23397,
                              "src": "12606:5:187",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 23406,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23393,
                                  "src": "12556:2:187",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 23405,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23607,
                                "src": "12540:15:187",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$23607_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 23407,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12540:19:187",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$23607",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 23408,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23606,
                            "src": "12540:36:187",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 23414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12540:72:187",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 23443,
                        "nodeType": "TryStatement",
                        "src": "12536:519:187"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 23389,
              "nodeType": "StructuredDocumentation",
              "src": "11788:542:187",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 23450,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "12344:22:187",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23391,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12384:4:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23450,
                  "src": "12376:12:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23390,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12376:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23393,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12406:2:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23450,
                  "src": "12398:10:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12398:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23395,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12426:7:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23450,
                  "src": "12418:15:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23394,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12418:7:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23397,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "12456:5:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23450,
                  "src": "12443:18:187",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23396,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12443:5:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12366:101:187"
            },
            "returnParameters": {
              "id": 23401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23400,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23450,
                  "src": "12485:4:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23399,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12485:4:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12484:6:187"
            },
            "scope": 23473,
            "src": "12335:778:187",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 23460,
              "nodeType": "Block",
              "src": "13789:2:187",
              "statements": []
            },
            "documentation": {
              "id": 23451,
              "nodeType": "StructuredDocumentation",
              "src": "13119:545:187",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 23461,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "13678:20:187",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23458,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23453,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13716:4:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23461,
                  "src": "13708:12:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23452,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13708:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23455,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13738:2:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23461,
                  "src": "13730:10:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13730:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23457,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13758:7:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23461,
                  "src": "13750:15:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23456,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13750:7:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13698:73:187"
            },
            "returnParameters": {
              "id": 23459,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13789:0:187"
            },
            "scope": 23473,
            "src": "13669:122:187",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23471,
              "nodeType": "Block",
              "src": "14282:2:187",
              "statements": []
            },
            "documentation": {
              "id": 23462,
              "nodeType": "StructuredDocumentation",
              "src": "13797:361:187",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 23472,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "14172:19:187",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23464,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14209:4:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23472,
                  "src": "14201:12:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23463,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14201:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23466,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14231:2:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23472,
                  "src": "14223:10:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23465,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14223:7:187",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23468,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14251:7:187",
                  "nodeType": "VariableDeclaration",
                  "scope": 23472,
                  "src": "14243:15:187",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23467,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14243:7:187",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14191:73:187"
            },
            "returnParameters": {
              "id": 23470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14282:0:187"
            },
            "scope": 23473,
            "src": "14163:121:187",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 23474,
        "src": "628:13658:187",
        "usedErrors": []
      }
    ],
    "src": "107:14180:187"
  },
  "bytecode": "60806040523480156200001157600080fd5b50604051620014de380380620014de8339810160408190526200003491620001db565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000282565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b602082108114156200027c57634e487b7160e01b600052602260045260246000fd5b50919050565b61124c80620002926000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d5c565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610dd1565b61012461011f366004610de4565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610e19565b6103a6565b005b61014f61015f366004610e43565b6104bc565b61014f610172366004610e43565b6104ed565b610124610185366004610de4565b610508565b61019d610198366004610e7f565b61057f565b6040519081526020016100f3565b610104610606565b61014f6101c1366004610e9a565b610615565b61014f6101d4366004610eec565b610624565b6101046101e7366004610de4565b61065c565b6100e76101fa366004610fc8565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990610ffb565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610ffb565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610508565b9050806001600160a01b0316836001600160a01b0316141561041f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043b575061043b81336101fa565b6104ad5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b78383610744565b505050565b6104c633826107b2565b6104e25760405162461bcd60e51b815260040161038190611036565b6104b78383836108a9565b6104b783838360405180602001604052806000815250610624565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990610ffb565b610620338383610a45565b5050565b61062e33836107b2565b61064a5760405162461bcd60e51b815260040161038190611036565b61065684848484610b14565b50505050565b6000818152600260205260409020546060906001600160a01b03166106db5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006106f260408051602081019091526000815290565b90506000815111610712576040518060200160405280600081525061073d565b8061071c84610b47565b60405160200161072d929190611087565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061077982610508565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661082b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b600061083683610508565b9050806001600160a01b0316846001600160a01b031614806108715750836001600160a01b03166108668461030c565b6001600160a01b0316145b806108a157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166108bc82610508565b6001600160a01b0316146109205760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610381565b6001600160a01b0382166109825760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b61098d600082610744565b6001600160a01b03831660009081526003602052604081208054600192906109b69084906110cc565b90915550506001600160a01b03821660009081526003602052604081208054600192906109e49084906110e3565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03161415610aa75760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b1f8484846108a9565b610b2b84848484610c45565b6106565760405162461bcd60e51b8152600401610381906110fb565b606081610b6b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b955780610b7f8161114d565b9150610b8e9050600a8361117e565b9150610b6f565b60008167ffffffffffffffff811115610bb057610bb0610ed6565b6040519080825280601f01601f191660200182016040528015610bda576020820181803683370190505b5090505b84156108a157610bef6001836110cc565b9150610bfc600a86611192565b610c079060306110e3565b60f81b818381518110610c1c57610c1c6111a6565b60200101906001600160f81b031916908160001a905350610c3e600a8661117e565b9450610bde565b60006001600160a01b0384163b15610d3857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c899033908990889088906004016111bc565b6020604051808303816000875af1925050508015610cc4575060408051601f3d908101601f19168201909252610cc1918101906111f9565b60015b610d1e573d808015610cf2576040519150601f19603f3d011682016040523d82523d6000602084013e610cf7565b606091505b508051610d165760405162461bcd60e51b8152600401610381906110fb565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108a1565b506001949350505050565b6001600160e01b031981168114610d5957600080fd5b50565b600060208284031215610d6e57600080fd5b813561073d81610d43565b60005b83811015610d94578181015183820152602001610d7c565b838111156106565750506000910152565b60008151808452610dbd816020860160208601610d79565b601f01601f19169290920160200192915050565b60208152600061073d6020830184610da5565b600060208284031215610df657600080fd5b5035919050565b80356001600160a01b0381168114610e1457600080fd5b919050565b60008060408385031215610e2c57600080fd5b610e3583610dfd565b946020939093013593505050565b600080600060608486031215610e5857600080fd5b610e6184610dfd565b9250610e6f60208501610dfd565b9150604084013590509250925092565b600060208284031215610e9157600080fd5b61073d82610dfd565b60008060408385031215610ead57600080fd5b610eb683610dfd565b915060208301358015158114610ecb57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f0257600080fd5b610f0b85610dfd565b9350610f1960208601610dfd565b925060408501359150606085013567ffffffffffffffff80821115610f3d57600080fd5b818701915087601f830112610f5157600080fd5b813581811115610f6357610f63610ed6565b604051601f8201601f19908116603f01168101908382118183101715610f8b57610f8b610ed6565b816040528281528a6020848701011115610fa457600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fdb57600080fd5b610fe483610dfd565b9150610ff260208401610dfd565b90509250929050565b600181811c9082168061100f57607f821691505b6020821081141561103057634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008351611099818460208801610d79565b8351908301906110ad818360208801610d79565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110de576110de6110b6565b500390565b600082198211156110f6576110f66110b6565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000600019821415611161576111616110b6565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261118d5761118d611168565b500490565b6000826111a1576111a1611168565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111ef90830184610da5565b9695505050505050565b60006020828403121561120b57600080fd5b815161073d81610d4356fea26469706673582212200bb8284d4c53527d34b4406f28bd3ff59c8aa497cde736245f5aa36aa03b958064736f6c634300080c0033",
  "bytecodeSha1": "a43935dd434126ae8d538411eca992dffe8348cd",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "187": {
        "ERC721._safeTransfer": {
          "61": [
            6747,
            6795,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "60": [
            11616,
            11633,
            true
          ]
        },
        "ERC721._transfer": {
          "58": [
            10580,
            10611,
            true
          ],
          "59": [
            10671,
            10687,
            true
          ]
        },
        "ERC721.approve": {
          "50": [
            3675,
            3686,
            true
          ],
          "51": [
            3756,
            3777,
            true
          ],
          "52": [
            3781,
            3818,
            true
          ]
        },
        "ERC721.balanceOf": {
          "55": [
            2028,
            2047,
            true
          ]
        },
        "ERC721.ownerOf": {
          "54": [
            2332,
            2351,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "56": [
            5537,
            5578,
            true
          ]
        },
        "ERC721.tokenURI": {
          "57": [
            3054,
            3079,
            true
          ]
        },
        "ERC721.transferFrom": {
          "53": [
            4916,
            4957,
            true
          ]
        }
      },
      "188": {},
      "189": {},
      "196": {},
      "206": {},
      "210": {},
      "215": {
        "Strings.toString": {
          "62": [
            601,
            611,
            false
          ]
        }
      },
      "224": {},
      "228": {}
    },
    "statements": {
      "187": {
        "ERC721._approve": {
          "24": [
            11243,
            11272
          ],
          "25": [
            11282,
            11333
          ]
        },
        "ERC721._baseURI": {
          "22": [
            3465,
            3474
          ]
        },
        "ERC721._checkOnERC721Received": {
          "47": [
            12821,
            12881
          ],
          "48": [
            12655,
            12713
          ],
          "49": [
            13085,
            13096
          ]
        },
        "ERC721._exists": {
          "4": [
            7241,
            7278
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "26": [
            7552,
            7625
          ],
          "27": [
            7684,
            7780
          ]
        },
        "ERC721._safeTransfer": {
          "38": [
            6701,
            6729
          ],
          "39": [
            6739,
            6850
          ]
        },
        "ERC721._setApprovalForAll": {
          "35": [
            11608,
            11663
          ],
          "36": [
            11673,
            11719
          ],
          "37": [
            11729,
            11775
          ]
        },
        "ERC721._transfer": {
          "28": [
            10572,
            10653
          ],
          "29": [
            10663,
            10728
          ],
          "30": [
            10840,
            10869
          ],
          "31": [
            10880,
            10900
          ],
          "32": [
            10910,
            10928
          ],
          "33": [
            10938,
            10959
          ],
          "34": [
            10970,
            11002
          ]
        },
        "ERC721.approve": {
          "7": [
            3667,
            3724
          ],
          "9": [
            3735,
            3900
          ],
          "10": [
            3911,
            3932
          ]
        },
        "ERC721.balanceOf": {
          "15": [
            2020,
            2094
          ],
          "16": [
            2104,
            2127
          ]
        },
        "ERC721.getApproved": {
          "5": [
            4095,
            4168
          ],
          "6": [
            4179,
            4210
          ]
        },
        "ERC721.isApprovedForAll": {
          "0": [
            4616,
            4658
          ]
        },
        "ERC721.name": {
          "3": [
            2567,
            2579
          ]
        },
        "ERC721.ownerOf": {
          "14": [
            2324,
            2397
          ]
        },
        "ERC721.safeTransferFrom": {
          "13": [
            5256,
            5295
          ],
          "19": [
            5529,
            5632
          ],
          "20": [
            5642,
            5681
          ]
        },
        "ERC721.setApprovalForAll": {
          "18": [
            4378,
            4430
          ]
        },
        "ERC721.supportsInterface": {
          "1": [
            1688,
            1863
          ]
        },
        "ERC721.symbol": {
          "17": [
            2731,
            2745
          ]
        },
        "ERC721.tokenURI": {
          "21": [
            2916,
            2992
          ],
          "23": [
            3047,
            3140
          ]
        },
        "ERC721.transferFrom": {
          "11": [
            4908,
            5011
          ],
          "12": [
            5022,
            5050
          ]
        }
      },
      "188": {},
      "189": {},
      "196": {},
      "206": {
        "Address.isContract": {
          "46": [
            1458,
            1488
          ]
        }
      },
      "210": {
        "Context._msgSender": {
          "8": [
            712,
            729
          ]
        }
      },
      "215": {
        "Strings.toString": {
          "40": [
            627,
            637
          ],
          "41": [
            743,
            751
          ],
          "42": [
            765,
            775
          ],
          "43": [
            877,
            888
          ],
          "44": [
            902,
            958
          ],
          "45": [
            972,
            983
          ]
        }
      },
      "224": {
        "ERC165.supportsInterface": {
          "2": [
            930,
            977
          ]
        }
      },
      "228": {}
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "ERC165",
    "IERC165",
    "IERC721",
    "IERC721Metadata",
    "IERC721Receiver",
    "Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d5c565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610dd1565b61012461011f366004610de4565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610e19565b6103a6565b005b61014f61015f366004610e43565b6104bc565b61014f610172366004610e43565b6104ed565b610124610185366004610de4565b610508565b61019d610198366004610e7f565b61057f565b6040519081526020016100f3565b610104610606565b61014f6101c1366004610e9a565b610615565b61014f6101d4366004610eec565b610624565b6101046101e7366004610de4565b61065c565b6100e76101fa366004610fc8565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990610ffb565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610ffb565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661038a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006103b182610508565b9050806001600160a01b0316836001600160a01b0316141561041f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610381565b336001600160a01b038216148061043b575061043b81336101fa565b6104ad5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610381565b6104b78383610744565b505050565b6104c633826107b2565b6104e25760405162461bcd60e51b815260040161038190611036565b6104b78383836108a9565b6104b783838360405180602001604052806000815250610624565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610381565b60006001600160a01b0382166105ea5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610381565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990610ffb565b610620338383610a45565b5050565b61062e33836107b2565b61064a5760405162461bcd60e51b815260040161038190611036565b61065684848484610b14565b50505050565b6000818152600260205260409020546060906001600160a01b03166106db5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610381565b60006106f260408051602081019091526000815290565b90506000815111610712576040518060200160405280600081525061073d565b8061071c84610b47565b60405160200161072d929190611087565b6040516020818303038152906040525b9392505050565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061077982610508565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b031661082b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610381565b600061083683610508565b9050806001600160a01b0316846001600160a01b031614806108715750836001600160a01b03166108668461030c565b6001600160a01b0316145b806108a157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166108bc82610508565b6001600160a01b0316146109205760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610381565b6001600160a01b0382166109825760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610381565b61098d600082610744565b6001600160a01b03831660009081526003602052604081208054600192906109b69084906110cc565b90915550506001600160a01b03821660009081526003602052604081208054600192906109e49084906110e3565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03161415610aa75760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610381565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610b1f8484846108a9565b610b2b84848484610c45565b6106565760405162461bcd60e51b8152600401610381906110fb565b606081610b6b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b955780610b7f8161114d565b9150610b8e9050600a8361117e565b9150610b6f565b60008167ffffffffffffffff811115610bb057610bb0610ed6565b6040519080825280601f01601f191660200182016040528015610bda576020820181803683370190505b5090505b84156108a157610bef6001836110cc565b9150610bfc600a86611192565b610c079060306110e3565b60f81b818381518110610c1c57610c1c6111a6565b60200101906001600160f81b031916908160001a905350610c3e600a8661117e565b9450610bde565b60006001600160a01b0384163b15610d3857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c899033908990889088906004016111bc565b6020604051808303816000875af1925050508015610cc4575060408051601f3d908101601f19168201909252610cc1918101906111f9565b60015b610d1e573d808015610cf2576040519150601f19603f3d011682016040523d82523d6000602084013e610cf7565b606091505b508051610d165760405162461bcd60e51b8152600401610381906110fb565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108a1565b506001949350505050565b6001600160e01b031981168114610d5957600080fd5b50565b600060208284031215610d6e57600080fd5b813561073d81610d43565b60005b83811015610d94578181015183820152602001610d7c565b838111156106565750506000910152565b60008151808452610dbd816020860160208601610d79565b601f01601f19169290920160200192915050565b60208152600061073d6020830184610da5565b600060208284031215610df657600080fd5b5035919050565b80356001600160a01b0381168114610e1457600080fd5b919050565b60008060408385031215610e2c57600080fd5b610e3583610dfd565b946020939093013593505050565b600080600060608486031215610e5857600080fd5b610e6184610dfd565b9250610e6f60208501610dfd565b9150604084013590509250925092565b600060208284031215610e9157600080fd5b61073d82610dfd565b60008060408385031215610ead57600080fd5b610eb683610dfd565b915060208301358015158114610ecb57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f0257600080fd5b610f0b85610dfd565b9350610f1960208601610dfd565b925060408501359150606085013567ffffffffffffffff80821115610f3d57600080fd5b818701915087601f830112610f5157600080fd5b813581811115610f6357610f63610ed6565b604051601f8201601f19908116603f01168101908382118183101715610f8b57610f8b610ed6565b816040528281528a6020848701011115610fa457600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610fdb57600080fd5b610fe483610dfd565b9150610ff260208401610dfd565b90509250929050565b600181811c9082168061100f57607f821691505b6020821081141561103057634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008351611099818460208801610d79565b8351908301906110ad818360208801610d79565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156110de576110de6110b6565b500390565b600082198211156110f6576110f66110b6565b500190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6000600019821415611161576111616110b6565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261118d5761118d611168565b500490565b6000826111a1576111a1611168565b500690565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906111ef90830184610da5565b9695505050505050565b60006020828403121561120b57600080fd5b815161073d81610d4356fea26469706673582212200bb8284d4c53527d34b4406f28bd3ff59c8aa497cde736245f5aa36aa03b958064736f6c634300080c0033",
  "deployedSourceMap": "628:13658:187:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:239;;558:22;540:41;;528:2;513:18;1570:300:187;;;;;;;;2488:98;;;:::i;:::-;;;;;;;:::i;4000:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:239;;;1674:51;;1662:2;1647:18;4000:217:187;1528:203:239;3538:401:187;;;;;;:::i;:::-;;:::i;:::-;;4727:330;;;;;;:::i;:::-;;:::i;5123:179::-;;;;;;:::i;:::-;;:::i;2191:235::-;;;;;;:::i;:::-;;:::i;1929:205::-;;;;;;:::i;:::-;;:::i;:::-;;;2843:25:239;;;2831:2;2816:18;1929:205:187;2697:177:239;2650:102:187;;;:::i;4284:153::-;;;;;;:::i;:::-;;:::i;5368:320::-;;;;;;:::i;:::-;;:::i;2818:329::-;;;;;;:::i;:::-;;:::i;4503:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4623:25:187;;;4600:4;4623:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4503:162;1570:300;1672:4;-1:-1:-1;;;;;;1707:40:187;;-1:-1:-1;;;1707:40:187;;:104;;-1:-1:-1;;;;;;;1763:48:187;;-1:-1:-1;;;1763:48:187;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:224;;;1827:36:187;1688:175;1570:300;-1:-1:-1;;1570:300:187:o;2488:98::-;2542:13;2574:5;2567:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:98;:::o;4000:217::-;4076:7;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:187;4095:73;;;;-1:-1:-1;;;4095:73:187;;5358:2:239;4095:73:187;;;5340:21:239;5397:2;5377:18;;;5370:30;5436:34;5416:18;;;5409:62;-1:-1:-1;;;5487:18:239;;;5480:42;5539:19;;4095:73:187;;;;;;;;;-1:-1:-1;4186:24:187;;;;:15;:24;;;;;;-1:-1:-1;;;;;4186:24:187;;4000:217::o;3538:401::-;3618:13;3634:23;3649:7;3634:14;:23::i;:::-;3618:39;;3681:5;-1:-1:-1;;;;;3675:11:187;:2;-1:-1:-1;;;;;3675:11:187;;;3667:57;;;;-1:-1:-1;;;3667:57:187;;5771:2:239;3667:57:187;;;5753:21:239;5810:2;5790:18;;;5783:30;5849:34;5829:18;;;5822:62;-1:-1:-1;;;5900:18:239;;;5893:31;5941:19;;3667:57:187;5569:397:239;3667:57:187;719:10:210;-1:-1:-1;;;;;3756:21:187;;;;:62;;-1:-1:-1;3781:37:187;3798:5;719:10:210;4503:162:187;:::i;3781:37::-;3735:165;;;;-1:-1:-1;;;3735:165:187;;6173:2:239;3735:165:187;;;6155:21:239;6212:2;6192:18;;;6185:30;6251:34;6231:18;;;6224:62;6322:26;6302:18;;;6295:54;6366:19;;3735:165:187;5971:420:239;3735:165:187;3911:21;3920:2;3924:7;3911:8;:21::i;:::-;3608:331;3538:401;;:::o;4727:330::-;4916:41;719:10:210;4949:7:187;4916:18;:41::i;:::-;4908:103;;;;-1:-1:-1;;;4908:103:187;;;;;;;:::i;:::-;5022:28;5032:4;5038:2;5042:7;5022:9;:28::i;5123:179::-;5256:39;5273:4;5279:2;5283:7;5256:39;;;;;;;;;;;;:16;:39::i;2191:235::-;2263:7;2298:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2298:16:187;2332:19;2324:73;;;;-1:-1:-1;;;2324:73:187;;7016:2:239;2324:73:187;;;6998:21:239;7055:2;7035:18;;;7028:30;7094:34;7074:18;;;7067:62;-1:-1:-1;;;7145:18:239;;;7138:39;7194:19;;2324:73:187;6814:405:239;1929:205:187;2001:7;-1:-1:-1;;;;;2028:19:187;;2020:74;;;;-1:-1:-1;;;2020:74:187;;7426:2:239;2020:74:187;;;7408:21:239;7465:2;7445:18;;;7438:30;7504:34;7484:18;;;7477:62;-1:-1:-1;;;7555:18:239;;;7548:40;7605:19;;2020:74:187;7224:406:239;2020:74:187;-1:-1:-1;;;;;;2111:16:187;;;;;:9;:16;;;;;;;1929:205::o;2650:102::-;2706:13;2738:7;2731:14;;;;;:::i;4284:153::-;4378:52;719:10:210;4411:8:187;4421;4378:18;:52::i;:::-;4284:153;;:::o;5368:320::-;5537:41;719:10:210;5570:7:187;5537:18;:41::i;:::-;5529:103;;;;-1:-1:-1;;;5529:103:187;;;;;;;:::i;:::-;5642:39;5656:4;5662:2;5666:7;5675:5;5642:13;:39::i;:::-;5368:320;;;;:::o;2818:329::-;7225:4;7248:16;;;:7;:16;;;;;;2891:13;;-1:-1:-1;;;;;7248:16:187;2916:76;;;;-1:-1:-1;;;2916:76:187;;7837:2:239;2916:76:187;;;7819:21:239;7876:2;7856:18;;;7849:30;7915:34;7895:18;;;7888:62;-1:-1:-1;;;7966:18:239;;;7959:45;8021:19;;2916:76:187;7635:411:239;2916:76:187;3003:21;3027:10;3465:9;;;;;;;;;-1:-1:-1;3465:9:187;;;3389:92;3027:10;3003:34;;3078:1;3060:7;3054:21;:25;:86;;;;;;;;;;;;;;;;;3106:7;3115:18;:7;:16;:18::i;:::-;3089:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3054:86;3047:93;2818:329;-1:-1:-1;;;2818:329:187:o;11169:171::-;11243:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11243:29:187;-1:-1:-1;;;;;11243:29:187;;;;;;;;:24;;11296:23;11243:24;11296:14;:23::i;:::-;-1:-1:-1;;;;;11287:46:187;;;;;;;;;;;11169:171;;:::o;7443:344::-;7536:4;7248:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7248:16:187;7552:73;;;;-1:-1:-1;;;7552:73:187;;8728:2:239;7552:73:187;;;8710:21:239;8767:2;8747:18;;;8740:30;8806:34;8786:18;;;8779:62;-1:-1:-1;;;8857:18:239;;;8850:42;8909:19;;7552:73:187;8526:408:239;7552:73:187;7635:13;7651:23;7666:7;7651:14;:23::i;:::-;7635:39;;7703:5;-1:-1:-1;;;;;7692:16:187;:7;-1:-1:-1;;;;;7692:16:187;;:51;;;;7736:7;-1:-1:-1;;;;;7712:31:187;:20;7724:7;7712:11;:20::i;:::-;-1:-1:-1;;;;;7712:31:187;;7692:51;:87;;;-1:-1:-1;;;;;;4623:25:187;;;4600:4;4623:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7747:32;7684:96;7443:344;-1:-1:-1;;;;7443:344:187:o;10453:605::-;10607:4;-1:-1:-1;;;;;10580:31:187;:23;10595:7;10580:14;:23::i;:::-;-1:-1:-1;;;;;10580:31:187;;10572:81;;;;-1:-1:-1;;;10572:81:187;;9141:2:239;10572:81:187;;;9123:21:239;9180:2;9160:18;;;9153:30;9219:34;9199:18;;;9192:62;-1:-1:-1;;;9270:18:239;;;9263:35;9315:19;;10572:81:187;8939:401:239;10572:81:187;-1:-1:-1;;;;;10671:16:187;;10663:65;;;;-1:-1:-1;;;10663:65:187;;9547:2:239;10663:65:187;;;9529:21:239;9586:2;9566:18;;;9559:30;9625:34;9605:18;;;9598:62;-1:-1:-1;;;9676:18:239;;;9669:34;9720:19;;10663:65:187;9345:400:239;10663:65:187;10840:29;10857:1;10861:7;10840:8;:29::i;:::-;-1:-1:-1;;;;;10880:15:187;;;;;;:9;:15;;;;;:20;;10899:1;;10880:15;:20;;10899:1;;10880:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10910:13:187;;;;;;:9;:13;;;;;:18;;10927:1;;10910:13;:18;;10927:1;;10910:18;:::i;:::-;;;;-1:-1:-1;;10938:16:187;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10938:21:187;-1:-1:-1;;;;;10938:21:187;;;;;;;;;10975:27;;10938:16;;10975:27;;;;;;;3608:331;3538:401;;:::o;11475:307::-;11625:8;-1:-1:-1;;;;;11616:17:187;:5;-1:-1:-1;;;;;11616:17:187;;;11608:55;;;;-1:-1:-1;;;11608:55:187;;10347:2:239;11608:55:187;;;10329:21:239;10386:2;10366:18;;;10359:30;10425:27;10405:18;;;10398:55;10470:18;;11608:55:187;10145:349:239;11608:55:187;-1:-1:-1;;;;;11673:25:187;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;11673:46:187;;;;;;;;;;11734:41;;540::239;;;11734::187;;513:18:239;11734:41:187;;;;;;;11475:307;;;:::o;6550:::-;6701:28;6711:4;6717:2;6721:7;6701:9;:28::i;:::-;6747:48;6770:4;6776:2;6780:7;6789:5;6747:22;:48::i;:::-;6739:111;;;;-1:-1:-1;;;6739:111:187;;;;;;;:::i;328:703:215:-;384:13;601:10;597:51;;-1:-1:-1;;627:10:215;;;;;;;;;;;;-1:-1:-1;;;627:10:215;;;;;328:703::o;597:51::-;672:5;657:12;711:75;718:9;;711:75;;743:8;;;;:::i;:::-;;-1:-1:-1;765:10:215;;-1:-1:-1;773:2:215;765:10;;:::i;:::-;;;711:75;;;795:19;827:6;817:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:17:215;;795:39;;844:150;851:10;;844:150;;877:11;887:1;877:11;;:::i;:::-;;-1:-1:-1;945:10:215;953:2;945:5;:10;:::i;:::-;932:24;;:2;:24;:::i;:::-;919:39;;902:6;909;902:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;902:56:215;;;;;;;;-1:-1:-1;972:11:215;981:2;972:11;;:::i;:::-;;;844:150;;12335:778:187;12485:4;-1:-1:-1;;;;;12505:13:187;;1465:19:206;:23;12501:606:187;;12540:72;;-1:-1:-1;;;12540:72:187;;-1:-1:-1;;;;;12540:36:187;;;;;:72;;719:10:210;;12591:4:187;;12597:7;;12606:5;;12540:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12540:72:187;;;;;;;;-1:-1:-1;;12540:72:187;;;;;;;;;;;;:::i;:::-;;;12536:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12779:13:187;;12775:266;;12821:60;;-1:-1:-1;;;12821:60:187;;;;;;;:::i;12775:266::-;12993:6;12987:13;12978:6;12974:2;12970:15;12963:38;12536:519;-1:-1:-1;;;;;;12662:51:187;-1:-1:-1;;;12662:51:187;;-1:-1:-1;12655:58:187;;12501:606;-1:-1:-1;13092:4:187;12335:778;;;;;;:::o;14:131:239:-;-1:-1:-1;;;;;;88:32:239;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:239;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:239;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:239:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:239;;1343:180;-1:-1:-1;1343:180:239:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:239;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:239:o;2173:328::-;2250:6;2258;2266;2319:2;2307:9;2298:7;2294:23;2290:32;2287:52;;;2335:1;2332;2325:12;2287:52;2358:29;2377:9;2358:29;:::i;:::-;2348:39;;2406:38;2440:2;2429:9;2425:18;2406:38;:::i;:::-;2396:48;;2491:2;2480:9;2476:18;2463:32;2453:42;;2173:328;;;;;:::o;2506:186::-;2565:6;2618:2;2606:9;2597:7;2593:23;2589:32;2586:52;;;2634:1;2631;2624:12;2586:52;2657:29;2676:9;2657:29;:::i;2879:347::-;2944:6;2952;3005:2;2993:9;2984:7;2980:23;2976:32;2973:52;;;3021:1;3018;3011:12;2973:52;3044:29;3063:9;3044:29;:::i;:::-;3034:39;;3123:2;3112:9;3108:18;3095:32;3170:5;3163:13;3156:21;3149:5;3146:32;3136:60;;3192:1;3189;3182:12;3136:60;3215:5;3205:15;;;2879:347;;;;;:::o;3231:127::-;3292:10;3287:3;3283:20;3280:1;3273:31;3323:4;3320:1;3313:15;3347:4;3344:1;3337:15;3363:1138;3458:6;3466;3474;3482;3535:3;3523:9;3514:7;3510:23;3506:33;3503:53;;;3552:1;3549;3542:12;3503:53;3575:29;3594:9;3575:29;:::i;:::-;3565:39;;3623:38;3657:2;3646:9;3642:18;3623:38;:::i;:::-;3613:48;;3708:2;3697:9;3693:18;3680:32;3670:42;;3763:2;3752:9;3748:18;3735:32;3786:18;3827:2;3819:6;3816:14;3813:34;;;3843:1;3840;3833:12;3813:34;3881:6;3870:9;3866:22;3856:32;;3926:7;3919:4;3915:2;3911:13;3907:27;3897:55;;3948:1;3945;3938:12;3897:55;3984:2;3971:16;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:239;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4346:7;4341:2;4336;4332;4328:11;4324:20;4321:33;4318:53;;;4367:1;4364;4357:12;4318:53;4423:2;4418;4414;4410:11;4405:2;4397:6;4393:15;4380:46;4468:1;4463:2;4458;4450:6;4446:15;4442:24;4435:35;4489:6;4479:16;;;;;;;3363:1138;;;;;;;:::o;4506:260::-;4574:6;4582;4635:2;4623:9;4614:7;4610:23;4606:32;4603:52;;;4651:1;4648;4641:12;4603:52;4674:29;4693:9;4674:29;:::i;:::-;4664:39;;4722:38;4756:2;4745:9;4741:18;4722:38;:::i;:::-;4712:48;;4506:260;;;;;:::o;4771:380::-;4850:1;4846:12;;;;4893;;;4914:61;;4968:4;4960:6;4956:17;4946:27;;4914:61;5021:2;5013:6;5010:14;4990:18;4987:38;4984:161;;;5067:10;5062:3;5058:20;5055:1;5048:31;5102:4;5099:1;5092:15;5130:4;5127:1;5120:15;4984:161;;4771:380;;;:::o;6396:413::-;6598:2;6580:21;;;6637:2;6617:18;;;6610:30;6676:34;6671:2;6656:18;;6649:62;-1:-1:-1;;;6742:2:239;6727:18;;6720:47;6799:3;6784:19;;6396:413::o;8051:470::-;8230:3;8268:6;8262:13;8284:53;8330:6;8325:3;8318:4;8310:6;8306:17;8284:53;:::i;:::-;8400:13;;8359:16;;;;8422:57;8400:13;8359:16;8456:4;8444:17;;8422:57;:::i;:::-;8495:20;;8051:470;-1:-1:-1;;;;8051:470:239:o;9750:127::-;9811:10;9806:3;9802:20;9799:1;9792:31;9842:4;9839:1;9832:15;9866:4;9863:1;9856:15;9882:125;9922:4;9950:1;9947;9944:8;9941:34;;;9955:18;;:::i;:::-;-1:-1:-1;9992:9:239;;9882:125::o;10012:128::-;10052:3;10083:1;10079:6;10076:1;10073:13;10070:39;;;10089:18;;:::i;:::-;-1:-1:-1;10125:9:239;;10012:128::o;10499:414::-;10701:2;10683:21;;;10740:2;10720:18;;;10713:30;10779:34;10774:2;10759:18;;10752:62;-1:-1:-1;;;10845:2:239;10830:18;;10823:48;10903:3;10888:19;;10499:414::o;10918:135::-;10957:3;-1:-1:-1;;10978:17:239;;10975:43;;;10998:18;;:::i;:::-;-1:-1:-1;11045:1:239;11034:13;;10918:135::o;11058:127::-;11119:10;11114:3;11110:20;11107:1;11100:31;11150:4;11147:1;11140:15;11174:4;11171:1;11164:15;11190:120;11230:1;11256;11246:35;;11261:18;;:::i;:::-;-1:-1:-1;11295:9:239;;11190:120::o;11315:112::-;11347:1;11373;11363:35;;11378:18;;:::i;:::-;-1:-1:-1;11412:9:239;;11315:112::o;11432:127::-;11493:10;11488:3;11484:20;11481:1;11474:31;11524:4;11521:1;11514:15;11548:4;11545:1;11538:15;11564:489;-1:-1:-1;;;;;11833:15:239;;;11815:34;;11885:15;;11880:2;11865:18;;11858:43;11932:2;11917:18;;11910:34;;;11980:3;11975:2;11960:18;;11953:31;;;11758:4;;12001:46;;12027:19;;12019:6;12001:46;:::i;:::-;11993:54;11564:489;-1:-1:-1;;;;;;11564:489:239:o;12058:249::-;12127:6;12180:2;12168:9;12159:7;12155:23;12151:32;12148:52;;;12196:1;12193;12186:12;12148:52;12228:9;12222:16;12247:30;12271:5;12247:30;:::i",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    628,
    14286
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5C JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xDE4 JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x3A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xE43 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE4 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE7F JUMP JUMPDEST PUSH2 0x57F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x606 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE9A JUMP JUMPDEST PUSH2 0x615 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEEC JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xDE4 JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xFC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFFB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xFFB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B1 DUP3 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x41F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x43B JUMPI POP PUSH2 0x43B DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 PUSH2 0x744 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x4C6 CALLER DUP3 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x4E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0x4B7 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x624 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFFB JUMP JUMPDEST PUSH2 0x620 CALLER DUP4 DUP4 PUSH2 0xA45 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x62E CALLER DUP4 PUSH2 0x7B2 JUMP JUMPDEST PUSH2 0x64A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x656 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB14 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F2 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x73D JUMP JUMPDEST DUP1 PUSH2 0x71C DUP5 PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x72D SWAP3 SWAP2 SWAP1 PUSH2 0x1087 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x779 DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x82B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x836 DUP4 PUSH2 0x508 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x871 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x866 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x8A1 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8BC DUP3 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x920 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x982 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x381 JUMP JUMPDEST PUSH2 0x98D PUSH1 0x0 DUP3 PUSH2 0x744 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9B6 SWAP1 DUP5 SWAP1 PUSH2 0x10CC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x9E4 SWAP1 DUP5 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x381 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB1F DUP5 DUP5 DUP5 PUSH2 0x8A9 JUMP JUMPDEST PUSH2 0xB2B DUP5 DUP5 DUP5 DUP5 PUSH2 0xC45 JUMP JUMPDEST PUSH2 0x656 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x10FB JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xB6B JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xB95 JUMPI DUP1 PUSH2 0xB7F DUP2 PUSH2 0x114D JUMP JUMPDEST SWAP2 POP PUSH2 0xB8E SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x117E JUMP JUMPDEST SWAP2 POP PUSH2 0xB6F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xBB0 JUMPI PUSH2 0xBB0 PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBDA JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x8A1 JUMPI PUSH2 0xBEF PUSH1 0x1 DUP4 PUSH2 0x10CC JUMP JUMPDEST SWAP2 POP PUSH2 0xBFC PUSH1 0xA DUP7 PUSH2 0x1192 JUMP JUMPDEST PUSH2 0xC07 SWAP1 PUSH1 0x30 PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC1C JUMPI PUSH2 0xC1C PUSH2 0x11A6 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xC3E PUSH1 0xA DUP7 PUSH2 0x117E JUMP JUMPDEST SWAP5 POP PUSH2 0xBDE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xD38 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC89 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11BC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xCC4 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xCC1 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11F9 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xD1E JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCF2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCF7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0xD16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x10FB JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x8A1 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xD59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x73D DUP2 PUSH2 0xD43 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD94 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD7C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x656 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xDBD DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD79 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x73D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE35 DUP4 PUSH2 0xDFD JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE61 DUP5 PUSH2 0xDFD JUMP JUMPDEST SWAP3 POP PUSH2 0xE6F PUSH1 0x20 DUP6 ADD PUSH2 0xDFD JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x73D DUP3 PUSH2 0xDFD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEB6 DUP4 PUSH2 0xDFD JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xECB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xF02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF0B DUP6 PUSH2 0xDFD JUMP JUMPDEST SWAP4 POP PUSH2 0xF19 PUSH1 0x20 DUP7 ADD PUSH2 0xDFD JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xF3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF63 JUMPI PUSH2 0xF63 PUSH2 0xED6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF8B JUMPI PUSH2 0xF8B PUSH2 0xED6 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xFA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFE4 DUP4 PUSH2 0xDFD JUMP JUMPDEST SWAP2 POP PUSH2 0xFF2 PUSH1 0x20 DUP5 ADD PUSH2 0xDFD JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x100F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1030 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1099 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD79 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x10AD DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD79 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x10DE JUMPI PUSH2 0x10DE PUSH2 0x10B6 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x10F6 JUMPI PUSH2 0x10F6 PUSH2 0x10B6 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1161 JUMPI PUSH2 0x1161 PUSH2 0x10B6 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x118D JUMPI PUSH2 0x118D PUSH2 0x1168 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x11A1 JUMPI PUSH2 0x11A1 PUSH2 0x1168 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11EF SWAP1 DUP4 ADD DUP5 PUSH2 0xDA5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x120B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x73D DUP2 PUSH2 0xD43 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xB8 0x28 0x4D 0x4C MSTORE8 MSTORE PUSH30 0x34B4406F28BD3FF59C8AA497CDE736245F5AA36AA03B958064736F6C6343 STOP ADDMOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "5": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "CALLVALUE",
      "path": "187"
    },
    "6": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "187"
    },
    "7": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "ISZERO",
      "path": "187"
    },
    "8": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "12": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "187"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "REVERT",
      "path": "187"
    },
    "16": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "17": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "POP",
      "path": "187"
    },
    "18": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "CALLDATASIZE",
      "path": "187"
    },
    "21": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "LT",
      "path": "187"
    },
    "22": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "26": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "CALLDATALOAD",
      "path": "187"
    },
    "29": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "SHR",
      "path": "187"
    },
    "32": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "187"
    },
    "33": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "187",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "GT",
      "path": "187"
    },
    "39": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "43": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "187"
    },
    "44": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "187",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "GT",
      "path": "187"
    },
    "50": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "54": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "187"
    },
    "55": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "187",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "187"
    },
    "61": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x1B3"
    },
    "64": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "65": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "187"
    },
    "66": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "187",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "187"
    },
    "72": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x1C6"
    },
    "75": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "76": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "187"
    },
    "77": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "187",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "187"
    },
    "83": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x1D9"
    },
    "86": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "87": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "187"
    },
    "88": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "187",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "187"
    },
    "94": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x1EC"
    },
    "97": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "98": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "187"
    },
    "101": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "REVERT",
      "path": "187"
    },
    "102": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "103": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "187"
    },
    "104": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "187",
      "value": "0x6352211E"
    },
    "109": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "187"
    },
    "110": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x177"
    },
    "113": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "114": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "187"
    },
    "115": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "187",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "187"
    },
    "121": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x18A"
    },
    "124": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "125": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "187"
    },
    "126": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "187",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "187"
    },
    "132": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x1AB"
    },
    "135": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "136": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "187"
    },
    "139": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "REVERT",
      "path": "187"
    },
    "140": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "141": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "187"
    },
    "142": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "187",
      "value": "0x1FFC9A7"
    },
    "147": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "187"
    },
    "148": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "152": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "187"
    },
    "153": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "187",
      "value": "0x6FDDE03"
    },
    "158": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "187"
    },
    "159": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xFC"
    },
    "162": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "163": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "187"
    },
    "164": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "187",
      "value": "0x81812FC"
    },
    "169": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "187"
    },
    "170": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x111"
    },
    "173": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "174": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "187"
    },
    "175": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "187",
      "value": "0x95EA7B3"
    },
    "180": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "187"
    },
    "181": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x13C"
    },
    "184": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "185": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "187"
    },
    "186": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "187",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "187"
    },
    "192": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x151"
    },
    "195": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "196": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "187"
    },
    "197": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH4",
      "path": "187",
      "value": "0x42842E0E"
    },
    "202": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "EQ",
      "path": "187"
    },
    "203": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x164"
    },
    "206": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "207": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "208": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "DUP1",
      "path": "187"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        628,
        14286
      ],
      "op": "REVERT",
      "path": "187"
    },
    "212": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "213": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xE7"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xE2"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "CALLDATASIZE",
      "path": "187"
    },
    "220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xD5C"
    },
    "225": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "187"
    },
    "226": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x228"
    },
    "230": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "187"
    },
    "231": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "232": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "234": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "235": {
      "op": "SWAP1"
    },
    "236": {
      "op": "ISZERO"
    },
    "237": {
      "op": "ISZERO"
    },
    "238": {
      "op": "DUP2"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "244": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "247": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "DUP1",
      "path": "187"
    },
    "248": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SUB",
      "path": "187"
    },
    "250": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "251": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "RETURN",
      "path": "187"
    },
    "252": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "253": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x104"
    },
    "256": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x27A"
    },
    "259": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "187"
    },
    "260": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "261": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "264": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xF3"
    },
    "267": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "268": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "269": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xDD1"
    },
    "272": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "187"
    },
    "273": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "274": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x124"
    },
    "277": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x11F"
    },
    "280": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "CALLDATASIZE",
      "path": "187"
    },
    "281": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "283": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xDE4"
    },
    "286": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4000,
        4217
      ],
      "op": "JUMP",
      "path": "187"
    },
    "287": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "288": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x30C"
    },
    "291": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4000,
        4217
      ],
      "op": "JUMP",
      "path": "187"
    },
    "292": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "293": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "302": {
      "op": "SHL"
    },
    "303": {
      "op": "SUB"
    },
    "304": {
      "op": "SWAP1"
    },
    "305": {
      "op": "SWAP2"
    },
    "306": {
      "op": "AND"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xF3"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "317": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x14F"
    },
    "320": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x14A"
    },
    "323": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "CALLDATASIZE",
      "path": "187"
    },
    "324": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "326": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xE19"
    },
    "329": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3538,
        3939
      ],
      "op": "JUMP",
      "path": "187"
    },
    "330": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "331": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x3A6"
    },
    "334": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3538,
        3939
      ],
      "op": "JUMP",
      "path": "187"
    },
    "335": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "336": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "STOP",
      "path": "187"
    },
    "337": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "338": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x14F"
    },
    "341": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x15F"
    },
    "344": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "CALLDATASIZE",
      "path": "187"
    },
    "345": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xE43"
    },
    "350": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4727,
        5057
      ],
      "op": "JUMP",
      "path": "187"
    },
    "351": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "352": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x4BC"
    },
    "355": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4727,
        5057
      ],
      "op": "JUMP",
      "path": "187"
    },
    "356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "357": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x14F"
    },
    "360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x172"
    },
    "363": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "CALLDATASIZE",
      "path": "187"
    },
    "364": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xE43"
    },
    "369": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5123,
        5302
      ],
      "op": "JUMP",
      "path": "187"
    },
    "370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "371": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x4ED"
    },
    "374": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5123,
        5302
      ],
      "op": "JUMP",
      "path": "187"
    },
    "375": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "376": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x124"
    },
    "379": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x185"
    },
    "382": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "CALLDATASIZE",
      "path": "187"
    },
    "383": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "385": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xDE4"
    },
    "388": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMP",
      "path": "187"
    },
    "389": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "390": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x508"
    },
    "393": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMP",
      "path": "187"
    },
    "394": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "395": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x19D"
    },
    "398": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x198"
    },
    "401": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "CALLDATASIZE",
      "path": "187"
    },
    "402": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xE7F"
    },
    "407": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "187"
    },
    "408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "409": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x57F"
    },
    "412": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "187"
    },
    "413": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "414": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "416": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "417": {
      "op": "SWAP1"
    },
    "418": {
      "op": "DUP2"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "422": {
      "op": "ADD"
    },
    "423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xF3"
    },
    "426": {
      "op": "JUMP"
    },
    "427": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "428": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x104"
    },
    "431": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x606"
    },
    "434": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMP",
      "path": "187"
    },
    "435": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "436": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x14F"
    },
    "439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x1C1"
    },
    "442": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "CALLDATASIZE",
      "path": "187"
    },
    "443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xE9A"
    },
    "448": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4284,
        4437
      ],
      "op": "JUMP",
      "path": "187"
    },
    "449": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "450": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x615"
    },
    "453": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4284,
        4437
      ],
      "op": "JUMP",
      "path": "187"
    },
    "454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "455": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x14F"
    },
    "458": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x1D4"
    },
    "461": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "CALLDATASIZE",
      "path": "187"
    },
    "462": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "464": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xEEC"
    },
    "467": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5368,
        5688
      ],
      "op": "JUMP",
      "path": "187"
    },
    "468": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "469": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x624"
    },
    "472": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5368,
        5688
      ],
      "op": "JUMP",
      "path": "187"
    },
    "473": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "474": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x104"
    },
    "477": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x1E7"
    },
    "480": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "CALLDATASIZE",
      "path": "187"
    },
    "481": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "483": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xDE4"
    },
    "486": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMP",
      "path": "187"
    },
    "487": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "488": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x65C"
    },
    "491": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMP",
      "path": "187"
    },
    "492": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "493": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xE7"
    },
    "496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x1FA"
    },
    "499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "CALLDATASIZE",
      "path": "187"
    },
    "500": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xFC8"
    },
    "505": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4503,
        4665
      ],
      "op": "JUMP",
      "path": "187"
    },
    "506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "513": {
      "op": "SHL"
    },
    "514": {
      "op": "SUB"
    },
    "515": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "SWAP2",
      "path": "187",
      "statement": 0
    },
    "516": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP3",
      "path": "187"
    },
    "517": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "AND",
      "path": "187"
    },
    "518": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4600,
        4604
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "520": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "521": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP2",
      "path": "187"
    },
    "522": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "523": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4641
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x5"
    },
    "525": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "527": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "528": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP2",
      "path": "187"
    },
    "529": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "530": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "532": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP1",
      "path": "187"
    },
    "533": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP4",
      "path": "187"
    },
    "534": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "KECCAK256",
      "path": "187"
    },
    "535": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP4",
      "path": "187"
    },
    "536": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "537": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP5",
      "path": "187"
    },
    "538": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "AND",
      "path": "187"
    },
    "539": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "DUP3",
      "path": "187"
    },
    "540": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "541": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "542": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "543": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "544": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "545": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "KECCAK256",
      "path": "187"
    },
    "546": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SLOAD",
      "path": "187"
    },
    "547": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0xFF"
    },
    "549": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "AND",
      "path": "187"
    },
    "550": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "551": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "JUMP",
      "path": "187"
    },
    "552": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "553": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1676
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "559": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "561": {
      "op": "SHL"
    },
    "562": {
      "op": "SUB"
    },
    "563": {
      "op": "NOT"
    },
    "564": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP3",
      "path": "187",
      "statement": 1
    },
    "565": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "AND",
      "path": "187"
    },
    "566": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "573": {
      "op": "SHL"
    },
    "574": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "EQ",
      "path": "187"
    },
    "575": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP1",
      "path": "187"
    },
    "576": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x259"
    },
    "579": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "580": {
      "op": "POP"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "585": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "587": {
      "op": "SHL"
    },
    "588": {
      "op": "SUB"
    },
    "589": {
      "op": "NOT"
    },
    "590": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "DUP3",
      "path": "187"
    },
    "591": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "AND",
      "path": "187"
    },
    "592": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "597": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "599": {
      "op": "SHL"
    },
    "600": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "EQ",
      "path": "187"
    },
    "601": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "602": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "DUP1",
      "path": "187"
    },
    "603": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x274"
    },
    "606": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "607": {
      "op": "POP"
    },
    "608": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "622": {
      "op": "SHL"
    },
    "623": {
      "op": "SUB"
    },
    "624": {
      "op": "NOT"
    },
    "625": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "224",
      "statement": 2
    },
    "626": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "224"
    },
    "627": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "224"
    },
    "628": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1827,
        1863
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "629": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1688,
        1863
      ],
      "op": "SWAP3",
      "path": "187"
    },
    "630": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "631": {
      "op": "POP"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "187"
    },
    "634": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "635": {
      "fn": "ERC721.name",
      "offset": [
        2542,
        2555
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x60"
    },
    "637": {
      "fn": "ERC721.name",
      "offset": [
        2574,
        2579
      ],
      "op": "PUSH1",
      "path": "187",
      "statement": 3,
      "value": "0x0"
    },
    "639": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "187"
    },
    "640": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "187"
    },
    "641": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x289"
    },
    "644": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "645": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xFFB"
    },
    "648": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "187"
    },
    "649": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "650": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "187"
    },
    "651": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x1F"
    },
    "653": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "187"
    },
    "654": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "656": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "187"
    },
    "657": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "658": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DIV",
      "path": "187"
    },
    "659": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MUL",
      "path": "187"
    },
    "660": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "662": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "187"
    },
    "663": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "665": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "666": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "667": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "187"
    },
    "668": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "187"
    },
    "669": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "671": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "672": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "187"
    },
    "673": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP3",
      "path": "187"
    },
    "674": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "675": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "676": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "187"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "187"
    },
    "678": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "679": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "681": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "187"
    },
    "682": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "187"
    },
    "683": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "187"
    },
    "684": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "187"
    },
    "685": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x2B5"
    },
    "688": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "689": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xFFB"
    },
    "692": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "187"
    },
    "693": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "694": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "187"
    },
    "695": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ISZERO",
      "path": "187"
    },
    "696": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x302"
    },
    "699": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "700": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "187"
    },
    "701": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x1F"
    },
    "703": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "LT",
      "path": "187"
    },
    "704": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x2D7"
    },
    "707": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "708": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x100"
    },
    "711": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "187"
    },
    "712": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "187"
    },
    "713": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "187"
    },
    "714": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DIV",
      "path": "187"
    },
    "715": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MUL",
      "path": "187"
    },
    "716": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "187"
    },
    "717": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "718": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "719": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "721": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "187"
    },
    "722": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "723": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x302"
    },
    "726": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMP",
      "path": "187"
    },
    "727": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "728": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "187"
    },
    "729": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "187"
    },
    "730": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "731": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "732": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "734": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "735": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "737": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "739": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "KECCAK256",
      "path": "187"
    },
    "740": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "741": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "742": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "187"
    },
    "743": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SLOAD",
      "path": "187"
    },
    "744": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP2",
      "path": "187"
    },
    "745": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "746": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "747": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x1"
    },
    "749": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "187"
    },
    "750": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "751": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "753": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "187"
    },
    "754": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP1",
      "path": "187"
    },
    "755": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP4",
      "path": "187"
    },
    "756": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "GT",
      "path": "187"
    },
    "757": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x2E5"
    },
    "760": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "761": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "187"
    },
    "762": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "763": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SUB",
      "path": "187"
    },
    "764": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x1F"
    },
    "766": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "AND",
      "path": "187"
    },
    "767": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "DUP3",
      "path": "187"
    },
    "768": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "ADD",
      "path": "187"
    },
    "769": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "770": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "771": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "187"
    },
    "772": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "187"
    },
    "773": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "187"
    },
    "774": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "187"
    },
    "775": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "187"
    },
    "776": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "777": {
      "fn": "ERC721.name",
      "offset": [
        2567,
        2579
      ],
      "op": "POP",
      "path": "187"
    },
    "778": {
      "fn": "ERC721.name",
      "offset": [
        2488,
        2586
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "779": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2488,
        2586
      ],
      "op": "JUMP",
      "path": "187"
    },
    "780": {
      "fn": "ERC721.getApproved",
      "offset": [
        4000,
        4217
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "781": {
      "fn": "ERC721.getApproved",
      "offset": [
        4076,
        4083
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "783": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "DUP2",
      "path": "187",
      "statement": 4
    },
    "784": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "DUP2",
      "path": "187"
    },
    "785": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "786": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7255
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x2"
    },
    "788": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "790": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "791": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "793": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "DUP2",
      "path": "187"
    },
    "794": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "KECCAK256",
      "path": "187"
    },
    "795": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "SLOAD",
      "path": "187"
    },
    "796": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "800": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "802": {
      "op": "SHL"
    },
    "803": {
      "op": "SUB"
    },
    "804": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "AND",
      "path": "187"
    },
    "805": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "PUSH2",
      "path": "187",
      "statement": 5,
      "value": "0x38A"
    },
    "808": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "809": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "811": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "812": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "816": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "818": {
      "op": "SHL"
    },
    "819": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "DUP2",
      "path": "187"
    },
    "820": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "823": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "825": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "DUP3",
      "path": "187"
    },
    "826": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "ADD",
      "path": "187"
    },
    "827": {
      "op": "MSTORE"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "832": {
      "op": "DUP3"
    },
    "833": {
      "op": "ADD"
    },
    "834": {
      "op": "MSTORE"
    },
    "835": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578"
    },
    "868": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "870": {
      "op": "DUP3"
    },
    "871": {
      "op": "ADD"
    },
    "872": {
      "op": "MSTORE"
    },
    "873": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "886": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "888": {
      "op": "SHL"
    },
    "889": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "891": {
      "op": "DUP3"
    },
    "892": {
      "op": "ADD"
    },
    "893": {
      "op": "MSTORE"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "896": {
      "op": "ADD"
    },
    "897": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "898": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "900": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "901": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "DUP1",
      "path": "187"
    },
    "902": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "903": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "SUB",
      "path": "187"
    },
    "904": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "905": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "187"
    },
    "906": {
      "fn": "ERC721.getApproved",
      "offset": [
        4095,
        4168
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "907": {
      "op": "POP"
    },
    "908": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "PUSH1",
      "path": "187",
      "statement": 6,
      "value": "0x0"
    },
    "910": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "911": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "DUP2",
      "path": "187"
    },
    "912": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "913": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4201
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "915": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "917": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "918": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "920": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "921": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "KECCAK256",
      "path": "187"
    },
    "922": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "SLOAD",
      "path": "187"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "929": {
      "op": "SHL"
    },
    "930": {
      "op": "SUB"
    },
    "931": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "AND",
      "path": "187"
    },
    "932": {
      "fn": "ERC721.getApproved",
      "offset": [
        4186,
        4210
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "933": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        4000,
        4217
      ],
      "op": "JUMP",
      "path": "187"
    },
    "934": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "935": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3631
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "937": {
      "fn": "ERC721.approve",
      "offset": [
        3634,
        3657
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x3B1"
    },
    "940": {
      "fn": "ERC721.approve",
      "offset": [
        3649,
        3656
      ],
      "op": "DUP3",
      "path": "187"
    },
    "941": {
      "fn": "ERC721.approve",
      "offset": [
        3634,
        3648
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x508"
    },
    "944": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3634,
        3657
      ],
      "op": "JUMP",
      "path": "187"
    },
    "945": {
      "fn": "ERC721.approve",
      "offset": [
        3634,
        3657
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "946": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3657
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "947": {
      "fn": "ERC721.approve",
      "offset": [
        3618,
        3657
      ],
      "op": "POP",
      "path": "187"
    },
    "948": {
      "fn": "ERC721.approve",
      "offset": [
        3681,
        3686
      ],
      "op": "DUP1",
      "path": "187",
      "statement": 7
    },
    "949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "955": {
      "op": "SHL"
    },
    "956": {
      "op": "SUB"
    },
    "957": {
      "fn": "ERC721.approve",
      "offset": [
        3675,
        3686
      ],
      "op": "AND",
      "path": "187"
    },
    "958": {
      "fn": "ERC721.approve",
      "offset": [
        3675,
        3677
      ],
      "op": "DUP4",
      "path": "187"
    },
    "959": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "965": {
      "op": "SHL"
    },
    "966": {
      "op": "SUB"
    },
    "967": {
      "fn": "ERC721.approve",
      "offset": [
        3675,
        3686
      ],
      "op": "AND",
      "path": "187"
    },
    "968": {
      "fn": "ERC721.approve",
      "offset": [
        3675,
        3686
      ],
      "op": "EQ",
      "path": "187"
    },
    "969": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3675,
        3686
      ],
      "op": "ISZERO",
      "path": "187"
    },
    "970": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x41F"
    },
    "973": {
      "branch": 50,
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "974": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "976": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "977": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "981": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "983": {
      "op": "SHL"
    },
    "984": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "DUP2",
      "path": "187"
    },
    "985": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "988": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "990": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "DUP3",
      "path": "187"
    },
    "991": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "ADD",
      "path": "187"
    },
    "992": {
      "op": "MSTORE"
    },
    "993": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "995": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "997": {
      "op": "DUP3"
    },
    "998": {
      "op": "ADD"
    },
    "999": {
      "op": "MSTORE"
    },
    "1000": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1035": {
      "op": "DUP3"
    },
    "1036": {
      "op": "ADD"
    },
    "1037": {
      "op": "MSTORE"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1042": {
      "op": "SHL"
    },
    "1043": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1045": {
      "op": "DUP3"
    },
    "1046": {
      "op": "ADD"
    },
    "1047": {
      "op": "MSTORE"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1050": {
      "op": "ADD"
    },
    "1051": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x381"
    },
    "1054": {
      "op": "JUMP"
    },
    "1055": {
      "fn": "ERC721.approve",
      "offset": [
        3667,
        3724
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1056": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210",
      "statement": 8
    },
    "1057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1063": {
      "op": "SHL"
    },
    "1064": {
      "op": "SUB"
    },
    "1065": {
      "fn": "ERC721.approve",
      "offset": [
        3756,
        3777
      ],
      "op": "DUP3",
      "path": "187",
      "statement": 9
    },
    "1066": {
      "fn": "ERC721.approve",
      "offset": [
        3756,
        3777
      ],
      "op": "AND",
      "path": "187"
    },
    "1067": {
      "fn": "ERC721.approve",
      "offset": [
        3756,
        3777
      ],
      "op": "EQ",
      "path": "187"
    },
    "1068": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3756,
        3777
      ],
      "op": "DUP1",
      "path": "187"
    },
    "1069": {
      "fn": "ERC721.approve",
      "offset": [
        3756,
        3818
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x43B"
    },
    "1072": {
      "branch": 51,
      "fn": "ERC721.approve",
      "offset": [
        3756,
        3818
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "1073": {
      "op": "POP"
    },
    "1074": {
      "fn": "ERC721.approve",
      "offset": [
        3781,
        3818
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x43B"
    },
    "1077": {
      "fn": "ERC721.approve",
      "offset": [
        3798,
        3803
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1078": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "1079": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4503,
        4665
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x1FA"
    },
    "1082": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4503,
        4665
      ],
      "op": "JUMP",
      "path": "187"
    },
    "1083": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        3781,
        3818
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1084": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x4AD"
    },
    "1087": {
      "branch": 52,
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "1088": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "1090": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "1091": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1095": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1097": {
      "op": "SHL"
    },
    "1098": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1099": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1102": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "1104": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "DUP3",
      "path": "187"
    },
    "1105": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "ADD",
      "path": "187"
    },
    "1106": {
      "op": "MSTORE"
    },
    "1107": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "1109": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1111": {
      "op": "DUP3"
    },
    "1112": {
      "op": "ADD"
    },
    "1113": {
      "op": "MSTORE"
    },
    "1114": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77"
    },
    "1147": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1149": {
      "op": "DUP3"
    },
    "1150": {
      "op": "ADD"
    },
    "1151": {
      "op": "MSTORE"
    },
    "1152": {
      "op": "PUSH32",
      "value": "0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000"
    },
    "1185": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1187": {
      "op": "DUP3"
    },
    "1188": {
      "op": "ADD"
    },
    "1189": {
      "op": "MSTORE"
    },
    "1190": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1192": {
      "op": "ADD"
    },
    "1193": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x381"
    },
    "1196": {
      "op": "JUMP"
    },
    "1197": {
      "fn": "ERC721.approve",
      "offset": [
        3735,
        3900
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1198": {
      "fn": "ERC721.approve",
      "offset": [
        3911,
        3932
      ],
      "op": "PUSH2",
      "path": "187",
      "statement": 10,
      "value": "0x4B7"
    },
    "1201": {
      "fn": "ERC721.approve",
      "offset": [
        3920,
        3922
      ],
      "op": "DUP4",
      "path": "187"
    },
    "1202": {
      "fn": "ERC721.approve",
      "offset": [
        3924,
        3931
      ],
      "op": "DUP4",
      "path": "187"
    },
    "1203": {
      "fn": "ERC721.approve",
      "offset": [
        3911,
        3919
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x744"
    },
    "1206": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3911,
        3932
      ],
      "op": "JUMP",
      "path": "187"
    },
    "1207": {
      "fn": "ERC721.approve",
      "offset": [
        3911,
        3932
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1208": {
      "fn": "ERC721.approve",
      "offset": [
        3608,
        3939
      ],
      "op": "POP",
      "path": "187"
    },
    "1209": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "POP",
      "path": "187"
    },
    "1210": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "POP",
      "path": "187"
    },
    "1211": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3538,
        3939
      ],
      "op": "JUMP",
      "path": "187"
    },
    "1212": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4727,
        5057
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1213": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4916,
        4957
      ],
      "op": "PUSH2",
      "path": "187",
      "statement": 11,
      "value": "0x4C6"
    },
    "1216": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "1217": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4949,
        4956
      ],
      "op": "DUP3",
      "path": "187"
    },
    "1218": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4916,
        4934
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x7B2"
    },
    "1221": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4916,
        4957
      ],
      "op": "JUMP",
      "path": "187"
    },
    "1222": {
      "branch": 53,
      "fn": "ERC721.transferFrom",
      "offset": [
        4916,
        4957
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1223": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x4E2"
    },
    "1226": {
      "branch": 53,
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "1227": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "1229": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "1230": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1234": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1236": {
      "op": "SHL"
    },
    "1237": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1238": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "1239": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "1241": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "ADD",
      "path": "187"
    },
    "1242": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x381"
    },
    "1245": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "1246": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x1036"
    },
    "1249": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4908,
        5011
      ],
      "op": "JUMP",
      "path": "187"
    },
    "1250": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4908,
        5011
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1251": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5022,
        5050
      ],
      "op": "PUSH2",
      "path": "187",
      "statement": 12,
      "value": "0x4B7"
    },
    "1254": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5032,
        5036
      ],
      "op": "DUP4",
      "path": "187"
    },
    "1255": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5038,
        5040
      ],
      "op": "DUP4",
      "path": "187"
    },
    "1256": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5042,
        5049
      ],
      "op": "DUP4",
      "path": "187"
    },
    "1257": {
      "fn": "ERC721.transferFrom",
      "offset": [
        5022,
        5031
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x8A9"
    },
    "1260": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        5022,
        5050
      ],
      "op": "JUMP",
      "path": "187"
    },
    "1261": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5123,
        5302
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1262": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "PUSH2",
      "path": "187",
      "statement": 13,
      "value": "0x4B7"
    },
    "1265": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5273,
        5277
      ],
      "op": "DUP4",
      "path": "187"
    },
    "1266": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5279,
        5281
      ],
      "op": "DUP4",
      "path": "187"
    },
    "1267": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5283,
        5290
      ],
      "op": "DUP4",
      "path": "187"
    },
    "1268": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "1270": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "1271": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "DUP1",
      "path": "187"
    },
    "1272": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "1274": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "ADD",
      "path": "187"
    },
    "1275": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "1277": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "1278": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "DUP1",
      "path": "187"
    },
    "1279": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "1281": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1282": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "1283": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5295
      ],
      "op": "POP",
      "path": "187"
    },
    "1284": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5256,
        5272
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x624"
    },
    "1287": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5256,
        5295
      ],
      "op": "JUMP",
      "path": "187"
    },
    "1288": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2191,
        2426
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1289": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2263,
        2270
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "1291": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1292": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1293": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "1294": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2305
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x2"
    },
    "1296": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "1298": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "1299": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "1301": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1302": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "KECCAK256",
      "path": "187"
    },
    "1303": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "SLOAD",
      "path": "187"
    },
    "1304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1310": {
      "op": "SHL"
    },
    "1311": {
      "op": "SUB"
    },
    "1312": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2298,
        2314
      ],
      "op": "AND",
      "path": "187"
    },
    "1313": {
      "branch": 54,
      "fn": "ERC721.ownerOf",
      "offset": [
        2332,
        2351
      ],
      "op": "DUP1",
      "path": "187",
      "statement": 14
    },
    "1314": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x274"
    },
    "1317": {
      "branch": 54,
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "1318": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "1320": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "1321": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1325": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1327": {
      "op": "SHL"
    },
    "1328": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1329": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1332": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "1334": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "DUP3",
      "path": "187"
    },
    "1335": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "ADD",
      "path": "187"
    },
    "1336": {
      "op": "MSTORE"
    },
    "1337": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1341": {
      "op": "DUP3"
    },
    "1342": {
      "op": "ADD"
    },
    "1343": {
      "op": "MSTORE"
    },
    "1344": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374"
    },
    "1377": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1379": {
      "op": "DUP3"
    },
    "1380": {
      "op": "ADD"
    },
    "1381": {
      "op": "MSTORE"
    },
    "1382": {
      "op": "PUSH9",
      "value": "0x32B73A103A37B5B2B7"
    },
    "1392": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1394": {
      "op": "SHL"
    },
    "1395": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1397": {
      "op": "DUP3"
    },
    "1398": {
      "op": "ADD"
    },
    "1399": {
      "op": "MSTORE"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1402": {
      "op": "ADD"
    },
    "1403": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2397
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x381"
    },
    "1406": {
      "op": "JUMP"
    },
    "1407": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2001,
        2008
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "1410": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1416": {
      "op": "SHL"
    },
    "1417": {
      "op": "SUB"
    },
    "1418": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "DUP3",
      "path": "187",
      "statement": 15
    },
    "1419": {
      "branch": 55,
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "AND",
      "path": "187"
    },
    "1420": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x5EA"
    },
    "1423": {
      "branch": 55,
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "1424": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "1426": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "1427": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1433": {
      "op": "SHL"
    },
    "1434": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1435": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1438": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "1440": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "DUP3",
      "path": "187"
    },
    "1441": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "ADD",
      "path": "187"
    },
    "1442": {
      "op": "MSTORE"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "1445": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1447": {
      "op": "DUP3"
    },
    "1448": {
      "op": "ADD"
    },
    "1449": {
      "op": "MSTORE"
    },
    "1450": {
      "op": "PUSH32",
      "value": "0x4552433732313A2062616C616E636520717565727920666F7220746865207A65"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1485": {
      "op": "DUP3"
    },
    "1486": {
      "op": "ADD"
    },
    "1487": {
      "op": "MSTORE"
    },
    "1488": {
      "op": "PUSH10",
      "value": "0x726F2061646472657373"
    },
    "1499": {
      "op": "PUSH1",
      "value": "0xB0"
    },
    "1501": {
      "op": "SHL"
    },
    "1502": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1504": {
      "op": "DUP3"
    },
    "1505": {
      "op": "ADD"
    },
    "1506": {
      "op": "MSTORE"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1509": {
      "op": "ADD"
    },
    "1510": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x381"
    },
    "1513": {
      "op": "JUMP"
    },
    "1514": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2094
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1515": {
      "op": "POP"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1518": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1522": {
      "op": "SHL"
    },
    "1523": {
      "op": "SUB"
    },
    "1524": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "AND",
      "path": "187",
      "statement": 16
    },
    "1525": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "1527": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "1528": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1529": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "1530": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2120
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x3"
    },
    "1532": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "1534": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "1535": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "1537": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "1538": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "KECCAK256",
      "path": "187"
    },
    "1539": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SLOAD",
      "path": "187"
    },
    "1540": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2111,
        2127
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "1541": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1929,
        2134
      ],
      "op": "JUMP",
      "path": "187"
    },
    "1542": {
      "fn": "ERC721.symbol",
      "offset": [
        2650,
        2752
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1543": {
      "fn": "ERC721.symbol",
      "offset": [
        2706,
        2719
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x60"
    },
    "1545": {
      "fn": "ERC721.symbol",
      "offset": [
        2738,
        2745
      ],
      "op": "PUSH1",
      "path": "187",
      "statement": 17,
      "value": "0x1"
    },
    "1547": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "DUP1",
      "path": "187"
    },
    "1548": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "SLOAD",
      "path": "187"
    },
    "1549": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x289"
    },
    "1552": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "1553": {
      "fn": "ERC721.symbol",
      "offset": [
        2731,
        2745
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xFFB"
    },
    "1556": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2731,
        2745
      ],
      "op": "JUMP",
      "path": "187"
    },
    "1557": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1558": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4378,
        4430
      ],
      "op": "PUSH2",
      "path": "187",
      "statement": 18,
      "value": "0x620"
    },
    "1561": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "1562": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4411,
        4419
      ],
      "op": "DUP4",
      "path": "187"
    },
    "1563": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4421,
        4429
      ],
      "op": "DUP4",
      "path": "187"
    },
    "1564": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4378,
        4396
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xA45"
    },
    "1567": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4378,
        4430
      ],
      "op": "JUMP",
      "path": "187"
    },
    "1568": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4378,
        4430
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1569": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "POP",
      "path": "187"
    },
    "1570": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4284,
        4437
      ],
      "op": "POP",
      "path": "187"
    },
    "1571": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4284,
        4437
      ],
      "op": "JUMP",
      "path": "187"
    },
    "1572": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1573": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5537,
        5578
      ],
      "op": "PUSH2",
      "path": "187",
      "statement": 19,
      "value": "0x62E"
    },
    "1576": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "1577": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5570,
        5577
      ],
      "op": "DUP4",
      "path": "187"
    },
    "1578": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5537,
        5555
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x7B2"
    },
    "1581": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5537,
        5578
      ],
      "op": "JUMP",
      "path": "187"
    },
    "1582": {
      "branch": 56,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5537,
        5578
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1583": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x64A"
    },
    "1586": {
      "branch": 56,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "1587": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "1589": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "1590": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1596": {
      "op": "SHL"
    },
    "1597": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1598": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "1599": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "1601": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "ADD",
      "path": "187"
    },
    "1602": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x381"
    },
    "1605": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "1606": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x1036"
    },
    "1609": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5529,
        5632
      ],
      "op": "JUMP",
      "path": "187"
    },
    "1610": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5529,
        5632
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1611": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5642,
        5681
      ],
      "op": "PUSH2",
      "path": "187",
      "statement": 20,
      "value": "0x656"
    },
    "1614": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5656,
        5660
      ],
      "op": "DUP5",
      "path": "187"
    },
    "1615": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5662,
        5664
      ],
      "op": "DUP5",
      "path": "187"
    },
    "1616": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5666,
        5673
      ],
      "op": "DUP5",
      "path": "187"
    },
    "1617": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5675,
        5680
      ],
      "op": "DUP5",
      "path": "187"
    },
    "1618": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5642,
        5655
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xB14"
    },
    "1621": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5642,
        5681
      ],
      "op": "JUMP",
      "path": "187"
    },
    "1622": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5642,
        5681
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1623": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "POP",
      "path": "187"
    },
    "1624": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "POP",
      "path": "187"
    },
    "1625": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "POP",
      "path": "187"
    },
    "1626": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5368,
        5688
      ],
      "op": "POP",
      "path": "187"
    },
    "1627": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5368,
        5688
      ],
      "op": "JUMP",
      "path": "187"
    },
    "1628": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1629": {
      "fn": "ERC721._exists",
      "offset": [
        7225,
        7229
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "1631": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1632": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1633": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "1634": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7255
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x2"
    },
    "1636": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "1638": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "1639": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "1641": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "1642": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "KECCAK256",
      "path": "187"
    },
    "1643": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "SLOAD",
      "path": "187"
    },
    "1644": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2891,
        2904
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x60"
    },
    "1646": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2891,
        2904
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1653": {
      "op": "SHL"
    },
    "1654": {
      "op": "SUB"
    },
    "1655": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "AND",
      "path": "187"
    },
    "1656": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH2",
      "path": "187",
      "statement": 21,
      "value": "0x6DB"
    },
    "1659": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "1660": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "1662": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "1663": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1669": {
      "op": "SHL"
    },
    "1670": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1671": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1674": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "1676": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "DUP3",
      "path": "187"
    },
    "1677": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "ADD",
      "path": "187"
    },
    "1678": {
      "op": "MSTORE"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0x2F"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1683": {
      "op": "DUP3"
    },
    "1684": {
      "op": "ADD"
    },
    "1685": {
      "op": "MSTORE"
    },
    "1686": {
      "op": "PUSH32",
      "value": "0x4552433732314D657461646174613A2055524920717565727920666F72206E6F"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1721": {
      "op": "DUP3"
    },
    "1722": {
      "op": "ADD"
    },
    "1723": {
      "op": "MSTORE"
    },
    "1724": {
      "op": "PUSH15",
      "value": "0x3732BC34B9BA32B73A103A37B5B2B7"
    },
    "1740": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "1742": {
      "op": "SHL"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1745": {
      "op": "DUP3"
    },
    "1746": {
      "op": "ADD"
    },
    "1747": {
      "op": "MSTORE"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1750": {
      "op": "ADD"
    },
    "1751": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x381"
    },
    "1754": {
      "op": "JUMP"
    },
    "1755": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2916,
        2992
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1756": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3003,
        3024
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "1758": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3027,
        3037
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x6F2"
    },
    "1761": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "PUSH1",
      "path": "187",
      "statement": 22,
      "value": "0x40"
    },
    "1763": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "DUP1",
      "path": "187"
    },
    "1764": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "1765": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "1767": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1768": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "ADD",
      "path": "187"
    },
    "1769": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "1770": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "1771": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "1772": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1774": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1775": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "1776": {
      "fn": "ERC721._baseURI",
      "offset": [
        3465,
        3474
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "1777": {
      "fn": "ERC721._baseURI",
      "offset": [
        3389,
        3481
      ],
      "op": "JUMP",
      "path": "187"
    },
    "1778": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3027,
        3037
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1779": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3003,
        3037
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "1780": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3003,
        3037
      ],
      "op": "POP",
      "path": "187"
    },
    "1781": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3078,
        3079
      ],
      "op": "PUSH1",
      "path": "187",
      "statement": 23,
      "value": "0x0"
    },
    "1783": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3060,
        3067
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1784": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3075
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "1785": {
      "branch": 57,
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3079
      ],
      "op": "GT",
      "path": "187"
    },
    "1786": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x712"
    },
    "1789": {
      "branch": 57,
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "1790": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "1792": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "1793": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "DUP1",
      "path": "187"
    },
    "1794": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "1796": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "ADD",
      "path": "187"
    },
    "1797": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "1799": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "1800": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "DUP1",
      "path": "187"
    },
    "1801": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "1803": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1804": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "1805": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "POP",
      "path": "187"
    },
    "1806": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x73D"
    },
    "1809": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMP",
      "path": "187"
    },
    "1810": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1811": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3106,
        3113
      ],
      "op": "DUP1",
      "path": "187"
    },
    "1812": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3133
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x71C"
    },
    "1815": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3122
      ],
      "op": "DUP5",
      "path": "187"
    },
    "1816": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3131
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xB47"
    },
    "1819": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3115,
        3133
      ],
      "op": "JUMP",
      "path": "187"
    },
    "1820": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3115,
        3133
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1821": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "1823": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "1824": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "1826": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "ADD",
      "path": "187"
    },
    "1827": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x72D"
    },
    "1830": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP3",
      "path": "187"
    },
    "1831": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "1832": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "1833": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x1087"
    },
    "1836": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3089,
        3134
      ],
      "op": "JUMP",
      "path": "187"
    },
    "1837": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1838": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "1840": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "1841": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "1843": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1844": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "DUP4",
      "path": "187"
    },
    "1845": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SUB",
      "path": "187"
    },
    "1846": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SUB",
      "path": "187"
    },
    "1847": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1848": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "1849": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "1850": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "1852": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3089,
        3134
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "1853": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3054,
        3140
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1854": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3047,
        3140
      ],
      "op": "SWAP4",
      "path": "187"
    },
    "1855": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2818,
        3147
      ],
      "op": "SWAP3",
      "path": "187"
    },
    "1856": {
      "op": "POP"
    },
    "1857": {
      "op": "POP"
    },
    "1858": {
      "op": "POP"
    },
    "1859": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2818,
        3147
      ],
      "op": "JUMP",
      "path": "187"
    },
    "1860": {
      "fn": "ERC721._approve",
      "offset": [
        11169,
        11340
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1861": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "PUSH1",
      "path": "187",
      "statement": 24,
      "value": "0x0"
    },
    "1863": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1864": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1865": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "1866": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11258
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "1868": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "1870": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "1871": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "1873": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "1874": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "KECCAK256",
      "path": "187"
    },
    "1875": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "DUP1",
      "path": "187"
    },
    "1876": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "SLOAD",
      "path": "187"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1879": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1883": {
      "op": "SHL"
    },
    "1884": {
      "op": "SUB"
    },
    "1885": {
      "op": "NOT"
    },
    "1886": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "AND",
      "path": "187"
    },
    "1887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1893": {
      "op": "SHL"
    },
    "1894": {
      "op": "SUB"
    },
    "1895": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "DUP5",
      "path": "187"
    },
    "1896": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "AND",
      "path": "187"
    },
    "1897": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "1898": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1899": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "OR",
      "path": "187"
    },
    "1900": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "1901": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "1902": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11272
      ],
      "op": "SSTORE",
      "path": "187"
    },
    "1903": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1904": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "1905": {
      "fn": "ERC721._approve",
      "offset": [
        11296,
        11319
      ],
      "op": "PUSH2",
      "path": "187",
      "statement": 25,
      "value": "0x779"
    },
    "1908": {
      "fn": "ERC721._approve",
      "offset": [
        11243,
        11267
      ],
      "op": "DUP3",
      "path": "187"
    },
    "1909": {
      "fn": "ERC721._approve",
      "offset": [
        11296,
        11310
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x508"
    },
    "1912": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        11296,
        11319
      ],
      "op": "JUMP",
      "path": "187"
    },
    "1913": {
      "fn": "ERC721._approve",
      "offset": [
        11296,
        11319
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1914": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1918": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1920": {
      "op": "SHL"
    },
    "1921": {
      "op": "SUB"
    },
    "1922": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "AND",
      "path": "187"
    },
    "1923": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "PUSH32",
      "path": "187",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1956": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "1958": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "1959": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "1961": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "1962": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "DUP1",
      "path": "187"
    },
    "1963": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "1964": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "SUB",
      "path": "187"
    },
    "1965": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "1966": {
      "fn": "ERC721._approve",
      "offset": [
        11287,
        11333
      ],
      "op": "LOG4",
      "path": "187"
    },
    "1967": {
      "fn": "ERC721._approve",
      "offset": [
        11169,
        11340
      ],
      "op": "POP",
      "path": "187"
    },
    "1968": {
      "fn": "ERC721._approve",
      "offset": [
        11169,
        11340
      ],
      "op": "POP",
      "path": "187"
    },
    "1969": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        11169,
        11340
      ],
      "op": "JUMP",
      "path": "187"
    },
    "1970": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7443,
        7787
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "1971": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7536,
        7540
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "1973": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1974": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1975": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "1976": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7255
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x2"
    },
    "1978": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "1980": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "1981": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "1983": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "DUP2",
      "path": "187"
    },
    "1984": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "KECCAK256",
      "path": "187"
    },
    "1985": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "SLOAD",
      "path": "187"
    },
    "1986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1992": {
      "op": "SHL"
    },
    "1993": {
      "op": "SUB"
    },
    "1994": {
      "fn": "ERC721._exists",
      "offset": [
        7248,
        7264
      ],
      "op": "AND",
      "path": "187"
    },
    "1995": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "PUSH2",
      "path": "187",
      "statement": 26,
      "value": "0x82B"
    },
    "1998": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "1999": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "2001": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "2002": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2008": {
      "op": "SHL"
    },
    "2009": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "DUP2",
      "path": "187"
    },
    "2010": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2013": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "2015": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "DUP3",
      "path": "187"
    },
    "2016": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "ADD",
      "path": "187"
    },
    "2017": {
      "op": "MSTORE"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2022": {
      "op": "DUP3"
    },
    "2023": {
      "op": "ADD"
    },
    "2024": {
      "op": "MSTORE"
    },
    "2025": {
      "op": "PUSH32",
      "value": "0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2060": {
      "op": "DUP3"
    },
    "2061": {
      "op": "ADD"
    },
    "2062": {
      "op": "MSTORE"
    },
    "2063": {
      "op": "PUSH12",
      "value": "0x34B9BA32B73A103A37B5B2B7"
    },
    "2076": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "2078": {
      "op": "SHL"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2081": {
      "op": "DUP3"
    },
    "2082": {
      "op": "ADD"
    },
    "2083": {
      "op": "MSTORE"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2086": {
      "op": "ADD"
    },
    "2087": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x381"
    },
    "2090": {
      "op": "JUMP"
    },
    "2091": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7552,
        7625
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "2092": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7648
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "2094": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7651,
        7674
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x836"
    },
    "2097": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7666,
        7673
      ],
      "op": "DUP4",
      "path": "187"
    },
    "2098": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7651,
        7665
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x508"
    },
    "2101": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7651,
        7674
      ],
      "op": "JUMP",
      "path": "187"
    },
    "2102": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7651,
        7674
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "2103": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7674
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "2104": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7635,
        7674
      ],
      "op": "POP",
      "path": "187"
    },
    "2105": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7703,
        7708
      ],
      "op": "DUP1",
      "path": "187",
      "statement": 27
    },
    "2106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2110": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2112": {
      "op": "SHL"
    },
    "2113": {
      "op": "SUB"
    },
    "2114": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7708
      ],
      "op": "AND",
      "path": "187"
    },
    "2115": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7699
      ],
      "op": "DUP5",
      "path": "187"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2120": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2122": {
      "op": "SHL"
    },
    "2123": {
      "op": "SUB"
    },
    "2124": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7708
      ],
      "op": "AND",
      "path": "187"
    },
    "2125": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7708
      ],
      "op": "EQ",
      "path": "187"
    },
    "2126": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7743
      ],
      "op": "DUP1",
      "path": "187"
    },
    "2127": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7743
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x871"
    },
    "2130": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7743
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "2131": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7743
      ],
      "op": "POP",
      "path": "187"
    },
    "2132": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7736,
        7743
      ],
      "op": "DUP4",
      "path": "187"
    },
    "2133": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2135": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2139": {
      "op": "SHL"
    },
    "2140": {
      "op": "SUB"
    },
    "2141": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7712,
        7743
      ],
      "op": "AND",
      "path": "187"
    },
    "2142": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7712,
        7732
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x866"
    },
    "2145": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7724,
        7731
      ],
      "op": "DUP5",
      "path": "187"
    },
    "2146": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7712,
        7723
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x30C"
    },
    "2149": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7712,
        7732
      ],
      "op": "JUMP",
      "path": "187"
    },
    "2150": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7712,
        7732
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2155": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2157": {
      "op": "SHL"
    },
    "2158": {
      "op": "SUB"
    },
    "2159": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7712,
        7743
      ],
      "op": "AND",
      "path": "187"
    },
    "2160": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7712,
        7743
      ],
      "op": "EQ",
      "path": "187"
    },
    "2161": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7743
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "2162": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7779
      ],
      "op": "DUP1",
      "path": "187"
    },
    "2163": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7779
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x8A1"
    },
    "2166": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7692,
        7779
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "2167": {
      "op": "POP"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2174": {
      "op": "SHL"
    },
    "2175": {
      "op": "SUB"
    },
    "2176": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP1",
      "path": "187"
    },
    "2177": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP3",
      "path": "187"
    },
    "2178": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "AND",
      "path": "187"
    },
    "2179": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4600,
        4604
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "2181": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "2182": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP2",
      "path": "187"
    },
    "2183": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "2184": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4641
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x5"
    },
    "2186": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "2188": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "2189": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP2",
      "path": "187"
    },
    "2190": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "2191": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "2193": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP1",
      "path": "187"
    },
    "2194": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "DUP4",
      "path": "187"
    },
    "2195": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4648
      ],
      "op": "KECCAK256",
      "path": "187"
    },
    "2196": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP4",
      "path": "187"
    },
    "2197": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "DUP9",
      "path": "187"
    },
    "2198": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "AND",
      "path": "187"
    },
    "2199": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "DUP4",
      "path": "187"
    },
    "2200": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "2201": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP3",
      "path": "187"
    },
    "2202": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "2203": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "2204": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "KECCAK256",
      "path": "187"
    },
    "2205": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "SLOAD",
      "path": "187"
    },
    "2206": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0xFF"
    },
    "2208": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4623,
        4658
      ],
      "op": "AND",
      "path": "187"
    },
    "2209": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7747,
        7779
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "2210": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7684,
        7780
      ],
      "op": "SWAP5",
      "path": "187"
    },
    "2211": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7443,
        7787
      ],
      "op": "SWAP4",
      "path": "187"
    },
    "2212": {
      "op": "POP"
    },
    "2213": {
      "op": "POP"
    },
    "2214": {
      "op": "POP"
    },
    "2215": {
      "op": "POP"
    },
    "2216": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7443,
        7787
      ],
      "op": "JUMP",
      "path": "187"
    },
    "2217": {
      "fn": "ERC721._transfer",
      "offset": [
        10453,
        11058
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "2218": {
      "fn": "ERC721._transfer",
      "offset": [
        10607,
        10611
      ],
      "op": "DUP3",
      "path": "187",
      "statement": 28
    },
    "2219": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2221": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2225": {
      "op": "SHL"
    },
    "2226": {
      "op": "SUB"
    },
    "2227": {
      "fn": "ERC721._transfer",
      "offset": [
        10580,
        10611
      ],
      "op": "AND",
      "path": "187"
    },
    "2228": {
      "fn": "ERC721._transfer",
      "offset": [
        10580,
        10603
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x8BC"
    },
    "2231": {
      "fn": "ERC721._transfer",
      "offset": [
        10595,
        10602
      ],
      "op": "DUP3",
      "path": "187"
    },
    "2232": {
      "fn": "ERC721._transfer",
      "offset": [
        10580,
        10594
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x508"
    },
    "2235": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10580,
        10603
      ],
      "op": "JUMP",
      "path": "187"
    },
    "2236": {
      "fn": "ERC721._transfer",
      "offset": [
        10580,
        10603
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "2237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2241": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2243": {
      "op": "SHL"
    },
    "2244": {
      "op": "SUB"
    },
    "2245": {
      "fn": "ERC721._transfer",
      "offset": [
        10580,
        10611
      ],
      "op": "AND",
      "path": "187"
    },
    "2246": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10580,
        10611
      ],
      "op": "EQ",
      "path": "187"
    },
    "2247": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x920"
    },
    "2250": {
      "branch": 58,
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "2251": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "2253": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "2254": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2260": {
      "op": "SHL"
    },
    "2261": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "DUP2",
      "path": "187"
    },
    "2262": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "2263": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2265": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "2267": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "DUP3",
      "path": "187"
    },
    "2268": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "ADD",
      "path": "187"
    },
    "2269": {
      "op": "MSTORE"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "2272": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2274": {
      "op": "DUP3"
    },
    "2275": {
      "op": "ADD"
    },
    "2276": {
      "op": "MSTORE"
    },
    "2277": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722066726F6D20696E636F727265637420"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2312": {
      "op": "DUP3"
    },
    "2313": {
      "op": "ADD"
    },
    "2314": {
      "op": "MSTORE"
    },
    "2315": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "2323": {
      "op": "SHL"
    },
    "2324": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2326": {
      "op": "DUP3"
    },
    "2327": {
      "op": "ADD"
    },
    "2328": {
      "op": "MSTORE"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2331": {
      "op": "ADD"
    },
    "2332": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x381"
    },
    "2335": {
      "op": "JUMP"
    },
    "2336": {
      "fn": "ERC721._transfer",
      "offset": [
        10572,
        10653
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2343": {
      "op": "SHL"
    },
    "2344": {
      "op": "SUB"
    },
    "2345": {
      "fn": "ERC721._transfer",
      "offset": [
        10671,
        10687
      ],
      "op": "DUP3",
      "path": "187",
      "statement": 29
    },
    "2346": {
      "branch": 59,
      "fn": "ERC721._transfer",
      "offset": [
        10671,
        10687
      ],
      "op": "AND",
      "path": "187"
    },
    "2347": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x982"
    },
    "2350": {
      "branch": 59,
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "2351": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "2353": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "2354": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2360": {
      "op": "SHL"
    },
    "2361": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "DUP2",
      "path": "187"
    },
    "2362": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2365": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "2367": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "DUP3",
      "path": "187"
    },
    "2368": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "ADD",
      "path": "187"
    },
    "2369": {
      "op": "MSTORE"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2372": {
      "op": "DUP1"
    },
    "2373": {
      "op": "DUP3"
    },
    "2374": {
      "op": "ADD"
    },
    "2375": {
      "op": "MSTORE"
    },
    "2376": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "2409": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2411": {
      "op": "DUP3"
    },
    "2412": {
      "op": "ADD"
    },
    "2413": {
      "op": "MSTORE"
    },
    "2414": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2421": {
      "op": "SHL"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2424": {
      "op": "DUP3"
    },
    "2425": {
      "op": "ADD"
    },
    "2426": {
      "op": "MSTORE"
    },
    "2427": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2429": {
      "op": "ADD"
    },
    "2430": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x381"
    },
    "2433": {
      "op": "JUMP"
    },
    "2434": {
      "fn": "ERC721._transfer",
      "offset": [
        10663,
        10728
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "2435": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10869
      ],
      "op": "PUSH2",
      "path": "187",
      "statement": 30,
      "value": "0x98D"
    },
    "2438": {
      "fn": "ERC721._transfer",
      "offset": [
        10857,
        10858
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "2440": {
      "fn": "ERC721._transfer",
      "offset": [
        10861,
        10868
      ],
      "op": "DUP3",
      "path": "187"
    },
    "2441": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10848
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x744"
    },
    "2444": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10840,
        10869
      ],
      "op": "JUMP",
      "path": "187"
    },
    "2445": {
      "fn": "ERC721._transfer",
      "offset": [
        10840,
        10869
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2452": {
      "op": "SHL"
    },
    "2453": {
      "op": "SUB"
    },
    "2454": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "DUP4",
      "path": "187",
      "statement": 31
    },
    "2455": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "AND",
      "path": "187"
    },
    "2456": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "2458": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "2459": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "DUP2",
      "path": "187"
    },
    "2460": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "2461": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10889
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x3"
    },
    "2463": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "2465": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "2466": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "2468": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "DUP2",
      "path": "187"
    },
    "2469": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "KECCAK256",
      "path": "187"
    },
    "2470": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "DUP1",
      "path": "187"
    },
    "2471": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "SLOAD",
      "path": "187"
    },
    "2472": {
      "fn": "ERC721._transfer",
      "offset": [
        10899,
        10900
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x1"
    },
    "2474": {
      "fn": "ERC721._transfer",
      "offset": [
        10899,
        10900
      ],
      "op": "SWAP3",
      "path": "187"
    },
    "2475": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10895
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "2476": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x9B6"
    },
    "2479": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "2480": {
      "fn": "ERC721._transfer",
      "offset": [
        10899,
        10900
      ],
      "op": "DUP5",
      "path": "187"
    },
    "2481": {
      "fn": "ERC721._transfer",
      "offset": [
        10899,
        10900
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "2482": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x10CC"
    },
    "2485": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10880,
        10900
      ],
      "op": "JUMP",
      "path": "187"
    },
    "2486": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "2487": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "2488": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "2489": {
      "fn": "ERC721._transfer",
      "offset": [
        10880,
        10900
      ],
      "op": "SSTORE",
      "path": "187"
    },
    "2490": {
      "op": "POP"
    },
    "2491": {
      "op": "POP"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2498": {
      "op": "SHL"
    },
    "2499": {
      "op": "SUB"
    },
    "2500": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "DUP3",
      "path": "187",
      "statement": 32
    },
    "2501": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "AND",
      "path": "187"
    },
    "2502": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "2504": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "2505": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "DUP2",
      "path": "187"
    },
    "2506": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "2507": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10919
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x3"
    },
    "2509": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "2511": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "2512": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "2514": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "DUP2",
      "path": "187"
    },
    "2515": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "KECCAK256",
      "path": "187"
    },
    "2516": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "DUP1",
      "path": "187"
    },
    "2517": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "SLOAD",
      "path": "187"
    },
    "2518": {
      "fn": "ERC721._transfer",
      "offset": [
        10927,
        10928
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x1"
    },
    "2520": {
      "fn": "ERC721._transfer",
      "offset": [
        10927,
        10928
      ],
      "op": "SWAP3",
      "path": "187"
    },
    "2521": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10923
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "2522": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x9E4"
    },
    "2525": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "2526": {
      "fn": "ERC721._transfer",
      "offset": [
        10927,
        10928
      ],
      "op": "DUP5",
      "path": "187"
    },
    "2527": {
      "fn": "ERC721._transfer",
      "offset": [
        10927,
        10928
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "2528": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x10E3"
    },
    "2531": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        10910,
        10928
      ],
      "op": "JUMP",
      "path": "187"
    },
    "2532": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "2533": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "2534": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "2535": {
      "fn": "ERC721._transfer",
      "offset": [
        10910,
        10928
      ],
      "op": "SSTORE",
      "path": "187"
    },
    "2536": {
      "op": "POP"
    },
    "2537": {
      "op": "POP"
    },
    "2538": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "PUSH1",
      "path": "187",
      "statement": 33,
      "value": "0x0"
    },
    "2540": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "DUP2",
      "path": "187"
    },
    "2541": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "DUP2",
      "path": "187"
    },
    "2542": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "2543": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10945
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x2"
    },
    "2545": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "2547": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "2548": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "2550": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "DUP1",
      "path": "187"
    },
    "2551": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "DUP3",
      "path": "187"
    },
    "2552": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "KECCAK256",
      "path": "187"
    },
    "2553": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "DUP1",
      "path": "187"
    },
    "2554": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "SLOAD",
      "path": "187"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2561": {
      "op": "SHL"
    },
    "2562": {
      "op": "SUB"
    },
    "2563": {
      "op": "NOT"
    },
    "2564": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "AND",
      "path": "187"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2571": {
      "op": "SHL"
    },
    "2572": {
      "op": "SUB"
    },
    "2573": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "DUP7",
      "path": "187"
    },
    "2574": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "DUP2",
      "path": "187"
    },
    "2575": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "AND",
      "path": "187"
    },
    "2576": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "2577": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "DUP3",
      "path": "187"
    },
    "2578": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "OR",
      "path": "187"
    },
    "2579": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "2580": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "SWAP3",
      "path": "187"
    },
    "2581": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10959
      ],
      "op": "SSTORE",
      "path": "187"
    },
    "2582": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "SWAP2",
      "path": "187",
      "statement": 34
    },
    "2583": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "2584": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "DUP5",
      "path": "187"
    },
    "2585": {
      "fn": "ERC721._transfer",
      "offset": [
        10938,
        10954
      ],
      "op": "SWAP4",
      "path": "187"
    },
    "2586": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "2587": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "DUP8",
      "path": "187"
    },
    "2588": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "AND",
      "path": "187"
    },
    "2589": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "2590": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "PUSH32",
      "path": "187",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2623": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "2624": {
      "fn": "ERC721._transfer",
      "offset": [
        10975,
        11002
      ],
      "op": "LOG4",
      "path": "187"
    },
    "2625": {
      "fn": "ERC721.approve",
      "offset": [
        3608,
        3939
      ],
      "op": "POP",
      "path": "187"
    },
    "2626": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "POP",
      "path": "187"
    },
    "2627": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3939
      ],
      "op": "POP",
      "path": "187"
    },
    "2628": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3538,
        3939
      ],
      "op": "JUMP",
      "path": "187"
    },
    "2629": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11475,
        11782
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "2630": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11625,
        11633
      ],
      "op": "DUP2",
      "path": "187",
      "statement": 35
    },
    "2631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2633": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2635": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2637": {
      "op": "SHL"
    },
    "2638": {
      "op": "SUB"
    },
    "2639": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11616,
        11633
      ],
      "op": "AND",
      "path": "187"
    },
    "2640": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11616,
        11621
      ],
      "op": "DUP4",
      "path": "187"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2645": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2647": {
      "op": "SHL"
    },
    "2648": {
      "op": "SUB"
    },
    "2649": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11616,
        11633
      ],
      "op": "AND",
      "path": "187"
    },
    "2650": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11616,
        11633
      ],
      "op": "EQ",
      "path": "187"
    },
    "2651": {
      "branch": 60,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11616,
        11633
      ],
      "op": "ISZERO",
      "path": "187"
    },
    "2652": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xAA7"
    },
    "2655": {
      "branch": 60,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "2656": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "2658": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "2659": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2663": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2665": {
      "op": "SHL"
    },
    "2666": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "DUP2",
      "path": "187"
    },
    "2667": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "2668": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2670": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "2672": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "DUP3",
      "path": "187"
    },
    "2673": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "ADD",
      "path": "187"
    },
    "2674": {
      "op": "MSTORE"
    },
    "2675": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2679": {
      "op": "DUP3"
    },
    "2680": {
      "op": "ADD"
    },
    "2681": {
      "op": "MSTORE"
    },
    "2682": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "2715": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2717": {
      "op": "DUP3"
    },
    "2718": {
      "op": "ADD"
    },
    "2719": {
      "op": "MSTORE"
    },
    "2720": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2722": {
      "op": "ADD"
    },
    "2723": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x381"
    },
    "2726": {
      "op": "JUMP"
    },
    "2727": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11608,
        11663
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "2728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2732": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2734": {
      "op": "SHL"
    },
    "2735": {
      "op": "SUB"
    },
    "2736": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "DUP4",
      "path": "187",
      "statement": 36
    },
    "2737": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "DUP2",
      "path": "187"
    },
    "2738": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "AND",
      "path": "187"
    },
    "2739": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "2741": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "DUP2",
      "path": "187"
    },
    "2742": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "DUP2",
      "path": "187"
    },
    "2743": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "2744": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11691
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x5"
    },
    "2746": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "2748": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "2749": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "DUP2",
      "path": "187"
    },
    "2750": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "2751": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "2753": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "DUP1",
      "path": "187"
    },
    "2754": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "DUP4",
      "path": "187"
    },
    "2755": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11698
      ],
      "op": "KECCAK256",
      "path": "187"
    },
    "2756": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "SWAP5",
      "path": "187"
    },
    "2757": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "DUP8",
      "path": "187"
    },
    "2758": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "AND",
      "path": "187"
    },
    "2759": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "DUP1",
      "path": "187"
    },
    "2760": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "DUP5",
      "path": "187"
    },
    "2761": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "2762": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "SWAP5",
      "path": "187"
    },
    "2763": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "DUP3",
      "path": "187"
    },
    "2764": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "2765": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "2766": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "DUP3",
      "path": "187"
    },
    "2767": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "2768": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11708
      ],
      "op": "KECCAK256",
      "path": "187"
    },
    "2769": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "DUP1",
      "path": "187"
    },
    "2770": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "SLOAD",
      "path": "187"
    },
    "2771": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2773": {
      "op": "NOT"
    },
    "2774": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "AND",
      "path": "187"
    },
    "2775": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "DUP7",
      "path": "187"
    },
    "2776": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "ISZERO",
      "path": "187"
    },
    "2777": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "ISZERO",
      "path": "187"
    },
    "2778": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "2779": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "DUP2",
      "path": "187"
    },
    "2780": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "OR",
      "path": "187"
    },
    "2781": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "2782": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "2783": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11673,
        11719
      ],
      "op": "SSTORE",
      "path": "187"
    },
    "2784": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "SWAP2",
      "path": "187",
      "statement": 37
    },
    "2785": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "2786": {
      "op": "SWAP2"
    },
    "2787": {
      "op": "DUP3"
    },
    "2788": {
      "op": "MSTORE"
    },
    "2789": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "PUSH32",
      "path": "187",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "2822": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "2823": {
      "op": "ADD"
    },
    "2824": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "2826": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "2827": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "DUP1",
      "path": "187"
    },
    "2828": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "2829": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "SUB",
      "path": "187"
    },
    "2830": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "2831": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11734,
        11775
      ],
      "op": "LOG3",
      "path": "187"
    },
    "2832": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11475,
        11782
      ],
      "op": "POP",
      "path": "187"
    },
    "2833": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11475,
        11782
      ],
      "op": "POP",
      "path": "187"
    },
    "2834": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        11475,
        11782
      ],
      "op": "POP",
      "path": "187"
    },
    "2835": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        11475,
        11782
      ],
      "op": "JUMP",
      "path": "187"
    },
    "2836": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6550,
        6857
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "2837": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6701,
        6729
      ],
      "op": "PUSH2",
      "path": "187",
      "statement": 38,
      "value": "0xB1F"
    },
    "2840": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6711,
        6715
      ],
      "op": "DUP5",
      "path": "187"
    },
    "2841": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6717,
        6719
      ],
      "op": "DUP5",
      "path": "187"
    },
    "2842": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6721,
        6728
      ],
      "op": "DUP5",
      "path": "187"
    },
    "2843": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6701,
        6710
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x8A9"
    },
    "2846": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6701,
        6729
      ],
      "op": "JUMP",
      "path": "187"
    },
    "2847": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6701,
        6729
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "2848": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6747,
        6795
      ],
      "op": "PUSH2",
      "path": "187",
      "statement": 39,
      "value": "0xB2B"
    },
    "2851": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6770,
        6774
      ],
      "op": "DUP5",
      "path": "187"
    },
    "2852": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6776,
        6778
      ],
      "op": "DUP5",
      "path": "187"
    },
    "2853": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6780,
        6787
      ],
      "op": "DUP5",
      "path": "187"
    },
    "2854": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6789,
        6794
      ],
      "op": "DUP5",
      "path": "187"
    },
    "2855": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6747,
        6769
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xC45"
    },
    "2858": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6747,
        6795
      ],
      "op": "JUMP",
      "path": "187"
    },
    "2859": {
      "branch": 61,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6747,
        6795
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "2860": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x656"
    },
    "2863": {
      "branch": 61,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "2864": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "2866": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "2867": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2873": {
      "op": "SHL"
    },
    "2874": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "DUP2",
      "path": "187"
    },
    "2875": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "2876": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "2878": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "ADD",
      "path": "187"
    },
    "2879": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x381"
    },
    "2882": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "2883": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6739,
        6850
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x10FB"
    },
    "2886": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6739,
        6850
      ],
      "op": "JUMP",
      "path": "187"
    },
    "2887": {
      "fn": "Strings.toString",
      "offset": [
        328,
        1031
      ],
      "op": "JUMPDEST",
      "path": "215"
    },
    "2888": {
      "fn": "Strings.toString",
      "offset": [
        384,
        397
      ],
      "op": "PUSH1",
      "path": "215",
      "value": "0x60"
    },
    "2890": {
      "branch": 62,
      "fn": "Strings.toString",
      "offset": [
        601,
        611
      ],
      "op": "DUP2",
      "path": "215"
    },
    "2891": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "PUSH2",
      "path": "215",
      "value": "0xB6B"
    },
    "2894": {
      "branch": 62,
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPI",
      "path": "215"
    },
    "2895": {
      "op": "POP"
    },
    "2896": {
      "op": "POP"
    },
    "2897": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "215",
      "statement": 40,
      "value": "0x40"
    },
    "2899": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "215"
    },
    "2900": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MLOAD",
      "path": "215"
    },
    "2901": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP1",
      "path": "215"
    },
    "2902": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "215"
    },
    "2903": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "215"
    },
    "2904": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "215"
    },
    "2905": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP2",
      "path": "215"
    },
    "2906": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "215"
    },
    "2907": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "215",
      "value": "0x1"
    },
    "2909": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP2",
      "path": "215"
    },
    "2910": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "215"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "2913": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "2915": {
      "op": "SHL"
    },
    "2916": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "PUSH1",
      "path": "215",
      "value": "0x20"
    },
    "2918": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "DUP3",
      "path": "215"
    },
    "2919": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "ADD",
      "path": "215"
    },
    "2920": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "MSTORE",
      "path": "215"
    },
    "2921": {
      "fn": "Strings.toString",
      "offset": [
        627,
        637
      ],
      "op": "SWAP1",
      "path": "215"
    },
    "2922": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        328,
        1031
      ],
      "op": "JUMP",
      "path": "215"
    },
    "2923": {
      "fn": "Strings.toString",
      "offset": [
        597,
        648
      ],
      "op": "JUMPDEST",
      "path": "215"
    },
    "2924": {
      "fn": "Strings.toString",
      "offset": [
        672,
        677
      ],
      "op": "DUP2",
      "path": "215"
    },
    "2925": {
      "fn": "Strings.toString",
      "offset": [
        657,
        669
      ],
      "op": "PUSH1",
      "path": "215",
      "value": "0x0"
    },
    "2927": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "215"
    },
    "2928": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "DUP2",
      "path": "215"
    },
    "2929": {
      "fn": "Strings.toString",
      "offset": [
        718,
        727
      ],
      "op": "ISZERO",
      "path": "215"
    },
    "2930": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "215",
      "value": "0xB95"
    },
    "2933": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPI",
      "path": "215"
    },
    "2934": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP1",
      "path": "215",
      "statement": 41
    },
    "2935": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "215",
      "value": "0xB7F"
    },
    "2938": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "DUP2",
      "path": "215"
    },
    "2939": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "PUSH2",
      "path": "215",
      "value": "0x114D"
    },
    "2942": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        743,
        751
      ],
      "op": "JUMP",
      "path": "215"
    },
    "2943": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "JUMPDEST",
      "path": "215"
    },
    "2944": {
      "fn": "Strings.toString",
      "offset": [
        743,
        751
      ],
      "op": "SWAP2",
      "path": "215"
    },
    "2945": {
      "op": "POP"
    },
    "2946": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "215",
      "statement": 42,
      "value": "0xB8E"
    },
    "2949": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP1",
      "path": "215"
    },
    "2950": {
      "op": "POP"
    },
    "2951": {
      "fn": "Strings.toString",
      "offset": [
        773,
        775
      ],
      "op": "PUSH1",
      "path": "215",
      "value": "0xA"
    },
    "2953": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "DUP4",
      "path": "215"
    },
    "2954": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "PUSH2",
      "path": "215",
      "value": "0x117E"
    },
    "2957": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        765,
        775
      ],
      "op": "JUMP",
      "path": "215"
    },
    "2958": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "JUMPDEST",
      "path": "215"
    },
    "2959": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "SWAP2",
      "path": "215"
    },
    "2960": {
      "fn": "Strings.toString",
      "offset": [
        765,
        775
      ],
      "op": "POP",
      "path": "215"
    },
    "2961": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "PUSH2",
      "path": "215",
      "value": "0xB6F"
    },
    "2964": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMP",
      "path": "215"
    },
    "2965": {
      "fn": "Strings.toString",
      "offset": [
        711,
        786
      ],
      "op": "JUMPDEST",
      "path": "215"
    },
    "2966": {
      "fn": "Strings.toString",
      "offset": [
        795,
        814
      ],
      "op": "PUSH1",
      "path": "215",
      "value": "0x0"
    },
    "2968": {
      "fn": "Strings.toString",
      "offset": [
        827,
        833
      ],
      "op": "DUP2",
      "path": "215"
    },
    "2969": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH8",
      "path": "215",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2978": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "215"
    },
    "2979": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "GT",
      "path": "215"
    },
    "2980": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "215"
    },
    "2981": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "215",
      "value": "0xBB0"
    },
    "2984": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "215"
    },
    "2985": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "215",
      "value": "0xBB0"
    },
    "2988": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "215",
      "value": "0xED6"
    },
    "2991": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        817,
        834
      ],
      "op": "JUMP",
      "path": "215"
    },
    "2992": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "215"
    },
    "2993": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "215",
      "value": "0x40"
    },
    "2995": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MLOAD",
      "path": "215"
    },
    "2996": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "215"
    },
    "2997": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "215"
    },
    "2998": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "215"
    },
    "2999": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "215"
    },
    "3000": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "215"
    },
    "3001": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "215",
      "value": "0x1F"
    },
    "3003": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "215"
    },
    "3004": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "215",
      "value": "0x1F"
    },
    "3006": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "NOT",
      "path": "215"
    },
    "3007": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "AND",
      "path": "215"
    },
    "3008": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "215",
      "value": "0x20"
    },
    "3010": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "215"
    },
    "3011": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "215"
    },
    "3012": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "215"
    },
    "3013": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "215",
      "value": "0x40"
    },
    "3015": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "MSTORE",
      "path": "215"
    },
    "3016": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "215"
    },
    "3017": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ISZERO",
      "path": "215"
    },
    "3018": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH2",
      "path": "215",
      "value": "0xBDA"
    },
    "3021": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPI",
      "path": "215"
    },
    "3022": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "PUSH1",
      "path": "215",
      "value": "0x20"
    },
    "3024": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP3",
      "path": "215"
    },
    "3025": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "215"
    },
    "3026": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP2",
      "path": "215"
    },
    "3027": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP1",
      "path": "215"
    },
    "3028": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATASIZE",
      "path": "215"
    },
    "3029": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "DUP4",
      "path": "215"
    },
    "3030": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "CALLDATACOPY",
      "path": "215"
    },
    "3031": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "ADD",
      "path": "215"
    },
    "3032": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "SWAP1",
      "path": "215"
    },
    "3033": {
      "op": "POP"
    },
    "3034": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "JUMPDEST",
      "path": "215"
    },
    "3035": {
      "fn": "Strings.toString",
      "offset": [
        817,
        834
      ],
      "op": "POP",
      "path": "215"
    },
    "3036": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "SWAP1",
      "path": "215"
    },
    "3037": {
      "fn": "Strings.toString",
      "offset": [
        795,
        834
      ],
      "op": "POP",
      "path": "215"
    },
    "3038": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPDEST",
      "path": "215"
    },
    "3039": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "DUP5",
      "path": "215"
    },
    "3040": {
      "fn": "Strings.toString",
      "offset": [
        851,
        861
      ],
      "op": "ISZERO",
      "path": "215"
    },
    "3041": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "215",
      "value": "0x8A1"
    },
    "3044": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMPI",
      "path": "215"
    },
    "3045": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "215",
      "statement": 43,
      "value": "0xBEF"
    },
    "3048": {
      "fn": "Strings.toString",
      "offset": [
        887,
        888
      ],
      "op": "PUSH1",
      "path": "215",
      "value": "0x1"
    },
    "3050": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "DUP4",
      "path": "215"
    },
    "3051": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "PUSH2",
      "path": "215",
      "value": "0x10CC"
    },
    "3054": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        877,
        888
      ],
      "op": "JUMP",
      "path": "215"
    },
    "3055": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "JUMPDEST",
      "path": "215"
    },
    "3056": {
      "fn": "Strings.toString",
      "offset": [
        877,
        888
      ],
      "op": "SWAP2",
      "path": "215"
    },
    "3057": {
      "op": "POP"
    },
    "3058": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "215",
      "statement": 44,
      "value": "0xBFC"
    },
    "3061": {
      "fn": "Strings.toString",
      "offset": [
        953,
        955
      ],
      "op": "PUSH1",
      "path": "215",
      "value": "0xA"
    },
    "3063": {
      "fn": "Strings.toString",
      "offset": [
        945,
        950
      ],
      "op": "DUP7",
      "path": "215"
    },
    "3064": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "PUSH2",
      "path": "215",
      "value": "0x1192"
    },
    "3067": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        945,
        955
      ],
      "op": "JUMP",
      "path": "215"
    },
    "3068": {
      "fn": "Strings.toString",
      "offset": [
        945,
        955
      ],
      "op": "JUMPDEST",
      "path": "215"
    },
    "3069": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "215",
      "value": "0xC07"
    },
    "3072": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "SWAP1",
      "path": "215"
    },
    "3073": {
      "fn": "Strings.toString",
      "offset": [
        932,
        934
      ],
      "op": "PUSH1",
      "path": "215",
      "value": "0x30"
    },
    "3075": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "PUSH2",
      "path": "215",
      "value": "0x10E3"
    },
    "3078": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        932,
        956
      ],
      "op": "JUMP",
      "path": "215"
    },
    "3079": {
      "fn": "Strings.toString",
      "offset": [
        932,
        956
      ],
      "op": "JUMPDEST",
      "path": "215"
    },
    "3080": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "PUSH1",
      "path": "215",
      "value": "0xF8"
    },
    "3082": {
      "fn": "Strings.toString",
      "offset": [
        919,
        958
      ],
      "op": "SHL",
      "path": "215"
    },
    "3083": {
      "fn": "Strings.toString",
      "offset": [
        902,
        908
      ],
      "op": "DUP2",
      "path": "215"
    },
    "3084": {
      "fn": "Strings.toString",
      "offset": [
        909,
        915
      ],
      "op": "DUP4",
      "path": "215"
    },
    "3085": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "215"
    },
    "3086": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "MLOAD",
      "path": "215"
    },
    "3087": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "DUP2",
      "path": "215"
    },
    "3088": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "LT",
      "path": "215"
    },
    "3089": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "215",
      "value": "0xC1C"
    },
    "3092": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPI",
      "path": "215"
    },
    "3093": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "215",
      "value": "0xC1C"
    },
    "3096": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH2",
      "path": "215",
      "value": "0x11A6"
    },
    "3099": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        902,
        916
      ],
      "op": "JUMP",
      "path": "215"
    },
    "3100": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "JUMPDEST",
      "path": "215"
    },
    "3101": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "PUSH1",
      "path": "215",
      "value": "0x20"
    },
    "3103": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "215"
    },
    "3104": {
      "fn": "Strings.toString",
      "offset": [
        902,
        916
      ],
      "op": "ADD",
      "path": "215"
    },
    "3105": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "215"
    },
    "3106": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3110": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3112": {
      "op": "SHL"
    },
    "3113": {
      "op": "SUB"
    },
    "3114": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "NOT",
      "path": "215"
    },
    "3115": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "AND",
      "path": "215"
    },
    "3116": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "215"
    },
    "3117": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "DUP2",
      "path": "215"
    },
    "3118": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "PUSH1",
      "path": "215",
      "value": "0x0"
    },
    "3120": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "BYTE",
      "path": "215"
    },
    "3121": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "SWAP1",
      "path": "215"
    },
    "3122": {
      "fn": "Strings.toString",
      "offset": [
        902,
        958
      ],
      "op": "MSTORE8",
      "path": "215"
    },
    "3123": {
      "op": "POP"
    },
    "3124": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "215",
      "statement": 45,
      "value": "0xC3E"
    },
    "3127": {
      "fn": "Strings.toString",
      "offset": [
        981,
        983
      ],
      "op": "PUSH1",
      "path": "215",
      "value": "0xA"
    },
    "3129": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "DUP7",
      "path": "215"
    },
    "3130": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "PUSH2",
      "path": "215",
      "value": "0x117E"
    },
    "3133": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        972,
        983
      ],
      "op": "JUMP",
      "path": "215"
    },
    "3134": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "JUMPDEST",
      "path": "215"
    },
    "3135": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "SWAP5",
      "path": "215"
    },
    "3136": {
      "fn": "Strings.toString",
      "offset": [
        972,
        983
      ],
      "op": "POP",
      "path": "215"
    },
    "3137": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "PUSH2",
      "path": "215",
      "value": "0xBDE"
    },
    "3140": {
      "fn": "Strings.toString",
      "offset": [
        844,
        994
      ],
      "op": "JUMP",
      "path": "215"
    },
    "3141": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        13113
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "3142": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12485,
        12489
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "3144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3150": {
      "op": "SHL"
    },
    "3151": {
      "op": "SUB"
    },
    "3152": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12505,
        12518
      ],
      "op": "DUP5",
      "path": "187"
    },
    "3153": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12505,
        12518
      ],
      "op": "AND",
      "path": "187"
    },
    "3154": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "206",
      "statement": 46
    },
    "3155": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1488
      ],
      "op": "ISZERO",
      "path": "206"
    },
    "3156": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12501,
        13107
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xD38"
    },
    "3159": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12501,
        13107
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "3160": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "3162": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "3163": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3168": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3170": {
      "op": "SHL"
    },
    "3171": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP2",
      "path": "187"
    },
    "3172": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "3173": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3177": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3179": {
      "op": "SHL"
    },
    "3180": {
      "op": "SUB"
    },
    "3181": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12576
      ],
      "op": "DUP6",
      "path": "187"
    },
    "3182": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12576
      ],
      "op": "AND",
      "path": "187"
    },
    "3183": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12576
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "3184": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12576
      ],
      "op": "PUSH4",
      "path": "187",
      "value": "0x150B7A02"
    },
    "3189": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12576
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "3190": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xC89"
    },
    "3193": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "3194": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "210"
    },
    "3195": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "210"
    },
    "3196": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12591,
        12595
      ],
      "op": "DUP10",
      "path": "187"
    },
    "3197": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12591,
        12595
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "3198": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12597,
        12604
      ],
      "op": "DUP9",
      "path": "187"
    },
    "3199": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12597,
        12604
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "3200": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12606,
        12611
      ],
      "op": "DUP9",
      "path": "187"
    },
    "3201": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12606,
        12611
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "3202": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "3204": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "ADD",
      "path": "187"
    },
    "3205": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x11BC"
    },
    "3208": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12540,
        12612
      ],
      "op": "JUMP",
      "path": "187"
    },
    "3209": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "3210": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "3212": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "3214": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "3215": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP1",
      "path": "187"
    },
    "3216": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP4",
      "path": "187"
    },
    "3217": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "SUB",
      "path": "187"
    },
    "3218": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP2",
      "path": "187"
    },
    "3219": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "3221": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP8",
      "path": "187"
    },
    "3222": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "GAS",
      "path": "187"
    },
    "3223": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "CALL",
      "path": "187"
    },
    "3224": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "SWAP3",
      "path": "187"
    },
    "3225": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "POP",
      "path": "187"
    },
    "3226": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "POP",
      "path": "187"
    },
    "3227": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "POP",
      "path": "187"
    },
    "3228": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP1",
      "path": "187"
    },
    "3229": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "ISZERO",
      "path": "187"
    },
    "3230": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xCC4"
    },
    "3233": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "3234": {
      "op": "POP"
    },
    "3235": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "3237": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP1",
      "path": "187"
    },
    "3238": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "3239": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x1F"
    },
    "3241": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "RETURNDATASIZE",
      "path": "187"
    },
    "3242": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "3243": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP2",
      "path": "187"
    },
    "3244": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "ADD",
      "path": "187"
    },
    "3245": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3247": {
      "op": "NOT"
    },
    "3248": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "AND",
      "path": "187"
    },
    "3249": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP3",
      "path": "187"
    },
    "3250": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "ADD",
      "path": "187"
    },
    "3251": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "3252": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "SWAP3",
      "path": "187"
    },
    "3253": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "3254": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xCC1"
    },
    "3257": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "3258": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "DUP2",
      "path": "187"
    },
    "3259": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "ADD",
      "path": "187"
    },
    "3260": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "3261": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x11F9"
    },
    "3264": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12540,
        12612
      ],
      "op": "JUMP",
      "path": "187"
    },
    "3265": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "3266": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x1"
    },
    "3268": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12540,
        12612
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "3269": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xD1E"
    },
    "3272": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "3273": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "RETURNDATASIZE",
      "path": "187"
    },
    "3274": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "DUP1",
      "path": "187"
    },
    "3275": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "DUP1",
      "path": "187"
    },
    "3276": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "ISZERO",
      "path": "187"
    },
    "3277": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xCF2"
    },
    "3280": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "3281": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "3283": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "3284": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "3285": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "POP",
      "path": "187"
    },
    "3286": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x1F"
    },
    "3288": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "NOT",
      "path": "187"
    },
    "3289": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x3F"
    },
    "3291": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "RETURNDATASIZE",
      "path": "187"
    },
    "3292": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "ADD",
      "path": "187"
    },
    "3293": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "AND",
      "path": "187"
    },
    "3294": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "DUP3",
      "path": "187"
    },
    "3295": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "ADD",
      "path": "187"
    },
    "3296": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x40"
    },
    "3298": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "3299": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "RETURNDATASIZE",
      "path": "187"
    },
    "3300": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "DUP3",
      "path": "187"
    },
    "3301": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "3302": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "RETURNDATASIZE",
      "path": "187"
    },
    "3303": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x0"
    },
    "3305": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "3307": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "DUP5",
      "path": "187"
    },
    "3308": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "ADD",
      "path": "187"
    },
    "3309": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "RETURNDATACOPY",
      "path": "187"
    },
    "3310": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xCF7"
    },
    "3313": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "JUMP",
      "path": "187"
    },
    "3314": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "3315": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x60"
    },
    "3317": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "SWAP2",
      "path": "187"
    },
    "3318": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "POP",
      "path": "187"
    },
    "3319": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "3320": {
      "op": "POP"
    },
    "3321": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12779,
        12792
      ],
      "op": "DUP1",
      "path": "187"
    },
    "3322": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12779,
        12792
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "3323": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12775,
        13041
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0xD16"
    },
    "3326": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12775,
        13041
      ],
      "op": "JUMPI",
      "path": "187"
    },
    "3327": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "PUSH1",
      "path": "187",
      "statement": 47,
      "value": "0x40"
    },
    "3329": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "3330": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3334": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3336": {
      "op": "SHL"
    },
    "3337": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "DUP2",
      "path": "187"
    },
    "3338": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "MSTORE",
      "path": "187"
    },
    "3339": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x4"
    },
    "3341": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "ADD",
      "path": "187"
    },
    "3342": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x381"
    },
    "3345": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "3346": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12821,
        12881
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x10FB"
    },
    "3349": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        12821,
        12881
      ],
      "op": "JUMP",
      "path": "187"
    },
    "3350": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12775,
        13041
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "3351": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12993,
        12999
      ],
      "op": "DUP1",
      "path": "187"
    },
    "3352": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12987,
        13000
      ],
      "op": "MLOAD",
      "path": "187"
    },
    "3353": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12978,
        12984
      ],
      "op": "DUP2",
      "path": "187"
    },
    "3354": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12974,
        12976
      ],
      "op": "PUSH1",
      "path": "187",
      "value": "0x20"
    },
    "3356": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12970,
        12985
      ],
      "op": "ADD",
      "path": "187"
    },
    "3357": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12963,
        13001
      ],
      "op": "REVERT",
      "path": "187"
    },
    "3358": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12536,
        13055
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3365": {
      "op": "SHL"
    },
    "3366": {
      "op": "SUB"
    },
    "3367": {
      "op": "NOT"
    },
    "3368": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12662,
        12713
      ],
      "op": "AND",
      "path": "187",
      "statement": 48
    },
    "3369": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3374": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3376": {
      "op": "SHL"
    },
    "3377": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12662,
        12713
      ],
      "op": "EQ",
      "path": "187"
    },
    "3378": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12662,
        12713
      ],
      "op": "SWAP1",
      "path": "187"
    },
    "3379": {
      "op": "POP"
    },
    "3380": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12655,
        12713
      ],
      "op": "PUSH2",
      "path": "187",
      "value": "0x8A1"
    },
    "3383": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12655,
        12713
      ],
      "op": "JUMP",
      "path": "187"
    },
    "3384": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12501,
        13107
      ],
      "op": "JUMPDEST",
      "path": "187"
    },
    "3385": {
      "op": "POP"
    },
    "3386": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        13092,
        13096
      ],
      "op": "PUSH1",
      "path": "187",
      "statement": 49,
      "value": "0x1"
    },
    "3388": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        13113
      ],
      "op": "SWAP5",
      "path": "187"
    },
    "3389": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        13113
      ],
      "op": "SWAP4",
      "path": "187"
    },
    "3390": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        13113
      ],
      "op": "POP",
      "path": "187"
    },
    "3391": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        13113
      ],
      "op": "POP",
      "path": "187"
    },
    "3392": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        13113
      ],
      "op": "POP",
      "path": "187"
    },
    "3393": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        12335,
        13113
      ],
      "op": "POP",
      "path": "187"
    },
    "3394": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        12335,
        13113
      ],
      "op": "JUMP",
      "path": "187"
    },
    "3395": {
      "op": "JUMPDEST"
    },
    "3396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3400": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3402": {
      "op": "SHL"
    },
    "3403": {
      "op": "SUB"
    },
    "3404": {
      "op": "NOT"
    },
    "3405": {
      "op": "DUP2"
    },
    "3406": {
      "op": "AND"
    },
    "3407": {
      "op": "DUP2"
    },
    "3408": {
      "op": "EQ"
    },
    "3409": {
      "op": "PUSH2",
      "value": "0xD59"
    },
    "3412": {
      "op": "JUMPI"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3415": {
      "op": "DUP1"
    },
    "3416": {
      "op": "REVERT"
    },
    "3417": {
      "op": "JUMPDEST"
    },
    "3418": {
      "op": "POP"
    },
    "3419": {
      "jump": "o",
      "op": "JUMP"
    },
    "3420": {
      "op": "JUMPDEST"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3425": {
      "op": "DUP3"
    },
    "3426": {
      "op": "DUP5"
    },
    "3427": {
      "op": "SUB"
    },
    "3428": {
      "op": "SLT"
    },
    "3429": {
      "op": "ISZERO"
    },
    "3430": {
      "op": "PUSH2",
      "value": "0xD6E"
    },
    "3433": {
      "op": "JUMPI"
    },
    "3434": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3436": {
      "op": "DUP1"
    },
    "3437": {
      "op": "REVERT"
    },
    "3438": {
      "op": "JUMPDEST"
    },
    "3439": {
      "op": "DUP2"
    },
    "3440": {
      "op": "CALLDATALOAD"
    },
    "3441": {
      "op": "PUSH2",
      "value": "0x73D"
    },
    "3444": {
      "op": "DUP2"
    },
    "3445": {
      "op": "PUSH2",
      "value": "0xD43"
    },
    "3448": {
      "jump": "i",
      "op": "JUMP"
    },
    "3449": {
      "op": "JUMPDEST"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3452": {
      "op": "JUMPDEST"
    },
    "3453": {
      "op": "DUP4"
    },
    "3454": {
      "op": "DUP2"
    },
    "3455": {
      "op": "LT"
    },
    "3456": {
      "op": "ISZERO"
    },
    "3457": {
      "op": "PUSH2",
      "value": "0xD94"
    },
    "3460": {
      "op": "JUMPI"
    },
    "3461": {
      "op": "DUP2"
    },
    "3462": {
      "op": "DUP2"
    },
    "3463": {
      "op": "ADD"
    },
    "3464": {
      "op": "MLOAD"
    },
    "3465": {
      "op": "DUP4"
    },
    "3466": {
      "op": "DUP3"
    },
    "3467": {
      "op": "ADD"
    },
    "3468": {
      "op": "MSTORE"
    },
    "3469": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3471": {
      "op": "ADD"
    },
    "3472": {
      "op": "PUSH2",
      "value": "0xD7C"
    },
    "3475": {
      "op": "JUMP"
    },
    "3476": {
      "op": "JUMPDEST"
    },
    "3477": {
      "op": "DUP4"
    },
    "3478": {
      "op": "DUP2"
    },
    "3479": {
      "op": "GT"
    },
    "3480": {
      "op": "ISZERO"
    },
    "3481": {
      "op": "PUSH2",
      "value": "0x656"
    },
    "3484": {
      "op": "JUMPI"
    },
    "3485": {
      "op": "POP"
    },
    "3486": {
      "op": "POP"
    },
    "3487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3489": {
      "op": "SWAP2"
    },
    "3490": {
      "op": "ADD"
    },
    "3491": {
      "op": "MSTORE"
    },
    "3492": {
      "jump": "o",
      "op": "JUMP"
    },
    "3493": {
      "op": "JUMPDEST"
    },
    "3494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3496": {
      "op": "DUP2"
    },
    "3497": {
      "op": "MLOAD"
    },
    "3498": {
      "op": "DUP1"
    },
    "3499": {
      "op": "DUP5"
    },
    "3500": {
      "op": "MSTORE"
    },
    "3501": {
      "op": "PUSH2",
      "value": "0xDBD"
    },
    "3504": {
      "op": "DUP2"
    },
    "3505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3507": {
      "op": "DUP7"
    },
    "3508": {
      "op": "ADD"
    },
    "3509": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3511": {
      "op": "DUP7"
    },
    "3512": {
      "op": "ADD"
    },
    "3513": {
      "op": "PUSH2",
      "value": "0xD79"
    },
    "3516": {
      "jump": "i",
      "op": "JUMP"
    },
    "3517": {
      "op": "JUMPDEST"
    },
    "3518": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3520": {
      "op": "ADD"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3523": {
      "op": "NOT"
    },
    "3524": {
      "op": "AND"
    },
    "3525": {
      "op": "SWAP3"
    },
    "3526": {
      "op": "SWAP1"
    },
    "3527": {
      "op": "SWAP3"
    },
    "3528": {
      "op": "ADD"
    },
    "3529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3531": {
      "op": "ADD"
    },
    "3532": {
      "op": "SWAP3"
    },
    "3533": {
      "op": "SWAP2"
    },
    "3534": {
      "op": "POP"
    },
    "3535": {
      "op": "POP"
    },
    "3536": {
      "jump": "o",
      "op": "JUMP"
    },
    "3537": {
      "op": "JUMPDEST"
    },
    "3538": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3540": {
      "op": "DUP2"
    },
    "3541": {
      "op": "MSTORE"
    },
    "3542": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3544": {
      "op": "PUSH2",
      "value": "0x73D"
    },
    "3547": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3549": {
      "op": "DUP4"
    },
    "3550": {
      "op": "ADD"
    },
    "3551": {
      "op": "DUP5"
    },
    "3552": {
      "op": "PUSH2",
      "value": "0xDA5"
    },
    "3555": {
      "jump": "i",
      "op": "JUMP"
    },
    "3556": {
      "op": "JUMPDEST"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3561": {
      "op": "DUP3"
    },
    "3562": {
      "op": "DUP5"
    },
    "3563": {
      "op": "SUB"
    },
    "3564": {
      "op": "SLT"
    },
    "3565": {
      "op": "ISZERO"
    },
    "3566": {
      "op": "PUSH2",
      "value": "0xDF6"
    },
    "3569": {
      "op": "JUMPI"
    },
    "3570": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3572": {
      "op": "DUP1"
    },
    "3573": {
      "op": "REVERT"
    },
    "3574": {
      "op": "JUMPDEST"
    },
    "3575": {
      "op": "POP"
    },
    "3576": {
      "op": "CALLDATALOAD"
    },
    "3577": {
      "op": "SWAP2"
    },
    "3578": {
      "op": "SWAP1"
    },
    "3579": {
      "op": "POP"
    },
    "3580": {
      "jump": "o",
      "op": "JUMP"
    },
    "3581": {
      "op": "JUMPDEST"
    },
    "3582": {
      "op": "DUP1"
    },
    "3583": {
      "op": "CALLDATALOAD"
    },
    "3584": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3586": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3590": {
      "op": "SHL"
    },
    "3591": {
      "op": "SUB"
    },
    "3592": {
      "op": "DUP2"
    },
    "3593": {
      "op": "AND"
    },
    "3594": {
      "op": "DUP2"
    },
    "3595": {
      "op": "EQ"
    },
    "3596": {
      "op": "PUSH2",
      "value": "0xE14"
    },
    "3599": {
      "op": "JUMPI"
    },
    "3600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3602": {
      "op": "DUP1"
    },
    "3603": {
      "op": "REVERT"
    },
    "3604": {
      "op": "JUMPDEST"
    },
    "3605": {
      "op": "SWAP2"
    },
    "3606": {
      "op": "SWAP1"
    },
    "3607": {
      "op": "POP"
    },
    "3608": {
      "jump": "o",
      "op": "JUMP"
    },
    "3609": {
      "op": "JUMPDEST"
    },
    "3610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3612": {
      "op": "DUP1"
    },
    "3613": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3615": {
      "op": "DUP4"
    },
    "3616": {
      "op": "DUP6"
    },
    "3617": {
      "op": "SUB"
    },
    "3618": {
      "op": "SLT"
    },
    "3619": {
      "op": "ISZERO"
    },
    "3620": {
      "op": "PUSH2",
      "value": "0xE2C"
    },
    "3623": {
      "op": "JUMPI"
    },
    "3624": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3626": {
      "op": "DUP1"
    },
    "3627": {
      "op": "REVERT"
    },
    "3628": {
      "op": "JUMPDEST"
    },
    "3629": {
      "op": "PUSH2",
      "value": "0xE35"
    },
    "3632": {
      "op": "DUP4"
    },
    "3633": {
      "op": "PUSH2",
      "value": "0xDFD"
    },
    "3636": {
      "jump": "i",
      "op": "JUMP"
    },
    "3637": {
      "op": "JUMPDEST"
    },
    "3638": {
      "op": "SWAP5"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3641": {
      "op": "SWAP4"
    },
    "3642": {
      "op": "SWAP1"
    },
    "3643": {
      "op": "SWAP4"
    },
    "3644": {
      "op": "ADD"
    },
    "3645": {
      "op": "CALLDATALOAD"
    },
    "3646": {
      "op": "SWAP4"
    },
    "3647": {
      "op": "POP"
    },
    "3648": {
      "op": "POP"
    },
    "3649": {
      "op": "POP"
    },
    "3650": {
      "jump": "o",
      "op": "JUMP"
    },
    "3651": {
      "op": "JUMPDEST"
    },
    "3652": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3654": {
      "op": "DUP1"
    },
    "3655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3657": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3659": {
      "op": "DUP5"
    },
    "3660": {
      "op": "DUP7"
    },
    "3661": {
      "op": "SUB"
    },
    "3662": {
      "op": "SLT"
    },
    "3663": {
      "op": "ISZERO"
    },
    "3664": {
      "op": "PUSH2",
      "value": "0xE58"
    },
    "3667": {
      "op": "JUMPI"
    },
    "3668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3670": {
      "op": "DUP1"
    },
    "3671": {
      "op": "REVERT"
    },
    "3672": {
      "op": "JUMPDEST"
    },
    "3673": {
      "op": "PUSH2",
      "value": "0xE61"
    },
    "3676": {
      "op": "DUP5"
    },
    "3677": {
      "op": "PUSH2",
      "value": "0xDFD"
    },
    "3680": {
      "jump": "i",
      "op": "JUMP"
    },
    "3681": {
      "op": "JUMPDEST"
    },
    "3682": {
      "op": "SWAP3"
    },
    "3683": {
      "op": "POP"
    },
    "3684": {
      "op": "PUSH2",
      "value": "0xE6F"
    },
    "3687": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3689": {
      "op": "DUP6"
    },
    "3690": {
      "op": "ADD"
    },
    "3691": {
      "op": "PUSH2",
      "value": "0xDFD"
    },
    "3694": {
      "jump": "i",
      "op": "JUMP"
    },
    "3695": {
      "op": "JUMPDEST"
    },
    "3696": {
      "op": "SWAP2"
    },
    "3697": {
      "op": "POP"
    },
    "3698": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3700": {
      "op": "DUP5"
    },
    "3701": {
      "op": "ADD"
    },
    "3702": {
      "op": "CALLDATALOAD"
    },
    "3703": {
      "op": "SWAP1"
    },
    "3704": {
      "op": "POP"
    },
    "3705": {
      "op": "SWAP3"
    },
    "3706": {
      "op": "POP"
    },
    "3707": {
      "op": "SWAP3"
    },
    "3708": {
      "op": "POP"
    },
    "3709": {
      "op": "SWAP3"
    },
    "3710": {
      "jump": "o",
      "op": "JUMP"
    },
    "3711": {
      "op": "JUMPDEST"
    },
    "3712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3714": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3716": {
      "op": "DUP3"
    },
    "3717": {
      "op": "DUP5"
    },
    "3718": {
      "op": "SUB"
    },
    "3719": {
      "op": "SLT"
    },
    "3720": {
      "op": "ISZERO"
    },
    "3721": {
      "op": "PUSH2",
      "value": "0xE91"
    },
    "3724": {
      "op": "JUMPI"
    },
    "3725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3727": {
      "op": "DUP1"
    },
    "3728": {
      "op": "REVERT"
    },
    "3729": {
      "op": "JUMPDEST"
    },
    "3730": {
      "op": "PUSH2",
      "value": "0x73D"
    },
    "3733": {
      "op": "DUP3"
    },
    "3734": {
      "op": "PUSH2",
      "value": "0xDFD"
    },
    "3737": {
      "jump": "i",
      "op": "JUMP"
    },
    "3738": {
      "op": "JUMPDEST"
    },
    "3739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3741": {
      "op": "DUP1"
    },
    "3742": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3744": {
      "op": "DUP4"
    },
    "3745": {
      "op": "DUP6"
    },
    "3746": {
      "op": "SUB"
    },
    "3747": {
      "op": "SLT"
    },
    "3748": {
      "op": "ISZERO"
    },
    "3749": {
      "op": "PUSH2",
      "value": "0xEAD"
    },
    "3752": {
      "op": "JUMPI"
    },
    "3753": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3755": {
      "op": "DUP1"
    },
    "3756": {
      "op": "REVERT"
    },
    "3757": {
      "op": "JUMPDEST"
    },
    "3758": {
      "op": "PUSH2",
      "value": "0xEB6"
    },
    "3761": {
      "op": "DUP4"
    },
    "3762": {
      "op": "PUSH2",
      "value": "0xDFD"
    },
    "3765": {
      "jump": "i",
      "op": "JUMP"
    },
    "3766": {
      "op": "JUMPDEST"
    },
    "3767": {
      "op": "SWAP2"
    },
    "3768": {
      "op": "POP"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3771": {
      "op": "DUP4"
    },
    "3772": {
      "op": "ADD"
    },
    "3773": {
      "op": "CALLDATALOAD"
    },
    "3774": {
      "op": "DUP1"
    },
    "3775": {
      "op": "ISZERO"
    },
    "3776": {
      "op": "ISZERO"
    },
    "3777": {
      "op": "DUP2"
    },
    "3778": {
      "op": "EQ"
    },
    "3779": {
      "op": "PUSH2",
      "value": "0xECB"
    },
    "3782": {
      "op": "JUMPI"
    },
    "3783": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3785": {
      "op": "DUP1"
    },
    "3786": {
      "op": "REVERT"
    },
    "3787": {
      "op": "JUMPDEST"
    },
    "3788": {
      "op": "DUP1"
    },
    "3789": {
      "op": "SWAP2"
    },
    "3790": {
      "op": "POP"
    },
    "3791": {
      "op": "POP"
    },
    "3792": {
      "op": "SWAP3"
    },
    "3793": {
      "op": "POP"
    },
    "3794": {
      "op": "SWAP3"
    },
    "3795": {
      "op": "SWAP1"
    },
    "3796": {
      "op": "POP"
    },
    "3797": {
      "jump": "o",
      "op": "JUMP"
    },
    "3798": {
      "op": "JUMPDEST"
    },
    "3799": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3804": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3806": {
      "op": "SHL"
    },
    "3807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3809": {
      "op": "MSTORE"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3812": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3814": {
      "op": "MSTORE"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3819": {
      "op": "REVERT"
    },
    "3820": {
      "op": "JUMPDEST"
    },
    "3821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3823": {
      "op": "DUP1"
    },
    "3824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3826": {
      "op": "DUP1"
    },
    "3827": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3829": {
      "op": "DUP6"
    },
    "3830": {
      "op": "DUP8"
    },
    "3831": {
      "op": "SUB"
    },
    "3832": {
      "op": "SLT"
    },
    "3833": {
      "op": "ISZERO"
    },
    "3834": {
      "op": "PUSH2",
      "value": "0xF02"
    },
    "3837": {
      "op": "JUMPI"
    },
    "3838": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3840": {
      "op": "DUP1"
    },
    "3841": {
      "op": "REVERT"
    },
    "3842": {
      "op": "JUMPDEST"
    },
    "3843": {
      "op": "PUSH2",
      "value": "0xF0B"
    },
    "3846": {
      "op": "DUP6"
    },
    "3847": {
      "op": "PUSH2",
      "value": "0xDFD"
    },
    "3850": {
      "jump": "i",
      "op": "JUMP"
    },
    "3851": {
      "op": "JUMPDEST"
    },
    "3852": {
      "op": "SWAP4"
    },
    "3853": {
      "op": "POP"
    },
    "3854": {
      "op": "PUSH2",
      "value": "0xF19"
    },
    "3857": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3859": {
      "op": "DUP7"
    },
    "3860": {
      "op": "ADD"
    },
    "3861": {
      "op": "PUSH2",
      "value": "0xDFD"
    },
    "3864": {
      "jump": "i",
      "op": "JUMP"
    },
    "3865": {
      "op": "JUMPDEST"
    },
    "3866": {
      "op": "SWAP3"
    },
    "3867": {
      "op": "POP"
    },
    "3868": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3870": {
      "op": "DUP6"
    },
    "3871": {
      "op": "ADD"
    },
    "3872": {
      "op": "CALLDATALOAD"
    },
    "3873": {
      "op": "SWAP2"
    },
    "3874": {
      "op": "POP"
    },
    "3875": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3877": {
      "op": "DUP6"
    },
    "3878": {
      "op": "ADD"
    },
    "3879": {
      "op": "CALLDATALOAD"
    },
    "3880": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3889": {
      "op": "DUP1"
    },
    "3890": {
      "op": "DUP3"
    },
    "3891": {
      "op": "GT"
    },
    "3892": {
      "op": "ISZERO"
    },
    "3893": {
      "op": "PUSH2",
      "value": "0xF3D"
    },
    "3896": {
      "op": "JUMPI"
    },
    "3897": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3899": {
      "op": "DUP1"
    },
    "3900": {
      "op": "REVERT"
    },
    "3901": {
      "op": "JUMPDEST"
    },
    "3902": {
      "op": "DUP2"
    },
    "3903": {
      "op": "DUP8"
    },
    "3904": {
      "op": "ADD"
    },
    "3905": {
      "op": "SWAP2"
    },
    "3906": {
      "op": "POP"
    },
    "3907": {
      "op": "DUP8"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3910": {
      "op": "DUP4"
    },
    "3911": {
      "op": "ADD"
    },
    "3912": {
      "op": "SLT"
    },
    "3913": {
      "op": "PUSH2",
      "value": "0xF51"
    },
    "3916": {
      "op": "JUMPI"
    },
    "3917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3919": {
      "op": "DUP1"
    },
    "3920": {
      "op": "REVERT"
    },
    "3921": {
      "op": "JUMPDEST"
    },
    "3922": {
      "op": "DUP2"
    },
    "3923": {
      "op": "CALLDATALOAD"
    },
    "3924": {
      "op": "DUP2"
    },
    "3925": {
      "op": "DUP2"
    },
    "3926": {
      "op": "GT"
    },
    "3927": {
      "op": "ISZERO"
    },
    "3928": {
      "op": "PUSH2",
      "value": "0xF63"
    },
    "3931": {
      "op": "JUMPI"
    },
    "3932": {
      "op": "PUSH2",
      "value": "0xF63"
    },
    "3935": {
      "op": "PUSH2",
      "value": "0xED6"
    },
    "3938": {
      "jump": "i",
      "op": "JUMP"
    },
    "3939": {
      "op": "JUMPDEST"
    },
    "3940": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3942": {
      "op": "MLOAD"
    },
    "3943": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3945": {
      "op": "DUP3"
    },
    "3946": {
      "op": "ADD"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3949": {
      "op": "NOT"
    },
    "3950": {
      "op": "SWAP1"
    },
    "3951": {
      "op": "DUP2"
    },
    "3952": {
      "op": "AND"
    },
    "3953": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3955": {
      "op": "ADD"
    },
    "3956": {
      "op": "AND"
    },
    "3957": {
      "op": "DUP2"
    },
    "3958": {
      "op": "ADD"
    },
    "3959": {
      "op": "SWAP1"
    },
    "3960": {
      "op": "DUP4"
    },
    "3961": {
      "op": "DUP3"
    },
    "3962": {
      "op": "GT"
    },
    "3963": {
      "op": "DUP2"
    },
    "3964": {
      "op": "DUP4"
    },
    "3965": {
      "op": "LT"
    },
    "3966": {
      "op": "OR"
    },
    "3967": {
      "op": "ISZERO"
    },
    "3968": {
      "op": "PUSH2",
      "value": "0xF8B"
    },
    "3971": {
      "op": "JUMPI"
    },
    "3972": {
      "op": "PUSH2",
      "value": "0xF8B"
    },
    "3975": {
      "op": "PUSH2",
      "value": "0xED6"
    },
    "3978": {
      "jump": "i",
      "op": "JUMP"
    },
    "3979": {
      "op": "JUMPDEST"
    },
    "3980": {
      "op": "DUP2"
    },
    "3981": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3983": {
      "op": "MSTORE"
    },
    "3984": {
      "op": "DUP3"
    },
    "3985": {
      "op": "DUP2"
    },
    "3986": {
      "op": "MSTORE"
    },
    "3987": {
      "op": "DUP11"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3990": {
      "op": "DUP5"
    },
    "3991": {
      "op": "DUP8"
    },
    "3992": {
      "op": "ADD"
    },
    "3993": {
      "op": "ADD"
    },
    "3994": {
      "op": "GT"
    },
    "3995": {
      "op": "ISZERO"
    },
    "3996": {
      "op": "PUSH2",
      "value": "0xFA4"
    },
    "3999": {
      "op": "JUMPI"
    },
    "4000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4002": {
      "op": "DUP1"
    },
    "4003": {
      "op": "REVERT"
    },
    "4004": {
      "op": "JUMPDEST"
    },
    "4005": {
      "op": "DUP3"
    },
    "4006": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4008": {
      "op": "DUP7"
    },
    "4009": {
      "op": "ADD"
    },
    "4010": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4012": {
      "op": "DUP4"
    },
    "4013": {
      "op": "ADD"
    },
    "4014": {
      "op": "CALLDATACOPY"
    },
    "4015": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4017": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4019": {
      "op": "DUP5"
    },
    "4020": {
      "op": "DUP4"
    },
    "4021": {
      "op": "ADD"
    },
    "4022": {
      "op": "ADD"
    },
    "4023": {
      "op": "MSTORE"
    },
    "4024": {
      "op": "DUP1"
    },
    "4025": {
      "op": "SWAP6"
    },
    "4026": {
      "op": "POP"
    },
    "4027": {
      "op": "POP"
    },
    "4028": {
      "op": "POP"
    },
    "4029": {
      "op": "POP"
    },
    "4030": {
      "op": "POP"
    },
    "4031": {
      "op": "POP"
    },
    "4032": {
      "op": "SWAP3"
    },
    "4033": {
      "op": "SWAP6"
    },
    "4034": {
      "op": "SWAP2"
    },
    "4035": {
      "op": "SWAP5"
    },
    "4036": {
      "op": "POP"
    },
    "4037": {
      "op": "SWAP3"
    },
    "4038": {
      "op": "POP"
    },
    "4039": {
      "jump": "o",
      "op": "JUMP"
    },
    "4040": {
      "op": "JUMPDEST"
    },
    "4041": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4043": {
      "op": "DUP1"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4046": {
      "op": "DUP4"
    },
    "4047": {
      "op": "DUP6"
    },
    "4048": {
      "op": "SUB"
    },
    "4049": {
      "op": "SLT"
    },
    "4050": {
      "op": "ISZERO"
    },
    "4051": {
      "op": "PUSH2",
      "value": "0xFDB"
    },
    "4054": {
      "op": "JUMPI"
    },
    "4055": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4057": {
      "op": "DUP1"
    },
    "4058": {
      "op": "REVERT"
    },
    "4059": {
      "op": "JUMPDEST"
    },
    "4060": {
      "op": "PUSH2",
      "value": "0xFE4"
    },
    "4063": {
      "op": "DUP4"
    },
    "4064": {
      "op": "PUSH2",
      "value": "0xDFD"
    },
    "4067": {
      "jump": "i",
      "op": "JUMP"
    },
    "4068": {
      "op": "JUMPDEST"
    },
    "4069": {
      "op": "SWAP2"
    },
    "4070": {
      "op": "POP"
    },
    "4071": {
      "op": "PUSH2",
      "value": "0xFF2"
    },
    "4074": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4076": {
      "op": "DUP5"
    },
    "4077": {
      "op": "ADD"
    },
    "4078": {
      "op": "PUSH2",
      "value": "0xDFD"
    },
    "4081": {
      "jump": "i",
      "op": "JUMP"
    },
    "4082": {
      "op": "JUMPDEST"
    },
    "4083": {
      "op": "SWAP1"
    },
    "4084": {
      "op": "POP"
    },
    "4085": {
      "op": "SWAP3"
    },
    "4086": {
      "op": "POP"
    },
    "4087": {
      "op": "SWAP3"
    },
    "4088": {
      "op": "SWAP1"
    },
    "4089": {
      "op": "POP"
    },
    "4090": {
      "jump": "o",
      "op": "JUMP"
    },
    "4091": {
      "op": "JUMPDEST"
    },
    "4092": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4094": {
      "op": "DUP2"
    },
    "4095": {
      "op": "DUP2"
    },
    "4096": {
      "op": "SHR"
    },
    "4097": {
      "op": "SWAP1"
    },
    "4098": {
      "op": "DUP3"
    },
    "4099": {
      "op": "AND"
    },
    "4100": {
      "op": "DUP1"
    },
    "4101": {
      "op": "PUSH2",
      "value": "0x100F"
    },
    "4104": {
      "op": "JUMPI"
    },
    "4105": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4107": {
      "op": "DUP3"
    },
    "4108": {
      "op": "AND"
    },
    "4109": {
      "op": "SWAP2"
    },
    "4110": {
      "op": "POP"
    },
    "4111": {
      "op": "JUMPDEST"
    },
    "4112": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4114": {
      "op": "DUP3"
    },
    "4115": {
      "op": "LT"
    },
    "4116": {
      "op": "DUP2"
    },
    "4117": {
      "op": "EQ"
    },
    "4118": {
      "op": "ISZERO"
    },
    "4119": {
      "op": "PUSH2",
      "value": "0x1030"
    },
    "4122": {
      "op": "JUMPI"
    },
    "4123": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4128": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4130": {
      "op": "SHL"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4133": {
      "op": "MSTORE"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4138": {
      "op": "MSTORE"
    },
    "4139": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4143": {
      "op": "REVERT"
    },
    "4144": {
      "op": "JUMPDEST"
    },
    "4145": {
      "op": "POP"
    },
    "4146": {
      "op": "SWAP2"
    },
    "4147": {
      "op": "SWAP1"
    },
    "4148": {
      "op": "POP"
    },
    "4149": {
      "jump": "o",
      "op": "JUMP"
    },
    "4150": {
      "op": "JUMPDEST"
    },
    "4151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4153": {
      "op": "DUP1"
    },
    "4154": {
      "op": "DUP3"
    },
    "4155": {
      "op": "MSTORE"
    },
    "4156": {
      "op": "PUSH1",
      "value": "0x31"
    },
    "4158": {
      "op": "SWAP1"
    },
    "4159": {
      "op": "DUP3"
    },
    "4160": {
      "op": "ADD"
    },
    "4161": {
      "op": "MSTORE"
    },
    "4162": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F"
    },
    "4195": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4197": {
      "op": "DUP3"
    },
    "4198": {
      "op": "ADD"
    },
    "4199": {
      "op": "MSTORE"
    },
    "4200": {
      "op": "PUSH17",
      "value": "0x1DDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "4218": {
      "op": "PUSH1",
      "value": "0x7A"
    },
    "4220": {
      "op": "SHL"
    },
    "4221": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4223": {
      "op": "DUP3"
    },
    "4224": {
      "op": "ADD"
    },
    "4225": {
      "op": "MSTORE"
    },
    "4226": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4228": {
      "op": "ADD"
    },
    "4229": {
      "op": "SWAP1"
    },
    "4230": {
      "jump": "o",
      "op": "JUMP"
    },
    "4231": {
      "op": "JUMPDEST"
    },
    "4232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4234": {
      "op": "DUP4"
    },
    "4235": {
      "op": "MLOAD"
    },
    "4236": {
      "op": "PUSH2",
      "value": "0x1099"
    },
    "4239": {
      "op": "DUP2"
    },
    "4240": {
      "op": "DUP5"
    },
    "4241": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4243": {
      "op": "DUP9"
    },
    "4244": {
      "op": "ADD"
    },
    "4245": {
      "op": "PUSH2",
      "value": "0xD79"
    },
    "4248": {
      "jump": "i",
      "op": "JUMP"
    },
    "4249": {
      "op": "JUMPDEST"
    },
    "4250": {
      "op": "DUP4"
    },
    "4251": {
      "op": "MLOAD"
    },
    "4252": {
      "op": "SWAP1"
    },
    "4253": {
      "op": "DUP4"
    },
    "4254": {
      "op": "ADD"
    },
    "4255": {
      "op": "SWAP1"
    },
    "4256": {
      "op": "PUSH2",
      "value": "0x10AD"
    },
    "4259": {
      "op": "DUP2"
    },
    "4260": {
      "op": "DUP4"
    },
    "4261": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4263": {
      "op": "DUP9"
    },
    "4264": {
      "op": "ADD"
    },
    "4265": {
      "op": "PUSH2",
      "value": "0xD79"
    },
    "4268": {
      "jump": "i",
      "op": "JUMP"
    },
    "4269": {
      "op": "JUMPDEST"
    },
    "4270": {
      "op": "ADD"
    },
    "4271": {
      "op": "SWAP5"
    },
    "4272": {
      "op": "SWAP4"
    },
    "4273": {
      "op": "POP"
    },
    "4274": {
      "op": "POP"
    },
    "4275": {
      "op": "POP"
    },
    "4276": {
      "op": "POP"
    },
    "4277": {
      "jump": "o",
      "op": "JUMP"
    },
    "4278": {
      "op": "JUMPDEST"
    },
    "4279": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4286": {
      "op": "SHL"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4289": {
      "op": "MSTORE"
    },
    "4290": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4292": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4294": {
      "op": "MSTORE"
    },
    "4295": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4297": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4299": {
      "op": "REVERT"
    },
    "4300": {
      "op": "JUMPDEST"
    },
    "4301": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4303": {
      "op": "DUP3"
    },
    "4304": {
      "op": "DUP3"
    },
    "4305": {
      "op": "LT"
    },
    "4306": {
      "op": "ISZERO"
    },
    "4307": {
      "op": "PUSH2",
      "value": "0x10DE"
    },
    "4310": {
      "op": "JUMPI"
    },
    "4311": {
      "op": "PUSH2",
      "value": "0x10DE"
    },
    "4314": {
      "op": "PUSH2",
      "value": "0x10B6"
    },
    "4317": {
      "jump": "i",
      "op": "JUMP"
    },
    "4318": {
      "op": "JUMPDEST"
    },
    "4319": {
      "op": "POP"
    },
    "4320": {
      "op": "SUB"
    },
    "4321": {
      "op": "SWAP1"
    },
    "4322": {
      "jump": "o",
      "op": "JUMP"
    },
    "4323": {
      "op": "JUMPDEST"
    },
    "4324": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4326": {
      "op": "DUP3"
    },
    "4327": {
      "op": "NOT"
    },
    "4328": {
      "op": "DUP3"
    },
    "4329": {
      "op": "GT"
    },
    "4330": {
      "op": "ISZERO"
    },
    "4331": {
      "op": "PUSH2",
      "value": "0x10F6"
    },
    "4334": {
      "op": "JUMPI"
    },
    "4335": {
      "op": "PUSH2",
      "value": "0x10F6"
    },
    "4338": {
      "op": "PUSH2",
      "value": "0x10B6"
    },
    "4341": {
      "jump": "i",
      "op": "JUMP"
    },
    "4342": {
      "op": "JUMPDEST"
    },
    "4343": {
      "op": "POP"
    },
    "4344": {
      "op": "ADD"
    },
    "4345": {
      "op": "SWAP1"
    },
    "4346": {
      "jump": "o",
      "op": "JUMP"
    },
    "4347": {
      "op": "JUMPDEST"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4350": {
      "op": "DUP1"
    },
    "4351": {
      "op": "DUP3"
    },
    "4352": {
      "op": "MSTORE"
    },
    "4353": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4355": {
      "op": "SWAP1"
    },
    "4356": {
      "op": "DUP3"
    },
    "4357": {
      "op": "ADD"
    },
    "4358": {
      "op": "MSTORE"
    },
    "4359": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "4392": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4394": {
      "op": "DUP3"
    },
    "4395": {
      "op": "ADD"
    },
    "4396": {
      "op": "MSTORE"
    },
    "4397": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "4416": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "4418": {
      "op": "SHL"
    },
    "4419": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4421": {
      "op": "DUP3"
    },
    "4422": {
      "op": "ADD"
    },
    "4423": {
      "op": "MSTORE"
    },
    "4424": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4426": {
      "op": "ADD"
    },
    "4427": {
      "op": "SWAP1"
    },
    "4428": {
      "jump": "o",
      "op": "JUMP"
    },
    "4429": {
      "op": "JUMPDEST"
    },
    "4430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4432": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4434": {
      "op": "NOT"
    },
    "4435": {
      "op": "DUP3"
    },
    "4436": {
      "op": "EQ"
    },
    "4437": {
      "op": "ISZERO"
    },
    "4438": {
      "op": "PUSH2",
      "value": "0x1161"
    },
    "4441": {
      "op": "JUMPI"
    },
    "4442": {
      "op": "PUSH2",
      "value": "0x1161"
    },
    "4445": {
      "op": "PUSH2",
      "value": "0x10B6"
    },
    "4448": {
      "jump": "i",
      "op": "JUMP"
    },
    "4449": {
      "op": "JUMPDEST"
    },
    "4450": {
      "op": "POP"
    },
    "4451": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4453": {
      "op": "ADD"
    },
    "4454": {
      "op": "SWAP1"
    },
    "4455": {
      "jump": "o",
      "op": "JUMP"
    },
    "4456": {
      "op": "JUMPDEST"
    },
    "4457": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4462": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4464": {
      "op": "SHL"
    },
    "4465": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4467": {
      "op": "MSTORE"
    },
    "4468": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4470": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4472": {
      "op": "MSTORE"
    },
    "4473": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4477": {
      "op": "REVERT"
    },
    "4478": {
      "op": "JUMPDEST"
    },
    "4479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4481": {
      "op": "DUP3"
    },
    "4482": {
      "op": "PUSH2",
      "value": "0x118D"
    },
    "4485": {
      "op": "JUMPI"
    },
    "4486": {
      "op": "PUSH2",
      "value": "0x118D"
    },
    "4489": {
      "op": "PUSH2",
      "value": "0x1168"
    },
    "4492": {
      "jump": "i",
      "op": "JUMP"
    },
    "4493": {
      "op": "JUMPDEST"
    },
    "4494": {
      "op": "POP"
    },
    "4495": {
      "op": "DIV"
    },
    "4496": {
      "op": "SWAP1"
    },
    "4497": {
      "jump": "o",
      "op": "JUMP"
    },
    "4498": {
      "op": "JUMPDEST"
    },
    "4499": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4501": {
      "op": "DUP3"
    },
    "4502": {
      "op": "PUSH2",
      "value": "0x11A1"
    },
    "4505": {
      "op": "JUMPI"
    },
    "4506": {
      "op": "PUSH2",
      "value": "0x11A1"
    },
    "4509": {
      "op": "PUSH2",
      "value": "0x1168"
    },
    "4512": {
      "jump": "i",
      "op": "JUMP"
    },
    "4513": {
      "op": "JUMPDEST"
    },
    "4514": {
      "op": "POP"
    },
    "4515": {
      "op": "MOD"
    },
    "4516": {
      "op": "SWAP1"
    },
    "4517": {
      "jump": "o",
      "op": "JUMP"
    },
    "4518": {
      "op": "JUMPDEST"
    },
    "4519": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4524": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4526": {
      "op": "SHL"
    },
    "4527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4529": {
      "op": "MSTORE"
    },
    "4530": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4532": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4534": {
      "op": "MSTORE"
    },
    "4535": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4537": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4539": {
      "op": "REVERT"
    },
    "4540": {
      "op": "JUMPDEST"
    },
    "4541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4545": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4547": {
      "op": "SHL"
    },
    "4548": {
      "op": "SUB"
    },
    "4549": {
      "op": "DUP6"
    },
    "4550": {
      "op": "DUP2"
    },
    "4551": {
      "op": "AND"
    },
    "4552": {
      "op": "DUP3"
    },
    "4553": {
      "op": "MSTORE"
    },
    "4554": {
      "op": "DUP5"
    },
    "4555": {
      "op": "AND"
    },
    "4556": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4558": {
      "op": "DUP3"
    },
    "4559": {
      "op": "ADD"
    },
    "4560": {
      "op": "MSTORE"
    },
    "4561": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4563": {
      "op": "DUP2"
    },
    "4564": {
      "op": "ADD"
    },
    "4565": {
      "op": "DUP4"
    },
    "4566": {
      "op": "SWAP1"
    },
    "4567": {
      "op": "MSTORE"
    },
    "4568": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4570": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4572": {
      "op": "DUP3"
    },
    "4573": {
      "op": "ADD"
    },
    "4574": {
      "op": "DUP2"
    },
    "4575": {
      "op": "SWAP1"
    },
    "4576": {
      "op": "MSTORE"
    },
    "4577": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4579": {
      "op": "SWAP1"
    },
    "4580": {
      "op": "PUSH2",
      "value": "0x11EF"
    },
    "4583": {
      "op": "SWAP1"
    },
    "4584": {
      "op": "DUP4"
    },
    "4585": {
      "op": "ADD"
    },
    "4586": {
      "op": "DUP5"
    },
    "4587": {
      "op": "PUSH2",
      "value": "0xDA5"
    },
    "4590": {
      "jump": "i",
      "op": "JUMP"
    },
    "4591": {
      "op": "JUMPDEST"
    },
    "4592": {
      "op": "SWAP7"
    },
    "4593": {
      "op": "SWAP6"
    },
    "4594": {
      "op": "POP"
    },
    "4595": {
      "op": "POP"
    },
    "4596": {
      "op": "POP"
    },
    "4597": {
      "op": "POP"
    },
    "4598": {
      "op": "POP"
    },
    "4599": {
      "op": "POP"
    },
    "4600": {
      "jump": "o",
      "op": "JUMP"
    },
    "4601": {
      "op": "JUMPDEST"
    },
    "4602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4604": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4606": {
      "op": "DUP3"
    },
    "4607": {
      "op": "DUP5"
    },
    "4608": {
      "op": "SUB"
    },
    "4609": {
      "op": "SLT"
    },
    "4610": {
      "op": "ISZERO"
    },
    "4611": {
      "op": "PUSH2",
      "value": "0x120B"
    },
    "4614": {
      "op": "JUMPI"
    },
    "4615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4617": {
      "op": "DUP1"
    },
    "4618": {
      "op": "REVERT"
    },
    "4619": {
      "op": "JUMPDEST"
    },
    "4620": {
      "op": "DUP2"
    },
    "4621": {
      "op": "MLOAD"
    },
    "4622": {
      "op": "PUSH2",
      "value": "0x73D"
    },
    "4625": {
      "op": "DUP2"
    },
    "4626": {
      "op": "PUSH2",
      "value": "0xD43"
    },
    "4629": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "3cc07c50c19833d5cb7f57315cb5c56e9cdaf3be",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _owners[tokenId];\n        require(owner != address(0), \"ERC721: owner query for nonexistent token\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _owners[tokenId] != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, _data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        _balances[owner] -= 1;\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _balances[from] -= 1;\n        _balances[to] += 1;\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits a {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits a {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {}\n}\n",
  "sourceMap": "628:13658:187:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1479:17:187;;;;:7;;:17;;;;;:::i;:::-;;1390:113;;628:13658;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;628:13658:187;;;-1:-1:-1;628:13658:187;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:239;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:239;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:239;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:239:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:239;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;628:13658:187;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/token/ERC721/ERC721.sol",
  "type": "contract"
}