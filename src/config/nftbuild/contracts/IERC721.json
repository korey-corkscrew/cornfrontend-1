{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "188": "contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
    "228": "contracts/openzeppelin/contracts/utils/introspection/IERC165.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
    "exportedSymbols": {
      "IERC165": [
        28824
      ],
      "IERC721": [
        23589
      ]
    },
    "id": 23590,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 23475,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "93:23:188"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/introspection/IERC165.sol",
        "file": "../../utils/introspection/IERC165.sol",
        "id": 23476,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23590,
        "sourceUnit": 28825,
        "src": "118:47:188",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 23478,
              "name": "IERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 28824,
              "src": "256:7:188"
            },
            "id": 23479,
            "nodeType": "InheritanceSpecifier",
            "src": "256:7:188"
          }
        ],
        "canonicalName": "IERC721",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 23477,
          "nodeType": "StructuredDocumentation",
          "src": "167:67:188",
          "text": " @dev Required interface of an ERC721 compliant contract."
        },
        "fullyImplemented": false,
        "id": 23589,
        "linearizedBaseContracts": [
          23589,
          28824
        ],
        "name": "IERC721",
        "nameLocation": "245:7:188",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 23480,
              "nodeType": "StructuredDocumentation",
              "src": "270:88:188",
              "text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
            },
            "id": 23488,
            "name": "Transfer",
            "nameLocation": "369:8:188",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23482,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "394:4:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23488,
                  "src": "378:20:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "378:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23484,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "416:2:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23488,
                  "src": "400:18:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23483,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "400:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23486,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "436:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23488,
                  "src": "420:23:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23485,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "420:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "377:67:188"
            },
            "src": "363:82:188"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 23489,
              "nodeType": "StructuredDocumentation",
              "src": "451:94:188",
              "text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
            },
            "id": 23497,
            "name": "Approval",
            "nameLocation": "556:8:188",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23491,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "581:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23497,
                  "src": "565:21:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23490,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "565:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23493,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "604:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23497,
                  "src": "588:24:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23492,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "588:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23495,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "630:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23497,
                  "src": "614:23:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "614:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "564:74:188"
            },
            "src": "550:89:188"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 23498,
              "nodeType": "StructuredDocumentation",
              "src": "645:117:188",
              "text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
            },
            "id": 23506,
            "name": "ApprovalForAll",
            "nameLocation": "773:14:188",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23500,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "804:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23506,
                  "src": "788:21:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "788:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23502,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "827:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23506,
                  "src": "811:24:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23501,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "811:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23504,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "842:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23506,
                  "src": "837:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23503,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "837:4:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "787:64:188"
            },
            "src": "767:85:188"
          },
          {
            "documentation": {
              "id": 23507,
              "nodeType": "StructuredDocumentation",
              "src": "858:76:188",
              "text": " @dev Returns the number of tokens in ``owner``'s account."
            },
            "functionSelector": "70a08231",
            "id": 23514,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "948:9:188",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23509,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "966:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23514,
                  "src": "958:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23508,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "958:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "957:15:188"
            },
            "returnParameters": {
              "id": 23513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23512,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "1004:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23514,
                  "src": "996:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23511,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "996:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "995:17:188"
            },
            "scope": 23589,
            "src": "939:74:188",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 23515,
              "nodeType": "StructuredDocumentation",
              "src": "1019:131:188",
              "text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "6352211e",
            "id": 23522,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "1164:7:188",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23517,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1180:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23522,
                  "src": "1172:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23516,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1172:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1171:17:188"
            },
            "returnParameters": {
              "id": 23521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23520,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1220:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23522,
                  "src": "1212:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23519,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1212:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1211:15:188"
            },
            "scope": 23589,
            "src": "1155:72:188",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 23523,
              "nodeType": "StructuredDocumentation",
              "src": "1233:690:188",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "42842e0e",
            "id": 23532,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "1937:16:188",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23525,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1971:4:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23532,
                  "src": "1963:12:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23524,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1963:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23527,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1993:2:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23532,
                  "src": "1985:10:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23526,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1985:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23529,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2013:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23532,
                  "src": "2005:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23528,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2005:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1953:73:188"
            },
            "returnParameters": {
              "id": 23531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2035:0:188"
            },
            "scope": 23589,
            "src": "1928:108:188",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 23533,
              "nodeType": "StructuredDocumentation",
              "src": "2042:504:188",
              "text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
            },
            "functionSelector": "23b872dd",
            "id": 23542,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "2560:12:188",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23535,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2590:4:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23542,
                  "src": "2582:12:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23534,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2582:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23537,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2612:2:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23542,
                  "src": "2604:10:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23536,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2604:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23539,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2632:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23542,
                  "src": "2624:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23538,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2624:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2572:73:188"
            },
            "returnParameters": {
              "id": 23541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2654:0:188"
            },
            "scope": 23589,
            "src": "2551:104:188",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 23543,
              "nodeType": "StructuredDocumentation",
              "src": "2661:452:188",
              "text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
            },
            "functionSelector": "095ea7b3",
            "id": 23550,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3127:7:188",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23545,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3143:2:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23550,
                  "src": "3135:10:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23544,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3135:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23547,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3155:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23550,
                  "src": "3147:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23546,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3147:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3134:29:188"
            },
            "returnParameters": {
              "id": 23549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3172:0:188"
            },
            "scope": 23589,
            "src": "3118:55:188",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 23551,
              "nodeType": "StructuredDocumentation",
              "src": "3179:139:188",
              "text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "081812fc",
            "id": 23558,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "3332:11:188",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23553,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3352:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23558,
                  "src": "3344:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23552,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3344:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3343:17:188"
            },
            "returnParameters": {
              "id": 23557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23556,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3392:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23558,
                  "src": "3384:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3384:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3383:18:188"
            },
            "scope": 23589,
            "src": "3323:79:188",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 23559,
              "nodeType": "StructuredDocumentation",
              "src": "3408:309:188",
              "text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
            },
            "functionSelector": "a22cb465",
            "id": 23566,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "3731:17:188",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23561,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3757:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23566,
                  "src": "3749:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23560,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3749:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23563,
                  "mutability": "mutable",
                  "name": "_approved",
                  "nameLocation": "3772:9:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23566,
                  "src": "3767:14:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23562,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3767:4:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3748:34:188"
            },
            "returnParameters": {
              "id": 23565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3791:0:188"
            },
            "scope": 23589,
            "src": "3722:70:188",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 23567,
              "nodeType": "StructuredDocumentation",
              "src": "3798:138:188",
              "text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
            },
            "functionSelector": "e985e9c5",
            "id": 23576,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "3950:16:188",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23569,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3975:5:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23576,
                  "src": "3967:13:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23568,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3967:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23571,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "3990:8:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23576,
                  "src": "3982:16:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23570,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3982:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3966:33:188"
            },
            "returnParameters": {
              "id": 23575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23574,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23576,
                  "src": "4023:4:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23573,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4023:4:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4022:6:188"
            },
            "scope": 23589,
            "src": "3941:88:188",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 23577,
              "nodeType": "StructuredDocumentation",
              "src": "4035:556:188",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "functionSelector": "b88d4fde",
            "id": 23588,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "4605:16:188",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23579,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4639:4:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23588,
                  "src": "4631:12:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23578,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4631:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23581,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4661:2:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23588,
                  "src": "4653:10:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23580,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4653:7:188",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23583,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4681:7:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23588,
                  "src": "4673:15:188",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23582,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4673:7:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23585,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4713:4:188",
                  "nodeType": "VariableDeclaration",
                  "scope": 23588,
                  "src": "4698:19:188",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 23584,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4698:5:188",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4621:102:188"
            },
            "returnParameters": {
              "id": 23587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4732:0:188"
            },
            "scope": 23589,
            "src": "4596:137:188",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 23590,
        "src": "235:4500:188",
        "usedErrors": []
      }
    ],
    "src": "93:4643:188"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "IERC721",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [
    "IERC165"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "details": "Required interface of an ERC721 compliant contract.",
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
      },
      "ApprovalForAll(address,address,bool)": {
        "details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `tokenId` token is transferred from `from` to `to`."
      }
    },
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the number of tokens in ``owner``'s account."
      },
      "getApproved(uint256)": {
        "details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "isApprovedForAll(address,address)": {
        "details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
      },
      "ownerOf(uint256)": {
        "details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
      },
      "setApprovalForAll(address,bool)": {
        "details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
      },
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
      }
    },
    "version": 1
  },
  "offset": [
    235,
    4735
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "08912ceed1e8064362590cfb80164ca6d256f936",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n}\n",
  "sourceMap": "",
  "sourcePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
  "type": "interface"
}