{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "n",
          "type": "int256"
        }
      ],
      "name": "abs",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "a",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "b",
          "type": "int256"
        }
      ],
      "name": "average",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "a",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "b",
          "type": "int256"
        }
      ],
      "name": "max",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "a",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "b",
          "type": "int256"
        }
      ],
      "name": "min",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "132": "contracts/openzeppelin/contracts/mocks/SignedMathMock.sol",
    "234": "contracts/openzeppelin/contracts/utils/math/SignedMath.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/mocks/SignedMathMock.sol",
    "exportedSymbols": {
      "SignedMath": [
        29826
      ],
      "SignedMathMock": [
        14605
      ]
    },
    "id": 14606,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14542,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:132"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/math/SignedMath.sol",
        "file": "../utils/math/SignedMath.sol",
        "id": 14543,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14606,
        "sourceUnit": 29827,
        "src": "58:38:132",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SignedMathMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 14605,
        "linearizedBaseContracts": [
          14605
        ],
        "name": "SignedMathMock",
        "nameLocation": "107:14:132",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 14558,
              "nodeType": "Block",
              "src": "190:44:132",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14554,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14545,
                        "src": "222:1:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "id": 14555,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14547,
                        "src": "225:1:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "id": 14552,
                        "name": "SignedMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29826,
                        "src": "207:10:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SignedMath_$29826_$",
                          "typeString": "type(library SignedMath)"
                        }
                      },
                      "id": 14553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29742,
                      "src": "207:14:132",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
                        "typeString": "function (int256,int256) pure returns (int256)"
                      }
                    },
                    "id": 14556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "207:20:132",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 14551,
                  "id": 14557,
                  "nodeType": "Return",
                  "src": "200:27:132"
                }
              ]
            },
            "functionSelector": "81fe5786",
            "id": 14559,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "max",
            "nameLocation": "137:3:132",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14545,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "148:1:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 14559,
                  "src": "141:8:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14544,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "141:6:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14547,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "158:1:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 14559,
                  "src": "151:8:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14546,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "151:6:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "140:20:132"
            },
            "returnParameters": {
              "id": 14551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14550,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14559,
                  "src": "182:6:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14549,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "182:6:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "181:8:132"
            },
            "scope": 14605,
            "src": "128:106:132",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14574,
              "nodeType": "Block",
              "src": "302:44:132",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14570,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14561,
                        "src": "334:1:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "id": 14571,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14563,
                        "src": "337:1:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "id": 14568,
                        "name": "SignedMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29826,
                        "src": "319:10:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SignedMath_$29826_$",
                          "typeString": "type(library SignedMath)"
                        }
                      },
                      "id": 14569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "min",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29760,
                      "src": "319:14:132",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
                        "typeString": "function (int256,int256) pure returns (int256)"
                      }
                    },
                    "id": 14572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "319:20:132",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 14567,
                  "id": 14573,
                  "nodeType": "Return",
                  "src": "312:27:132"
                }
              ]
            },
            "functionSelector": "29aa9cbe",
            "id": 14575,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "min",
            "nameLocation": "249:3:132",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14561,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "260:1:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 14575,
                  "src": "253:8:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14560,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "253:6:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14563,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "270:1:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 14575,
                  "src": "263:8:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14562,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "263:6:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "252:20:132"
            },
            "returnParameters": {
              "id": 14567,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14566,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14575,
                  "src": "294:6:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14565,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "294:6:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "293:8:132"
            },
            "scope": 14605,
            "src": "240:106:132",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14590,
              "nodeType": "Block",
              "src": "418:48:132",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14586,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14577,
                        "src": "454:1:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "id": 14587,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14579,
                        "src": "457:1:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "id": 14584,
                        "name": "SignedMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29826,
                        "src": "435:10:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SignedMath_$29826_$",
                          "typeString": "type(library SignedMath)"
                        }
                      },
                      "id": 14585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "average",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29804,
                      "src": "435:18:132",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int256_$_t_int256_$returns$_t_int256_$",
                        "typeString": "function (int256,int256) pure returns (int256)"
                      }
                    },
                    "id": 14588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "435:24:132",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 14583,
                  "id": 14589,
                  "nodeType": "Return",
                  "src": "428:31:132"
                }
              ]
            },
            "functionSelector": "7f0bb292",
            "id": 14591,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "average",
            "nameLocation": "361:7:132",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14577,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "376:1:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 14591,
                  "src": "369:8:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14576,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "369:6:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14579,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "386:1:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 14591,
                  "src": "379:8:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14578,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "379:6:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "368:20:132"
            },
            "returnParameters": {
              "id": 14583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14582,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14591,
                  "src": "410:6:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14581,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "410:6:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "409:8:132"
            },
            "scope": 14605,
            "src": "352:114:132",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 14603,
              "nodeType": "Block",
              "src": "525:41:132",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14600,
                        "name": "n",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14593,
                        "src": "557:1:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "id": 14598,
                        "name": "SignedMath",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29826,
                        "src": "542:10:132",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SignedMath_$29826_$",
                          "typeString": "type(library SignedMath)"
                        }
                      },
                      "id": 14599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "abs",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29825,
                      "src": "542:14:132",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
                        "typeString": "function (int256) pure returns (uint256)"
                      }
                    },
                    "id": 14601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "542:17:132",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 14597,
                  "id": 14602,
                  "nodeType": "Return",
                  "src": "535:24:132"
                }
              ]
            },
            "functionSelector": "1b5ac4b5",
            "id": 14604,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "abs",
            "nameLocation": "481:3:132",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14593,
                  "mutability": "mutable",
                  "name": "n",
                  "nameLocation": "492:1:132",
                  "nodeType": "VariableDeclaration",
                  "scope": 14604,
                  "src": "485:8:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14592,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "485:6:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "484:10:132"
            },
            "returnParameters": {
              "id": 14597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14596,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14604,
                  "src": "516:7:132",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14595,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "516:7:132",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "515:9:132"
            },
            "scope": 14605,
            "src": "472:94:132",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 14606,
        "src": "98:470:132",
        "usedErrors": []
      }
    ],
    "src": "33:536:132"
  },
  "bytecode": "608060405234801561001057600080fd5b50610220806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631b5ac4b51461005157806329aa9cbe146100765780637f0bb2921461008957806381fe57861461009c575b600080fd5b61006461005f366004610158565b6100af565b60405190815260200160405180910390f35b610064610084366004610171565b6100c0565b610064610097366004610171565b6100d3565b6100646100aa366004610171565b6100df565b60006100ba826100eb565b92915050565b60006100cc8383610102565b9392505050565b60006100cc8383610118565b60006100cc8383610148565b6000808212156100fe57816000036100ba565b5090565b600081831261011157816100cc565b5090919050565b60008061012c84841860011d8585166101a9565b905061014060ff82901c85851816826101a9565b949350505050565b60008183121561011157816100cc565b60006020828403121561016a57600080fd5b5035919050565b6000806040838503121561018457600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b600080821280156001600160ff1b03849003851316156101cb576101cb610193565b600160ff1b83900384128116156101e4576101e4610193565b5050019056fea2646970667358221220610a103253f95b42c6ac3453e2e6fece8a85f1f5e6575ae5e6736fd950759edc64736f6c634300080c0033",
  "bytecodeSha1": "37231cc253b2428cf2d7dc83c1a9971eb0670b0f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "SignedMathMock",
  "coverageMap": {
    "branches": {
      "132": {},
      "234": {
        "SignedMath.abs": {
          "8": [
            1228,
            1234,
            true
          ]
        },
        "SignedMath.max": {
          "10": [
            392,
            398,
            true
          ]
        },
        "SignedMath.min": {
          "9": [
            572,
            577,
            true
          ]
        }
      }
    },
    "statements": {
      "132": {
        "SignedMathMock.abs": {
          "0": [
            535,
            559
          ]
        },
        "SignedMathMock.average": {
          "2": [
            428,
            459
          ]
        },
        "SignedMathMock.max": {
          "3": [
            200,
            227
          ]
        },
        "SignedMathMock.min": {
          "1": [
            312,
            339
          ]
        }
      },
      "234": {
        "SignedMath.abs": {
          "4": [
            1213,
            1244
          ]
        },
        "SignedMath.average": {
          "6": [
            904,
            952
          ]
        },
        "SignedMath.max": {
          "7": [
            385,
            406
          ]
        },
        "SignedMath.min": {
          "5": [
            565,
            585
          ]
        }
      }
    }
  },
  "dependencies": [
    "SignedMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80631b5ac4b51461005157806329aa9cbe146100765780637f0bb2921461008957806381fe57861461009c575b600080fd5b61006461005f366004610158565b6100af565b60405190815260200160405180910390f35b610064610084366004610171565b6100c0565b610064610097366004610171565b6100d3565b6100646100aa366004610171565b6100df565b60006100ba826100eb565b92915050565b60006100cc8383610102565b9392505050565b60006100cc8383610118565b60006100cc8383610148565b6000808212156100fe57816000036100ba565b5090565b600081831261011157816100cc565b5090919050565b60008061012c84841860011d8585166101a9565b905061014060ff82901c85851816826101a9565b949350505050565b60008183121561011157816100cc565b60006020828403121561016a57600080fd5b5035919050565b6000806040838503121561018457600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b600080821280156001600160ff1b03849003851316156101cb576101cb610193565b600160ff1b83900384128116156101e4576101e4610193565b5050019056fea2646970667358221220610a103253f95b42c6ac3453e2e6fece8a85f1f5e6575ae5e6736fd950759edc64736f6c634300080c0033",
  "deployedSourceMap": "98:470:132:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;472:94;;;;;;:::i;:::-;;:::i;:::-;;;344:25:239;;;332:2;317:18;472:94:132;;;;;;;240:106;;;;;;:::i;:::-;;:::i;352:114::-;;;;;;:::i;:::-;;:::i;128:106::-;;;;;;:::i;:::-;;:::i;472:94::-;516:7;542:17;557:1;542:14;:17::i;:::-;535:24;472:94;-1:-1:-1;;472:94:132:o;240:106::-;294:6;319:20;334:1;337;319:14;:20::i;:::-;312:27;240:106;-1:-1:-1;;;240:106:132:o;352:114::-;410:6;435:24;454:1;457;435:18;:24::i;128:106::-;182:6;207:20;222:1;225;207:14;:20::i;1048:213:234:-;1094:7;1233:1;1228;:6;;:15;;1242:1;1241:2;;1228:15;;;-1:-1:-1;1237:1:234;1048:213::o;491:101::-;547:6;576:1;572;:5;:13;;584:1;572:13;;;-1:-1:-1;580:1:234;;491:101;-1:-1:-1;491:101:234:o;729:230::-;789:6;;870:24;882:5;;;892:1;881:12;871:5;;;870:24;:::i;:::-;859:35;-1:-1:-1;911:41:234;937:3;923:17;;;945:5;;;916:35;859;911:41;:::i;:::-;904:48;729:230;-1:-1:-1;;;;729:230:234:o;311:102::-;367:6;397:1;392;:6;;:14;;405:1;392:14;;14:179:239;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;-1:-1:-1;164:23:239;;14:179;-1:-1:-1;14:179:239:o;380:246::-;446:6;454;507:2;495:9;486:7;482:23;478:32;475:52;;;523:1;520;513:12;475:52;-1:-1:-1;;546:23:239;;;616:2;601:18;;;588:32;;-1:-1:-1;380:246:239:o;811:127::-;872:10;867:3;863:20;860:1;853:31;903:4;900:1;893:15;927:4;924:1;917:15;943:265;982:3;1010:9;;;1035:10;;-1:-1:-1;;;;;1054:27:239;;;1047:35;;1031:52;1028:78;;;1086:18;;:::i;:::-;-1:-1:-1;;;1133:19:239;;;1126:27;;1118:36;;1115:62;;;1157:18;;:::i;:::-;-1:-1:-1;;1193:9:239;;943:265::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    98,
    568
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1B5AC4B5 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x29AA9CBE EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x7F0BB292 EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0x81FE5786 EQ PUSH2 0x9C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x158 JUMP JUMPDEST PUSH2 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH2 0x84 CALLDATASIZE PUSH1 0x4 PUSH2 0x171 JUMP JUMPDEST PUSH2 0xC0 JUMP JUMPDEST PUSH2 0x64 PUSH2 0x97 CALLDATASIZE PUSH1 0x4 PUSH2 0x171 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST PUSH2 0x64 PUSH2 0xAA CALLDATASIZE PUSH1 0x4 PUSH2 0x171 JUMP JUMPDEST PUSH2 0xDF JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA DUP3 PUSH2 0xEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC DUP4 DUP4 PUSH2 0x102 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC DUP4 DUP4 PUSH2 0x118 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC DUP4 DUP4 PUSH2 0x148 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT ISZERO PUSH2 0xFE JUMPI DUP2 PUSH1 0x0 SUB PUSH2 0xBA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 SLT PUSH2 0x111 JUMPI DUP2 PUSH2 0xCC JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x12C DUP5 DUP5 XOR PUSH1 0x1 SAR DUP6 DUP6 AND PUSH2 0x1A9 JUMP JUMPDEST SWAP1 POP PUSH2 0x140 PUSH1 0xFF DUP3 SWAP1 SHR DUP6 DUP6 XOR AND DUP3 PUSH2 0x1A9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 SLT ISZERO PUSH2 0x111 JUMPI DUP2 PUSH2 0xCC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x184 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 SWAP1 SUB DUP6 SGT AND ISZERO PUSH2 0x1CB JUMPI PUSH2 0x1CB PUSH2 0x193 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP4 SWAP1 SUB DUP5 SLT DUP2 AND ISZERO PUSH2 0x1E4 JUMPI PUSH2 0x1E4 PUSH2 0x193 JUMP JUMPDEST POP POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xA10 ORIGIN MSTORE8 0xF9 JUMPDEST TIMESTAMP 0xC6 0xAC CALLVALUE MSTORE8 0xE2 0xE6 INVALID 0xCE DUP11 DUP6 CALL CREATE2 0xE6 JUMPI GAS 0xE5 0xE6 PUSH20 0x6FD950759EDC64736F6C634300080C0033000000 ",
  "pcMap": {
    "0": {
      "offset": [
        98,
        568
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "MSTORE",
      "path": "132"
    },
    "5": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "CALLVALUE",
      "path": "132"
    },
    "6": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "DUP1",
      "path": "132"
    },
    "7": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "ISZERO",
      "path": "132"
    },
    "8": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "JUMPI",
      "path": "132"
    },
    "12": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "DUP1",
      "path": "132"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "REVERT",
      "path": "132"
    },
    "16": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "17": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "POP",
      "path": "132"
    },
    "18": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "CALLDATASIZE",
      "path": "132"
    },
    "21": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "LT",
      "path": "132"
    },
    "22": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "JUMPI",
      "path": "132"
    },
    "26": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "CALLDATALOAD",
      "path": "132"
    },
    "29": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "SHR",
      "path": "132"
    },
    "32": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "DUP1",
      "path": "132"
    },
    "33": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "PUSH4",
      "path": "132",
      "value": "0x1B5AC4B5"
    },
    "38": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "EQ",
      "path": "132"
    },
    "39": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "JUMPI",
      "path": "132"
    },
    "43": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "DUP1",
      "path": "132"
    },
    "44": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "PUSH4",
      "path": "132",
      "value": "0x29AA9CBE"
    },
    "49": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "EQ",
      "path": "132"
    },
    "50": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x76"
    },
    "53": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "JUMPI",
      "path": "132"
    },
    "54": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "DUP1",
      "path": "132"
    },
    "55": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "PUSH4",
      "path": "132",
      "value": "0x7F0BB292"
    },
    "60": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "EQ",
      "path": "132"
    },
    "61": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x89"
    },
    "64": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "JUMPI",
      "path": "132"
    },
    "65": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "DUP1",
      "path": "132"
    },
    "66": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "PUSH4",
      "path": "132",
      "value": "0x81FE5786"
    },
    "71": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "EQ",
      "path": "132"
    },
    "72": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x9C"
    },
    "75": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "JUMPI",
      "path": "132"
    },
    "76": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "77": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "DUP1",
      "path": "132"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        98,
        568
      ],
      "op": "REVERT",
      "path": "132"
    },
    "81": {
      "fn": "SignedMathMock.abs",
      "offset": [
        472,
        566
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "82": {
      "fn": "SignedMathMock.abs",
      "offset": [
        472,
        566
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x64"
    },
    "85": {
      "fn": "SignedMathMock.abs",
      "offset": [
        472,
        566
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x5F"
    },
    "88": {
      "fn": "SignedMathMock.abs",
      "offset": [
        472,
        566
      ],
      "op": "CALLDATASIZE",
      "path": "132"
    },
    "89": {
      "fn": "SignedMathMock.abs",
      "offset": [
        472,
        566
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x4"
    },
    "91": {
      "fn": "SignedMathMock.abs",
      "offset": [
        472,
        566
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x158"
    },
    "94": {
      "fn": "SignedMathMock.abs",
      "jump": "i",
      "offset": [
        472,
        566
      ],
      "op": "JUMP",
      "path": "132"
    },
    "95": {
      "fn": "SignedMathMock.abs",
      "offset": [
        472,
        566
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "96": {
      "fn": "SignedMathMock.abs",
      "offset": [
        472,
        566
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0xAF"
    },
    "99": {
      "fn": "SignedMathMock.abs",
      "jump": "i",
      "offset": [
        472,
        566
      ],
      "op": "JUMP",
      "path": "132"
    },
    "100": {
      "fn": "SignedMathMock.abs",
      "offset": [
        472,
        566
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "101": {
      "fn": "SignedMathMock.abs",
      "offset": [
        472,
        566
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x40"
    },
    "103": {
      "fn": "SignedMathMock.abs",
      "offset": [
        472,
        566
      ],
      "op": "MLOAD",
      "path": "132"
    },
    "104": {
      "op": "SWAP1"
    },
    "105": {
      "op": "DUP2"
    },
    "106": {
      "op": "MSTORE"
    },
    "107": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "109": {
      "op": "ADD"
    },
    "110": {
      "fn": "SignedMathMock.abs",
      "offset": [
        472,
        566
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x40"
    },
    "112": {
      "fn": "SignedMathMock.abs",
      "offset": [
        472,
        566
      ],
      "op": "MLOAD",
      "path": "132"
    },
    "113": {
      "fn": "SignedMathMock.abs",
      "offset": [
        472,
        566
      ],
      "op": "DUP1",
      "path": "132"
    },
    "114": {
      "fn": "SignedMathMock.abs",
      "offset": [
        472,
        566
      ],
      "op": "SWAP2",
      "path": "132"
    },
    "115": {
      "fn": "SignedMathMock.abs",
      "offset": [
        472,
        566
      ],
      "op": "SUB",
      "path": "132"
    },
    "116": {
      "fn": "SignedMathMock.abs",
      "offset": [
        472,
        566
      ],
      "op": "SWAP1",
      "path": "132"
    },
    "117": {
      "fn": "SignedMathMock.abs",
      "offset": [
        472,
        566
      ],
      "op": "RETURN",
      "path": "132"
    },
    "118": {
      "fn": "SignedMathMock.min",
      "offset": [
        240,
        346
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "119": {
      "fn": "SignedMathMock.min",
      "offset": [
        240,
        346
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x64"
    },
    "122": {
      "fn": "SignedMathMock.min",
      "offset": [
        240,
        346
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x84"
    },
    "125": {
      "fn": "SignedMathMock.min",
      "offset": [
        240,
        346
      ],
      "op": "CALLDATASIZE",
      "path": "132"
    },
    "126": {
      "fn": "SignedMathMock.min",
      "offset": [
        240,
        346
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x4"
    },
    "128": {
      "fn": "SignedMathMock.min",
      "offset": [
        240,
        346
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x171"
    },
    "131": {
      "fn": "SignedMathMock.min",
      "jump": "i",
      "offset": [
        240,
        346
      ],
      "op": "JUMP",
      "path": "132"
    },
    "132": {
      "fn": "SignedMathMock.min",
      "offset": [
        240,
        346
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "133": {
      "fn": "SignedMathMock.min",
      "offset": [
        240,
        346
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0xC0"
    },
    "136": {
      "fn": "SignedMathMock.min",
      "jump": "i",
      "offset": [
        240,
        346
      ],
      "op": "JUMP",
      "path": "132"
    },
    "137": {
      "fn": "SignedMathMock.average",
      "offset": [
        352,
        466
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "138": {
      "fn": "SignedMathMock.average",
      "offset": [
        352,
        466
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x64"
    },
    "141": {
      "fn": "SignedMathMock.average",
      "offset": [
        352,
        466
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x97"
    },
    "144": {
      "fn": "SignedMathMock.average",
      "offset": [
        352,
        466
      ],
      "op": "CALLDATASIZE",
      "path": "132"
    },
    "145": {
      "fn": "SignedMathMock.average",
      "offset": [
        352,
        466
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x4"
    },
    "147": {
      "fn": "SignedMathMock.average",
      "offset": [
        352,
        466
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x171"
    },
    "150": {
      "fn": "SignedMathMock.average",
      "jump": "i",
      "offset": [
        352,
        466
      ],
      "op": "JUMP",
      "path": "132"
    },
    "151": {
      "fn": "SignedMathMock.average",
      "offset": [
        352,
        466
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "152": {
      "fn": "SignedMathMock.average",
      "offset": [
        352,
        466
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0xD3"
    },
    "155": {
      "fn": "SignedMathMock.average",
      "jump": "i",
      "offset": [
        352,
        466
      ],
      "op": "JUMP",
      "path": "132"
    },
    "156": {
      "fn": "SignedMathMock.max",
      "offset": [
        128,
        234
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "157": {
      "fn": "SignedMathMock.max",
      "offset": [
        128,
        234
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x64"
    },
    "160": {
      "fn": "SignedMathMock.max",
      "offset": [
        128,
        234
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0xAA"
    },
    "163": {
      "fn": "SignedMathMock.max",
      "offset": [
        128,
        234
      ],
      "op": "CALLDATASIZE",
      "path": "132"
    },
    "164": {
      "fn": "SignedMathMock.max",
      "offset": [
        128,
        234
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x4"
    },
    "166": {
      "fn": "SignedMathMock.max",
      "offset": [
        128,
        234
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x171"
    },
    "169": {
      "fn": "SignedMathMock.max",
      "jump": "i",
      "offset": [
        128,
        234
      ],
      "op": "JUMP",
      "path": "132"
    },
    "170": {
      "fn": "SignedMathMock.max",
      "offset": [
        128,
        234
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "171": {
      "fn": "SignedMathMock.max",
      "offset": [
        128,
        234
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0xDF"
    },
    "174": {
      "fn": "SignedMathMock.max",
      "jump": "i",
      "offset": [
        128,
        234
      ],
      "op": "JUMP",
      "path": "132"
    },
    "175": {
      "fn": "SignedMathMock.abs",
      "offset": [
        472,
        566
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "176": {
      "fn": "SignedMathMock.abs",
      "offset": [
        516,
        523
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x0"
    },
    "178": {
      "fn": "SignedMathMock.abs",
      "offset": [
        542,
        559
      ],
      "op": "PUSH2",
      "path": "132",
      "statement": 0,
      "value": "0xBA"
    },
    "181": {
      "fn": "SignedMathMock.abs",
      "offset": [
        557,
        558
      ],
      "op": "DUP3",
      "path": "132"
    },
    "182": {
      "fn": "SignedMathMock.abs",
      "offset": [
        542,
        556
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0xEB"
    },
    "185": {
      "fn": "SignedMathMock.abs",
      "jump": "i",
      "offset": [
        542,
        559
      ],
      "op": "JUMP",
      "path": "132"
    },
    "186": {
      "fn": "SignedMathMock.abs",
      "offset": [
        542,
        559
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "187": {
      "fn": "SignedMathMock.abs",
      "offset": [
        535,
        559
      ],
      "op": "SWAP3",
      "path": "132"
    },
    "188": {
      "fn": "SignedMathMock.abs",
      "offset": [
        472,
        566
      ],
      "op": "SWAP2",
      "path": "132"
    },
    "189": {
      "op": "POP"
    },
    "190": {
      "op": "POP"
    },
    "191": {
      "fn": "SignedMathMock.abs",
      "jump": "o",
      "offset": [
        472,
        566
      ],
      "op": "JUMP",
      "path": "132"
    },
    "192": {
      "fn": "SignedMathMock.min",
      "offset": [
        240,
        346
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "193": {
      "fn": "SignedMathMock.min",
      "offset": [
        294,
        300
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x0"
    },
    "195": {
      "fn": "SignedMathMock.min",
      "offset": [
        319,
        339
      ],
      "op": "PUSH2",
      "path": "132",
      "statement": 1,
      "value": "0xCC"
    },
    "198": {
      "fn": "SignedMathMock.min",
      "offset": [
        334,
        335
      ],
      "op": "DUP4",
      "path": "132"
    },
    "199": {
      "fn": "SignedMathMock.min",
      "offset": [
        337,
        338
      ],
      "op": "DUP4",
      "path": "132"
    },
    "200": {
      "fn": "SignedMathMock.min",
      "offset": [
        319,
        333
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x102"
    },
    "203": {
      "fn": "SignedMathMock.min",
      "jump": "i",
      "offset": [
        319,
        339
      ],
      "op": "JUMP",
      "path": "132"
    },
    "204": {
      "fn": "SignedMathMock.min",
      "offset": [
        319,
        339
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "205": {
      "fn": "SignedMathMock.min",
      "offset": [
        312,
        339
      ],
      "op": "SWAP4",
      "path": "132"
    },
    "206": {
      "fn": "SignedMathMock.min",
      "offset": [
        240,
        346
      ],
      "op": "SWAP3",
      "path": "132"
    },
    "207": {
      "op": "POP"
    },
    "208": {
      "op": "POP"
    },
    "209": {
      "op": "POP"
    },
    "210": {
      "fn": "SignedMathMock.min",
      "jump": "o",
      "offset": [
        240,
        346
      ],
      "op": "JUMP",
      "path": "132"
    },
    "211": {
      "fn": "SignedMathMock.average",
      "offset": [
        352,
        466
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "212": {
      "fn": "SignedMathMock.average",
      "offset": [
        410,
        416
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x0"
    },
    "214": {
      "fn": "SignedMathMock.average",
      "offset": [
        435,
        459
      ],
      "op": "PUSH2",
      "path": "132",
      "statement": 2,
      "value": "0xCC"
    },
    "217": {
      "fn": "SignedMathMock.average",
      "offset": [
        454,
        455
      ],
      "op": "DUP4",
      "path": "132"
    },
    "218": {
      "fn": "SignedMathMock.average",
      "offset": [
        457,
        458
      ],
      "op": "DUP4",
      "path": "132"
    },
    "219": {
      "fn": "SignedMathMock.average",
      "offset": [
        435,
        453
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x118"
    },
    "222": {
      "fn": "SignedMathMock.average",
      "jump": "i",
      "offset": [
        435,
        459
      ],
      "op": "JUMP",
      "path": "132"
    },
    "223": {
      "fn": "SignedMathMock.max",
      "offset": [
        128,
        234
      ],
      "op": "JUMPDEST",
      "path": "132"
    },
    "224": {
      "fn": "SignedMathMock.max",
      "offset": [
        182,
        188
      ],
      "op": "PUSH1",
      "path": "132",
      "value": "0x0"
    },
    "226": {
      "fn": "SignedMathMock.max",
      "offset": [
        207,
        227
      ],
      "op": "PUSH2",
      "path": "132",
      "statement": 3,
      "value": "0xCC"
    },
    "229": {
      "fn": "SignedMathMock.max",
      "offset": [
        222,
        223
      ],
      "op": "DUP4",
      "path": "132"
    },
    "230": {
      "fn": "SignedMathMock.max",
      "offset": [
        225,
        226
      ],
      "op": "DUP4",
      "path": "132"
    },
    "231": {
      "fn": "SignedMathMock.max",
      "offset": [
        207,
        221
      ],
      "op": "PUSH2",
      "path": "132",
      "value": "0x148"
    },
    "234": {
      "fn": "SignedMathMock.max",
      "jump": "i",
      "offset": [
        207,
        227
      ],
      "op": "JUMP",
      "path": "132"
    },
    "235": {
      "fn": "SignedMath.abs",
      "offset": [
        1048,
        1261
      ],
      "op": "JUMPDEST",
      "path": "234"
    },
    "236": {
      "fn": "SignedMath.abs",
      "offset": [
        1094,
        1101
      ],
      "op": "PUSH1",
      "path": "234",
      "value": "0x0"
    },
    "238": {
      "fn": "SignedMath.abs",
      "offset": [
        1233,
        1234
      ],
      "op": "DUP1",
      "path": "234",
      "statement": 4
    },
    "239": {
      "fn": "SignedMath.abs",
      "offset": [
        1228,
        1229
      ],
      "op": "DUP3",
      "path": "234"
    },
    "240": {
      "fn": "SignedMath.abs",
      "offset": [
        1228,
        1234
      ],
      "op": "SLT",
      "path": "234"
    },
    "241": {
      "branch": 8,
      "fn": "SignedMath.abs",
      "offset": [
        1228,
        1234
      ],
      "op": "ISZERO",
      "path": "234"
    },
    "242": {
      "fn": "SignedMath.abs",
      "offset": [
        1228,
        1243
      ],
      "op": "PUSH2",
      "path": "234",
      "value": "0xFE"
    },
    "245": {
      "branch": 8,
      "fn": "SignedMath.abs",
      "offset": [
        1228,
        1243
      ],
      "op": "JUMPI",
      "path": "234"
    },
    "246": {
      "fn": "SignedMath.abs",
      "offset": [
        1242,
        1243
      ],
      "op": "DUP2",
      "path": "234"
    },
    "247": {
      "fn": "SignedMath.abs",
      "offset": [
        1241,
        1243
      ],
      "op": "PUSH1",
      "path": "234",
      "value": "0x0"
    },
    "249": {
      "fn": "SignedMath.abs",
      "offset": [
        1241,
        1243
      ],
      "op": "SUB",
      "path": "234"
    },
    "250": {
      "fn": "SignedMath.abs",
      "offset": [
        1228,
        1243
      ],
      "op": "PUSH2",
      "path": "234",
      "value": "0xBA"
    },
    "253": {
      "fn": "SignedMath.abs",
      "offset": [
        1228,
        1243
      ],
      "op": "JUMP",
      "path": "234"
    },
    "254": {
      "fn": "SignedMath.abs",
      "offset": [
        1228,
        1243
      ],
      "op": "JUMPDEST",
      "path": "234"
    },
    "255": {
      "op": "POP"
    },
    "256": {
      "fn": "SignedMath.abs",
      "offset": [
        1237,
        1238
      ],
      "op": "SWAP1",
      "path": "234"
    },
    "257": {
      "fn": "SignedMath.abs",
      "jump": "o",
      "offset": [
        1048,
        1261
      ],
      "op": "JUMP",
      "path": "234"
    },
    "258": {
      "fn": "SignedMath.min",
      "offset": [
        491,
        592
      ],
      "op": "JUMPDEST",
      "path": "234"
    },
    "259": {
      "fn": "SignedMath.min",
      "offset": [
        547,
        553
      ],
      "op": "PUSH1",
      "path": "234",
      "value": "0x0"
    },
    "261": {
      "fn": "SignedMath.min",
      "offset": [
        576,
        577
      ],
      "op": "DUP2",
      "path": "234",
      "statement": 5
    },
    "262": {
      "fn": "SignedMath.min",
      "offset": [
        572,
        573
      ],
      "op": "DUP4",
      "path": "234"
    },
    "263": {
      "branch": 9,
      "fn": "SignedMath.min",
      "offset": [
        572,
        577
      ],
      "op": "SLT",
      "path": "234"
    },
    "264": {
      "fn": "SignedMath.min",
      "offset": [
        572,
        585
      ],
      "op": "PUSH2",
      "path": "234",
      "value": "0x111"
    },
    "267": {
      "branch": 9,
      "fn": "SignedMath.min",
      "offset": [
        572,
        585
      ],
      "op": "JUMPI",
      "path": "234"
    },
    "268": {
      "fn": "SignedMath.min",
      "offset": [
        584,
        585
      ],
      "op": "DUP2",
      "path": "234"
    },
    "269": {
      "fn": "SignedMath.min",
      "offset": [
        572,
        585
      ],
      "op": "PUSH2",
      "path": "234",
      "value": "0xCC"
    },
    "272": {
      "fn": "SignedMath.min",
      "offset": [
        572,
        585
      ],
      "op": "JUMP",
      "path": "234"
    },
    "273": {
      "fn": "SignedMath.min",
      "offset": [
        572,
        585
      ],
      "op": "JUMPDEST",
      "path": "234"
    },
    "274": {
      "op": "POP"
    },
    "275": {
      "fn": "SignedMath.min",
      "offset": [
        580,
        581
      ],
      "op": "SWAP1",
      "path": "234"
    },
    "276": {
      "fn": "SignedMath.min",
      "offset": [
        580,
        581
      ],
      "op": "SWAP2",
      "path": "234"
    },
    "277": {
      "fn": "SignedMath.min",
      "offset": [
        491,
        592
      ],
      "op": "SWAP1",
      "path": "234"
    },
    "278": {
      "op": "POP"
    },
    "279": {
      "fn": "SignedMath.min",
      "jump": "o",
      "offset": [
        491,
        592
      ],
      "op": "JUMP",
      "path": "234"
    },
    "280": {
      "fn": "SignedMath.average",
      "offset": [
        729,
        959
      ],
      "op": "JUMPDEST",
      "path": "234"
    },
    "281": {
      "fn": "SignedMath.average",
      "offset": [
        789,
        795
      ],
      "op": "PUSH1",
      "path": "234",
      "value": "0x0"
    },
    "283": {
      "fn": "SignedMath.average",
      "offset": [
        789,
        795
      ],
      "op": "DUP1",
      "path": "234"
    },
    "284": {
      "fn": "SignedMath.average",
      "offset": [
        870,
        894
      ],
      "op": "PUSH2",
      "path": "234",
      "value": "0x12C"
    },
    "287": {
      "fn": "SignedMath.average",
      "offset": [
        882,
        887
      ],
      "op": "DUP5",
      "path": "234"
    },
    "288": {
      "fn": "SignedMath.average",
      "offset": [
        882,
        887
      ],
      "op": "DUP5",
      "path": "234"
    },
    "289": {
      "fn": "SignedMath.average",
      "offset": [
        882,
        887
      ],
      "op": "XOR",
      "path": "234"
    },
    "290": {
      "fn": "SignedMath.average",
      "offset": [
        892,
        893
      ],
      "op": "PUSH1",
      "path": "234",
      "value": "0x1"
    },
    "292": {
      "fn": "SignedMath.average",
      "offset": [
        881,
        893
      ],
      "op": "SAR",
      "path": "234"
    },
    "293": {
      "fn": "SignedMath.average",
      "offset": [
        871,
        876
      ],
      "op": "DUP6",
      "path": "234"
    },
    "294": {
      "fn": "SignedMath.average",
      "offset": [
        871,
        876
      ],
      "op": "DUP6",
      "path": "234"
    },
    "295": {
      "fn": "SignedMath.average",
      "offset": [
        871,
        876
      ],
      "op": "AND",
      "path": "234"
    },
    "296": {
      "fn": "SignedMath.average",
      "offset": [
        870,
        894
      ],
      "op": "PUSH2",
      "path": "234",
      "value": "0x1A9"
    },
    "299": {
      "fn": "SignedMath.average",
      "jump": "i",
      "offset": [
        870,
        894
      ],
      "op": "JUMP",
      "path": "234"
    },
    "300": {
      "fn": "SignedMath.average",
      "offset": [
        870,
        894
      ],
      "op": "JUMPDEST",
      "path": "234"
    },
    "301": {
      "fn": "SignedMath.average",
      "offset": [
        859,
        894
      ],
      "op": "SWAP1",
      "path": "234"
    },
    "302": {
      "op": "POP"
    },
    "303": {
      "fn": "SignedMath.average",
      "offset": [
        911,
        952
      ],
      "op": "PUSH2",
      "path": "234",
      "statement": 6,
      "value": "0x140"
    },
    "306": {
      "fn": "SignedMath.average",
      "offset": [
        937,
        940
      ],
      "op": "PUSH1",
      "path": "234",
      "value": "0xFF"
    },
    "308": {
      "fn": "SignedMath.average",
      "offset": [
        923,
        940
      ],
      "op": "DUP3",
      "path": "234"
    },
    "309": {
      "fn": "SignedMath.average",
      "offset": [
        923,
        940
      ],
      "op": "SWAP1",
      "path": "234"
    },
    "310": {
      "fn": "SignedMath.average",
      "offset": [
        923,
        940
      ],
      "op": "SHR",
      "path": "234"
    },
    "311": {
      "fn": "SignedMath.average",
      "offset": [
        945,
        950
      ],
      "op": "DUP6",
      "path": "234"
    },
    "312": {
      "fn": "SignedMath.average",
      "offset": [
        945,
        950
      ],
      "op": "DUP6",
      "path": "234"
    },
    "313": {
      "fn": "SignedMath.average",
      "offset": [
        945,
        950
      ],
      "op": "XOR",
      "path": "234"
    },
    "314": {
      "fn": "SignedMath.average",
      "offset": [
        916,
        951
      ],
      "op": "AND",
      "path": "234"
    },
    "315": {
      "fn": "SignedMath.average",
      "offset": [
        859,
        894
      ],
      "op": "DUP3",
      "path": "234"
    },
    "316": {
      "fn": "SignedMath.average",
      "offset": [
        911,
        952
      ],
      "op": "PUSH2",
      "path": "234",
      "value": "0x1A9"
    },
    "319": {
      "fn": "SignedMath.average",
      "jump": "i",
      "offset": [
        911,
        952
      ],
      "op": "JUMP",
      "path": "234"
    },
    "320": {
      "fn": "SignedMath.average",
      "offset": [
        911,
        952
      ],
      "op": "JUMPDEST",
      "path": "234"
    },
    "321": {
      "fn": "SignedMath.average",
      "offset": [
        904,
        952
      ],
      "op": "SWAP5",
      "path": "234"
    },
    "322": {
      "fn": "SignedMath.average",
      "offset": [
        729,
        959
      ],
      "op": "SWAP4",
      "path": "234"
    },
    "323": {
      "op": "POP"
    },
    "324": {
      "op": "POP"
    },
    "325": {
      "op": "POP"
    },
    "326": {
      "op": "POP"
    },
    "327": {
      "fn": "SignedMath.average",
      "jump": "o",
      "offset": [
        729,
        959
      ],
      "op": "JUMP",
      "path": "234"
    },
    "328": {
      "fn": "SignedMath.max",
      "offset": [
        311,
        413
      ],
      "op": "JUMPDEST",
      "path": "234"
    },
    "329": {
      "fn": "SignedMath.max",
      "offset": [
        367,
        373
      ],
      "op": "PUSH1",
      "path": "234",
      "value": "0x0"
    },
    "331": {
      "fn": "SignedMath.max",
      "offset": [
        397,
        398
      ],
      "op": "DUP2",
      "path": "234",
      "statement": 7
    },
    "332": {
      "fn": "SignedMath.max",
      "offset": [
        392,
        393
      ],
      "op": "DUP4",
      "path": "234"
    },
    "333": {
      "fn": "SignedMath.max",
      "offset": [
        392,
        398
      ],
      "op": "SLT",
      "path": "234"
    },
    "334": {
      "branch": 10,
      "fn": "SignedMath.max",
      "offset": [
        392,
        398
      ],
      "op": "ISZERO",
      "path": "234"
    },
    "335": {
      "fn": "SignedMath.max",
      "offset": [
        392,
        406
      ],
      "op": "PUSH2",
      "path": "234",
      "value": "0x111"
    },
    "338": {
      "branch": 10,
      "fn": "SignedMath.max",
      "offset": [
        392,
        406
      ],
      "op": "JUMPI",
      "path": "234"
    },
    "339": {
      "fn": "SignedMath.max",
      "offset": [
        405,
        406
      ],
      "op": "DUP2",
      "path": "234"
    },
    "340": {
      "fn": "SignedMath.max",
      "offset": [
        392,
        406
      ],
      "op": "PUSH2",
      "path": "234",
      "value": "0xCC"
    },
    "343": {
      "fn": "SignedMath.max",
      "offset": [
        392,
        406
      ],
      "op": "JUMP",
      "path": "234"
    },
    "344": {
      "op": "JUMPDEST"
    },
    "345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "347": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "349": {
      "op": "DUP3"
    },
    "350": {
      "op": "DUP5"
    },
    "351": {
      "op": "SUB"
    },
    "352": {
      "op": "SLT"
    },
    "353": {
      "op": "ISZERO"
    },
    "354": {
      "op": "PUSH2",
      "value": "0x16A"
    },
    "357": {
      "op": "JUMPI"
    },
    "358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "360": {
      "op": "DUP1"
    },
    "361": {
      "op": "REVERT"
    },
    "362": {
      "op": "JUMPDEST"
    },
    "363": {
      "op": "POP"
    },
    "364": {
      "op": "CALLDATALOAD"
    },
    "365": {
      "op": "SWAP2"
    },
    "366": {
      "op": "SWAP1"
    },
    "367": {
      "op": "POP"
    },
    "368": {
      "jump": "o",
      "op": "JUMP"
    },
    "369": {
      "op": "JUMPDEST"
    },
    "370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "372": {
      "op": "DUP1"
    },
    "373": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "375": {
      "op": "DUP4"
    },
    "376": {
      "op": "DUP6"
    },
    "377": {
      "op": "SUB"
    },
    "378": {
      "op": "SLT"
    },
    "379": {
      "op": "ISZERO"
    },
    "380": {
      "op": "PUSH2",
      "value": "0x184"
    },
    "383": {
      "op": "JUMPI"
    },
    "384": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "386": {
      "op": "DUP1"
    },
    "387": {
      "op": "REVERT"
    },
    "388": {
      "op": "JUMPDEST"
    },
    "389": {
      "op": "POP"
    },
    "390": {
      "op": "POP"
    },
    "391": {
      "op": "DUP1"
    },
    "392": {
      "op": "CALLDATALOAD"
    },
    "393": {
      "op": "SWAP3"
    },
    "394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "396": {
      "op": "SWAP1"
    },
    "397": {
      "op": "SWAP2"
    },
    "398": {
      "op": "ADD"
    },
    "399": {
      "op": "CALLDATALOAD"
    },
    "400": {
      "op": "SWAP2"
    },
    "401": {
      "op": "POP"
    },
    "402": {
      "jump": "o",
      "op": "JUMP"
    },
    "403": {
      "op": "JUMPDEST"
    },
    "404": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "409": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "411": {
      "op": "SHL"
    },
    "412": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "414": {
      "op": "MSTORE"
    },
    "415": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "417": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "424": {
      "op": "REVERT"
    },
    "425": {
      "op": "JUMPDEST"
    },
    "426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "428": {
      "op": "DUP1"
    },
    "429": {
      "op": "DUP3"
    },
    "430": {
      "op": "SLT"
    },
    "431": {
      "op": "DUP1"
    },
    "432": {
      "op": "ISZERO"
    },
    "433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "437": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "439": {
      "op": "SHL"
    },
    "440": {
      "op": "SUB"
    },
    "441": {
      "op": "DUP5"
    },
    "442": {
      "op": "SWAP1"
    },
    "443": {
      "op": "SUB"
    },
    "444": {
      "op": "DUP6"
    },
    "445": {
      "op": "SGT"
    },
    "446": {
      "op": "AND"
    },
    "447": {
      "op": "ISZERO"
    },
    "448": {
      "op": "PUSH2",
      "value": "0x1CB"
    },
    "451": {
      "op": "JUMPI"
    },
    "452": {
      "op": "PUSH2",
      "value": "0x1CB"
    },
    "455": {
      "op": "PUSH2",
      "value": "0x193"
    },
    "458": {
      "jump": "i",
      "op": "JUMP"
    },
    "459": {
      "op": "JUMPDEST"
    },
    "460": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "462": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "464": {
      "op": "SHL"
    },
    "465": {
      "op": "DUP4"
    },
    "466": {
      "op": "SWAP1"
    },
    "467": {
      "op": "SUB"
    },
    "468": {
      "op": "DUP5"
    },
    "469": {
      "op": "SLT"
    },
    "470": {
      "op": "DUP2"
    },
    "471": {
      "op": "AND"
    },
    "472": {
      "op": "ISZERO"
    },
    "473": {
      "op": "PUSH2",
      "value": "0x1E4"
    },
    "476": {
      "op": "JUMPI"
    },
    "477": {
      "op": "PUSH2",
      "value": "0x1E4"
    },
    "480": {
      "op": "PUSH2",
      "value": "0x193"
    },
    "483": {
      "jump": "i",
      "op": "JUMP"
    },
    "484": {
      "op": "JUMPDEST"
    },
    "485": {
      "op": "POP"
    },
    "486": {
      "op": "POP"
    },
    "487": {
      "op": "ADD"
    },
    "488": {
      "op": "SWAP1"
    },
    "489": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "fa852c2646c26130d7f2bb7bc1ade24b1960f7f6",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/math/SignedMath.sol\";\n\ncontract SignedMathMock {\n    function max(int256 a, int256 b) public pure returns (int256) {\n        return SignedMath.max(a, b);\n    }\n\n    function min(int256 a, int256 b) public pure returns (int256) {\n        return SignedMath.min(a, b);\n    }\n\n    function average(int256 a, int256 b) public pure returns (int256) {\n        return SignedMath.average(a, b);\n    }\n\n    function abs(int256 n) public pure returns (uint256) {\n        return SignedMath.abs(n);\n    }\n}\n",
  "sourceMap": "98:470:132:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/mocks/SignedMathMock.sol",
  "type": "contract"
}