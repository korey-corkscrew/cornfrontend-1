{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beacon",
          "type": "address"
        }
      ],
      "name": "BeaconUpgraded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "current",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decrement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "increment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proxiableUUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "140": "contracts/openzeppelin/contracts/mocks/UUPS/UUPSUpgradeableMock.sol",
    "148": "contracts/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol",
    "156": "contracts/openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol",
    "48": "contracts/openzeppelin/contracts/interfaces/draft-IERC1822.sol",
    "65": "contracts/openzeppelin/contracts/mocks/CountersImpl.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/mocks/UUPS/UUPSUpgradeableMock.sol",
    "exportedSymbols": {
      "Address": [
        26327
      ],
      "Counters": [
        26789
      ],
      "CountersImpl": [
        7916
      ],
      "ERC1967Upgrade": [
        17020
      ],
      "IBeacon": [
        17164
      ],
      "IERC1822Proxiable": [
        6872
      ],
      "StorageSlot": [
        27015
      ],
      "UUPSUpgradeable": [
        17729
      ],
      "UUPSUpgradeableMock": [
        15254
      ],
      "UUPSUpgradeableUnsafeMock": [
        15292
      ]
    },
    "id": 15293,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15240,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:140"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/mocks/CountersImpl.sol",
        "file": "../CountersImpl.sol",
        "id": 15241,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15293,
        "sourceUnit": 7917,
        "src": "58:29:140",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/proxy/utils/UUPSUpgradeable.sol",
        "file": "../../proxy/utils/UUPSUpgradeable.sol",
        "id": 15242,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 15293,
        "sourceUnit": 17730,
        "src": "88:47:140",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 15243,
              "name": "CountersImpl",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7916,
              "src": "169:12:140"
            },
            "id": 15244,
            "nodeType": "InheritanceSpecifier",
            "src": "169:12:140"
          },
          {
            "baseName": {
              "id": 15245,
              "name": "UUPSUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 17729,
              "src": "183:15:140"
            },
            "id": 15246,
            "nodeType": "InheritanceSpecifier",
            "src": "183:15:140"
          }
        ],
        "canonicalName": "UUPSUpgradeableMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 15254,
        "linearizedBaseContracts": [
          15254,
          17729,
          17020,
          6872,
          7916
        ],
        "name": "UUPSUpgradeableMock",
        "nameLocation": "146:19:140",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              17728
            ],
            "body": {
              "id": 15252,
              "nodeType": "Block",
              "src": "357:2:140",
              "statements": []
            },
            "id": 15253,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_authorizeUpgrade",
            "nameLocation": "304:17:140",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15250,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "348:8:140"
            },
            "parameters": {
              "id": 15249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15248,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15253,
                  "src": "322:7:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15247,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "322:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "321:9:140"
            },
            "returnParameters": {
              "id": 15251,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "357:0:140"
            },
            "scope": 15254,
            "src": "295:64:140",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 15293,
        "src": "137:224:140",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 15255,
              "name": "UUPSUpgradeableMock",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15254,
              "src": "401:19:140"
            },
            "id": 15256,
            "nodeType": "InheritanceSpecifier",
            "src": "401:19:140"
          }
        ],
        "canonicalName": "UUPSUpgradeableUnsafeMock",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 15292,
        "linearizedBaseContracts": [
          15292,
          15254,
          17729,
          17020,
          6872,
          7916
        ],
        "name": "UUPSUpgradeableUnsafeMock",
        "nameLocation": "372:25:140",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              17701
            ],
            "body": {
              "id": 15273,
              "nodeType": "Block",
              "src": "499:86:140",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15265,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15258,
                        "src": "542:17:140",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 15268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "567:2:140",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 15267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "561:5:140",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 15266,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "561:5:140",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 15269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "561:9:140",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 15270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "572:5:140",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 15262,
                        "name": "ERC1967Upgrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17020,
                        "src": "509:14:140",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC1967Upgrade_$17020_$",
                          "typeString": "type(contract ERC1967Upgrade)"
                        }
                      },
                      "id": 15264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_upgradeToAndCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16803,
                      "src": "509:32:140",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 15271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "509:69:140",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15272,
                  "nodeType": "ExpressionStatement",
                  "src": "509:69:140"
                }
              ]
            },
            "functionSelector": "3659cfe6",
            "id": 15274,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "upgradeTo",
            "nameLocation": "436:9:140",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15260,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "490:8:140"
            },
            "parameters": {
              "id": 15259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15258,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "454:17:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 15274,
                  "src": "446:25:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15257,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "445:27:140"
            },
            "returnParameters": {
              "id": 15261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "499:0:140"
            },
            "scope": 15292,
            "src": "427:158:140",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              17722
            ],
            "body": {
              "id": 15290,
              "nodeType": "Block",
              "src": "697:81:140",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15285,
                        "name": "newImplementation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15276,
                        "src": "740:17:140",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15286,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15278,
                        "src": "759:4:140",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 15287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "765:5:140",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 15282,
                        "name": "ERC1967Upgrade",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17020,
                        "src": "707:14:140",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC1967Upgrade_$17020_$",
                          "typeString": "type(contract ERC1967Upgrade)"
                        }
                      },
                      "id": 15284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_upgradeToAndCall",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16803,
                      "src": "707:32:140",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
                        "typeString": "function (address,bytes memory,bool)"
                      }
                    },
                    "id": 15288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "707:64:140",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15289,
                  "nodeType": "ExpressionStatement",
                  "src": "707:64:140"
                }
              ]
            },
            "functionSelector": "4f1ef286",
            "id": 15291,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "upgradeToAndCall",
            "nameLocation": "600:16:140",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 15280,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "688:8:140"
            },
            "parameters": {
              "id": 15279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15276,
                  "mutability": "mutable",
                  "name": "newImplementation",
                  "nameLocation": "625:17:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 15291,
                  "src": "617:25:140",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15275,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:7:140",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15278,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "657:4:140",
                  "nodeType": "VariableDeclaration",
                  "scope": 15291,
                  "src": "644:17:140",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 15277,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "644:5:140",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "616:46:140"
            },
            "returnParameters": {
              "id": 15281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "697:0:140"
            },
            "scope": 15292,
            "src": "591:187:140",
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 15293,
        "src": "363:417:140",
        "usedErrors": []
      }
    ],
    "src": "33:748:140"
  },
  "bytecode": "60a06040523060805234801561001457600080fd5b506080516106da610030600039600061016c01526106da6000f3fe6080604052600436106100705760003560e01c806352d1902d1161004e57806352d1902d146100bf5780639fa6a6e3146100e6578063d09de08a146100fb578063d826f88f1461011057600080fd5b80632baeceb7146100755780633659cfe61461008c5780634f1ef286146100ac575b600080fd5b34801561008157600080fd5b5061008a610125565b005b34801561009857600080fd5b5061008a6100a736600461050f565b610131565b61008a6100ba366004610540565b61014f565b3480156100cb57600080fd5b506100d461015f565b60405190815260200160405180910390f35b3480156100f257600080fd5b506000546100d4565b34801561010757600080fd5b5061008a610229565b34801561011c57600080fd5b5061008a610237565b61012f6000610240565b565b61014c81604051806020016040528060008152506000610297565b50565b61015b82826000610297565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102045760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084015b60405180910390fd5b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b61012f600080546001019055565b61012f60008055565b80548061028f5760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f77000000000060448201526064016101fb565b600019019055565b6102a0836102c3565b6000825111806102ad5750805b156102be576102bc8383610303565b505b505050565b6102cc8161032f565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610328838360405180606001604052806027815260200161067e602791396103dd565b9392505050565b6001600160a01b0381163b61039c5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016101fb565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60606001600160a01b0384163b6104455760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101fb565b600080856001600160a01b031685604051610460919061062e565b600060405180830381855af49150503d806000811461049b576040519150601f19603f3d011682016040523d82523d6000602084013e6104a0565b606091505b50915091506104b08282866104ba565b9695505050505050565b606083156104c9575081610328565b8251156104d95782518084602001fd5b8160405162461bcd60e51b81526004016101fb919061064a565b80356001600160a01b038116811461050a57600080fd5b919050565b60006020828403121561052157600080fd5b610328826104f3565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561055357600080fd5b61055c836104f3565b9150602083013567ffffffffffffffff8082111561057957600080fd5b818501915085601f83011261058d57600080fd5b81358181111561059f5761059f61052a565b604051601f8201601f19908116603f011681019083821181831017156105c7576105c761052a565b816040528281528860208487010111156105e057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b8381101561061d578181015183820152602001610605565b838111156102bc5750506000910152565b60008251610640818460208701610602565b9190910192915050565b6020815260008251806020840152610669816040850160208701610602565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207094f3363edd7281d9fb644067f0fe24ec94ae47974fd5229e53e53ed0720cd564736f6c634300080c0033",
  "bytecodeSha1": "e05260ac8b369eaba6a2f8fb8c5c6bc25c109790",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "UUPSUpgradeableUnsafeMock",
  "coverageMap": {
    "branches": {
      "140": {},
      "148": {
        "ERC1967Upgrade._upgradeToAndCall": {
          "11": [
            2364,
            2379,
            true
          ],
          "12": [
            2383,
            2392,
            false
          ]
        }
      },
      "156": {
        "UUPSUpgradeable.proxiableUUID": {
          "13": [
            2072,
            2095,
            true
          ]
        }
      },
      "48": {},
      "65": {}
    },
    "statements": {
      "140": {
        "UUPSUpgradeableUnsafeMock.upgradeTo": {
          "1": [
            509,
            578
          ]
        },
        "UUPSUpgradeableUnsafeMock.upgradeToAndCall": {
          "2": [
            707,
            771
          ]
        }
      },
      "148": {
        "ERC1967Upgrade._setImplementation": {
          "9": [
            1605,
            1700
          ],
          "10": [
            1710,
            1784
          ]
        },
        "ERC1967Upgrade._upgradeTo": {
          "7": [
            1963,
            2000
          ],
          "8": [
            2010,
            2042
          ]
        },
        "ERC1967Upgrade._upgradeToAndCall": {
          "5": [
            2321,
            2350
          ],
          "6": [
            2408,
            2461
          ]
        }
      },
      "156": {},
      "48": {},
      "65": {
        "CountersImpl.decrement": {
          "0": [
            407,
            427
          ]
        },
        "CountersImpl.increment": {
          "3": [
            336,
            356
          ]
        },
        "CountersImpl.reset": {
          "4": [
            474,
            490
          ]
        }
      }
    }
  },
  "dependencies": [
    "CountersImpl",
    "ERC1967Upgrade",
    "IERC1822Proxiable",
    "UUPSUpgradeable",
    "UUPSUpgradeableMock"
  ],
  "deployedBytecode": "6080604052600436106100705760003560e01c806352d1902d1161004e57806352d1902d146100bf5780639fa6a6e3146100e6578063d09de08a146100fb578063d826f88f1461011057600080fd5b80632baeceb7146100755780633659cfe61461008c5780634f1ef286146100ac575b600080fd5b34801561008157600080fd5b5061008a610125565b005b34801561009857600080fd5b5061008a6100a736600461050f565b610131565b61008a6100ba366004610540565b61014f565b3480156100cb57600080fd5b506100d461015f565b60405190815260200160405180910390f35b3480156100f257600080fd5b506000546100d4565b34801561010757600080fd5b5061008a610229565b34801561011c57600080fd5b5061008a610237565b61012f6000610240565b565b61014c81604051806020016040528060008152506000610297565b50565b61015b82826000610297565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146102045760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084015b60405180910390fd5b507f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc90565b61012f600080546001019055565b61012f60008055565b80548061028f5760405162461bcd60e51b815260206004820152601b60248201527f436f756e7465723a2064656372656d656e74206f766572666c6f77000000000060448201526064016101fb565b600019019055565b6102a0836102c3565b6000825111806102ad5750805b156102be576102bc8383610303565b505b505050565b6102cc8161032f565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610328838360405180606001604052806027815260200161067e602791396103dd565b9392505050565b6001600160a01b0381163b61039c5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016101fb565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b60606001600160a01b0384163b6104455760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101fb565b600080856001600160a01b031685604051610460919061062e565b600060405180830381855af49150503d806000811461049b576040519150601f19603f3d011682016040523d82523d6000602084013e6104a0565b606091505b50915091506104b08282866104ba565b9695505050505050565b606083156104c9575081610328565b8251156104d95782518084602001fd5b8160405162461bcd60e51b81526004016101fb919061064a565b80356001600160a01b038116811461050a57600080fd5b919050565b60006020828403121561052157600080fd5b610328826104f3565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561055357600080fd5b61055c836104f3565b9150602083013567ffffffffffffffff8082111561057957600080fd5b818501915085601f83011261058d57600080fd5b81358181111561059f5761059f61052a565b604051601f8201601f19908116603f011681019083821181831017156105c7576105c761052a565b816040528281528860208487010111156105e057600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60005b8381101561061d578181015183820152602001610605565b838111156102bc5750506000910152565b60008251610640818460208701610602565b9190910192915050565b6020815260008251806020840152610669816040850160208701610602565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212207094f3363edd7281d9fb644067f0fe24ec94ae47974fd5229e53e53ed0720cd564736f6c634300080c0033",
  "deployedSourceMap": "363:417:140:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;369:65:65;;;;;;;;;;;;;:::i;:::-;;427:158:140;;;;;;;;;;-1:-1:-1;427:158:140;;;;;:::i;:::-;;:::i;591:187::-;;;;;;:::i;:::-;;:::i;2760:131:156:-;;;;;;;;;;;;;:::i;:::-;;;1661:25:239;;;1649:2;1634:18;2760:131:156;;;;;;;201:91:65;;;;;;;;;;-1:-1:-1;241:7:65;918:14:211;201:91:65;;298:65;;;;;;;;;;;;;:::i;440:57::-;;;;;;;;;;;;;:::i;369:65::-;407:20;:8;:18;:20::i;:::-;369:65::o;427:158:140:-;509:69;542:17;561:9;;;;;;;;;;;;572:5;509:32;:69::i;:::-;427:158;:::o;591:187::-;707:64;740:17;759:4;765:5;707:32;:64::i;:::-;591:187;;:::o;2760:131:156:-;2838:7;2080:4;-1:-1:-1;;;;;2089:6:156;2072:23;;2064:92;;;;-1:-1:-1;;;2064:92:156;;2081:2:239;2064:92:156;;;2063:21:239;2120:2;2100:18;;;2093:30;2159:34;2139:18;;;2132:62;2230:26;2210:18;;;2203:54;2274:19;;2064:92:156;;;;;;;;;-1:-1:-1;1030:66:148::1;2760:131:156::0;:::o;298:65:65:-;336:20;:8;1032:19:211;;1050:1;1032:19;;;945:123;440:57:65;474:16;:8;1385:1:211;1368:18;1309:84;1074:229;1153:14;;1185:9;1177:49;;;;-1:-1:-1;;;1177:49:211;;2506:2:239;1177:49:211;;;2488:21:239;2545:2;2525:18;;;2518:30;2584:29;2564:18;;;2557:57;2631:18;;1177:49:211;2304:351:239;1177:49:211;-1:-1:-1;;1277:9:211;1260:26;;1074:229::o;2183:295:148:-;2321:29;2332:17;2321:10;:29::i;:::-;2378:1;2364:4;:11;:15;:28;;;;2383:9;2364:28;2360:112;;;2408:53;2437:17;2456:4;2408:28;:53::i;:::-;;2360:112;2183:295;;;:::o;1897:152::-;1963:37;1982:17;1963:18;:37::i;:::-;2015:27;;-1:-1:-1;;;;;2015:27:148;;;;;;;;1897:152;:::o;6570:198:206:-;6653:12;6684:77;6705:6;6713:4;6684:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6677:84;6570:198;-1:-1:-1;;;6570:198:206:o;1532:259:148:-;-1:-1:-1;;;;;1465:19:206;;;1605:95:148;;;;-1:-1:-1;;;1605:95:148;;2862:2:239;1605:95:148;;;2844:21:239;2901:2;2881:18;;;2874:30;2940:34;2920:18;;;2913:62;-1:-1:-1;;;2991:18:239;;;2984:43;3044:19;;1605:95:148;2660:409:239;1605:95:148;1030:66;1710:74;;-1:-1:-1;;;;;;1710:74:148;-1:-1:-1;;;;;1710:74:148;;;;;;;;;;1532:259::o;6954:387:206:-;7095:12;-1:-1:-1;;;;;1465:19:206;;;7119:69;;;;-1:-1:-1;;;7119:69:206;;3276:2:239;7119:69:206;;;3258:21:239;3315:2;3295:18;;;3288:30;3354:34;3334:18;;;3327:62;-1:-1:-1;;;3405:18:239;;;3398:36;3451:19;;7119:69:206;3074:402:239;7119:69:206;7200:12;7214:23;7241:6;-1:-1:-1;;;;;7241:19:206;7261:4;7241:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7199:67;;;;7283:51;7300:7;7309:10;7321:12;7283:16;:51::i;:::-;7276:58;6954:387;-1:-1:-1;;;;;;6954:387:206:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:206;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:206;;;;;;;;:::i;14:173:239:-;82:20;;-1:-1:-1;;;;;131:31:239;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:127::-;444:10;439:3;435:20;432:1;425:31;475:4;472:1;465:15;499:4;496:1;489:15;515:995;592:6;600;653:2;641:9;632:7;628:23;624:32;621:52;;;669:1;666;659:12;621:52;692:29;711:9;692:29;:::i;:::-;682:39;;772:2;761:9;757:18;744:32;795:18;836:2;828:6;825:14;822:34;;;852:1;849;842:12;822:34;890:6;879:9;875:22;865:32;;935:7;928:4;924:2;920:13;916:27;906:55;;957:1;954;947:12;906:55;993:2;980:16;1015:2;1011;1008:10;1005:36;;;1021:18;;:::i;:::-;1096:2;1090:9;1064:2;1150:13;;-1:-1:-1;;1146:22:239;;;1170:2;1142:31;1138:40;1126:53;;;1194:18;;;1214:22;;;1191:46;1188:72;;;1240:18;;:::i;:::-;1280:10;1276:2;1269:22;1315:2;1307:6;1300:18;1355:7;1350:2;1345;1341;1337:11;1333:20;1330:33;1327:53;;;1376:1;1373;1366:12;1327:53;1432:2;1427;1423;1419:11;1414:2;1406:6;1402:15;1389:46;1477:1;1472:2;1467;1459:6;1455:15;1451:24;1444:35;1498:6;1488:16;;;;;;;515:995;;;;;:::o;3481:258::-;3553:1;3563:113;3577:6;3574:1;3571:13;3563:113;;;3653:11;;;3647:18;3634:11;;;3627:39;3599:2;3592:10;3563:113;;;3694:6;3691:1;3688:13;3685:48;;;-1:-1:-1;;3729:1:239;3711:16;;3704:27;3481:258::o;3744:274::-;3873:3;3911:6;3905:13;3927:53;3973:6;3968:3;3961:4;3953:6;3949:17;3927:53;:::i;:::-;3996:16;;;;;3744:274;-1:-1:-1;;3744:274:239:o;4023:383::-;4172:2;4161:9;4154:21;4135:4;4204:6;4198:13;4247:6;4242:2;4231:9;4227:18;4220:34;4263:66;4322:6;4317:2;4306:9;4302:18;4297:2;4289:6;4285:15;4263:66;:::i;:::-;4390:2;4369:15;-1:-1:-1;;4365:29:239;4350:45;;;;4397:2;4346:54;;4023:383;-1:-1:-1;;4023:383:239:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "proxiableUUID()": {
        "details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate that the this implementation remains valid after an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
      },
      "upgradeTo(address)": {
        "details": "Upgrade the implementation of the proxy to `newImplementation`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
      },
      "upgradeToAndCall(address,bytes)": {
        "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
      }
    },
    "version": 1
  },
  "offset": [
    363,
    780
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x52D1902D GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0xBF JUMPI DUP1 PUSH4 0x9FA6A6E3 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0xD09DE08A EQ PUSH2 0xFB JUMPI DUP1 PUSH4 0xD826F88F EQ PUSH2 0x110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2BAECEB7 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0xAC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A PUSH2 0x125 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A PUSH2 0xA7 CALLDATASIZE PUSH1 0x4 PUSH2 0x50F JUMP JUMPDEST PUSH2 0x131 JUMP JUMPDEST PUSH2 0x8A PUSH2 0xBA CALLDATASIZE PUSH1 0x4 PUSH2 0x540 JUMP JUMPDEST PUSH2 0x14F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD4 PUSH2 0x15F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0xD4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A PUSH2 0x229 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A PUSH2 0x237 JUMP JUMPDEST PUSH2 0x12F PUSH1 0x0 PUSH2 0x240 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x14C DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0x297 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x15B DUP3 DUP3 PUSH1 0x0 PUSH2 0x297 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x204 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x555550535570677261646561626C653A206D757374206E6F742062652063616C PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SWAP1 JUMP JUMPDEST PUSH2 0x12F PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x12F PUSH1 0x0 DUP1 SSTORE JUMP JUMPDEST DUP1 SLOAD DUP1 PUSH2 0x28F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x2A0 DUP4 PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x2AD JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x2BE JUMPI PUSH2 0x2BC DUP4 DUP4 PUSH2 0x303 JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x2CC DUP2 PUSH2 0x32F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x328 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x67E PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x3DD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND EXTCODESIZE PUSH2 0x39C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1FB JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE PUSH2 0x445 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x62E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x49B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x4B0 DUP3 DUP3 DUP7 PUSH2 0x4BA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x4C9 JUMPI POP DUP2 PUSH2 0x328 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x4D9 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x64A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x50A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x328 DUP3 PUSH2 0x4F3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x553 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55C DUP4 PUSH2 0x4F3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x59F JUMPI PUSH2 0x59F PUSH2 0x52A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x5C7 JUMPI PUSH2 0x5C7 PUSH2 0x52A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x5E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x61D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x605 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2BC JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x640 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x602 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x669 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x602 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x706673582212207094F3 CALLDATASIZE RETURNDATACOPY 0xDD PUSH19 0x81D9FB644067F0FE24EC94AE47974FD5229E53 0xE5 RETURNDATACOPY 0xD0 PUSH19 0xCD564736F6C634300080C0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        363,
        780
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "MSTORE",
      "path": "140"
    },
    "5": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "CALLDATASIZE",
      "path": "140"
    },
    "8": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "LT",
      "path": "140"
    },
    "9": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x70"
    },
    "12": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "13": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "CALLDATALOAD",
      "path": "140"
    },
    "16": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "SHR",
      "path": "140"
    },
    "19": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "DUP1",
      "path": "140"
    },
    "20": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH4",
      "path": "140",
      "value": "0x52D1902D"
    },
    "25": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "GT",
      "path": "140"
    },
    "26": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x4E"
    },
    "29": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "30": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "DUP1",
      "path": "140"
    },
    "31": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH4",
      "path": "140",
      "value": "0x52D1902D"
    },
    "36": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "EQ",
      "path": "140"
    },
    "37": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0xBF"
    },
    "40": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "41": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "DUP1",
      "path": "140"
    },
    "42": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH4",
      "path": "140",
      "value": "0x9FA6A6E3"
    },
    "47": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "EQ",
      "path": "140"
    },
    "48": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0xE6"
    },
    "51": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "52": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "DUP1",
      "path": "140"
    },
    "53": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH4",
      "path": "140",
      "value": "0xD09DE08A"
    },
    "58": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "EQ",
      "path": "140"
    },
    "59": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0xFB"
    },
    "62": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "63": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "DUP1",
      "path": "140"
    },
    "64": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH4",
      "path": "140",
      "value": "0xD826F88F"
    },
    "69": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "EQ",
      "path": "140"
    },
    "70": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x110"
    },
    "73": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "74": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "76": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "DUP1",
      "path": "140"
    },
    "77": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "REVERT",
      "path": "140"
    },
    "78": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "79": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "DUP1",
      "path": "140"
    },
    "80": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH4",
      "path": "140",
      "value": "0x2BAECEB7"
    },
    "85": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "EQ",
      "path": "140"
    },
    "86": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x75"
    },
    "89": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "90": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "DUP1",
      "path": "140"
    },
    "91": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH4",
      "path": "140",
      "value": "0x3659CFE6"
    },
    "96": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "EQ",
      "path": "140"
    },
    "97": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x8C"
    },
    "100": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "101": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "DUP1",
      "path": "140"
    },
    "102": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH4",
      "path": "140",
      "value": "0x4F1EF286"
    },
    "107": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "EQ",
      "path": "140"
    },
    "108": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0xAC"
    },
    "111": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "112": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "113": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "115": {
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "DUP1",
      "path": "140"
    },
    "116": {
      "first_revert": true,
      "fn": null,
      "offset": [
        363,
        780
      ],
      "op": "REVERT",
      "path": "140"
    },
    "117": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "118": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "CALLVALUE",
      "path": "65"
    },
    "119": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "DUP1",
      "path": "65"
    },
    "120": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "ISZERO",
      "path": "65"
    },
    "121": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x81"
    },
    "124": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "125": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "127": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "DUP1",
      "path": "65"
    },
    "128": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "REVERT",
      "path": "65"
    },
    "129": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "130": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "POP",
      "path": "65"
    },
    "131": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x8A"
    },
    "134": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x125"
    },
    "137": {
      "fn": "CountersImpl.decrement",
      "jump": "i",
      "offset": [
        369,
        434
      ],
      "op": "JUMP",
      "path": "65"
    },
    "138": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "139": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "STOP",
      "path": "65"
    },
    "140": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "141": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "CALLVALUE",
      "path": "140"
    },
    "142": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "DUP1",
      "path": "140"
    },
    "143": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "ISZERO",
      "path": "140"
    },
    "144": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x98"
    },
    "147": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "JUMPI",
      "path": "140"
    },
    "148": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "150": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "DUP1",
      "path": "140"
    },
    "151": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "REVERT",
      "path": "140"
    },
    "152": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "153": {
      "op": "POP"
    },
    "154": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x8A"
    },
    "157": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0xA7"
    },
    "160": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "CALLDATASIZE",
      "path": "140"
    },
    "161": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x4"
    },
    "163": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x50F"
    },
    "166": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "jump": "i",
      "offset": [
        427,
        585
      ],
      "op": "JUMP",
      "path": "140"
    },
    "167": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "168": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x131"
    },
    "171": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "jump": "i",
      "offset": [
        427,
        585
      ],
      "op": "JUMP",
      "path": "140"
    },
    "172": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        591,
        778
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "173": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        591,
        778
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x8A"
    },
    "176": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        591,
        778
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0xBA"
    },
    "179": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        591,
        778
      ],
      "op": "CALLDATASIZE",
      "path": "140"
    },
    "180": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        591,
        778
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x4"
    },
    "182": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        591,
        778
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x540"
    },
    "185": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "jump": "i",
      "offset": [
        591,
        778
      ],
      "op": "JUMP",
      "path": "140"
    },
    "186": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        591,
        778
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "187": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        591,
        778
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x14F"
    },
    "190": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "jump": "i",
      "offset": [
        591,
        778
      ],
      "op": "JUMP",
      "path": "140"
    },
    "191": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2760,
        2891
      ],
      "op": "JUMPDEST",
      "path": "156"
    },
    "192": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2760,
        2891
      ],
      "op": "CALLVALUE",
      "path": "156"
    },
    "193": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2760,
        2891
      ],
      "op": "DUP1",
      "path": "156"
    },
    "194": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2760,
        2891
      ],
      "op": "ISZERO",
      "path": "156"
    },
    "195": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2760,
        2891
      ],
      "op": "PUSH2",
      "path": "156",
      "value": "0xCB"
    },
    "198": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2760,
        2891
      ],
      "op": "JUMPI",
      "path": "156"
    },
    "199": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2760,
        2891
      ],
      "op": "PUSH1",
      "path": "156",
      "value": "0x0"
    },
    "201": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2760,
        2891
      ],
      "op": "DUP1",
      "path": "156"
    },
    "202": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2760,
        2891
      ],
      "op": "REVERT",
      "path": "156"
    },
    "203": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2760,
        2891
      ],
      "op": "JUMPDEST",
      "path": "156"
    },
    "204": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2760,
        2891
      ],
      "op": "POP",
      "path": "156"
    },
    "205": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2760,
        2891
      ],
      "op": "PUSH2",
      "path": "156",
      "value": "0xD4"
    },
    "208": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2760,
        2891
      ],
      "op": "PUSH2",
      "path": "156",
      "value": "0x15F"
    },
    "211": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "jump": "i",
      "offset": [
        2760,
        2891
      ],
      "op": "JUMP",
      "path": "156"
    },
    "212": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2760,
        2891
      ],
      "op": "JUMPDEST",
      "path": "156"
    },
    "213": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2760,
        2891
      ],
      "op": "PUSH1",
      "path": "156",
      "value": "0x40"
    },
    "215": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2760,
        2891
      ],
      "op": "MLOAD",
      "path": "156"
    },
    "216": {
      "op": "SWAP1"
    },
    "217": {
      "op": "DUP2"
    },
    "218": {
      "op": "MSTORE"
    },
    "219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "221": {
      "op": "ADD"
    },
    "222": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2760,
        2891
      ],
      "op": "PUSH1",
      "path": "156",
      "value": "0x40"
    },
    "224": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2760,
        2891
      ],
      "op": "MLOAD",
      "path": "156"
    },
    "225": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2760,
        2891
      ],
      "op": "DUP1",
      "path": "156"
    },
    "226": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2760,
        2891
      ],
      "op": "SWAP2",
      "path": "156"
    },
    "227": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2760,
        2891
      ],
      "op": "SUB",
      "path": "156"
    },
    "228": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2760,
        2891
      ],
      "op": "SWAP1",
      "path": "156"
    },
    "229": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2760,
        2891
      ],
      "op": "RETURN",
      "path": "156"
    },
    "230": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "231": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "CALLVALUE",
      "path": "65"
    },
    "232": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "DUP1",
      "path": "65"
    },
    "233": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "ISZERO",
      "path": "65"
    },
    "234": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0xF2"
    },
    "237": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "238": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "240": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "DUP1",
      "path": "65"
    },
    "241": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "REVERT",
      "path": "65"
    },
    "242": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "243": {
      "op": "POP"
    },
    "244": {
      "fn": "CountersImpl.current",
      "offset": [
        241,
        248
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "246": {
      "op": "SLOAD"
    },
    "247": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0xD4"
    },
    "250": {
      "fn": "CountersImpl.current",
      "offset": [
        201,
        292
      ],
      "op": "JUMP",
      "path": "65"
    },
    "251": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "252": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "CALLVALUE",
      "path": "65"
    },
    "253": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "DUP1",
      "path": "65"
    },
    "254": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "ISZERO",
      "path": "65"
    },
    "255": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x107"
    },
    "258": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "259": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "261": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "DUP1",
      "path": "65"
    },
    "262": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "REVERT",
      "path": "65"
    },
    "263": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "264": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "POP",
      "path": "65"
    },
    "265": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x8A"
    },
    "268": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x229"
    },
    "271": {
      "fn": "CountersImpl.increment",
      "jump": "i",
      "offset": [
        298,
        363
      ],
      "op": "JUMP",
      "path": "65"
    },
    "272": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "273": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "CALLVALUE",
      "path": "65"
    },
    "274": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "DUP1",
      "path": "65"
    },
    "275": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "ISZERO",
      "path": "65"
    },
    "276": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x11C"
    },
    "279": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "JUMPI",
      "path": "65"
    },
    "280": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "282": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "DUP1",
      "path": "65"
    },
    "283": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "REVERT",
      "path": "65"
    },
    "284": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "285": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "POP",
      "path": "65"
    },
    "286": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x8A"
    },
    "289": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x237"
    },
    "292": {
      "fn": "CountersImpl.reset",
      "jump": "i",
      "offset": [
        440,
        497
      ],
      "op": "JUMP",
      "path": "65"
    },
    "293": {
      "fn": "CountersImpl.decrement",
      "offset": [
        369,
        434
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "294": {
      "fn": "CountersImpl.decrement",
      "offset": [
        407,
        427
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 0,
      "value": "0x12F"
    },
    "297": {
      "fn": "CountersImpl.decrement",
      "offset": [
        407,
        415
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "299": {
      "fn": "CountersImpl.decrement",
      "offset": [
        407,
        425
      ],
      "op": "PUSH2",
      "path": "65",
      "value": "0x240"
    },
    "302": {
      "fn": "CountersImpl.decrement",
      "jump": "i",
      "offset": [
        407,
        427
      ],
      "op": "JUMP",
      "path": "65"
    },
    "303": {
      "fn": "CountersImpl.decrement",
      "offset": [
        407,
        427
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "304": {
      "fn": "CountersImpl.decrement",
      "jump": "o",
      "offset": [
        369,
        434
      ],
      "op": "JUMP",
      "path": "65"
    },
    "305": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "306": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        509,
        578
      ],
      "op": "PUSH2",
      "path": "140",
      "statement": 1,
      "value": "0x14C"
    },
    "309": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        542,
        559
      ],
      "op": "DUP2",
      "path": "140"
    },
    "310": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        561,
        570
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x40"
    },
    "312": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        561,
        570
      ],
      "op": "MLOAD",
      "path": "140"
    },
    "313": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        561,
        570
      ],
      "op": "DUP1",
      "path": "140"
    },
    "314": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        561,
        570
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x20"
    },
    "316": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        561,
        570
      ],
      "op": "ADD",
      "path": "140"
    },
    "317": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        561,
        570
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x40"
    },
    "319": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        561,
        570
      ],
      "op": "MSTORE",
      "path": "140"
    },
    "320": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        561,
        570
      ],
      "op": "DUP1",
      "path": "140"
    },
    "321": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        561,
        570
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "323": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        561,
        570
      ],
      "op": "DUP2",
      "path": "140"
    },
    "324": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        561,
        570
      ],
      "op": "MSTORE",
      "path": "140"
    },
    "325": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        561,
        570
      ],
      "op": "POP",
      "path": "140"
    },
    "326": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        572,
        577
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "328": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        509,
        541
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x297"
    },
    "331": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "jump": "i",
      "offset": [
        509,
        578
      ],
      "op": "JUMP",
      "path": "140"
    },
    "332": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        509,
        578
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "333": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "offset": [
        427,
        585
      ],
      "op": "POP",
      "path": "140"
    },
    "334": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeTo",
      "jump": "o",
      "offset": [
        427,
        585
      ],
      "op": "JUMP",
      "path": "140"
    },
    "335": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        591,
        778
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "336": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        707,
        771
      ],
      "op": "PUSH2",
      "path": "140",
      "statement": 2,
      "value": "0x15B"
    },
    "339": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        740,
        757
      ],
      "op": "DUP3",
      "path": "140"
    },
    "340": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        759,
        763
      ],
      "op": "DUP3",
      "path": "140"
    },
    "341": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        765,
        770
      ],
      "op": "PUSH1",
      "path": "140",
      "value": "0x0"
    },
    "343": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        707,
        739
      ],
      "op": "PUSH2",
      "path": "140",
      "value": "0x297"
    },
    "346": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "jump": "i",
      "offset": [
        707,
        771
      ],
      "op": "JUMP",
      "path": "140"
    },
    "347": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        707,
        771
      ],
      "op": "JUMPDEST",
      "path": "140"
    },
    "348": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        591,
        778
      ],
      "op": "POP",
      "path": "140"
    },
    "349": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "offset": [
        591,
        778
      ],
      "op": "POP",
      "path": "140"
    },
    "350": {
      "fn": "UUPSUpgradeableUnsafeMock.upgradeToAndCall",
      "jump": "o",
      "offset": [
        591,
        778
      ],
      "op": "JUMP",
      "path": "140"
    },
    "351": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2760,
        2891
      ],
      "op": "JUMPDEST",
      "path": "156"
    },
    "352": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2838,
        2845
      ],
      "op": "PUSH1",
      "path": "156",
      "value": "0x0"
    },
    "354": {
      "offset": [
        2080,
        2084
      ],
      "op": "ADDRESS",
      "path": "156"
    },
    "355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "361": {
      "op": "SHL"
    },
    "362": {
      "op": "SUB"
    },
    "363": {
      "offset": [
        2089,
        2095
      ],
      "op": "PUSH32",
      "path": "156",
      "value": "0x0"
    },
    "396": {
      "offset": [
        2072,
        2095
      ],
      "op": "AND",
      "path": "156"
    },
    "397": {
      "branch": 13,
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2072,
        2095
      ],
      "op": "EQ",
      "path": "156"
    },
    "398": {
      "offset": [
        2064,
        2156
      ],
      "op": "PUSH2",
      "path": "156",
      "value": "0x204"
    },
    "401": {
      "branch": 13,
      "offset": [
        2064,
        2156
      ],
      "op": "JUMPI",
      "path": "156"
    },
    "402": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2064,
        2156
      ],
      "op": "PUSH1",
      "path": "156",
      "value": "0x40"
    },
    "404": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2064,
        2156
      ],
      "op": "MLOAD",
      "path": "156"
    },
    "405": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "409": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "411": {
      "op": "SHL"
    },
    "412": {
      "offset": [
        2064,
        2156
      ],
      "op": "DUP2",
      "path": "156"
    },
    "413": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2064,
        2156
      ],
      "op": "MSTORE",
      "path": "156"
    },
    "414": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "416": {
      "offset": [
        2064,
        2156
      ],
      "op": "PUSH1",
      "path": "156",
      "value": "0x4"
    },
    "418": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2064,
        2156
      ],
      "op": "DUP3",
      "path": "156"
    },
    "419": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2064,
        2156
      ],
      "op": "ADD",
      "path": "156"
    },
    "420": {
      "op": "MSTORE"
    },
    "421": {
      "op": "PUSH1",
      "value": "0x38"
    },
    "423": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "425": {
      "op": "DUP3"
    },
    "426": {
      "op": "ADD"
    },
    "427": {
      "op": "MSTORE"
    },
    "428": {
      "op": "PUSH32",
      "value": "0x555550535570677261646561626C653A206D757374206E6F742062652063616C"
    },
    "461": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "463": {
      "op": "DUP3"
    },
    "464": {
      "op": "ADD"
    },
    "465": {
      "op": "MSTORE"
    },
    "466": {
      "op": "PUSH32",
      "value": "0x6C6564207468726F7567682064656C656761746563616C6C0000000000000000"
    },
    "499": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "501": {
      "op": "DUP3"
    },
    "502": {
      "op": "ADD"
    },
    "503": {
      "op": "MSTORE"
    },
    "504": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "506": {
      "op": "ADD"
    },
    "507": {
      "offset": [
        2064,
        2156
      ],
      "op": "JUMPDEST",
      "path": "156"
    },
    "508": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2064,
        2156
      ],
      "op": "PUSH1",
      "path": "156",
      "value": "0x40"
    },
    "510": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2064,
        2156
      ],
      "op": "MLOAD",
      "path": "156"
    },
    "511": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2064,
        2156
      ],
      "op": "DUP1",
      "path": "156"
    },
    "512": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2064,
        2156
      ],
      "op": "SWAP2",
      "path": "156"
    },
    "513": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2064,
        2156
      ],
      "op": "SUB",
      "path": "156"
    },
    "514": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2064,
        2156
      ],
      "op": "SWAP1",
      "path": "156"
    },
    "515": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2064,
        2156
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "156"
    },
    "516": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2064,
        2156
      ],
      "op": "JUMPDEST",
      "path": "156"
    },
    "517": {
      "op": "POP"
    },
    "518": {
      "offset": [
        1030,
        1096
      ],
      "op": "PUSH32",
      "path": "148",
      "value": "0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
    },
    "551": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "offset": [
        2760,
        2891
      ],
      "op": "SWAP1",
      "path": "156"
    },
    "552": {
      "fn": "UUPSUpgradeable.proxiableUUID",
      "jump": "o",
      "offset": [
        2760,
        2891
      ],
      "op": "JUMP",
      "path": "156"
    },
    "553": {
      "fn": "CountersImpl.increment",
      "offset": [
        298,
        363
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "554": {
      "fn": "CountersImpl.increment",
      "offset": [
        336,
        356
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 3,
      "value": "0x12F"
    },
    "557": {
      "fn": "CountersImpl.increment",
      "offset": [
        336,
        344
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "559": {
      "op": "DUP1"
    },
    "560": {
      "op": "SLOAD"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "563": {
      "op": "ADD"
    },
    "564": {
      "op": "SWAP1"
    },
    "565": {
      "op": "SSTORE"
    },
    "566": {
      "op": "JUMP"
    },
    "567": {
      "fn": "CountersImpl.reset",
      "offset": [
        440,
        497
      ],
      "op": "JUMPDEST",
      "path": "65"
    },
    "568": {
      "fn": "CountersImpl.reset",
      "offset": [
        474,
        490
      ],
      "op": "PUSH2",
      "path": "65",
      "statement": 4,
      "value": "0x12F"
    },
    "571": {
      "fn": "CountersImpl.reset",
      "offset": [
        474,
        482
      ],
      "op": "PUSH1",
      "path": "65",
      "value": "0x0"
    },
    "573": {
      "op": "DUP1"
    },
    "574": {
      "op": "SSTORE"
    },
    "575": {
      "op": "JUMP"
    },
    "576": {
      "op": "JUMPDEST"
    },
    "577": {
      "op": "DUP1"
    },
    "578": {
      "op": "SLOAD"
    },
    "579": {
      "op": "DUP1"
    },
    "580": {
      "op": "PUSH2",
      "value": "0x28F"
    },
    "583": {
      "op": "JUMPI"
    },
    "584": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "586": {
      "op": "MLOAD"
    },
    "587": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "591": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "593": {
      "op": "SHL"
    },
    "594": {
      "op": "DUP2"
    },
    "595": {
      "op": "MSTORE"
    },
    "596": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "598": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "600": {
      "op": "DUP3"
    },
    "601": {
      "op": "ADD"
    },
    "602": {
      "op": "MSTORE"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "605": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "607": {
      "op": "DUP3"
    },
    "608": {
      "op": "ADD"
    },
    "609": {
      "op": "MSTORE"
    },
    "610": {
      "op": "PUSH32",
      "value": "0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000"
    },
    "643": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "645": {
      "op": "DUP3"
    },
    "646": {
      "op": "ADD"
    },
    "647": {
      "op": "MSTORE"
    },
    "648": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "650": {
      "op": "ADD"
    },
    "651": {
      "op": "PUSH2",
      "value": "0x1FB"
    },
    "654": {
      "op": "JUMP"
    },
    "655": {
      "op": "JUMPDEST"
    },
    "656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "658": {
      "op": "NOT"
    },
    "659": {
      "op": "ADD"
    },
    "660": {
      "op": "SWAP1"
    },
    "661": {
      "op": "SSTORE"
    },
    "662": {
      "jump": "o",
      "op": "JUMP"
    },
    "663": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2183,
        2478
      ],
      "op": "JUMPDEST",
      "path": "148"
    },
    "664": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2321,
        2350
      ],
      "op": "PUSH2",
      "path": "148",
      "statement": 5,
      "value": "0x2A0"
    },
    "667": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2332,
        2349
      ],
      "op": "DUP4",
      "path": "148"
    },
    "668": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2321,
        2331
      ],
      "op": "PUSH2",
      "path": "148",
      "value": "0x2C3"
    },
    "671": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "jump": "i",
      "offset": [
        2321,
        2350
      ],
      "op": "JUMP",
      "path": "148"
    },
    "672": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2321,
        2350
      ],
      "op": "JUMPDEST",
      "path": "148"
    },
    "673": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2378,
        2379
      ],
      "op": "PUSH1",
      "path": "148",
      "value": "0x0"
    },
    "675": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2364,
        2368
      ],
      "op": "DUP3",
      "path": "148"
    },
    "676": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2364,
        2375
      ],
      "op": "MLOAD",
      "path": "148"
    },
    "677": {
      "branch": 11,
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2364,
        2379
      ],
      "op": "GT",
      "path": "148"
    },
    "678": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2364,
        2392
      ],
      "op": "DUP1",
      "path": "148"
    },
    "679": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2364,
        2392
      ],
      "op": "PUSH2",
      "path": "148",
      "value": "0x2AD"
    },
    "682": {
      "branch": 11,
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2364,
        2392
      ],
      "op": "JUMPI",
      "path": "148"
    },
    "683": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2364,
        2392
      ],
      "op": "POP",
      "path": "148"
    },
    "684": {
      "branch": 12,
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2383,
        2392
      ],
      "op": "DUP1",
      "path": "148"
    },
    "685": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2364,
        2392
      ],
      "op": "JUMPDEST",
      "path": "148"
    },
    "686": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2360,
        2472
      ],
      "op": "ISZERO",
      "path": "148"
    },
    "687": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2360,
        2472
      ],
      "op": "PUSH2",
      "path": "148",
      "value": "0x2BE"
    },
    "690": {
      "branch": 12,
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2360,
        2472
      ],
      "op": "JUMPI",
      "path": "148"
    },
    "691": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2408,
        2461
      ],
      "op": "PUSH2",
      "path": "148",
      "statement": 6,
      "value": "0x2BC"
    },
    "694": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2437,
        2454
      ],
      "op": "DUP4",
      "path": "148"
    },
    "695": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2456,
        2460
      ],
      "op": "DUP4",
      "path": "148"
    },
    "696": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2408,
        2436
      ],
      "op": "PUSH2",
      "path": "148",
      "value": "0x303"
    },
    "699": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "jump": "i",
      "offset": [
        2408,
        2461
      ],
      "op": "JUMP",
      "path": "148"
    },
    "700": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2408,
        2461
      ],
      "op": "JUMPDEST",
      "path": "148"
    },
    "701": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2408,
        2461
      ],
      "op": "POP",
      "path": "148"
    },
    "702": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2360,
        2472
      ],
      "op": "JUMPDEST",
      "path": "148"
    },
    "703": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2183,
        2478
      ],
      "op": "POP",
      "path": "148"
    },
    "704": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2183,
        2478
      ],
      "op": "POP",
      "path": "148"
    },
    "705": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "offset": [
        2183,
        2478
      ],
      "op": "POP",
      "path": "148"
    },
    "706": {
      "fn": "ERC1967Upgrade._upgradeToAndCall",
      "jump": "o",
      "offset": [
        2183,
        2478
      ],
      "op": "JUMP",
      "path": "148"
    },
    "707": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        1897,
        2049
      ],
      "op": "JUMPDEST",
      "path": "148"
    },
    "708": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        1963,
        2000
      ],
      "op": "PUSH2",
      "path": "148",
      "statement": 7,
      "value": "0x2CC"
    },
    "711": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        1982,
        1999
      ],
      "op": "DUP2",
      "path": "148"
    },
    "712": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        1963,
        1981
      ],
      "op": "PUSH2",
      "path": "148",
      "value": "0x32F"
    },
    "715": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "jump": "i",
      "offset": [
        1963,
        2000
      ],
      "op": "JUMP",
      "path": "148"
    },
    "716": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        1963,
        2000
      ],
      "op": "JUMPDEST",
      "path": "148"
    },
    "717": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        2015,
        2042
      ],
      "op": "PUSH1",
      "path": "148",
      "statement": 8,
      "value": "0x40"
    },
    "719": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        2015,
        2042
      ],
      "op": "MLOAD",
      "path": "148"
    },
    "720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "724": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "726": {
      "op": "SHL"
    },
    "727": {
      "op": "SUB"
    },
    "728": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        2015,
        2042
      ],
      "op": "DUP3",
      "path": "148"
    },
    "729": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        2015,
        2042
      ],
      "op": "AND",
      "path": "148"
    },
    "730": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        2015,
        2042
      ],
      "op": "SWAP1",
      "path": "148"
    },
    "731": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        2015,
        2042
      ],
      "op": "PUSH32",
      "path": "148",
      "value": "0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
    },
    "764": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        2015,
        2042
      ],
      "op": "SWAP1",
      "path": "148"
    },
    "765": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        2015,
        2042
      ],
      "op": "PUSH1",
      "path": "148",
      "value": "0x0"
    },
    "767": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        2015,
        2042
      ],
      "op": "SWAP1",
      "path": "148"
    },
    "768": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        2015,
        2042
      ],
      "op": "LOG2",
      "path": "148"
    },
    "769": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "offset": [
        1897,
        2049
      ],
      "op": "POP",
      "path": "148"
    },
    "770": {
      "fn": "ERC1967Upgrade._upgradeTo",
      "jump": "o",
      "offset": [
        1897,
        2049
      ],
      "op": "JUMP",
      "path": "148"
    },
    "771": {
      "op": "JUMPDEST"
    },
    "772": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "774": {
      "op": "PUSH2",
      "value": "0x328"
    },
    "777": {
      "op": "DUP4"
    },
    "778": {
      "op": "DUP4"
    },
    "779": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "781": {
      "op": "MLOAD"
    },
    "782": {
      "op": "DUP1"
    },
    "783": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "785": {
      "op": "ADD"
    },
    "786": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "788": {
      "op": "MSTORE"
    },
    "789": {
      "op": "DUP1"
    },
    "790": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "792": {
      "op": "DUP2"
    },
    "793": {
      "op": "MSTORE"
    },
    "794": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "796": {
      "op": "ADD"
    },
    "797": {
      "op": "PUSH2",
      "value": "0x67E"
    },
    "800": {
      "op": "PUSH1",
      "value": "0x27"
    },
    "802": {
      "op": "SWAP2"
    },
    "803": {
      "op": "CODECOPY"
    },
    "804": {
      "op": "PUSH2",
      "value": "0x3DD"
    },
    "807": {
      "jump": "i",
      "op": "JUMP"
    },
    "808": {
      "op": "JUMPDEST"
    },
    "809": {
      "op": "SWAP4"
    },
    "810": {
      "op": "SWAP3"
    },
    "811": {
      "op": "POP"
    },
    "812": {
      "op": "POP"
    },
    "813": {
      "op": "POP"
    },
    "814": {
      "jump": "o",
      "op": "JUMP"
    },
    "815": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1532,
        1791
      ],
      "op": "JUMPDEST",
      "path": "148"
    },
    "816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "820": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "822": {
      "op": "SHL"
    },
    "823": {
      "op": "SUB"
    },
    "824": {
      "op": "DUP2"
    },
    "825": {
      "op": "AND"
    },
    "826": {
      "op": "EXTCODESIZE"
    },
    "827": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1605,
        1700
      ],
      "op": "PUSH2",
      "path": "148",
      "statement": 9,
      "value": "0x39C"
    },
    "830": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1605,
        1700
      ],
      "op": "JUMPI",
      "path": "148"
    },
    "831": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1605,
        1700
      ],
      "op": "PUSH1",
      "path": "148",
      "value": "0x40"
    },
    "833": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1605,
        1700
      ],
      "op": "MLOAD",
      "path": "148"
    },
    "834": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "838": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "840": {
      "op": "SHL"
    },
    "841": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1605,
        1700
      ],
      "op": "DUP2",
      "path": "148"
    },
    "842": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1605,
        1700
      ],
      "op": "MSTORE",
      "path": "148"
    },
    "843": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "845": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1605,
        1700
      ],
      "op": "PUSH1",
      "path": "148",
      "value": "0x4"
    },
    "847": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1605,
        1700
      ],
      "op": "DUP3",
      "path": "148"
    },
    "848": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1605,
        1700
      ],
      "op": "ADD",
      "path": "148"
    },
    "849": {
      "op": "MSTORE"
    },
    "850": {
      "op": "PUSH1",
      "value": "0x2D"
    },
    "852": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "854": {
      "op": "DUP3"
    },
    "855": {
      "op": "ADD"
    },
    "856": {
      "op": "MSTORE"
    },
    "857": {
      "op": "PUSH32",
      "value": "0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "892": {
      "op": "DUP3"
    },
    "893": {
      "op": "ADD"
    },
    "894": {
      "op": "MSTORE"
    },
    "895": {
      "op": "PUSH13",
      "value": "0x1BDD08184818DBDB9D1C9858DD"
    },
    "909": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "911": {
      "op": "SHL"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "914": {
      "op": "DUP3"
    },
    "915": {
      "op": "ADD"
    },
    "916": {
      "op": "MSTORE"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "919": {
      "op": "ADD"
    },
    "920": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1605,
        1700
      ],
      "op": "PUSH2",
      "path": "148",
      "value": "0x1FB"
    },
    "923": {
      "op": "JUMP"
    },
    "924": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1605,
        1700
      ],
      "op": "JUMPDEST",
      "path": "148"
    },
    "925": {
      "offset": [
        1030,
        1096
      ],
      "op": "PUSH32",
      "path": "148",
      "value": "0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
    },
    "958": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1710,
        1784
      ],
      "op": "DUP1",
      "path": "148",
      "statement": 10
    },
    "959": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1710,
        1784
      ],
      "op": "SLOAD",
      "path": "148"
    },
    "960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "964": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "966": {
      "op": "SHL"
    },
    "967": {
      "op": "SUB"
    },
    "968": {
      "op": "NOT"
    },
    "969": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1710,
        1784
      ],
      "op": "AND",
      "path": "148"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "974": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "976": {
      "op": "SHL"
    },
    "977": {
      "op": "SUB"
    },
    "978": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1710,
        1784
      ],
      "op": "SWAP3",
      "path": "148"
    },
    "979": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1710,
        1784
      ],
      "op": "SWAP1",
      "path": "148"
    },
    "980": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1710,
        1784
      ],
      "op": "SWAP3",
      "path": "148"
    },
    "981": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1710,
        1784
      ],
      "op": "AND",
      "path": "148"
    },
    "982": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1710,
        1784
      ],
      "op": "SWAP2",
      "path": "148"
    },
    "983": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1710,
        1784
      ],
      "op": "SWAP1",
      "path": "148"
    },
    "984": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1710,
        1784
      ],
      "op": "SWAP2",
      "path": "148"
    },
    "985": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1710,
        1784
      ],
      "op": "OR",
      "path": "148"
    },
    "986": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1710,
        1784
      ],
      "op": "SWAP1",
      "path": "148"
    },
    "987": {
      "fn": "ERC1967Upgrade._setImplementation",
      "offset": [
        1710,
        1784
      ],
      "op": "SSTORE",
      "path": "148"
    },
    "988": {
      "fn": "ERC1967Upgrade._setImplementation",
      "jump": "o",
      "offset": [
        1532,
        1791
      ],
      "op": "JUMP",
      "path": "148"
    },
    "989": {
      "op": "JUMPDEST"
    },
    "990": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "996": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "998": {
      "op": "SHL"
    },
    "999": {
      "op": "SUB"
    },
    "1000": {
      "op": "DUP5"
    },
    "1001": {
      "op": "AND"
    },
    "1002": {
      "op": "EXTCODESIZE"
    },
    "1003": {
      "op": "PUSH2",
      "value": "0x445"
    },
    "1006": {
      "op": "JUMPI"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1009": {
      "op": "MLOAD"
    },
    "1010": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1016": {
      "op": "SHL"
    },
    "1017": {
      "op": "DUP2"
    },
    "1018": {
      "op": "MSTORE"
    },
    "1019": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1021": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1023": {
      "op": "DUP3"
    },
    "1024": {
      "op": "ADD"
    },
    "1025": {
      "op": "MSTORE"
    },
    "1026": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1030": {
      "op": "DUP3"
    },
    "1031": {
      "op": "ADD"
    },
    "1032": {
      "op": "MSTORE"
    },
    "1033": {
      "op": "PUSH32",
      "value": "0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F"
    },
    "1066": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1068": {
      "op": "DUP3"
    },
    "1069": {
      "op": "ADD"
    },
    "1070": {
      "op": "MSTORE"
    },
    "1071": {
      "op": "PUSH6",
      "value": "0x1B9D1C9858DD"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0xD2"
    },
    "1080": {
      "op": "SHL"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1083": {
      "op": "DUP3"
    },
    "1084": {
      "op": "ADD"
    },
    "1085": {
      "op": "MSTORE"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1088": {
      "op": "ADD"
    },
    "1089": {
      "op": "PUSH2",
      "value": "0x1FB"
    },
    "1092": {
      "op": "JUMP"
    },
    "1093": {
      "op": "JUMPDEST"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1096": {
      "op": "DUP1"
    },
    "1097": {
      "op": "DUP6"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1102": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1104": {
      "op": "SHL"
    },
    "1105": {
      "op": "SUB"
    },
    "1106": {
      "op": "AND"
    },
    "1107": {
      "op": "DUP6"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1110": {
      "op": "MLOAD"
    },
    "1111": {
      "op": "PUSH2",
      "value": "0x460"
    },
    "1114": {
      "op": "SWAP2"
    },
    "1115": {
      "op": "SWAP1"
    },
    "1116": {
      "op": "PUSH2",
      "value": "0x62E"
    },
    "1119": {
      "jump": "i",
      "op": "JUMP"
    },
    "1120": {
      "op": "JUMPDEST"
    },
    "1121": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1125": {
      "op": "MLOAD"
    },
    "1126": {
      "op": "DUP1"
    },
    "1127": {
      "op": "DUP4"
    },
    "1128": {
      "op": "SUB"
    },
    "1129": {
      "op": "DUP2"
    },
    "1130": {
      "op": "DUP6"
    },
    "1131": {
      "op": "GAS"
    },
    "1132": {
      "op": "DELEGATECALL"
    },
    "1133": {
      "op": "SWAP2"
    },
    "1134": {
      "op": "POP"
    },
    "1135": {
      "op": "POP"
    },
    "1136": {
      "op": "RETURNDATASIZE"
    },
    "1137": {
      "op": "DUP1"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1140": {
      "op": "DUP2"
    },
    "1141": {
      "op": "EQ"
    },
    "1142": {
      "op": "PUSH2",
      "value": "0x49B"
    },
    "1145": {
      "op": "JUMPI"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1148": {
      "op": "MLOAD"
    },
    "1149": {
      "op": "SWAP2"
    },
    "1150": {
      "op": "POP"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1153": {
      "op": "NOT"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1156": {
      "op": "RETURNDATASIZE"
    },
    "1157": {
      "op": "ADD"
    },
    "1158": {
      "op": "AND"
    },
    "1159": {
      "op": "DUP3"
    },
    "1160": {
      "op": "ADD"
    },
    "1161": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1163": {
      "op": "MSTORE"
    },
    "1164": {
      "op": "RETURNDATASIZE"
    },
    "1165": {
      "op": "DUP3"
    },
    "1166": {
      "op": "MSTORE"
    },
    "1167": {
      "op": "RETURNDATASIZE"
    },
    "1168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1172": {
      "op": "DUP5"
    },
    "1173": {
      "op": "ADD"
    },
    "1174": {
      "op": "RETURNDATACOPY"
    },
    "1175": {
      "op": "PUSH2",
      "value": "0x4A0"
    },
    "1178": {
      "op": "JUMP"
    },
    "1179": {
      "op": "JUMPDEST"
    },
    "1180": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1182": {
      "op": "SWAP2"
    },
    "1183": {
      "op": "POP"
    },
    "1184": {
      "op": "JUMPDEST"
    },
    "1185": {
      "op": "POP"
    },
    "1186": {
      "op": "SWAP2"
    },
    "1187": {
      "op": "POP"
    },
    "1188": {
      "op": "SWAP2"
    },
    "1189": {
      "op": "POP"
    },
    "1190": {
      "op": "PUSH2",
      "value": "0x4B0"
    },
    "1193": {
      "op": "DUP3"
    },
    "1194": {
      "op": "DUP3"
    },
    "1195": {
      "op": "DUP7"
    },
    "1196": {
      "op": "PUSH2",
      "value": "0x4BA"
    },
    "1199": {
      "jump": "i",
      "op": "JUMP"
    },
    "1200": {
      "op": "JUMPDEST"
    },
    "1201": {
      "op": "SWAP7"
    },
    "1202": {
      "op": "SWAP6"
    },
    "1203": {
      "op": "POP"
    },
    "1204": {
      "op": "POP"
    },
    "1205": {
      "op": "POP"
    },
    "1206": {
      "op": "POP"
    },
    "1207": {
      "op": "POP"
    },
    "1208": {
      "op": "POP"
    },
    "1209": {
      "jump": "o",
      "op": "JUMP"
    },
    "1210": {
      "op": "JUMPDEST"
    },
    "1211": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1213": {
      "op": "DUP4"
    },
    "1214": {
      "op": "ISZERO"
    },
    "1215": {
      "op": "PUSH2",
      "value": "0x4C9"
    },
    "1218": {
      "op": "JUMPI"
    },
    "1219": {
      "op": "POP"
    },
    "1220": {
      "op": "DUP2"
    },
    "1221": {
      "op": "PUSH2",
      "value": "0x328"
    },
    "1224": {
      "op": "JUMP"
    },
    "1225": {
      "op": "JUMPDEST"
    },
    "1226": {
      "op": "DUP3"
    },
    "1227": {
      "op": "MLOAD"
    },
    "1228": {
      "op": "ISZERO"
    },
    "1229": {
      "op": "PUSH2",
      "value": "0x4D9"
    },
    "1232": {
      "op": "JUMPI"
    },
    "1233": {
      "op": "DUP3"
    },
    "1234": {
      "op": "MLOAD"
    },
    "1235": {
      "op": "DUP1"
    },
    "1236": {
      "op": "DUP5"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1239": {
      "op": "ADD"
    },
    "1240": {
      "op": "REVERT"
    },
    "1241": {
      "op": "JUMPDEST"
    },
    "1242": {
      "op": "DUP2"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1245": {
      "op": "MLOAD"
    },
    "1246": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1250": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1252": {
      "op": "SHL"
    },
    "1253": {
      "op": "DUP2"
    },
    "1254": {
      "op": "MSTORE"
    },
    "1255": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1257": {
      "op": "ADD"
    },
    "1258": {
      "op": "PUSH2",
      "value": "0x1FB"
    },
    "1261": {
      "op": "SWAP2"
    },
    "1262": {
      "op": "SWAP1"
    },
    "1263": {
      "op": "PUSH2",
      "value": "0x64A"
    },
    "1266": {
      "jump": "i",
      "op": "JUMP"
    },
    "1267": {
      "op": "JUMPDEST"
    },
    "1268": {
      "op": "DUP1"
    },
    "1269": {
      "op": "CALLDATALOAD"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1276": {
      "op": "SHL"
    },
    "1277": {
      "op": "SUB"
    },
    "1278": {
      "op": "DUP2"
    },
    "1279": {
      "op": "AND"
    },
    "1280": {
      "op": "DUP2"
    },
    "1281": {
      "op": "EQ"
    },
    "1282": {
      "op": "PUSH2",
      "value": "0x50A"
    },
    "1285": {
      "op": "JUMPI"
    },
    "1286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1288": {
      "op": "DUP1"
    },
    "1289": {
      "op": "REVERT"
    },
    "1290": {
      "op": "JUMPDEST"
    },
    "1291": {
      "op": "SWAP2"
    },
    "1292": {
      "op": "SWAP1"
    },
    "1293": {
      "op": "POP"
    },
    "1294": {
      "jump": "o",
      "op": "JUMP"
    },
    "1295": {
      "op": "JUMPDEST"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1300": {
      "op": "DUP3"
    },
    "1301": {
      "op": "DUP5"
    },
    "1302": {
      "op": "SUB"
    },
    "1303": {
      "op": "SLT"
    },
    "1304": {
      "op": "ISZERO"
    },
    "1305": {
      "op": "PUSH2",
      "value": "0x521"
    },
    "1308": {
      "op": "JUMPI"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1311": {
      "op": "DUP1"
    },
    "1312": {
      "op": "REVERT"
    },
    "1313": {
      "op": "JUMPDEST"
    },
    "1314": {
      "op": "PUSH2",
      "value": "0x328"
    },
    "1317": {
      "op": "DUP3"
    },
    "1318": {
      "op": "PUSH2",
      "value": "0x4F3"
    },
    "1321": {
      "jump": "i",
      "op": "JUMP"
    },
    "1322": {
      "op": "JUMPDEST"
    },
    "1323": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1330": {
      "op": "SHL"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1333": {
      "op": "MSTORE"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1338": {
      "op": "MSTORE"
    },
    "1339": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1343": {
      "op": "REVERT"
    },
    "1344": {
      "op": "JUMPDEST"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1347": {
      "op": "DUP1"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1350": {
      "op": "DUP4"
    },
    "1351": {
      "op": "DUP6"
    },
    "1352": {
      "op": "SUB"
    },
    "1353": {
      "op": "SLT"
    },
    "1354": {
      "op": "ISZERO"
    },
    "1355": {
      "op": "PUSH2",
      "value": "0x553"
    },
    "1358": {
      "op": "JUMPI"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1361": {
      "op": "DUP1"
    },
    "1362": {
      "op": "REVERT"
    },
    "1363": {
      "op": "JUMPDEST"
    },
    "1364": {
      "op": "PUSH2",
      "value": "0x55C"
    },
    "1367": {
      "op": "DUP4"
    },
    "1368": {
      "op": "PUSH2",
      "value": "0x4F3"
    },
    "1371": {
      "jump": "i",
      "op": "JUMP"
    },
    "1372": {
      "op": "JUMPDEST"
    },
    "1373": {
      "op": "SWAP2"
    },
    "1374": {
      "op": "POP"
    },
    "1375": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1377": {
      "op": "DUP4"
    },
    "1378": {
      "op": "ADD"
    },
    "1379": {
      "op": "CALLDATALOAD"
    },
    "1380": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1389": {
      "op": "DUP1"
    },
    "1390": {
      "op": "DUP3"
    },
    "1391": {
      "op": "GT"
    },
    "1392": {
      "op": "ISZERO"
    },
    "1393": {
      "op": "PUSH2",
      "value": "0x579"
    },
    "1396": {
      "op": "JUMPI"
    },
    "1397": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1399": {
      "op": "DUP1"
    },
    "1400": {
      "op": "REVERT"
    },
    "1401": {
      "op": "JUMPDEST"
    },
    "1402": {
      "op": "DUP2"
    },
    "1403": {
      "op": "DUP6"
    },
    "1404": {
      "op": "ADD"
    },
    "1405": {
      "op": "SWAP2"
    },
    "1406": {
      "op": "POP"
    },
    "1407": {
      "op": "DUP6"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1410": {
      "op": "DUP4"
    },
    "1411": {
      "op": "ADD"
    },
    "1412": {
      "op": "SLT"
    },
    "1413": {
      "op": "PUSH2",
      "value": "0x58D"
    },
    "1416": {
      "op": "JUMPI"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1419": {
      "op": "DUP1"
    },
    "1420": {
      "op": "REVERT"
    },
    "1421": {
      "op": "JUMPDEST"
    },
    "1422": {
      "op": "DUP2"
    },
    "1423": {
      "op": "CALLDATALOAD"
    },
    "1424": {
      "op": "DUP2"
    },
    "1425": {
      "op": "DUP2"
    },
    "1426": {
      "op": "GT"
    },
    "1427": {
      "op": "ISZERO"
    },
    "1428": {
      "op": "PUSH2",
      "value": "0x59F"
    },
    "1431": {
      "op": "JUMPI"
    },
    "1432": {
      "op": "PUSH2",
      "value": "0x59F"
    },
    "1435": {
      "op": "PUSH2",
      "value": "0x52A"
    },
    "1438": {
      "jump": "i",
      "op": "JUMP"
    },
    "1439": {
      "op": "JUMPDEST"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1442": {
      "op": "MLOAD"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1445": {
      "op": "DUP3"
    },
    "1446": {
      "op": "ADD"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1449": {
      "op": "NOT"
    },
    "1450": {
      "op": "SWAP1"
    },
    "1451": {
      "op": "DUP2"
    },
    "1452": {
      "op": "AND"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "1455": {
      "op": "ADD"
    },
    "1456": {
      "op": "AND"
    },
    "1457": {
      "op": "DUP2"
    },
    "1458": {
      "op": "ADD"
    },
    "1459": {
      "op": "SWAP1"
    },
    "1460": {
      "op": "DUP4"
    },
    "1461": {
      "op": "DUP3"
    },
    "1462": {
      "op": "GT"
    },
    "1463": {
      "op": "DUP2"
    },
    "1464": {
      "op": "DUP4"
    },
    "1465": {
      "op": "LT"
    },
    "1466": {
      "op": "OR"
    },
    "1467": {
      "op": "ISZERO"
    },
    "1468": {
      "op": "PUSH2",
      "value": "0x5C7"
    },
    "1471": {
      "op": "JUMPI"
    },
    "1472": {
      "op": "PUSH2",
      "value": "0x5C7"
    },
    "1475": {
      "op": "PUSH2",
      "value": "0x52A"
    },
    "1478": {
      "jump": "i",
      "op": "JUMP"
    },
    "1479": {
      "op": "JUMPDEST"
    },
    "1480": {
      "op": "DUP2"
    },
    "1481": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1483": {
      "op": "MSTORE"
    },
    "1484": {
      "op": "DUP3"
    },
    "1485": {
      "op": "DUP2"
    },
    "1486": {
      "op": "MSTORE"
    },
    "1487": {
      "op": "DUP9"
    },
    "1488": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1490": {
      "op": "DUP5"
    },
    "1491": {
      "op": "DUP8"
    },
    "1492": {
      "op": "ADD"
    },
    "1493": {
      "op": "ADD"
    },
    "1494": {
      "op": "GT"
    },
    "1495": {
      "op": "ISZERO"
    },
    "1496": {
      "op": "PUSH2",
      "value": "0x5E0"
    },
    "1499": {
      "op": "JUMPI"
    },
    "1500": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1502": {
      "op": "DUP1"
    },
    "1503": {
      "op": "REVERT"
    },
    "1504": {
      "op": "JUMPDEST"
    },
    "1505": {
      "op": "DUP3"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1508": {
      "op": "DUP7"
    },
    "1509": {
      "op": "ADD"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1512": {
      "op": "DUP4"
    },
    "1513": {
      "op": "ADD"
    },
    "1514": {
      "op": "CALLDATACOPY"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1519": {
      "op": "DUP5"
    },
    "1520": {
      "op": "DUP4"
    },
    "1521": {
      "op": "ADD"
    },
    "1522": {
      "op": "ADD"
    },
    "1523": {
      "op": "MSTORE"
    },
    "1524": {
      "op": "DUP1"
    },
    "1525": {
      "op": "SWAP6"
    },
    "1526": {
      "op": "POP"
    },
    "1527": {
      "op": "POP"
    },
    "1528": {
      "op": "POP"
    },
    "1529": {
      "op": "POP"
    },
    "1530": {
      "op": "POP"
    },
    "1531": {
      "op": "POP"
    },
    "1532": {
      "op": "SWAP3"
    },
    "1533": {
      "op": "POP"
    },
    "1534": {
      "op": "SWAP3"
    },
    "1535": {
      "op": "SWAP1"
    },
    "1536": {
      "op": "POP"
    },
    "1537": {
      "jump": "o",
      "op": "JUMP"
    },
    "1538": {
      "op": "JUMPDEST"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1541": {
      "op": "JUMPDEST"
    },
    "1542": {
      "op": "DUP4"
    },
    "1543": {
      "op": "DUP2"
    },
    "1544": {
      "op": "LT"
    },
    "1545": {
      "op": "ISZERO"
    },
    "1546": {
      "op": "PUSH2",
      "value": "0x61D"
    },
    "1549": {
      "op": "JUMPI"
    },
    "1550": {
      "op": "DUP2"
    },
    "1551": {
      "op": "DUP2"
    },
    "1552": {
      "op": "ADD"
    },
    "1553": {
      "op": "MLOAD"
    },
    "1554": {
      "op": "DUP4"
    },
    "1555": {
      "op": "DUP3"
    },
    "1556": {
      "op": "ADD"
    },
    "1557": {
      "op": "MSTORE"
    },
    "1558": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1560": {
      "op": "ADD"
    },
    "1561": {
      "op": "PUSH2",
      "value": "0x605"
    },
    "1564": {
      "op": "JUMP"
    },
    "1565": {
      "op": "JUMPDEST"
    },
    "1566": {
      "op": "DUP4"
    },
    "1567": {
      "op": "DUP2"
    },
    "1568": {
      "op": "GT"
    },
    "1569": {
      "op": "ISZERO"
    },
    "1570": {
      "op": "PUSH2",
      "value": "0x2BC"
    },
    "1573": {
      "op": "JUMPI"
    },
    "1574": {
      "op": "POP"
    },
    "1575": {
      "op": "POP"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1578": {
      "op": "SWAP2"
    },
    "1579": {
      "op": "ADD"
    },
    "1580": {
      "op": "MSTORE"
    },
    "1581": {
      "jump": "o",
      "op": "JUMP"
    },
    "1582": {
      "op": "JUMPDEST"
    },
    "1583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1585": {
      "op": "DUP3"
    },
    "1586": {
      "op": "MLOAD"
    },
    "1587": {
      "op": "PUSH2",
      "value": "0x640"
    },
    "1590": {
      "op": "DUP2"
    },
    "1591": {
      "op": "DUP5"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1594": {
      "op": "DUP8"
    },
    "1595": {
      "op": "ADD"
    },
    "1596": {
      "op": "PUSH2",
      "value": "0x602"
    },
    "1599": {
      "jump": "i",
      "op": "JUMP"
    },
    "1600": {
      "op": "JUMPDEST"
    },
    "1601": {
      "op": "SWAP2"
    },
    "1602": {
      "op": "SWAP1"
    },
    "1603": {
      "op": "SWAP2"
    },
    "1604": {
      "op": "ADD"
    },
    "1605": {
      "op": "SWAP3"
    },
    "1606": {
      "op": "SWAP2"
    },
    "1607": {
      "op": "POP"
    },
    "1608": {
      "op": "POP"
    },
    "1609": {
      "jump": "o",
      "op": "JUMP"
    },
    "1610": {
      "op": "JUMPDEST"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1613": {
      "op": "DUP2"
    },
    "1614": {
      "op": "MSTORE"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1617": {
      "op": "DUP3"
    },
    "1618": {
      "op": "MLOAD"
    },
    "1619": {
      "op": "DUP1"
    },
    "1620": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1622": {
      "op": "DUP5"
    },
    "1623": {
      "op": "ADD"
    },
    "1624": {
      "op": "MSTORE"
    },
    "1625": {
      "op": "PUSH2",
      "value": "0x669"
    },
    "1628": {
      "op": "DUP2"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1631": {
      "op": "DUP6"
    },
    "1632": {
      "op": "ADD"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1635": {
      "op": "DUP8"
    },
    "1636": {
      "op": "ADD"
    },
    "1637": {
      "op": "PUSH2",
      "value": "0x602"
    },
    "1640": {
      "jump": "i",
      "op": "JUMP"
    },
    "1641": {
      "op": "JUMPDEST"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1644": {
      "op": "ADD"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1647": {
      "op": "NOT"
    },
    "1648": {
      "op": "AND"
    },
    "1649": {
      "op": "SWAP2"
    },
    "1650": {
      "op": "SWAP1"
    },
    "1651": {
      "op": "SWAP2"
    },
    "1652": {
      "op": "ADD"
    },
    "1653": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1655": {
      "op": "ADD"
    },
    "1656": {
      "op": "SWAP3"
    },
    "1657": {
      "op": "SWAP2"
    },
    "1658": {
      "op": "POP"
    },
    "1659": {
      "op": "POP"
    },
    "1660": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "5ae8528f4a75e3597d30b9d37feba382c42bab54",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../CountersImpl.sol\";\nimport \"../../proxy/utils/UUPSUpgradeable.sol\";\n\ncontract UUPSUpgradeableMock is CountersImpl, UUPSUpgradeable {\n    // Not having any checks in this function is dangerous! Do not do this outside tests!\n    function _authorizeUpgrade(address) internal virtual override {}\n}\n\ncontract UUPSUpgradeableUnsafeMock is UUPSUpgradeableMock {\n    function upgradeTo(address newImplementation) external virtual override {\n        ERC1967Upgrade._upgradeToAndCall(newImplementation, bytes(\"\"), false);\n    }\n\n    function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual override {\n        ERC1967Upgrade._upgradeToAndCall(newImplementation, data, false);\n    }\n}\n",
  "sourceMap": "363:417:140:-:0;;;1088:4:156;1045:48;;363:417:140;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/mocks/UUPS/UUPSUpgradeableMock.sol",
  "type": "contract"
}